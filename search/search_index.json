{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "\u4e00. \u4ecb\u7ecd"
        }, 
        {
            "location": "/#welcome-to-mkdocs", 
            "text": "For full documentation visit  mkdocs.org .", 
            "title": "Welcome to MkDocs"
        }, 
        {
            "location": "/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/organization/workspace/", 
            "text": "\u7b80\u4ecb\n\n\n\n\n\u7528\u4e8e\u653e\u7f6e\u4e00\u4e2ago\u7a0b\u5e8f\u5458\u7684\u6240\u6709go\u4ee3\u7801\u548c\u4f9d\u8d56\u5728\u4e00\u4e2aworkspace\u91cc\u3002\n\n\n\n\n\u524d\u63d0\u662f\u751f\u6210\u51fa\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0d\u91cd\u540d\uff0c\u5982\u679c\u5b58\u5728\u91cd\u540d\u60c5\u51b5\uff0c\u5c31\u8981\u5206\u6210\u4e0d\u540c\u7684workspace\n\n\n\n\nworkspace\u3001repository\u3001package\n\n\n\n\nworkspace\uff1a\u5305\u542b\u591a\u4e2a\u7248\u672c\u63a7\u5236\u7684repository\n\n    repository\uff1a\u5305\u542b\u591a\u4e2apackage\n\n        package\uff1a\u5305\u542b\u591a\u4e2ago\u6e90\u7801\u6587\u4ef6\n\n\n\n\n\u6807\u51c6\u7684workspace\u672c\u5730\u76ee\u5f55\u7ed3\u6784\n\n\n\n\nsrc\uff1ago\u6e90\u7801\u6587\u4ef6\n\n\npkg\uff1apackage object\uff08\u7f16\u8bd1\u51fa\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\n\n\nbin\uff1a\u53ef\u6267\u884c\u6587\u4ef6\uff08\u7f16\u8bd1\u51fa\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09", 
            "title": "1. workspace"
        }, 
        {
            "location": "/organization/workspace/#_1", 
            "text": "\u7528\u4e8e\u653e\u7f6e\u4e00\u4e2ago\u7a0b\u5e8f\u5458\u7684\u6240\u6709go\u4ee3\u7801\u548c\u4f9d\u8d56\u5728\u4e00\u4e2aworkspace\u91cc\u3002   \u524d\u63d0\u662f\u751f\u6210\u51fa\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0d\u91cd\u540d\uff0c\u5982\u679c\u5b58\u5728\u91cd\u540d\u60c5\u51b5\uff0c\u5c31\u8981\u5206\u6210\u4e0d\u540c\u7684workspace", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/organization/workspace/#workspacerepositorypackage", 
            "text": "workspace\uff1a\u5305\u542b\u591a\u4e2a\u7248\u672c\u63a7\u5236\u7684repository\n\n    repository\uff1a\u5305\u542b\u591a\u4e2apackage\n\n        package\uff1a\u5305\u542b\u591a\u4e2ago\u6e90\u7801\u6587\u4ef6", 
            "title": "workspace\u3001repository\u3001package"
        }, 
        {
            "location": "/organization/workspace/#workspace", 
            "text": "src\uff1ago\u6e90\u7801\u6587\u4ef6  pkg\uff1apackage object\uff08\u7f16\u8bd1\u51fa\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09  bin\uff1a\u53ef\u6267\u884c\u6587\u4ef6\uff08\u7f16\u8bd1\u51fa\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09", 
            "title": "\u6807\u51c6\u7684workspace\u672c\u5730\u76ee\u5f55\u7ed3\u6784"
        }, 
        {
            "location": "/organization/gopath/", 
            "text": "\u7b80\u4ecb\n\n\n\n\nGOPATH\uff1aworkspace\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a\n$HOME/go\n\u3002\n\n\n\n\nGOPATH\u4e0d\u662f\u6307go\u5b89\u88c5\u8def\u5f84\uff0c\u56e0\u6b64\u4e0d\u80fd\u5199/usr/local/go-1.8\u4e4b\u7c7b\u7684\n\n\n\n\n\u5982\u4f55\u67e5\u770bGOPATH\n\n\n\n\ngo env\n\u53ef\u4ee5\u770b\u5230\u6240\u6709go\u73af\u5883\u53d8\u91cf\uff0c\u5982\u679c\u53ea\u770bGOPATH\u53ef\u4ee5\ngo env GOPATH\n\n\nGOPATH\u7684\u8bbe\u7f6e\n\n\n\n\n\u6267\u884c\u547d\u4ee4\n\n\nexport GOPATH=/path/to\n\n\n\n\n\u4e3a\u4fbf\u4e8e\u5728\u547d\u4ee4\u884c\u4e0b\u6267\u884c\u7f16\u8bd1\u51fa\u7684\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u5efa\u8bae\u5c06bin\u76ee\u5f55\u8def\u5f84\u52a0\u5230\u7cfb\u7edfPATH\u4e0a:\n\n\nexport PATH=$PATH:$(go env GOPATH)/bin\n\n\n\n\n\u53e6\u5916\uff0c\u53ef\u4ee5\u5c06\u4e0a\u97622\u4e2aexport\u5199\u5165~/.bash_profile\uff0c\u7136\u540e\nsource ~/.bash_profile\n \u7acb\u5373\u751f\u6548", 
            "title": "2. GOPATH"
        }, 
        {
            "location": "/organization/gopath/#_1", 
            "text": "GOPATH\uff1aworkspace\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a $HOME/go \u3002   GOPATH\u4e0d\u662f\u6307go\u5b89\u88c5\u8def\u5f84\uff0c\u56e0\u6b64\u4e0d\u80fd\u5199/usr/local/go-1.8\u4e4b\u7c7b\u7684", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/organization/gopath/#gopath", 
            "text": "go env \u53ef\u4ee5\u770b\u5230\u6240\u6709go\u73af\u5883\u53d8\u91cf\uff0c\u5982\u679c\u53ea\u770bGOPATH\u53ef\u4ee5 go env GOPATH", 
            "title": "\u5982\u4f55\u67e5\u770bGOPATH"
        }, 
        {
            "location": "/organization/gopath/#gopath_1", 
            "text": "\u6267\u884c\u547d\u4ee4  export GOPATH=/path/to  \u4e3a\u4fbf\u4e8e\u5728\u547d\u4ee4\u884c\u4e0b\u6267\u884c\u7f16\u8bd1\u51fa\u7684\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u5efa\u8bae\u5c06bin\u76ee\u5f55\u8def\u5f84\u52a0\u5230\u7cfb\u7edfPATH\u4e0a:  export PATH=$PATH:$(go env GOPATH)/bin  \u53e6\u5916\uff0c\u53ef\u4ee5\u5c06\u4e0a\u97622\u4e2aexport\u5199\u5165~/.bash_profile\uff0c\u7136\u540e source ~/.bash_profile  \u7acb\u5373\u751f\u6548", 
            "title": "GOPATH\u7684\u8bbe\u7f6e"
        }, 
        {
            "location": "/organization/importpath/", 
            "text": "\u7b80\u4ecb\n\n\n\n\n\u4e00\u4e2aimport path\uff08\u5305\u8def\u5f84\uff09\u552f\u4e00\u6807\u8bc6\u4e00\u4e2apackage\uff0c\u4e00\u4e2apackage\u7684import path\u76f8\u5f53\u4e8e\u4ed6\u6240\u5904\u4e8eworkspace\u4e2d\u7684\u76f8\u5bf9\u8def\u5f84\u3002\n\n\n\u5bfc\u5165\u8def\u5f84\u53ef\u4ee5\u662f\u672c\u5730\u4e5f\u53ef\u4ee5\u662f\u5728\u8fdc\u7a0b\uff0c\u6bd4\u5982\u5f00\u6e90\u4ee3\u7801\u901a\u5e38\u653e\u5728github.com\u3002\u5f53\u7f16\u8bd1\u65f6\u5019\u4f1a\u81ea\u52a8\u5c06\u8fdc\u7a0b\u6587\u4ef6\u8f7d\u5230\u672c\u5730\u76ee\u5f55\u4e0a\u8fdb\u884c\u8bfb\u53d6\n\n\n\u7ec4\u6210\n\n\n\n\nimport path\u7531base path\u548cpackage path\u7ec4\u6210\n\n\nbase path\u6307repository\u8def\u5f84\uff0c\u6bd4\u5982\ngithub.com/cyent/golang/example\n\uff08\u5bf9\u5e94\u672c\u5730workspace\u4e2d\u7684\u8def\u5f84\n$GOPATH/src/github.com/cyent/golang/example\n\uff09\n\n\npackage path\u6307\u5177\u4f53\u5305\u7684\u8def\u5f84\uff0c\u6bd4\u5982\u6709\u4e2ahello\u5305\uff0c\u90a3\u4e48\u5176import path\u5c31\u662fgithub.com/cyent/golang/example/hello\n\n\n\n\ngithub.com\u4e5f\u6709\u7c7b\u4f3cworkspace\u7684\u6982\u5ff5\uff0c\u53eb\u505aOrganizations\n\n\n\u6bd4\u5982\u5728github\u4e0a\u6ce8\u518c\u4e86\u4e00\u4e2a\u8d26\u6237\u53eb\u505acyent\uff08\u8d26\u6237\u4e3b\u9875:\ngithub.com/cyent\n\uff09\uff0c\u4e4b\u540e\u521b\u5efa\u7684repo\u90fd\u53ef\u4ee5\u653e\u5728\u8fd9\u4e0b\u9762\uff0c\u6bd4\u5982\ngithub.com/cyent/golang\n\n\n\u901a\u5e38\u4e2a\u4eba\u7528\u6237\u4f1a\u50cf\u4e0a\u9762\u8fd9\u4e48\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e\u56e2\u961f\u6216\u8005\u516c\u53f8\u6765\u8bf4\uff0ccyent\u53ea\u662f\u4e00\u4e2a\u6ce8\u518c\u8d26\u53f7\uff0c\u4e0d\u4f5c\u4e3a\u54c1\u724c\u63a8\u5e7f\uff0c\u56e0\u6b64\u4f1a\u7528\u56e2\u961f\u540d\uff0c\u516c\u53f8\u540d\uff0c\u6216\u4ea7\u54c1\u7cfb\u5217\u540d\u7b49\uff0c\u6bd4\u5982\ngithub.com/mycompany\n\uff0c\u8fd9\u5c31\u662f\u5efa\u7acb\u4e86\u4e00\u4e2aorganization\uff0corganization\u540d\u5b57\u53eb\u505amycompany\uff0c\u4e4b\u540erepo\u90fd\u653e\u5728\u8fd9\u4e0b\u9762\uff0c\u6bd4\u5982\ngithub.com/mycompany/myproduct\n\n\n\n\n\u4f8b\u5b50\n\n\n\n\n\u4e3e\u4f8b\u8bf4\u660e\uff1a\u5047\u8bbe\nGOPATH=/opt/cyent/golang\n\uff0c\u90a3\u4e48\u672c\u5730\u76ee\u5f55\u7ed3\u6784:\n\n\n/opt/cyent/golang/src/\n    github.com/organization1/repo\n    github.com/organization2/repo\n    github.com/cyent/golang\n\n\n\n\n\u4e0a\u9762\u8fd9\u79cd\u76ee\u5f55\u7ed3\u6784\u89e3\u8bfb\uff1a\n\n/opt/cyent/golang\n\u662f\u653e\u7f6e\u6211\u7684\u6240\u6709go\u4ee3\u7801\u7684\u6839\u8def\u5f84\n\n\n\u5176\u4e2d\u6211\u81ea\u5df1\u7684\u4ee3\u7801\u5728\n/opt/cyent/golang/src/github.com/cyent/golang\n\u4e0b\n\n\norganization1/repo\n\u548c\norganization2/repo\n\u662f\u6211\u4ee3\u7801\u4e2d\u4f1a\u4f9d\u8d56\u7684\u5e93\uff08\u7f16\u8bd1\u65f6\u5019\u4f1a\u81ea\u52a8\u8f7d\u5230\u672c\u5730\u6765\uff09", 
            "title": "3. import path"
        }, 
        {
            "location": "/organization/importpath/#_1", 
            "text": "\u4e00\u4e2aimport path\uff08\u5305\u8def\u5f84\uff09\u552f\u4e00\u6807\u8bc6\u4e00\u4e2apackage\uff0c\u4e00\u4e2apackage\u7684import path\u76f8\u5f53\u4e8e\u4ed6\u6240\u5904\u4e8eworkspace\u4e2d\u7684\u76f8\u5bf9\u8def\u5f84\u3002  \u5bfc\u5165\u8def\u5f84\u53ef\u4ee5\u662f\u672c\u5730\u4e5f\u53ef\u4ee5\u662f\u5728\u8fdc\u7a0b\uff0c\u6bd4\u5982\u5f00\u6e90\u4ee3\u7801\u901a\u5e38\u653e\u5728github.com\u3002\u5f53\u7f16\u8bd1\u65f6\u5019\u4f1a\u81ea\u52a8\u5c06\u8fdc\u7a0b\u6587\u4ef6\u8f7d\u5230\u672c\u5730\u76ee\u5f55\u4e0a\u8fdb\u884c\u8bfb\u53d6", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/organization/importpath/#_2", 
            "text": "import path\u7531base path\u548cpackage path\u7ec4\u6210  base path\u6307repository\u8def\u5f84\uff0c\u6bd4\u5982 github.com/cyent/golang/example \uff08\u5bf9\u5e94\u672c\u5730workspace\u4e2d\u7684\u8def\u5f84 $GOPATH/src/github.com/cyent/golang/example \uff09  package path\u6307\u5177\u4f53\u5305\u7684\u8def\u5f84\uff0c\u6bd4\u5982\u6709\u4e2ahello\u5305\uff0c\u90a3\u4e48\u5176import path\u5c31\u662fgithub.com/cyent/golang/example/hello   github.com\u4e5f\u6709\u7c7b\u4f3cworkspace\u7684\u6982\u5ff5\uff0c\u53eb\u505aOrganizations  \u6bd4\u5982\u5728github\u4e0a\u6ce8\u518c\u4e86\u4e00\u4e2a\u8d26\u6237\u53eb\u505acyent\uff08\u8d26\u6237\u4e3b\u9875: github.com/cyent \uff09\uff0c\u4e4b\u540e\u521b\u5efa\u7684repo\u90fd\u53ef\u4ee5\u653e\u5728\u8fd9\u4e0b\u9762\uff0c\u6bd4\u5982 github.com/cyent/golang  \u901a\u5e38\u4e2a\u4eba\u7528\u6237\u4f1a\u50cf\u4e0a\u9762\u8fd9\u4e48\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e\u56e2\u961f\u6216\u8005\u516c\u53f8\u6765\u8bf4\uff0ccyent\u53ea\u662f\u4e00\u4e2a\u6ce8\u518c\u8d26\u53f7\uff0c\u4e0d\u4f5c\u4e3a\u54c1\u724c\u63a8\u5e7f\uff0c\u56e0\u6b64\u4f1a\u7528\u56e2\u961f\u540d\uff0c\u516c\u53f8\u540d\uff0c\u6216\u4ea7\u54c1\u7cfb\u5217\u540d\u7b49\uff0c\u6bd4\u5982 github.com/mycompany \uff0c\u8fd9\u5c31\u662f\u5efa\u7acb\u4e86\u4e00\u4e2aorganization\uff0corganization\u540d\u5b57\u53eb\u505amycompany\uff0c\u4e4b\u540erepo\u90fd\u653e\u5728\u8fd9\u4e0b\u9762\uff0c\u6bd4\u5982 github.com/mycompany/myproduct", 
            "title": "\u7ec4\u6210"
        }, 
        {
            "location": "/organization/importpath/#_3", 
            "text": "\u4e3e\u4f8b\u8bf4\u660e\uff1a\u5047\u8bbe GOPATH=/opt/cyent/golang \uff0c\u90a3\u4e48\u672c\u5730\u76ee\u5f55\u7ed3\u6784:  /opt/cyent/golang/src/\n    github.com/organization1/repo\n    github.com/organization2/repo\n    github.com/cyent/golang  \u4e0a\u9762\u8fd9\u79cd\u76ee\u5f55\u7ed3\u6784\u89e3\u8bfb\uff1a /opt/cyent/golang \u662f\u653e\u7f6e\u6211\u7684\u6240\u6709go\u4ee3\u7801\u7684\u6839\u8def\u5f84  \u5176\u4e2d\u6211\u81ea\u5df1\u7684\u4ee3\u7801\u5728 /opt/cyent/golang/src/github.com/cyent/golang \u4e0b  organization1/repo \u548c organization2/repo \u662f\u6211\u4ee3\u7801\u4e2d\u4f1a\u4f9d\u8d56\u7684\u5e93\uff08\u7f16\u8bd1\u65f6\u5019\u4f1a\u81ea\u52a8\u8f7d\u5230\u672c\u5730\u6765\uff09", 
            "title": "\u4f8b\u5b50"
        }, 
        {
            "location": "/organization/helloworld/", 
            "text": "\u7a0b\u5e8f\u5165\u53e3main.main\n\n\n\n\npackage\n \nmain\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \n...\n\n\n}\n\n\n\n\n\nhello, world\n\n\n\n\n\u5728\u4e00\u4e2apackage\u91cc\u521b\u5efa\u4e00\u4e2a\nxxx.go\n\uff0c\u6bd4\u5982\u5728\n$GOPATH/src/github.com/cyent/golang/example/hello\n\u91cc\u521b\u5efa\u4e86\u4e00\u4e2amyfirst.go\uff08\u4e5f\u53ef\u4ee5\u53eb\u5176\u4ed6\u6587\u4ef6\u540d\uff0c\u91cd\u70b9\u662f\u8be5\u6587\u4ef6\u91cc\u5305\u542b\u7740main.main\uff09\uff0c\u91cc\u9762\u5199\u7740\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nHello, world!\n)\n\n\n}\n\n\n\n\n\n\u7136\u540e\u5728\u4efb\u610f\u76ee\u5f55\u4e0b\u6267\u884c\n\ngo install github.com/cyent/golang/example/hello\n\n\n\n\u5c31\u4f1a\u7f16\u8bd1\u51fa\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u5e76\u81ea\u52a8\u653e\u5165\n$GOPATH/bin\n\u4e2d\uff0c\u6bd4\u5982\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u751f\u6210\u7684\u7a0b\u5e8f\u5c31\u662f\n$GOPATH/bin/hello\n\n\n\n\n\u6ce8\u610f\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u540d\n\n\n\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u540d\u662f\u6839\u636epackage\u540d\u81ea\u52a8\u751f\u6210\u7684\uff08\u5373\u76ee\u5f55\u540d: hello\uff09\uff0c\u548c\u6587\u4ef6\u540dmyfirst.go\u6beb\u65e0\u5173\u7cfb\n\n\n\n\n\n\ngo\u7684\u89c4\u8303\u662f\u76ee\u5f55\u540d\u548c\u6587\u4ef6\u540d\u4e00\u81f4\n\n\n\u901a\u5e38\u662f\n$GOPATH/src/github.com/cyent/golang/example/hello/hello.go\n\uff0c\u8fd9\u6837\u6bd4\u8f83\u7b26\u5408\u4e60\u60ef\uff0c\u4e5f\u662fgo\u7684\u7f16\u7801\u89c4\u8303\n\n\n\n\n\u6267\u884c\n\n\n$GOPATH/bin/hello\n\n\n\n\n\n\n\u5982\u679c\u6709\u5c06\n$GOPATH/bin\n\u52a0\u5165\u5230$PATH\u91cc\uff0c\u90a3\u4e48\u8fd9\u91cc\u76f4\u63a5\u6267\u884chello\u5373\u53ef\n\n\n\n\n\u6548\u679c\n\n\nHello, world!\n\n\n\n\n\u6267\u884c\ngo install\n\u8fd8\u53ef\u4ee5\u5728package\u76ee\u5f55\u4e0b\u6267\u884c\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u8ddfpackage\u8def\u5f84\u4e86\u3002\u6bd4\u5982\u5728\n$GOPATH/src/github.com/cyent/golang/example/hello\n\u76ee\u5f55\u4e0b\u76f4\u63a5\u6267\u884c\ngo install\n\u5373\u53ef\n\n\n\u9644: \u6b64\u65f6GOPATH\u76ee\u5f55\u7ed3\u6784\n\n\n\n\n.\n\u251c\u2500\u2500 bin\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 hello\n\u251c\u2500\u2500 pkg\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 github.com\n        \u2514\u2500\u2500 cyent\n            \u2514\u2500\u2500 golang\n                \u2514\u2500\u2500 example\n                    \u2514\u2500\u2500 hello\n                        \u2514\u2500\u2500 hello.go", 
            "title": "4. hello world"
        }, 
        {
            "location": "/organization/helloworld/#mainmain", 
            "text": "package   main  func   main ()   { \n     ...  }", 
            "title": "\u7a0b\u5e8f\u5165\u53e3main.main"
        }, 
        {
            "location": "/organization/helloworld/#hello-world", 
            "text": "\u5728\u4e00\u4e2apackage\u91cc\u521b\u5efa\u4e00\u4e2a xxx.go \uff0c\u6bd4\u5982\u5728 $GOPATH/src/github.com/cyent/golang/example/hello \u91cc\u521b\u5efa\u4e86\u4e00\u4e2amyfirst.go\uff08\u4e5f\u53ef\u4ee5\u53eb\u5176\u4ed6\u6587\u4ef6\u540d\uff0c\u91cd\u70b9\u662f\u8be5\u6587\u4ef6\u91cc\u5305\u542b\u7740main.main\uff09\uff0c\u91cc\u9762\u5199\u7740\uff1a  package   main  import   fmt  func   main ()   { \n     fmt . Println ( Hello, world! )  }   \u7136\u540e\u5728\u4efb\u610f\u76ee\u5f55\u4e0b\u6267\u884c go install github.com/cyent/golang/example/hello  \u5c31\u4f1a\u7f16\u8bd1\u51fa\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u5e76\u81ea\u52a8\u653e\u5165 $GOPATH/bin \u4e2d\uff0c\u6bd4\u5982\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u751f\u6210\u7684\u7a0b\u5e8f\u5c31\u662f $GOPATH/bin/hello   \u6ce8\u610f\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u540d  \u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u540d\u662f\u6839\u636epackage\u540d\u81ea\u52a8\u751f\u6210\u7684\uff08\u5373\u76ee\u5f55\u540d: hello\uff09\uff0c\u548c\u6587\u4ef6\u540dmyfirst.go\u6beb\u65e0\u5173\u7cfb    go\u7684\u89c4\u8303\u662f\u76ee\u5f55\u540d\u548c\u6587\u4ef6\u540d\u4e00\u81f4  \u901a\u5e38\u662f $GOPATH/src/github.com/cyent/golang/example/hello/hello.go \uff0c\u8fd9\u6837\u6bd4\u8f83\u7b26\u5408\u4e60\u60ef\uff0c\u4e5f\u662fgo\u7684\u7f16\u7801\u89c4\u8303   \u6267\u884c  $GOPATH/bin/hello   \u5982\u679c\u6709\u5c06 $GOPATH/bin \u52a0\u5165\u5230$PATH\u91cc\uff0c\u90a3\u4e48\u8fd9\u91cc\u76f4\u63a5\u6267\u884chello\u5373\u53ef   \u6548\u679c  Hello, world!  \u6267\u884c go install \u8fd8\u53ef\u4ee5\u5728package\u76ee\u5f55\u4e0b\u6267\u884c\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u8ddfpackage\u8def\u5f84\u4e86\u3002\u6bd4\u5982\u5728 $GOPATH/src/github.com/cyent/golang/example/hello \u76ee\u5f55\u4e0b\u76f4\u63a5\u6267\u884c go install \u5373\u53ef", 
            "title": "hello, world"
        }, 
        {
            "location": "/organization/helloworld/#gopath", 
            "text": ".\n\u251c\u2500\u2500 bin\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 hello\n\u251c\u2500\u2500 pkg\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 github.com\n        \u2514\u2500\u2500 cyent\n            \u2514\u2500\u2500 golang\n                \u2514\u2500\u2500 example\n                    \u2514\u2500\u2500 hello\n                        \u2514\u2500\u2500 hello.go", 
            "title": "\u9644: \u6b64\u65f6GOPATH\u76ee\u5f55\u7ed3\u6784"
        }, 
        {
            "location": "/organization/firstlib/", 
            "text": "\u521b\u5efalib\n\n\n\n\n\u521b\u5efa\n$GOPATH/src/github.com/cyent/golang/example/stringutil\n\u76ee\u5f55\uff0c\u5e76\u5728\u76ee\u5f55\u91cc\u653e\u7f6ereverse.go\uff0c\u5185\u5bb9\u5982\u4e0b\n\n\n// Package stringutil contains utility functions for working with strings.\n\n\npackage\n \nstringutil\n\n\n\n// Reverse returns its argument string reversed rune-wise left to right.\n\n\nfunc\n \nReverse\n(\ns\n \nstring\n)\n \nstring\n \n{\n\n    \nr\n \n:=\n \n[]\nrune\n(\ns\n)\n\n    \nfor\n \ni\n,\n \nj\n \n:=\n \n0\n,\n \nlen\n(\nr\n)\n-\n1\n;\n \ni\n \n \nlen\n(\nr\n)\n/\n2\n;\n \ni\n,\n \nj\n \n=\n \ni\n+\n1\n,\n \nj\n-\n1\n \n{\n\n        \nr\n[\ni\n],\n \nr\n[\nj\n]\n \n=\n \nr\n[\nj\n],\n \nr\n[\ni\n]\n\n    \n}\n\n    \nreturn\n \nstring\n(\nr\n)\n\n\n}\n\n\n\n\n\ngo install github.com/cyent/golang/example/stringutil\n\n\n\n\n\u4f1a\u770b\u5230\u751f\u6210\u4e86\n$GOPATH/pkg/darwin_amd64/github.com/cyent/golang/example/stringutil.a\n\n\n\n\n\u6ce8\u610f\u8fd9\u91cc\u7684\u8def\u5f84\n\n\n\u8def\u5f84\u4e0d\u662f\ncyent/golang/example/stringutil/stringutil.a\n\uff0c\u800c\u662f\ncyent/golang/example/stringutil.a\n\u3002\n\n\n\u4e0a\u9762\nreverse.go\n\u91cc\u7684\u4ee3\u7801\u9664\u4e86\u653e\u5728\n$GOPATH/src/github.com/cyent/golang/example/stringutil/reverse.go\n\uff0c\u4e5f\u53ef\u4ee5\u653e\u5728\n$GOPATH/src/github.com/cyent/golang/example/stringutil.go\n\u3002\u5b9e\u9645\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\n\n\n\u7528stringutil\u76ee\u5f55\u53ea\u662f\u4e3a\u4e86\u5206\u9694\u4ee3\u7801\uff0c\u8fd9\u6837\u6bd4\u8f83\u5bb9\u6613\u8ba9\u4eba\u7406\u89e3\uff0c\u800c\u4e14\u5982\u679cstringutil\u5305\u91cc\u7684\u51fd\u6570\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u5206\u6210\u591a\u4e2a\u6e90\u7801\u6587\u4ef6\uff0c\u7528\u6587\u4ef6\u540d\u6765\u6807\u8bc6\u5185\u5bb9\uff0c\u63d0\u9ad8\u53ef\u8bfb\u6027\uff0c\u6bd4\u5982\u51fd\u6570\u540d\u53eb\u505aReverse\uff0c\u6587\u4ef6\u540d\u5c31\u53eb\u505areverse.go\u3002\u5982\u679c\u6240\u6709\u51fd\u6570\u90fd\u653e\u5728\u4e00\u4e2a\u4ee3\u7801\u6587\u4ef6\u91cc\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4ee3\u7801\u6587\u4ef6\u5c31\u592a\u5e9e\u5927\uff0c\u663e\u5f97\u5f88\u4e71\uff0c\u4e0d\u5229\u4e8e\u7ef4\u62a4\n\n\n\n\n\u8c03\u7528lib\n\n\n\u4fee\u6539\n\u4e0a\u4e00\u9875\n\u4e2d\u7684\nhello.go\n\uff0c\u6539\u4e3a\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ngithub.com/cyent/golang/example/stringutil\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nstringutil\n.\nReverse\n(\n!oG ,olleH\n))\n\n\n}\n\n\n\n\n\n\u6267\u884c\n\n\ngo install github.com/cyent/golang/example/hello\n\n\n\n\n\u5c31\u4f1a\u7f16\u8bd1\u51fa\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u5e76\u81ea\u52a8\u653e\u5165\n$GOPATH/bin\n\u4e2d\uff0c\u6bd4\u5982\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u751f\u6210\u7684\u7a0b\u5e8f\u5c31\u662f\n$GOPATH/bin/hello\n\n\n\u6267\u884c\n\n\n$GOPATH/bin/hello\n\n\n\n\n\u6548\u679c\n\n\nHello, Go!\n\n\n\n\n\n\n\u6ce8\u610f\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u8def\u5f84\n\n\n\u8fd9\u4e2ahello\u4e8c\u8fdb\u5236\u6587\u4ef6\u751f\u6210\u8def\u5f84\u662f\n$GOPATH/bin/hello\n\uff0c\u800c\u4e0d\u662f\n$GOPATH/bin/github.com/cyent/golang/example/hello\n\uff0c\u8bf4\u660e\u4e00\u4e2aworkspace\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u90fd\u5728\u4e00\u8d77\n\n\n\u4e00\u4e2aworkspace\u91cc\u53ef\u6267\u884c\u7a0b\u5e8f\u540d\u4e0d\u80fd\u76f8\u540c\uff0c\u56e0\u4e3a\u90fd\u662f\u653e\u5728bin\u76ee\u5f55\u4e0b\uff0c\u8fd9\u76ee\u5f55\u4e0b\u6ca1\u6709\u4efb\u4f55\u5b50\u76ee\u5f55\u3002\u5373\u4e0d\u80fd\u5b58\u5728\u8fd9\u68372\u4e2amain package\u5728\u4e00\u4e2aworkspace\u91cc\uff1a\uff08\u5047\u8bbe\u4e0b\u97622\u4e2ahello.go\u90fd\u662fpackage main\uff09\n$GOPATH/src/github.com/cyent/example/repo1/hello.go\n$GOPATH/src/github.com/cyent/example/repo2/hello.go\n\n\n\n\n\n\n\u81ea\u52a8\u641c\u7d22\u6240\u6709\u51fd\u6570\u5e76\u96c6\u4e2d\u5230\u4e00\u4e2a.a\u6587\u4ef6\n\n\n\u751f\u6210library\u65f6\u5019\u662f\u4f1a\u81ea\u52a8\u628a\n$GOPATH/src/github.com/cyent/golang/example/stringutil/\n\u4e0b\u9762\u6240\u6709.go\u6587\u4ef6\u91cc\u5305\u542b\u7684\u51fd\u6570\u96c6\u4e2d\u5230\nstringutil.a\n\u4e2d\uff08\u6839\u636e\u8fd9\u4e9b.go\u6587\u4ef6\u4e2d\u7684package xxx\u6765\u81ea\u52a8\u52a0\u5165\u5230\u4e00\u4e2a.a\uff09\uff0c\u56e0\u6b64\u5982\u679c\u5b58\u5728\u76f8\u540c\u7684\u51fd\u6570\uff0c\u4f1a\u62a5\u9519\u63d0\u793a\u91cd\u590d\n\n\n\n\n\n\n$GOPATH/pkg\u8def\u5f84\n\n\n\u6ce8\u610f\ngo install\n\u4f1a\u5c06\nstringutil.a\n\u5bf9\u8c61\u653e\u5230\npkg/darwin_amd64\n\u76ee\u5f55\u4e2d\uff0c\u5b83\u4f1a\u53cd\u6620\u51fa\u5176\u6e90\u7801\u76ee\u5f55\u3002 \u8fd9\u5c31\u662f\u5728\u6b64\u4e4b\u540e\u8c03\u7528go\u5de5\u5177\uff0c\u80fd\u627e\u5230\u5305\u5bf9\u8c61\u5e76\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u91cd\u65b0\u7f16\u8bd1\u7684\u539f\u56e0\u3002darwin_amd64\u8fd9\u90e8\u5206\u80fd\u5e2e\u52a9\u8de8\u5e73\u53f0\u7f16\u8bd1\uff0c\u5e76\u53cd\u6620\u51fa\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u67b6\u6784\u3002\n\n\n\n\n\n\n\u9759\u6001\u94fe\u63a5\n\n\nGo\u7f16\u8bd1\u65f6\u5019\u9ed8\u8ba4\u662f\u9759\u6001\u94fe\u63a5\u7684\uff1b\u5728\u8fd0\u884c\u751f\u6210\u7684\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u65f6\uff0c\u5305\u5bf9\u8c61\nstringutil.a\n\u65e0\u9700\u5b58\u5728\u3002\n\n\n\n\n\n\ngo\u6e90\u7801\u6587\u4ef6\u7b2c\u4e00\u884c\u5fc5\u987b\u662fpackage name\n\n\npackage name\u5c31\u662f\u8c03\u7528\u65f6\u5019import\u4ee5/\u5206\u9694\u7684\u6700\u540e\u4e00\u6bb5\uff0c\u6bd4\u5982\u60f3\u522b\u7684\u7a0b\u5e8f\u901a\u8fc7import \"crypto/rot13\"\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u5199package rot13\n\n\n\u751f\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\uff0cpackage\u5fc5\u987b\u4e3amain\n\n\n\n\n\u9644: \u6b64\u65f6GOPATH\u76ee\u5f55\u7ed3\u6784\n\n\n\n\n.\n\u251c\u2500\u2500 bin\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 hello\n\u251c\u2500\u2500 pkg\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 darwin_amd64\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 github.com\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 cyent\n\u2502\u00a0\u00a0             \u2514\u2500\u2500 golang\n\u2502\u00a0\u00a0                 \u2514\u2500\u2500 example\n\u2502\u00a0\u00a0                     \u2514\u2500\u2500 stringutil.a\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 github.com\n        \u2514\u2500\u2500 cyent\n            \u2514\u2500\u2500 golang\n                \u2514\u2500\u2500 example\n                    \u251c\u2500\u2500 hello\n                    \u2502\u00a0\u00a0 \u2514\u2500\u2500 hello.go\n                    \u2514\u2500\u2500 stringutil\n                        \u2514\u2500\u2500 reverse.go", 
            "title": "5. \u7b2c\u4e00\u4e2alibrary"
        }, 
        {
            "location": "/organization/firstlib/#lib", 
            "text": "\u521b\u5efa $GOPATH/src/github.com/cyent/golang/example/stringutil \u76ee\u5f55\uff0c\u5e76\u5728\u76ee\u5f55\u91cc\u653e\u7f6ereverse.go\uff0c\u5185\u5bb9\u5982\u4e0b  // Package stringutil contains utility functions for working with strings.  package   stringutil  // Reverse returns its argument string reversed rune-wise left to right.  func   Reverse ( s   string )   string   { \n     r   :=   [] rune ( s ) \n     for   i ,   j   :=   0 ,   len ( r ) - 1 ;   i     len ( r ) / 2 ;   i ,   j   =   i + 1 ,   j - 1   { \n         r [ i ],   r [ j ]   =   r [ j ],   r [ i ] \n     } \n     return   string ( r )  }   go install github.com/cyent/golang/example/stringutil  \u4f1a\u770b\u5230\u751f\u6210\u4e86 $GOPATH/pkg/darwin_amd64/github.com/cyent/golang/example/stringutil.a   \u6ce8\u610f\u8fd9\u91cc\u7684\u8def\u5f84  \u8def\u5f84\u4e0d\u662f cyent/golang/example/stringutil/stringutil.a \uff0c\u800c\u662f cyent/golang/example/stringutil.a \u3002  \u4e0a\u9762 reverse.go \u91cc\u7684\u4ee3\u7801\u9664\u4e86\u653e\u5728 $GOPATH/src/github.com/cyent/golang/example/stringutil/reverse.go \uff0c\u4e5f\u53ef\u4ee5\u653e\u5728 $GOPATH/src/github.com/cyent/golang/example/stringutil.go \u3002\u5b9e\u9645\u6548\u679c\u662f\u4e00\u6837\u7684\u3002  \u7528stringutil\u76ee\u5f55\u53ea\u662f\u4e3a\u4e86\u5206\u9694\u4ee3\u7801\uff0c\u8fd9\u6837\u6bd4\u8f83\u5bb9\u6613\u8ba9\u4eba\u7406\u89e3\uff0c\u800c\u4e14\u5982\u679cstringutil\u5305\u91cc\u7684\u51fd\u6570\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u5206\u6210\u591a\u4e2a\u6e90\u7801\u6587\u4ef6\uff0c\u7528\u6587\u4ef6\u540d\u6765\u6807\u8bc6\u5185\u5bb9\uff0c\u63d0\u9ad8\u53ef\u8bfb\u6027\uff0c\u6bd4\u5982\u51fd\u6570\u540d\u53eb\u505aReverse\uff0c\u6587\u4ef6\u540d\u5c31\u53eb\u505areverse.go\u3002\u5982\u679c\u6240\u6709\u51fd\u6570\u90fd\u653e\u5728\u4e00\u4e2a\u4ee3\u7801\u6587\u4ef6\u91cc\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4ee3\u7801\u6587\u4ef6\u5c31\u592a\u5e9e\u5927\uff0c\u663e\u5f97\u5f88\u4e71\uff0c\u4e0d\u5229\u4e8e\u7ef4\u62a4", 
            "title": "\u521b\u5efalib"
        }, 
        {
            "location": "/organization/firstlib/#lib_1", 
            "text": "\u4fee\u6539 \u4e0a\u4e00\u9875 \u4e2d\u7684 hello.go \uff0c\u6539\u4e3a\uff1a  package   main  import   ( \n     fmt \n     github.com/cyent/golang/example/stringutil  )  func   main ()   { \n     fmt . Println ( stringutil . Reverse ( !oG ,olleH ))  }   \u6267\u884c  go install github.com/cyent/golang/example/hello  \u5c31\u4f1a\u7f16\u8bd1\u51fa\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u5e76\u81ea\u52a8\u653e\u5165 $GOPATH/bin \u4e2d\uff0c\u6bd4\u5982\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u751f\u6210\u7684\u7a0b\u5e8f\u5c31\u662f $GOPATH/bin/hello  \u6267\u884c  $GOPATH/bin/hello  \u6548\u679c  Hello, Go!   \u6ce8\u610f\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u8def\u5f84  \u8fd9\u4e2ahello\u4e8c\u8fdb\u5236\u6587\u4ef6\u751f\u6210\u8def\u5f84\u662f $GOPATH/bin/hello \uff0c\u800c\u4e0d\u662f $GOPATH/bin/github.com/cyent/golang/example/hello \uff0c\u8bf4\u660e\u4e00\u4e2aworkspace\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u90fd\u5728\u4e00\u8d77  \u4e00\u4e2aworkspace\u91cc\u53ef\u6267\u884c\u7a0b\u5e8f\u540d\u4e0d\u80fd\u76f8\u540c\uff0c\u56e0\u4e3a\u90fd\u662f\u653e\u5728bin\u76ee\u5f55\u4e0b\uff0c\u8fd9\u76ee\u5f55\u4e0b\u6ca1\u6709\u4efb\u4f55\u5b50\u76ee\u5f55\u3002\u5373\u4e0d\u80fd\u5b58\u5728\u8fd9\u68372\u4e2amain package\u5728\u4e00\u4e2aworkspace\u91cc\uff1a\uff08\u5047\u8bbe\u4e0b\u97622\u4e2ahello.go\u90fd\u662fpackage main\uff09\n$GOPATH/src/github.com/cyent/example/repo1/hello.go\n$GOPATH/src/github.com/cyent/example/repo2/hello.go    \u81ea\u52a8\u641c\u7d22\u6240\u6709\u51fd\u6570\u5e76\u96c6\u4e2d\u5230\u4e00\u4e2a.a\u6587\u4ef6  \u751f\u6210library\u65f6\u5019\u662f\u4f1a\u81ea\u52a8\u628a $GOPATH/src/github.com/cyent/golang/example/stringutil/ \u4e0b\u9762\u6240\u6709.go\u6587\u4ef6\u91cc\u5305\u542b\u7684\u51fd\u6570\u96c6\u4e2d\u5230 stringutil.a \u4e2d\uff08\u6839\u636e\u8fd9\u4e9b.go\u6587\u4ef6\u4e2d\u7684package xxx\u6765\u81ea\u52a8\u52a0\u5165\u5230\u4e00\u4e2a.a\uff09\uff0c\u56e0\u6b64\u5982\u679c\u5b58\u5728\u76f8\u540c\u7684\u51fd\u6570\uff0c\u4f1a\u62a5\u9519\u63d0\u793a\u91cd\u590d    $GOPATH/pkg\u8def\u5f84  \u6ce8\u610f go install \u4f1a\u5c06 stringutil.a \u5bf9\u8c61\u653e\u5230 pkg/darwin_amd64 \u76ee\u5f55\u4e2d\uff0c\u5b83\u4f1a\u53cd\u6620\u51fa\u5176\u6e90\u7801\u76ee\u5f55\u3002 \u8fd9\u5c31\u662f\u5728\u6b64\u4e4b\u540e\u8c03\u7528go\u5de5\u5177\uff0c\u80fd\u627e\u5230\u5305\u5bf9\u8c61\u5e76\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u91cd\u65b0\u7f16\u8bd1\u7684\u539f\u56e0\u3002darwin_amd64\u8fd9\u90e8\u5206\u80fd\u5e2e\u52a9\u8de8\u5e73\u53f0\u7f16\u8bd1\uff0c\u5e76\u53cd\u6620\u51fa\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u67b6\u6784\u3002    \u9759\u6001\u94fe\u63a5  Go\u7f16\u8bd1\u65f6\u5019\u9ed8\u8ba4\u662f\u9759\u6001\u94fe\u63a5\u7684\uff1b\u5728\u8fd0\u884c\u751f\u6210\u7684\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u65f6\uff0c\u5305\u5bf9\u8c61 stringutil.a \u65e0\u9700\u5b58\u5728\u3002    go\u6e90\u7801\u6587\u4ef6\u7b2c\u4e00\u884c\u5fc5\u987b\u662fpackage name  package name\u5c31\u662f\u8c03\u7528\u65f6\u5019import\u4ee5/\u5206\u9694\u7684\u6700\u540e\u4e00\u6bb5\uff0c\u6bd4\u5982\u60f3\u522b\u7684\u7a0b\u5e8f\u901a\u8fc7import \"crypto/rot13\"\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u5199package rot13  \u751f\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\uff0cpackage\u5fc5\u987b\u4e3amain", 
            "title": "\u8c03\u7528lib"
        }, 
        {
            "location": "/organization/firstlib/#gopath", 
            "text": ".\n\u251c\u2500\u2500 bin\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 hello\n\u251c\u2500\u2500 pkg\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 darwin_amd64\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 github.com\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 cyent\n\u2502\u00a0\u00a0             \u2514\u2500\u2500 golang\n\u2502\u00a0\u00a0                 \u2514\u2500\u2500 example\n\u2502\u00a0\u00a0                     \u2514\u2500\u2500 stringutil.a\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 github.com\n        \u2514\u2500\u2500 cyent\n            \u2514\u2500\u2500 golang\n                \u2514\u2500\u2500 example\n                    \u251c\u2500\u2500 hello\n                    \u2502\u00a0\u00a0 \u2514\u2500\u2500 hello.go\n                    \u2514\u2500\u2500 stringutil\n                        \u2514\u2500\u2500 reverse.go", 
            "title": "\u9644: \u6b64\u65f6GOPATH\u76ee\u5f55\u7ed3\u6784"
        }, 
        {
            "location": "/organization/test/", 
            "text": "\u5185\u7f6e\u7684testing\u6a21\u5757\n\n\n\n\ngo\u5185\u7f6e\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u6d4b\u8bd5\u6846\u67b6\uff0c\u4f7f\u7528\u65b9\u6cd5\uff1a\n\n\n\n\n\n\n\u6587\u4ef6\u4ee5\n_test.go\n\u7ed3\u5c3e\n\n\n\n\n\n\nimport \ntesting\n\n\n\n\n\n\n\u51fd\u6570\u540d\u4e3a\nTestXXX\n\uff0c\u5e76\u4e14parameter\u4e3a\nt *testing.T\n\n\n\n\n\n\n\u4f8b\u5b50\uff1a\n\n\n\u5728\n$GOPATH/src/github.com/cyent/golang/example/stringutil\n\u91cc\u65b0\u5efa\u6587\u4ef6\nreverse_test.go\n\n\npackage\n \nstringutil\n\n\n\nimport\n \ntesting\n\n\n\nfunc\n \nTestReverse\n(\nt\n \n*\ntesting\n.\nT\n)\n \n{\n\n    \ncases\n \n:=\n \n[]\nstruct\n \n{\n\n        \nin\n,\n \nwant\n \nstring\n\n    \n}{\n\n        \n{\nHello, world\n,\n \ndlrow ,olleH\n},\n\n        \n{\nHello, \u4e16\u754c\n,\n \n\u754c\u4e16 ,olleH\n},\n\n        \n{\n,\n \n},\n\n    \n}\n\n    \nfor\n \n_\n,\n \nc\n \n:=\n \nrange\n \ncases\n \n{\n\n        \ngot\n \n:=\n \nReverse\n(\nc\n.\nin\n)\n\n        \nif\n \ngot\n \n!=\n \nc\n.\nwant\n \n{\n\n            \nt\n.\nErrorf\n(\nReverse(%q) == %q, want %q\n,\n \nc\n.\nin\n,\n \ngot\n,\n \nc\n.\nwant\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\u6267\u884c\u6d4b\u8bd5\uff1a\n\n\ngo test github.com/cyent/golang/exmaple/stringutil\n\n\n\n\n\u6216\u8005\u5728\n$GOPATH/src/github.com/cyent/golang/exmaple/stringutil\n\u76ee\u5f55\u4e0b\u6267\u884c\ngo test\n\n\n\u8f93\u51fa\n\n\nok      github.com/cyent/golang/example/stringutil  0.006s\n\n\n\n\n\u8868\u793a\u6d4b\u8bd5\u901a\u8fc7\n\n\n\u5982\u679c\u662f\u5728stringutil\u76ee\u5f55\u4e0b\u76f4\u63a5\u6267\u884c\ngo test\n\uff0c\u4f1a\u8f93\u51fa\n\n\nPASS\nok      github.com/cyent/golang/example/stringutil  0.005s\n\n\n\n\n\n\n\u63a8\u8350\u4f7f\u7528\ngo test -v\n\uff0c\u8f93\u51fa\u66f4\u8be6\u7ec6\n\n\n\n\n\u6211\u5bf9\u5355\u5143\u6d4b\u8bd5\u7684\u7406\u89e3\n\n\n\n\n\u6211\u4e5f\u662f\u7b2c\u4e00\u6b21\u63a5\u89e6\u5355\u5143\u6d4b\u8bd5\uff0c\u6240\u4ee5\u6211\u7684\u7406\u89e3\u4e5f\u8bb8\u4e0d\u662f\u5bf9\u7684\n\n\n\u9996\u5148\uff0c\u6211\u662f\u5728\u767e\u5ea6\u767e\u79d1\u91cc\u770b\u5230\u7684\n\u5355\u5143\u6d4b\u8bd5\n\uff0c\u5176\u4e2d\u6709\u51e0\u6bb5\u8bdd\u53d7\u76ca\u532a\u6d45:\n\n\n\n\n\u4ec0\u4e48\u65f6\u5019\u6d4b\u8bd5\uff1f\u5355\u5143\u6d4b\u8bd5\u8d8a\u65e9\u8d8a\u597d\uff0c\u65e9\u5230\u4ec0\u4e48\u7a0b\u5ea6\uff1f\u6781\u9650\u7f16\u7a0b(Extreme Programming,\u6216\u7b80\u79f0XP)\u8bb2\u7a76TDD\uff0c\u5373\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\uff0c\u5148\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801\uff0c\u518d\u8fdb\u884c\u5f00\u53d1\u3002\u5728\u5b9e\u9645\u7684\u5de5\u4f5c\u4e2d\uff0c\u53ef\u4ee5\u4e0d\u5fc5\u8fc7\u5206\u5f3a\u8c03\u5148\u4ec0\u4e48\u540e\u4ec0\u4e48\uff0c\u91cd\u8981\u7684\u662f\u9ad8\u6548\u548c\u611f\u89c9\u8212\u9002\u3002\u4ece\u7ecf\u9a8c\u6765\u770b\uff0c\n\u5148\u7f16\u5199\u4ea7\u54c1\u51fd\u6570\u7684\u6846\u67b6\uff0c\u7136\u540e\u7f16\u5199\u6d4b\u8bd5\u51fd\u6570\uff0c\u9488\u5bf9\u4ea7\u54c1\u51fd\u6570\u7684\u529f\u80fd\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\uff0c\u7136\u540e\u7f16\u5199\u4ea7\u54c1\u51fd\u6570\u7684\u4ee3\u7801\uff0c\u6bcf\u5199\u4e00\u4e2a\u529f\u80fd\u70b9\u90fd\u8fd0\u884c\u6d4b\u8bd5\uff0c\u968f\u65f6\u8865\u5145\u6d4b\u8bd5\u7528\u4f8b\n\u3002\u6240\u8c13\u5148\u7f16\u5199\u4ea7\u54c1\u51fd\u6570\u7684\u6846\u67b6\uff0c\u662f\u6307\u5148\u7f16\u5199\u51fd\u6570\u7a7a\u7684\u5b9e\u73b0\uff0c\u6709\u8fd4\u56de\u503c\u7684\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u5408\u9002\u503c\uff0c\u7f16\u8bd1\u901a\u8fc7\u540e\u518d\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801\uff0c\u8fd9\u65f6\uff0c\u51fd\u6570\u540d\u3001\u53c2\u6570\u8868\u3001\u8fd4\u56de\u7c7b\u578b\u90fd\u5e94\u8be5\u786e\u5b9a\u4e0b\u6765\u4e86\uff0c\u6240\u7f16\u5199\u7684\u6d4b\u8bd5\u4ee3\u7801\u4ee5\u540e\u9700\u4fee\u6539\u7684\u53ef\u80fd\u6027\u6bd4\u8f83\u5c0f\u3002\n\n\n\u8fd9\u662f\u90a3\u4e9b\u6ca1\u6709\u9996\u5148\u4e3a\u6bcf\u4e2a\u5355\u5143\u7f16\u5199\u4e00\u4e2a\u8be6\u7ec6\u7684\u89c4\u683c\u8bf4\u660e\u800c\u76f4\u63a5\u8df3\u5230\u7f16\u7801\u9636\u6bb5\u7684\u5f00\u53d1\u4eba\u5458\u63d0\u51fa\u7684\u4e00\u6761\u666e\u904d\u7684\u62b1\u6028\uff0c\n\u5f53\u7f16\u7801\u5b8c\u6210\u4ee5\u540e\u5e76\u4e14\u9762\u4e34\u4ee3\u7801\u6d4b\u8bd5\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u5c31\u9605\u8bfb\u8fd9\u4e9b\u4ee3\u7801\u5e76\u627e\u51fa\u5b83\u5b9e\u9645\u4e0a\u505a\u4e86\u4ec0\u4e48\uff0c\u628a\u4ed6\u4eec\u7684\u6d4b\u8bd5\u5de5\u4f5c\u57fa\u4e8e\u5df2\u7ecf\u5199\u597d\u7684\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\n\u3002\u5f53\u7136\uff0c\u4ed6\u4eec\u65e0\u6cd5\u8bc1\u660e\u4efb\u4f55\u4e8b\u60c5\u3002\u6240\u6709\u7684\u8fd9\u4e9b\u6d4b\u8bd5\u5de5\u4f5c\u80fd\u591f\u8868\u660e\u7684\u4e8b\u60c5\u5c31\u662f\u7f16\u8bd1\u5668\u5de5\u4f5c\u6b63\u5e38\u3002\u662f\u7684\uff0c\u4ed6\u4eec\u4e5f\u8bb8\u80fd\u591f\u6293\u4f4f\uff08\u5e0c\u671b\u80fd\u591f\uff09\u7f55\u89c1\u7684\u7f16\u8bd1\u5668Bug\uff0c\u4f46\u662f\u4ed6\u4eec\u80fd\u591f\u505a\u7684\u4ec5\u4ec5\u662f\u8fd9\u4e9b\u3002\n\u5982\u679c\u4ed6\u4eec\u9996\u5148\u5199\u597d\u4e00\u4e2a\u8be6\u7ec6\u7684\u89c4\u683c\u8bf4\u660e\uff0c\u6d4b\u8bd5\u80fd\u591f\u4ee5\u89c4\u683c\u8bf4\u660e\u4e3a\u57fa\u7840\u3002\u4ee3\u7801\u5c31\u80fd\u591f\u9488\u5bf9\u5b83\u7684\u89c4\u683c\u8bf4\u660e\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u81ea\u8eab\u8fdb\u884c\u6d4b\u8bd5\u3002\u8fd9\u6837\u7684\u6d4b\u8bd5\u4ecd\u7136\u80fd\u591f\u6293\u4f4f\u7f16\u8bd1\u5668\u7684Bug\uff0c\u540c\u65f6\u4e5f\u80fd\u627e\u5230\u66f4\u591a\u7684\u7f16\u7801\u9519\u8bef\uff0c\u751a\u81f3\u662f\u4e00\u4e9b\u89c4\u683c\u8bf4\u660e\u4e2d\u7684\u9519\u8bef\u3002\n\u597d\u7684\u89c4\u683c\u8bf4\u660e\u53ef\u4ee5\u4f7f\u6d4b\u8bd5\u7684\u8d28\u91cf\u66f4\u9ad8\uff0c\u6240\u4ee5\u6700\u540e\u7684\u7ed3\u8bba\u662f\u9ad8\u8d28\u91cf\u7684\u6d4b\u8bd5\u9700\u8981\u9ad8\u8d28\u91cf\u7684\u89c4\u683c\u8bf4\u660e\n\u3002\n\n\n\u5728\u5b9e\u8df5\u4e2d\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u4e00\u4e2a\u5f00\u53d1\u4eba\u5458\u8981\u9762\u5bf9\u6d4b\u8bd5\u4e00\u4e2a\u5355\u5143\u65f6\u53ea\u7ed9\u51fa\u5355\u5143\u7684\u4ee3\u7801\u800c\u6ca1\u6709\u89c4\u683c\u8bf4\u660e\u8fd9\u6837\u5403\u529b\u4e0d\u8ba8\u597d\u7684\u4efb\u52a1\u3002\u4f60\u600e\u6837\u505a\u624d\u4f1a\u6709\u66f4\u591a\u7684\u6536\u83b7\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u53d1\u73b0\u7f16\u8bd1\u5668\u7684Bug\uff1f\n\u7b2c\u4e00\u6b65\u662f\u7406\u89e3\u8fd9\u4e2a\u5355\u5143\u539f\u672c\u8981\u505a\u4ec0\u4e48\uff0c --- \u4e0d\u662f\u5b83\u5b9e\u9645\u4e0a\u505a\u4e86\u4ec0\u4e48\n\u3002\u6bd4\u8f83\u6709\u6548\u7684\u65b9\u6cd5\u662f\u5012\u63a8\u51fa\u4e00\u4e2a\u6982\u8981\u7684\u89c4\u683c\u8bf4\u660e\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u4e3b\u8981\u8f93\u5165\u6761\u4ef6\u662f\u8981\u9605\u8bfb\u90a3\u4e9b\u7a0b\u5e8f\u4ee3\u7801\u548c\u6ce8\u91ca\uff0c \u4e3b\u8981\u9488\u5bf9\u8fd9\u4e2a\u5355\u5143\uff0c \u53ca\u8c03\u7528\u5b83\u548c\u88ab\u5b83\u8c03\u7528\u7684\u76f8\u5173\u4ee3\u7801\u3002\n\u753b\u51fa\u6d41\u7a0b\u56fe\u662f\u975e\u5e38\u6709\u5e2e\u52a9\u7684\n\uff0c\u4f60\u53ef\u4ee5\u7528\u624b\u5de5\u6216\u4f7f\u7528\u67d0\u79cd\u5de5\u5177\u3002\n\u53ef\u4ee5\u7ec4\u7ec7\u5bf9\u8fd9\u4e2a\u6982\u8981\u89c4\u683c\u8bf4\u660e\u7684\u8d70\u8bfb\uff08Review)\uff0c\u4ee5\u786e\u4fdd\u5bf9\u8fd9\u4e2a\u5355\u5143\u7684\u8bf4\u660e\u6ca1\u6709\u57fa\u672c\u7684\u9519\u8bef\uff0c \u6709\u4e86\u8fd9\u79cd\u6700\u5c0f\u7a0b\u5ea6\u7684\u4ee3\u7801\u6df1\u5c42\u8bf4\u660e\uff0c\u5c31\u53ef\u4ee5\u7528\u5b83\u6765\u8bbe\u8ba1\u5355\u5143\u6d4b\u8bd5\u4e86\n\u3002\n\n\n\n\ngo test\n\u65f6\u5019\u4f1a\u5148\u7f16\u8bd1\u68c0\u67e5\u4e00\u904d\uff0c\u548c\ngo run\n\u3001\ngo install\n\u76f8\u540c\uff0c\u5373\u53ea\u6709\u7f16\u8bd1\u68c0\u67e5\u901a\u8fc7\u4e86\u624d\u4f1a\u7ee7\u7eed\u3002\u56e0\u6b64\ngo test\n\u5b9e\u9645\u4e0a\u505a\u4e862\u4e2a\u6d4b\u8bd5: \u4f20\u5165\u53c2\u6570\u548c\u6570\u91cf\u662f\u5426\u6b63\u786e\uff08\u4e0d\u6b63\u786e\u5c31\u7f16\u8bd1\u62a5\u9519\uff09\uff0c\u4ee5\u53ca\u4e1a\u52a1\u903b\u8f91\u662f\u5426\u6b63\u786e\u3002\n\n\n\u5173\u4e8e\u4e1a\u52a1\u903b\u8f91\u662f\u5426\u6b63\u786e\uff0c\u6211\u7684\u7406\u89e3\u662f\uff1a\u5047\u8bbe\u88ab\u6d4b\u8bd5\u51fd\u6570\u662f\u505a\u9664\u6cd5\uff0c\u5728\u51fd\u6570\u91cc\u7684\u903b\u8f91\u4f1a\u5224\u65ad\u4f20\u5165\u7684\u53c2\u6570\u662f\u5426\u4e3a0\uff0c\u5982\u679c\u4e3a0\uff0c\u5219\u8fd4\u56deerror\u3002\u90a3\u4e48\u6d4b\u8bd5\u5185\u5bb9\u5c31\u662f\u4f20\u51650\uff0c\u770b\u4e0b\u662f\u5426\u8fd4\u56deerror\uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56deerror\uff0c\u5219t.Errorf\u629b\u9519\n\n\n\u603b\u7ed3: \u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u65f6\u5019\uff0c\u6839\u636e\u9884\u8bbe\u89c4\u5219\uff0c\u8c03\u7528\u88ab\u6d4b\u8bd5\u51fd\u6570\uff0c\u4f9d\u6b21\u4f20\u5165\u9884\u8bbe\u7684\u82e5\u5e72\u60c5\u51b5\uff0c\u6765\u6d4b\u8bd5\u51fd\u6570\u7684\u8fd4\u56de\u662f\u5426\u6b63\u786e\u3002", 
            "title": "6. \u5185\u7f6e\u7684\u8f7b\u91cf\u7ea7\u6d4b\u8bd5\u6846\u67b6"
        }, 
        {
            "location": "/organization/test/#testing", 
            "text": "go\u5185\u7f6e\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u6d4b\u8bd5\u6846\u67b6\uff0c\u4f7f\u7528\u65b9\u6cd5\uff1a    \u6587\u4ef6\u4ee5 _test.go \u7ed3\u5c3e    import  testing    \u51fd\u6570\u540d\u4e3a TestXXX \uff0c\u5e76\u4e14parameter\u4e3a t *testing.T    \u4f8b\u5b50\uff1a  \u5728 $GOPATH/src/github.com/cyent/golang/example/stringutil \u91cc\u65b0\u5efa\u6587\u4ef6 reverse_test.go  package   stringutil  import   testing  func   TestReverse ( t   * testing . T )   { \n     cases   :=   [] struct   { \n         in ,   want   string \n     }{ \n         { Hello, world ,   dlrow ,olleH }, \n         { Hello, \u4e16\u754c ,   \u754c\u4e16 ,olleH }, \n         { ,   }, \n     } \n     for   _ ,   c   :=   range   cases   { \n         got   :=   Reverse ( c . in ) \n         if   got   !=   c . want   { \n             t . Errorf ( Reverse(%q) == %q, want %q ,   c . in ,   got ,   c . want ) \n         } \n     }  }   \u6267\u884c\u6d4b\u8bd5\uff1a  go test github.com/cyent/golang/exmaple/stringutil  \u6216\u8005\u5728 $GOPATH/src/github.com/cyent/golang/exmaple/stringutil \u76ee\u5f55\u4e0b\u6267\u884c go test  \u8f93\u51fa  ok      github.com/cyent/golang/example/stringutil  0.006s  \u8868\u793a\u6d4b\u8bd5\u901a\u8fc7  \u5982\u679c\u662f\u5728stringutil\u76ee\u5f55\u4e0b\u76f4\u63a5\u6267\u884c go test \uff0c\u4f1a\u8f93\u51fa  PASS\nok      github.com/cyent/golang/example/stringutil  0.005s   \u63a8\u8350\u4f7f\u7528 go test -v \uff0c\u8f93\u51fa\u66f4\u8be6\u7ec6", 
            "title": "\u5185\u7f6e\u7684testing\u6a21\u5757"
        }, 
        {
            "location": "/organization/test/#_1", 
            "text": "\u6211\u4e5f\u662f\u7b2c\u4e00\u6b21\u63a5\u89e6\u5355\u5143\u6d4b\u8bd5\uff0c\u6240\u4ee5\u6211\u7684\u7406\u89e3\u4e5f\u8bb8\u4e0d\u662f\u5bf9\u7684  \u9996\u5148\uff0c\u6211\u662f\u5728\u767e\u5ea6\u767e\u79d1\u91cc\u770b\u5230\u7684 \u5355\u5143\u6d4b\u8bd5 \uff0c\u5176\u4e2d\u6709\u51e0\u6bb5\u8bdd\u53d7\u76ca\u532a\u6d45:   \u4ec0\u4e48\u65f6\u5019\u6d4b\u8bd5\uff1f\u5355\u5143\u6d4b\u8bd5\u8d8a\u65e9\u8d8a\u597d\uff0c\u65e9\u5230\u4ec0\u4e48\u7a0b\u5ea6\uff1f\u6781\u9650\u7f16\u7a0b(Extreme Programming,\u6216\u7b80\u79f0XP)\u8bb2\u7a76TDD\uff0c\u5373\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\uff0c\u5148\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801\uff0c\u518d\u8fdb\u884c\u5f00\u53d1\u3002\u5728\u5b9e\u9645\u7684\u5de5\u4f5c\u4e2d\uff0c\u53ef\u4ee5\u4e0d\u5fc5\u8fc7\u5206\u5f3a\u8c03\u5148\u4ec0\u4e48\u540e\u4ec0\u4e48\uff0c\u91cd\u8981\u7684\u662f\u9ad8\u6548\u548c\u611f\u89c9\u8212\u9002\u3002\u4ece\u7ecf\u9a8c\u6765\u770b\uff0c \u5148\u7f16\u5199\u4ea7\u54c1\u51fd\u6570\u7684\u6846\u67b6\uff0c\u7136\u540e\u7f16\u5199\u6d4b\u8bd5\u51fd\u6570\uff0c\u9488\u5bf9\u4ea7\u54c1\u51fd\u6570\u7684\u529f\u80fd\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\uff0c\u7136\u540e\u7f16\u5199\u4ea7\u54c1\u51fd\u6570\u7684\u4ee3\u7801\uff0c\u6bcf\u5199\u4e00\u4e2a\u529f\u80fd\u70b9\u90fd\u8fd0\u884c\u6d4b\u8bd5\uff0c\u968f\u65f6\u8865\u5145\u6d4b\u8bd5\u7528\u4f8b \u3002\u6240\u8c13\u5148\u7f16\u5199\u4ea7\u54c1\u51fd\u6570\u7684\u6846\u67b6\uff0c\u662f\u6307\u5148\u7f16\u5199\u51fd\u6570\u7a7a\u7684\u5b9e\u73b0\uff0c\u6709\u8fd4\u56de\u503c\u7684\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u5408\u9002\u503c\uff0c\u7f16\u8bd1\u901a\u8fc7\u540e\u518d\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801\uff0c\u8fd9\u65f6\uff0c\u51fd\u6570\u540d\u3001\u53c2\u6570\u8868\u3001\u8fd4\u56de\u7c7b\u578b\u90fd\u5e94\u8be5\u786e\u5b9a\u4e0b\u6765\u4e86\uff0c\u6240\u7f16\u5199\u7684\u6d4b\u8bd5\u4ee3\u7801\u4ee5\u540e\u9700\u4fee\u6539\u7684\u53ef\u80fd\u6027\u6bd4\u8f83\u5c0f\u3002  \u8fd9\u662f\u90a3\u4e9b\u6ca1\u6709\u9996\u5148\u4e3a\u6bcf\u4e2a\u5355\u5143\u7f16\u5199\u4e00\u4e2a\u8be6\u7ec6\u7684\u89c4\u683c\u8bf4\u660e\u800c\u76f4\u63a5\u8df3\u5230\u7f16\u7801\u9636\u6bb5\u7684\u5f00\u53d1\u4eba\u5458\u63d0\u51fa\u7684\u4e00\u6761\u666e\u904d\u7684\u62b1\u6028\uff0c \u5f53\u7f16\u7801\u5b8c\u6210\u4ee5\u540e\u5e76\u4e14\u9762\u4e34\u4ee3\u7801\u6d4b\u8bd5\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u5c31\u9605\u8bfb\u8fd9\u4e9b\u4ee3\u7801\u5e76\u627e\u51fa\u5b83\u5b9e\u9645\u4e0a\u505a\u4e86\u4ec0\u4e48\uff0c\u628a\u4ed6\u4eec\u7684\u6d4b\u8bd5\u5de5\u4f5c\u57fa\u4e8e\u5df2\u7ecf\u5199\u597d\u7684\u4ee3\u7801\u7684\u57fa\u7840\u4e0a \u3002\u5f53\u7136\uff0c\u4ed6\u4eec\u65e0\u6cd5\u8bc1\u660e\u4efb\u4f55\u4e8b\u60c5\u3002\u6240\u6709\u7684\u8fd9\u4e9b\u6d4b\u8bd5\u5de5\u4f5c\u80fd\u591f\u8868\u660e\u7684\u4e8b\u60c5\u5c31\u662f\u7f16\u8bd1\u5668\u5de5\u4f5c\u6b63\u5e38\u3002\u662f\u7684\uff0c\u4ed6\u4eec\u4e5f\u8bb8\u80fd\u591f\u6293\u4f4f\uff08\u5e0c\u671b\u80fd\u591f\uff09\u7f55\u89c1\u7684\u7f16\u8bd1\u5668Bug\uff0c\u4f46\u662f\u4ed6\u4eec\u80fd\u591f\u505a\u7684\u4ec5\u4ec5\u662f\u8fd9\u4e9b\u3002\n\u5982\u679c\u4ed6\u4eec\u9996\u5148\u5199\u597d\u4e00\u4e2a\u8be6\u7ec6\u7684\u89c4\u683c\u8bf4\u660e\uff0c\u6d4b\u8bd5\u80fd\u591f\u4ee5\u89c4\u683c\u8bf4\u660e\u4e3a\u57fa\u7840\u3002\u4ee3\u7801\u5c31\u80fd\u591f\u9488\u5bf9\u5b83\u7684\u89c4\u683c\u8bf4\u660e\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u81ea\u8eab\u8fdb\u884c\u6d4b\u8bd5\u3002\u8fd9\u6837\u7684\u6d4b\u8bd5\u4ecd\u7136\u80fd\u591f\u6293\u4f4f\u7f16\u8bd1\u5668\u7684Bug\uff0c\u540c\u65f6\u4e5f\u80fd\u627e\u5230\u66f4\u591a\u7684\u7f16\u7801\u9519\u8bef\uff0c\u751a\u81f3\u662f\u4e00\u4e9b\u89c4\u683c\u8bf4\u660e\u4e2d\u7684\u9519\u8bef\u3002 \u597d\u7684\u89c4\u683c\u8bf4\u660e\u53ef\u4ee5\u4f7f\u6d4b\u8bd5\u7684\u8d28\u91cf\u66f4\u9ad8\uff0c\u6240\u4ee5\u6700\u540e\u7684\u7ed3\u8bba\u662f\u9ad8\u8d28\u91cf\u7684\u6d4b\u8bd5\u9700\u8981\u9ad8\u8d28\u91cf\u7684\u89c4\u683c\u8bf4\u660e \u3002  \u5728\u5b9e\u8df5\u4e2d\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u4e00\u4e2a\u5f00\u53d1\u4eba\u5458\u8981\u9762\u5bf9\u6d4b\u8bd5\u4e00\u4e2a\u5355\u5143\u65f6\u53ea\u7ed9\u51fa\u5355\u5143\u7684\u4ee3\u7801\u800c\u6ca1\u6709\u89c4\u683c\u8bf4\u660e\u8fd9\u6837\u5403\u529b\u4e0d\u8ba8\u597d\u7684\u4efb\u52a1\u3002\u4f60\u600e\u6837\u505a\u624d\u4f1a\u6709\u66f4\u591a\u7684\u6536\u83b7\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u53d1\u73b0\u7f16\u8bd1\u5668\u7684Bug\uff1f \u7b2c\u4e00\u6b65\u662f\u7406\u89e3\u8fd9\u4e2a\u5355\u5143\u539f\u672c\u8981\u505a\u4ec0\u4e48\uff0c --- \u4e0d\u662f\u5b83\u5b9e\u9645\u4e0a\u505a\u4e86\u4ec0\u4e48 \u3002\u6bd4\u8f83\u6709\u6548\u7684\u65b9\u6cd5\u662f\u5012\u63a8\u51fa\u4e00\u4e2a\u6982\u8981\u7684\u89c4\u683c\u8bf4\u660e\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u4e3b\u8981\u8f93\u5165\u6761\u4ef6\u662f\u8981\u9605\u8bfb\u90a3\u4e9b\u7a0b\u5e8f\u4ee3\u7801\u548c\u6ce8\u91ca\uff0c \u4e3b\u8981\u9488\u5bf9\u8fd9\u4e2a\u5355\u5143\uff0c \u53ca\u8c03\u7528\u5b83\u548c\u88ab\u5b83\u8c03\u7528\u7684\u76f8\u5173\u4ee3\u7801\u3002 \u753b\u51fa\u6d41\u7a0b\u56fe\u662f\u975e\u5e38\u6709\u5e2e\u52a9\u7684 \uff0c\u4f60\u53ef\u4ee5\u7528\u624b\u5de5\u6216\u4f7f\u7528\u67d0\u79cd\u5de5\u5177\u3002 \u53ef\u4ee5\u7ec4\u7ec7\u5bf9\u8fd9\u4e2a\u6982\u8981\u89c4\u683c\u8bf4\u660e\u7684\u8d70\u8bfb\uff08Review)\uff0c\u4ee5\u786e\u4fdd\u5bf9\u8fd9\u4e2a\u5355\u5143\u7684\u8bf4\u660e\u6ca1\u6709\u57fa\u672c\u7684\u9519\u8bef\uff0c \u6709\u4e86\u8fd9\u79cd\u6700\u5c0f\u7a0b\u5ea6\u7684\u4ee3\u7801\u6df1\u5c42\u8bf4\u660e\uff0c\u5c31\u53ef\u4ee5\u7528\u5b83\u6765\u8bbe\u8ba1\u5355\u5143\u6d4b\u8bd5\u4e86 \u3002   go test \u65f6\u5019\u4f1a\u5148\u7f16\u8bd1\u68c0\u67e5\u4e00\u904d\uff0c\u548c go run \u3001 go install \u76f8\u540c\uff0c\u5373\u53ea\u6709\u7f16\u8bd1\u68c0\u67e5\u901a\u8fc7\u4e86\u624d\u4f1a\u7ee7\u7eed\u3002\u56e0\u6b64 go test \u5b9e\u9645\u4e0a\u505a\u4e862\u4e2a\u6d4b\u8bd5: \u4f20\u5165\u53c2\u6570\u548c\u6570\u91cf\u662f\u5426\u6b63\u786e\uff08\u4e0d\u6b63\u786e\u5c31\u7f16\u8bd1\u62a5\u9519\uff09\uff0c\u4ee5\u53ca\u4e1a\u52a1\u903b\u8f91\u662f\u5426\u6b63\u786e\u3002  \u5173\u4e8e\u4e1a\u52a1\u903b\u8f91\u662f\u5426\u6b63\u786e\uff0c\u6211\u7684\u7406\u89e3\u662f\uff1a\u5047\u8bbe\u88ab\u6d4b\u8bd5\u51fd\u6570\u662f\u505a\u9664\u6cd5\uff0c\u5728\u51fd\u6570\u91cc\u7684\u903b\u8f91\u4f1a\u5224\u65ad\u4f20\u5165\u7684\u53c2\u6570\u662f\u5426\u4e3a0\uff0c\u5982\u679c\u4e3a0\uff0c\u5219\u8fd4\u56deerror\u3002\u90a3\u4e48\u6d4b\u8bd5\u5185\u5bb9\u5c31\u662f\u4f20\u51650\uff0c\u770b\u4e0b\u662f\u5426\u8fd4\u56deerror\uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56deerror\uff0c\u5219t.Errorf\u629b\u9519  \u603b\u7ed3: \u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u65f6\u5019\uff0c\u6839\u636e\u9884\u8bbe\u89c4\u5219\uff0c\u8c03\u7528\u88ab\u6d4b\u8bd5\u51fd\u6570\uff0c\u4f9d\u6b21\u4f20\u5165\u9884\u8bbe\u7684\u82e5\u5e72\u60c5\u51b5\uff0c\u6765\u6d4b\u8bd5\u51fd\u6570\u7684\u8fd4\u56de\u662f\u5426\u6b63\u786e\u3002", 
            "title": "\u6211\u5bf9\u5355\u5143\u6d4b\u8bd5\u7684\u7406\u89e3"
        }, 
        {
            "location": "/basic/packages/", 
            "text": "\u6bcf\u4e2ago\u7a0b\u5e8f\u90fd\u662f\u7531\u6a21\u5757\u7ec4\u6210\u7684\n\n\n\n\n\n\n\u7a0b\u5e8f\u7531main\u6a21\u5757\u5f00\u59cb", 
            "title": "1. Packages"
        }, 
        {
            "location": "/basic/imports/", 
            "text": "import\n \nfmt\n\n\nimport\n \nmath\n\n\n\n\n\n\u4e0a\u9762\u8fd92\u884c\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nmath\n\n\n)\n\n\n\n\n\n\u5b98\u65b9\u63a8\u8350\u7528\u7b2c\u4e8c\u79cd\u5e26\u62ec\u53f7\u7684\u65b9\u5f0f", 
            "title": "2. Imports"
        }, 
        {
            "location": "/basic/exportname/", 
            "text": "\u6a21\u5757\u91cc\u540d\u5b57\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5927\u5199\u53ef\u4ee5\u88ab\u5176\u4ed6\u6a21\u5757\u5f15\u7528\uff0c\u800c\u5982\u679c\u9996\u5b57\u7b26\u662f\u5c0f\u5199\u5219\u4e0d\u884c\uff0c\u6bd4\u5982\nstringutil.go\n\u5185\u5bb9:\n\n\n// Package stringutil contains utility functions for working with strings.\n\n\npackage\n \nstringutil\n\n\n\n// Reverse returns its argument string reversed rune-wise left to right.\n\n\nfunc\n \nreverse\n(\ns\n \nstring\n)\n \nstring\n \n{\n\n        \nr\n \n:=\n \n[]\nrune\n(\ns\n)\n\n        \nfor\n \ni\n,\n \nj\n \n:=\n \n0\n,\n \nlen\n(\nr\n)\n-\n1\n;\n \ni\n \n \nlen\n(\nr\n)\n/\n2\n;\n \ni\n,\n \nj\n \n=\n \ni\n+\n1\n,\n \nj\n-\n1\n \n{\n\n                \nr\n[\ni\n],\n \nr\n[\nj\n]\n \n=\n \nr\n[\nj\n],\n \nr\n[\ni\n]\n\n        \n}\n\n        \nreturn\n \nstring\n(\nr\n)\n\n\n}\n\n\n\n\n\nhello.go\n\u8981\u5f15\u7528\u8fd9\u4e2a\u6a21\u5757\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ngithub.com/cyent/repo1/stringutil\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintf\n(\nstringutil\n.\nreverse\n(\n!oG ,olleH\n))\n\n\n}\n\n\n\n\n\n\u8fd9\u6837\nhello.go\n\u7f16\u8bd1\u4f1a\u62a5\u9519\uff1a\n\n\n# github.com/cyent/repo1/hello\n./hello.go:10: cannot refer to unexported name stringutil.reverse\n./hello.go:10: undefined: stringutil.reverse\n\n\n\n\n\u6b63\u786e\u5e94\u8be5\u662f\uff1a\n\n\nstringutil.go\n\u5185\u5bb9\u662f\uff1a\n\n\n// Package stringutil contains utility functions for working with strings.\n\n\npackage\n \nstringutil\n\n\n\n// Reverse returns its argument string reversed rune-wise left to right.\n\n\nfunc\n \nReverse\n(\ns\n \nstring\n)\n \nstring\n \n{\n\n        \nr\n \n:=\n \n[]\nrune\n(\ns\n)\n\n        \nfor\n \ni\n,\n \nj\n \n:=\n \n0\n,\n \nlen\n(\nr\n)\n-\n1\n;\n \ni\n \n \nlen\n(\nr\n)\n/\n2\n;\n \ni\n,\n \nj\n \n=\n \ni\n+\n1\n,\n \nj\n-\n1\n \n{\n\n                \nr\n[\ni\n],\n \nr\n[\nj\n]\n \n=\n \nr\n[\nj\n],\n \nr\n[\ni\n]\n\n        \n}\n\n        \nreturn\n \nstring\n(\nr\n)\n\n\n}\n\n\n\n\n\nhello.go\n\u8981\u5f15\u7528\u8fd9\u4e2a\u6a21\u5757\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ngithub.com/cyent/repo1/stringutil\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintf\n(\nstringutil\n.\nReverse\n(\n!oG ,olleH\n))\n\n\n}\n\n\n\n\n\n\u8fd9\u6837\u7f16\u8bd1\u5c31\u4e0d\u4f1a\u62a5\u9519\u4e86\n\n\n\u53e6\u5916\uff0cstruct\u4e2d\u7684\u5143\u7d20\u4e5f\u662f\u9075\u5b88\u9996\u5b57\u6bcd\u5927\u5199\u624d\u53ef\u5bfc\u51fa\u7684\u539f\u5219\uff0c\u8be6\u89c1\nstruct-\u5bfc\u51fa\u540d", 
            "title": "3. \u5bfc\u51fa\u540d"
        }, 
        {
            "location": "/basic/function/", 
            "text": "\u5165\u53c2\n\n\n\n\n\u51fd\u6570\u53ef\u4ee5\u63a5\u65360\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\uff0c\u53c2\u6570\u9700\u8981\u6307\u5b9a\u7c7b\u578b\uff0c\u8fd4\u56de\u503c\u4e5f\u9700\u8981\u6307\u5b9a\u7c7b\u578b\uff0c\u6bd4\u5982\n\n\nfunc\n \nadd\n(\nx\n \nint\n,\n \ny\n \nint\n)\n \nint\n \n{\n\n    \nreturn\n \nx\n \n+\n \ny\n\n\n}\n\n\n\n\n\n\u4e0a\u9762\u8868\u793a\u58f0\u660e\u4e00\u4e2a\u51fd\u6570add\uff0c\u63a5\u65362\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u90fd\u662fint\u7c7b\u578b\uff0c\u8fd4\u56de\u7684\u7c7b\u578b\u4e5f\u662fint\u3002\n\n\n\n\n\n\nmain\u51fd\u6570\u4e0d\u7528\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\n\n\n\u51fd\u6570\u91cc\u5982\u679c\u6ca1\u6709\nreturn\n\uff0c\u800c\u662f\nfmt.Println\n\u4e4b\u7c7b\u7684\uff0c\u5c31\u4e0d\u7528\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\n\n\n\n\n\n\n\u7c7b\u578b\uff1a\u7c7b\u578b\u8ddf\u5728\u53d8\u91cf\u540d\u540e\u9762\uff0c\u6bd4\u5982\nx\n \nint\n\uff0c\u8868\u793a\u58f0\u660e\u4e00\u4e2aint\u7c7b\u578b\u7684\u53d8\u91cfx\n\n\n\n\n\u5982\u679c\u60f3\u4e86\u89e3\u4e3a\u4ec0\u4e48\u957f\u8fd9\u6837\uff0c\u53ef\u4ee5\u770b \nhttps://blog.golang.org/gos-declaration-syntax\n\n\n\n\n\n\n\u53c2\u6570\u7c7b\u578b\u76f8\u540c\u53ef\u4ee5\u7b80\u5199\n\n\n\u5982\u679c\u58f0\u660e\u7684\u591a\u4e2a\u53c2\u6570\u7c7b\u578b\u662f\u76f8\u540c\u7684\uff0c\u53ef\u4ee5\u53ea\u5199\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b\uff0c\u6bd4\u5982\u4e0a\u9762\u7684\nx\n \nint\n,\n \ny\n \nint\n\u4e5f\u53ef\u4ee5\u5199\u6210\nx\n,\n \ny\n \nint\n\n\n\n\n\u51fa\u53c2\n\n\n\n\n\u8fd4\u56de\u7c7b\u578b\u5fc5\u987b\u6307\u5b9a\uff0c\u6bd4\u5982\u672c\u9875\u6700\u5f00\u59cb\u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u6539\u6210\n\n\nfunc\n \nadd\n(\nx\n \nint\n,\n \ny\n \nint\n)\n \n{\n\n    \nreturn\n \nx\n \n+\n \ny\n\n\n}\n\n\n\n\n\n\u5219\u62a5\u9519:\n\n\ntoo many arguments to return\n    have (int)\n    want ()\n\n\n\n\n\u591a\u8fd4\u56de\u503c\uff1a\n\n\nfunc\n \nswap\n(\nx\n,\n \ny\n \nstring\n)\n \n(\nstring\n,\n \nstring\n)\n\n\n\n\n\n\u8fd4\u56de\u503c\u547d\u540d\uff1a\n\n\nfunc\n \nswap\n(\nx\n,\n \ny\n \nstring\n)\n \n(\na\n,\n \nb\n \nstring\n)\n\uff0c\n\u8fd9\u79cd\u901a\u5e38\u7528\u4e8ereturn\u4e0d\u8ddf\u53c2\u6570\n\n\n\n\n\nreturn\u4e0d\u8ddf\u53c2\u6570\uff1a\n\n\nfunc\n \nsplit\n(\nsum\n \nint\n)\n \n(\nx\n,\n \ny\n \nint\n)\n \n{\n\n    \nx\n \n=\n \nsum\n \n*\n \n4\n \n/\n \n9\n\n    \ny\n \n=\n \nsum\n \n-\n \nx\n\n    \nreturn\n\n\n}\n\n\n\n\n\n\u4e0a\u9762return\u6ca1\u6709\u8ddf\u4efb\u4f55\u53c2\u6570\uff0c\u5b9e\u9645\u7b49\u540c\u4e8e\nreturn x, y\n\n\n\u5373\u6839\u636e\nfunc split(sum int) \n(x, y int)\n\u987a\u5e8f\u6765\u5b9a\n\n\n\n\n\u8fd9\u79cdreturn\u4e0d\u8ddf\u53c2\u6570\u65b9\u5f0f\u4e0d\u63a8\u8350\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4ec5\u9002\u7528\u4e8e\u6bd4\u8f83\u77ed\u7684\u51fd\u6570\uff0c\u5982\u679c\u51fd\u6570\u6bd4\u8f83\u957f\uff0c\u8fd9\u6837\u53ef\u8bfb\u6027\u5c31\u5f88\u4e0d\u597d\u4e86\n\n\n\n\n\u5165\u53c2\u548c\u51fa\u53c2\u7684\u53d8\u91cf\u4e0d\u80fd\u91cd\u590d\u58f0\u660e\n\n\n\n\n\u8fd9\u4e2a\u4f8b\u5b50\u662f\u6b63\u786e\u7684\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nfoo\n(\na\n,\n \nb\n \nint\n)\n \n(\nc\n \nint\n)\n \n{\n\n    \nreturn\n \na\n \n+\n \nb\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nfoo\n(\n1\n,\n \n2\n))\n\n\n}\n\n\n\n\n\n\n\nNote\n\n\n\u4e0a\u9762foo\u7684\u8f93\u51fa\u53c2\u6570c\uff0c\u6574\u4e2a\u4ee3\u7801\u91cc\u6ca1\u6709\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49\u6216\u7528\u5230c\uff0c\u4f46\u4f9d\u7136\u80fd\u6b63\u5e38\u8f93\u51fa\u4e0d\u62a5\u9519\uff0c\u8fd9\u4e2ac\u6539\u6210\u4efb\u4f55\u540d\u5b57\u90fd\u884c\n\n\n\n\n\u4f46\u5982\u679c\u6539\u6210\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nfoo\n(\na\n,\n \nb\n \nint\n)\n \n(\nc\n \nint\n)\n \n{\n\n\n    \na\n \n:=\n \n3\n\n\n    \nreturn\n \na\n \n+\n \nb\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nfoo\n(\n1\n,\n \n2\n))\n\n\n}\n\n\n\n\n\n\u5219\u62a5\u9519\n\n\n./example.go:6: no new variables on left side of :=\n\n\n\n\n\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4f9d\u7136\u662f\u9519\u8bef\u7684\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nfoo\n(\na\n,\n \nb\n \nint\n)\n \n(\nc\n \nint\n)\n \n{\n\n\n    \nc\n \n:=\n \n3\n\n\n    \nreturn\n \na\n \n+\n \nb\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nfoo\n(\n1\n,\n \n2\n))\n\n\n}\n\n\n\n\n\n\u4f9d\u7136\u62a5\u9519\n\n\n./example.go:6: no new variables on left side of :=", 
            "title": "4. \u51fd\u6570"
        }, 
        {
            "location": "/basic/function/#_1", 
            "text": "\u51fd\u6570\u53ef\u4ee5\u63a5\u65360\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\uff0c\u53c2\u6570\u9700\u8981\u6307\u5b9a\u7c7b\u578b\uff0c\u8fd4\u56de\u503c\u4e5f\u9700\u8981\u6307\u5b9a\u7c7b\u578b\uff0c\u6bd4\u5982  func   add ( x   int ,   y   int )   int   { \n     return   x   +   y  }   \u4e0a\u9762\u8868\u793a\u58f0\u660e\u4e00\u4e2a\u51fd\u6570add\uff0c\u63a5\u65362\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u90fd\u662fint\u7c7b\u578b\uff0c\u8fd4\u56de\u7684\u7c7b\u578b\u4e5f\u662fint\u3002    main\u51fd\u6570\u4e0d\u7528\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b  \u51fd\u6570\u91cc\u5982\u679c\u6ca1\u6709 return \uff0c\u800c\u662f fmt.Println \u4e4b\u7c7b\u7684\uff0c\u5c31\u4e0d\u7528\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b    \u7c7b\u578b\uff1a\u7c7b\u578b\u8ddf\u5728\u53d8\u91cf\u540d\u540e\u9762\uff0c\u6bd4\u5982 x   int \uff0c\u8868\u793a\u58f0\u660e\u4e00\u4e2aint\u7c7b\u578b\u7684\u53d8\u91cfx   \u5982\u679c\u60f3\u4e86\u89e3\u4e3a\u4ec0\u4e48\u957f\u8fd9\u6837\uff0c\u53ef\u4ee5\u770b  https://blog.golang.org/gos-declaration-syntax    \u53c2\u6570\u7c7b\u578b\u76f8\u540c\u53ef\u4ee5\u7b80\u5199  \u5982\u679c\u58f0\u660e\u7684\u591a\u4e2a\u53c2\u6570\u7c7b\u578b\u662f\u76f8\u540c\u7684\uff0c\u53ef\u4ee5\u53ea\u5199\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b\uff0c\u6bd4\u5982\u4e0a\u9762\u7684 x   int ,   y   int \u4e5f\u53ef\u4ee5\u5199\u6210 x ,   y   int", 
            "title": "\u5165\u53c2"
        }, 
        {
            "location": "/basic/function/#_2", 
            "text": "\u8fd4\u56de\u7c7b\u578b\u5fc5\u987b\u6307\u5b9a\uff0c\u6bd4\u5982\u672c\u9875\u6700\u5f00\u59cb\u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u6539\u6210  func   add ( x   int ,   y   int )   { \n     return   x   +   y  }   \u5219\u62a5\u9519:  too many arguments to return\n    have (int)\n    want ()  \u591a\u8fd4\u56de\u503c\uff1a  func   swap ( x ,   y   string )   ( string ,   string )   \u8fd4\u56de\u503c\u547d\u540d\uff1a  func   swap ( x ,   y   string )   ( a ,   b   string ) \uff0c \u8fd9\u79cd\u901a\u5e38\u7528\u4e8ereturn\u4e0d\u8ddf\u53c2\u6570   return\u4e0d\u8ddf\u53c2\u6570\uff1a  func   split ( sum   int )   ( x ,   y   int )   { \n     x   =   sum   *   4   /   9 \n     y   =   sum   -   x \n     return  }   \u4e0a\u9762return\u6ca1\u6709\u8ddf\u4efb\u4f55\u53c2\u6570\uff0c\u5b9e\u9645\u7b49\u540c\u4e8e return x, y  \u5373\u6839\u636e func split(sum int)  (x, y int) \u987a\u5e8f\u6765\u5b9a   \u8fd9\u79cdreturn\u4e0d\u8ddf\u53c2\u6570\u65b9\u5f0f\u4e0d\u63a8\u8350\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4ec5\u9002\u7528\u4e8e\u6bd4\u8f83\u77ed\u7684\u51fd\u6570\uff0c\u5982\u679c\u51fd\u6570\u6bd4\u8f83\u957f\uff0c\u8fd9\u6837\u53ef\u8bfb\u6027\u5c31\u5f88\u4e0d\u597d\u4e86", 
            "title": "\u51fa\u53c2"
        }, 
        {
            "location": "/basic/function/#_3", 
            "text": "\u8fd9\u4e2a\u4f8b\u5b50\u662f\u6b63\u786e\u7684  package   main  import   fmt  func   foo ( a ,   b   int )   ( c   int )   { \n     return   a   +   b  }  func   main ()   { \n     fmt . Println ( foo ( 1 ,   2 ))  }    Note  \u4e0a\u9762foo\u7684\u8f93\u51fa\u53c2\u6570c\uff0c\u6574\u4e2a\u4ee3\u7801\u91cc\u6ca1\u6709\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49\u6216\u7528\u5230c\uff0c\u4f46\u4f9d\u7136\u80fd\u6b63\u5e38\u8f93\u51fa\u4e0d\u62a5\u9519\uff0c\u8fd9\u4e2ac\u6539\u6210\u4efb\u4f55\u540d\u5b57\u90fd\u884c   \u4f46\u5982\u679c\u6539\u6210  package   main  import   fmt  func   foo ( a ,   b   int )   ( c   int )   {       a   :=   3       return   a   +   b  }  func   main ()   { \n     fmt . Println ( foo ( 1 ,   2 ))  }   \u5219\u62a5\u9519  ./example.go:6: no new variables on left side of :=  \u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4f9d\u7136\u662f\u9519\u8bef\u7684  package   main  import   fmt  func   foo ( a ,   b   int )   ( c   int )   {       c   :=   3       return   a   +   b  }  func   main ()   { \n     fmt . Println ( foo ( 1 ,   2 ))  }   \u4f9d\u7136\u62a5\u9519  ./example.go:6: no new variables on left side of :=", 
            "title": "\u5165\u53c2\u548c\u51fa\u53c2\u7684\u53d8\u91cf\u4e0d\u80fd\u91cd\u590d\u58f0\u660e"
        }, 
        {
            "location": "/basic/variable_declare/", 
            "text": "var\n\n\n\n\n\u53d8\u91cf\u58f0\u660e\u7528\nvar\n\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u7528\u5728\u51fd\u6570\u7ea7\u522b\uff0c\u4e5f\u53ef\u4ee5\u7528\u5728\u5305\u7ea7\u522b\uff0c\u6bd4\u5982\n\n\nvar\n \nc\n,\n \npython\n,\n \njava\n \nbool\n    \n//\u8fd9\u4e2a\u5c31\u662f\u5728\u5305\u7ea7\u522b\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni\n \nint\n     \n//\u8fd9\u4e2a\u5c31\u662f\u5728\u51fd\u6570\u7ea7\u522b\n\n\n}\n\n\n\n\n\n\u6ce8\u610f\uff1a\n\n\nvar\u591a\u4e2a\u53d8\u91cf\u65f6\u4e0d\u80fd\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u8bbe\u5b9a\u7c7b\u578b\uff08\u65e0\u8bba\u7c7b\u578b\u662f\u5426\u76f8\u540c\uff0c\u65e0\u8bba\u662f\u5426\u6709\u5e26\u521d\u59cb\u503c\uff09\u6bd4\u5982\uff1a\n\n\n\n\n\n\n\n\n\u8bed\u53e5\n\n\n\u7ed3\u679c\n\n\n\n\n\n\n\n\n\n\nvar i int, j int\n\n\n\u62a5\u9519\n\n\n\n\n\n\nvar i int, j int = 1, 2\n\n\n\u62a5\u9519\n\n\n\n\n\n\nvar i string, j int\n\n\n\u62a5\u9519\n\n\n\n\n\n\nvar i string, j int = \"a\", 1\n\n\n\u62a5\u9519\n\n\n\n\n\n\n\n\nvar\u591a\u4e2a\u53d8\u91cf\u5e26\u521d\u59cb\u503c\uff0c\u5982\u679c\u7c7b\u578b\u4e0d\u540c\uff0c\u5c31\u4e0d\u80fd\u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c\u6bd4\u5982\uff1a\n\n\n\n\n\n\n\n\n\u8bed\u53e5\n\n\n\u7ed3\u679c\n\n\n\n\n\n\n\n\n\n\nvar i, j = \"aa\", 2\n\n\n\u6b63\u786e\n\n\n\n\n\n\nvar i, j int = \"aa\", 2\n\n\n\u62a5\u9519\n\n\n\n\n\n\n\n\nvar\u662f\u5426\u8ddf\u7c7b\u578b\uff08\u5305\u62ecvar\u5355\u4e2a\u53d8\u91cf\u6216\u8005var\u591a\u4e2a\u53d8\u91cf\uff09\uff1a\n\n\n\n\n\n\n\u8ddf\u7c7b\u578b\uff1a\n\n\n\n\n\n\n\u5e26\u521d\u59cb\u503c: OK\n\n\n\u5355\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a\nvar\n \ni\n \nint\n \n=\n \n1\n\n\n\u591a\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a\nvar\n \ni\n,\n \nj\n \nint\n \n=\n \n1\n,\n \n2\n\n\n\n\n\n\n\u4e0d\u5e26\u521d\u59cb\u503c: \u6839\u636e\u7c7b\u578b\u81ea\u52a8\u8bbe\u521d\u59cb\u503c\uff0c\u5982int\u521d\u59cb\u503c\u4e3a0\uff0cstring\u521d\u59cb\u503c\u4e3a\"\"\uff08\u7a7a\u5b57\u7b26\uff09\n\n\n\u5355\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a\nvar\n \ni\n \nint\n\uff0c\u5219i\u4e3a0\n\n\n\u591a\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a\nvar\n \ni\n,\n \nj\n \nint\n\uff0c\u5219i\u548cj\u4e3a0\n\n\n\n\n\n\n\n\n\n\n\u4e0d\u8ddf\u7c7b\u578b\uff1a\n\n\n\n\n\n\n\u5e26\u521d\u59cb\u503c: \u6839\u636e\u521d\u59cb\u503c\u81ea\u52a8\u5224\u65ad\u7c7b\u578b\uff0c\u59821\u4e3aint\u7c7b\u578b\uff0c\"a\"\u4e3astring\u7c7b\u578b\n\n\n\u5355\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a\nvar\n \ni\n \n=\n \n1\n\uff0c\u5219i\u4e3aint\u7c7b\u578b\n\n\n\u591a\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a\n\n\n\n\n\n\nvar\n \ni\n,\n \nj\n \n=\n \n1\n,\n \n2\n\uff0c\u5219i\u548cj\u4e3aint\u7c7b\u578b\n\n\n\n\n\n\nvar\n \ni\n,\n \nj\n \n=\n \ntrue\n,\n \na\n\uff0c\u5219i\u4e3abool\u7c7b\u578b\uff0cj\u4e3astring\u7c7b\u578b\n\n\n\n\n\n\n\n\n\n\n\u4e0d\u5e26\u521d\u59cb\u503c: \u62a5\u9519\n\n\n\u5355\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a\nvar\n \ni\n\uff0c\u4f1a\u62a5\u9519\n\n\n\u591a\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a\nvar\n \ni\n,\n \nj\n\uff0c\u4f1a\u62a5\u9519\n\n\n\n\n\n\n\n\n\n\n\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u58f0\u660e\n\n\nvar (\n    A int = 100\n    B string\n)\n\n\n\n\n\n\n\u548cconst\u533a\u522b\n\n\nvar\u53ef\u4ee5\u4e0d\u8d4b\u503c\uff08\u4f1a\u81ea\u52a8\u8d4b\u503c\u521d\u59cb\u503c\uff09\uff0c\u800cconst\u5fc5\u987b\u8d4b\u503c\n\n\n\n\n:=\n\n\n\n\n:=\n\u662f\u77ed\u58f0\u660e\u53d8\u91cf\uff0c\u4e5f\u53eb\u7b80\u6d01\u8d4b\u503c\u8bed\u53e5\n\n\n\u51fd\u6570\u5185\uff0c\n:=\n \u7528\u5728\u660e\u786e\u7c7b\u578b\u7684\u5730\u65b9\uff08\u4f46\u4e0d\u80fd\u663e\u5f0f\u6307\u5b9a\u7c7b\u578b\uff09\uff0c\u53ef\u4ee5\u7528\u4e8e\u66ff\u4ee3\nvar\n\u5b9a\u4e49\u3002\n\n\n\u51fd\u6570\u5916\uff08\u5373\u5305\u7ea7\u522b\uff09\u7684\u6bcf\u4e2a\u8bed\u53e5\u90fd\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u5f00\u59cb\uff08\nvar\n\u3001\nfunc\n\u7b49\uff09\uff0c\n:=\n \u4e0d\u80fd\u4f7f\u7528\u5728\u51fd\u6570\u5916\uff0c\u5982\uff1a\n\n\nvar\n \nk\n \n=\n \n3\n   \n//OK\n\n\nk\n \n:=\n \n3\n      \n//\u62a5\u9519\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nk\n \n:=\n \n3\n          \n//OK\n\n    \nvar\n \nk\n \nint\n \n=\n \n3\n   \n//OK\n\n    \nk\n \nint\n \n:=\n \n3\n      \n//\u62a5\u9519\n\n    \nvar\n \nk\n \n:=\n \n3\n      \n//\u62a5\u9519\n\n    \nvar\n \nk\n \nint\n \n:=\n \n3\n  \n//\u62a5\u9519\n\n\n}", 
            "title": "5.1. \u58f0\u660e"
        }, 
        {
            "location": "/basic/variable_declare/#var", 
            "text": "\u53d8\u91cf\u58f0\u660e\u7528 var \u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u7528\u5728\u51fd\u6570\u7ea7\u522b\uff0c\u4e5f\u53ef\u4ee5\u7528\u5728\u5305\u7ea7\u522b\uff0c\u6bd4\u5982  var   c ,   python ,   java   bool      //\u8fd9\u4e2a\u5c31\u662f\u5728\u5305\u7ea7\u522b  func   main ()   { \n     var   i   int       //\u8fd9\u4e2a\u5c31\u662f\u5728\u51fd\u6570\u7ea7\u522b  }   \u6ce8\u610f\uff1a  var\u591a\u4e2a\u53d8\u91cf\u65f6\u4e0d\u80fd\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u8bbe\u5b9a\u7c7b\u578b\uff08\u65e0\u8bba\u7c7b\u578b\u662f\u5426\u76f8\u540c\uff0c\u65e0\u8bba\u662f\u5426\u6709\u5e26\u521d\u59cb\u503c\uff09\u6bd4\u5982\uff1a     \u8bed\u53e5  \u7ed3\u679c      var i int, j int  \u62a5\u9519    var i int, j int = 1, 2  \u62a5\u9519    var i string, j int  \u62a5\u9519    var i string, j int = \"a\", 1  \u62a5\u9519     var\u591a\u4e2a\u53d8\u91cf\u5e26\u521d\u59cb\u503c\uff0c\u5982\u679c\u7c7b\u578b\u4e0d\u540c\uff0c\u5c31\u4e0d\u80fd\u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c\u6bd4\u5982\uff1a     \u8bed\u53e5  \u7ed3\u679c      var i, j = \"aa\", 2  \u6b63\u786e    var i, j int = \"aa\", 2  \u62a5\u9519     var\u662f\u5426\u8ddf\u7c7b\u578b\uff08\u5305\u62ecvar\u5355\u4e2a\u53d8\u91cf\u6216\u8005var\u591a\u4e2a\u53d8\u91cf\uff09\uff1a    \u8ddf\u7c7b\u578b\uff1a    \u5e26\u521d\u59cb\u503c: OK  \u5355\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a var   i   int   =   1  \u591a\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a var   i ,   j   int   =   1 ,   2    \u4e0d\u5e26\u521d\u59cb\u503c: \u6839\u636e\u7c7b\u578b\u81ea\u52a8\u8bbe\u521d\u59cb\u503c\uff0c\u5982int\u521d\u59cb\u503c\u4e3a0\uff0cstring\u521d\u59cb\u503c\u4e3a\"\"\uff08\u7a7a\u5b57\u7b26\uff09  \u5355\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a var   i   int \uff0c\u5219i\u4e3a0  \u591a\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a var   i ,   j   int \uff0c\u5219i\u548cj\u4e3a0      \u4e0d\u8ddf\u7c7b\u578b\uff1a    \u5e26\u521d\u59cb\u503c: \u6839\u636e\u521d\u59cb\u503c\u81ea\u52a8\u5224\u65ad\u7c7b\u578b\uff0c\u59821\u4e3aint\u7c7b\u578b\uff0c\"a\"\u4e3astring\u7c7b\u578b  \u5355\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a var   i   =   1 \uff0c\u5219i\u4e3aint\u7c7b\u578b  \u591a\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a    var   i ,   j   =   1 ,   2 \uff0c\u5219i\u548cj\u4e3aint\u7c7b\u578b    var   i ,   j   =   true ,   a \uff0c\u5219i\u4e3abool\u7c7b\u578b\uff0cj\u4e3astring\u7c7b\u578b      \u4e0d\u5e26\u521d\u59cb\u503c: \u62a5\u9519  \u5355\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a var   i \uff0c\u4f1a\u62a5\u9519  \u591a\u4e2a\u53d8\u91cf\u4f8b\u5b50\uff1a var   i ,   j \uff0c\u4f1a\u62a5\u9519      \u4e5f\u53ef\u4ee5\u8fd9\u4e48\u58f0\u660e  var (\n    A int = 100\n    B string\n)   \u548cconst\u533a\u522b  var\u53ef\u4ee5\u4e0d\u8d4b\u503c\uff08\u4f1a\u81ea\u52a8\u8d4b\u503c\u521d\u59cb\u503c\uff09\uff0c\u800cconst\u5fc5\u987b\u8d4b\u503c", 
            "title": "var"
        }, 
        {
            "location": "/basic/variable_declare/#_1", 
            "text": ":= \u662f\u77ed\u58f0\u660e\u53d8\u91cf\uff0c\u4e5f\u53eb\u7b80\u6d01\u8d4b\u503c\u8bed\u53e5  \u51fd\u6570\u5185\uff0c :=  \u7528\u5728\u660e\u786e\u7c7b\u578b\u7684\u5730\u65b9\uff08\u4f46\u4e0d\u80fd\u663e\u5f0f\u6307\u5b9a\u7c7b\u578b\uff09\uff0c\u53ef\u4ee5\u7528\u4e8e\u66ff\u4ee3 var \u5b9a\u4e49\u3002  \u51fd\u6570\u5916\uff08\u5373\u5305\u7ea7\u522b\uff09\u7684\u6bcf\u4e2a\u8bed\u53e5\u90fd\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u5f00\u59cb\uff08 var \u3001 func \u7b49\uff09\uff0c :=  \u4e0d\u80fd\u4f7f\u7528\u5728\u51fd\u6570\u5916\uff0c\u5982\uff1a  var   k   =   3     //OK  k   :=   3        //\u62a5\u9519  func   main ()   { \n     k   :=   3            //OK \n     var   k   int   =   3     //OK \n     k   int   :=   3        //\u62a5\u9519 \n     var   k   :=   3        //\u62a5\u9519 \n     var   k   int   :=   3    //\u62a5\u9519  }", 
            "title": ":="
        }, 
        {
            "location": "/basic/variable_affect/", 
            "text": "\u5728\u5305\u7ea7\u522b\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u5373\u5728main\u51fd\u6570\u91cc\u5bf9\u8fd9\u4e2a\u53d8\u91cf\u505a\u7684\u4fee\u6539\uff0c\u6216\u8005\u5728\u5176\u4ed6\u51fd\u6570\u91cc\u5bf9\u8fd9\u4e2a\u53d8\u91cf\u505a\u7684\u4fee\u6539\uff0c\u90fd\u662f\u771f\u5b9e\u6539\u4e86\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\n\n\n\n\n\n\n\u5728\u51fd\u6570\u91cc\uff08\u5305\u62ecmain\u51fd\u6570\u6216\u5176\u4ed6\u51fd\u6570\uff09\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u53ea\u5728\u81ea\u5df1\u51fd\u6570\u91cc\u6709\u6548\uff0c\u82e5\u5728\u5176\u4ed6\u51fd\u6570\u91cc\u5bf9\u8fd9\u4e2a\u53d8\u91cf\u505a\u4fee\u6539\uff0c\u4f1a\u63d0\u793aundefined\n\n\n\n\n\n\n\u53ef\u4ee5\u5b58\u5728\u53d8\u91cf\u540d\u76f8\u540c\uff0c\u4f46\u4f5c\u7528\u57df\u4e0d\u540c\u7684\u591a\u4e2a\u53d8\u91cf\u3002\uff08\u4e2a\u4eba\u89c9\u5f97\u592a\u6666\u6da9\uff0c\u4e0d\u5efa\u8bae\u8fd9\u4e48\u7528\uff09\n\n\n\n\n\n\n\u51fd\u6570\u5185\u90e8\u7684\u51fd\u6570\uff08\u5373\u51fd\u6570\u503c\uff09\uff0c\u6709\u524d\u540e\u987a\u5e8f\u8981\u6c42\n\n\n\n\n\n\n\u4f8b1. \u5305\u7ea7\u522b\u7684\u53d8\u91cf\u80fd\u5426\u88ab\u51fd\u6570\u5f15\u7528?\nvar\n \nA\n \nint\n \n=\n \n1\n\n\nfunc\n \nfoo\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nA\n)\n\n\n}\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfoo\n()\n\n\n}\n\n\n\n\n\u8f93\u51fa\n1\n\n\n\n\u7b54: \u5305\u7ea7\u522b\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u51fd\u6570\u5f15\u7528\n\u4f8b2. \u5305\u7ea7\u522b\u7684\u51fd\u6570\u662f\u5426\u6709\u987a\u5e8f\u8981\u6c42?\nvar\n \nA\n \nint\n \n=\n \n1\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfoo\n()\n\n\n}\n\n\nfunc\n \nfoo\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nA\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\n1\n\n\n\n\u7b54: \u5305\u7ea7\u522b\u7684\u51fd\u6570\u6ca1\u6709\u987a\u5e8f\u8981\u6c42\n\u4f8b3. \u4e00\u4e2a\u51fd\u6570\u91cc\u7684\u53d8\u91cf\u80fd\u5426\u88ab\u5305\u7ea7\u522b\u7684\u53e6\u4e00\u4e2a\u51fd\u6570\u5f15\u7528?\nfunc\n \nfoo\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nA\n)\n\n\n}\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nA\n \nint\n \n=\n \n1\n\n    \nfoo\n()\n\n\n}\n\n\n\n\n\u62a5\u9519\nundefined: A\n\n\n\n\u7b54: \u4e00\u4e2a\u51fd\u6570\u91cc\u7684\u53d8\u91cf\u4e0d\u80fd\u88ab\u5305\u7ea7\u522b\u7684\u53e6\u4e00\u4e2a\u51fd\u6570\u5f15\u7528\n\u4f8b4. \u4e00\u4e2a\u51fd\u6570\u91cc\u7684\u53d8\u91cf\u80fd\u5426\u88ab\u5185\u5d4c\u7684\u51fd\u6570\u503c\u5f15\u7528?\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nA\n \nint\n \n=\n \n1\n\n    \nfoo\n \n:=\n \nfunc\n \n()\n \n{\n\n        \nfmt\n.\nPrintln\n(\nA\n)\n\n    \n}\n\n    \nfoo\n()\n\n\n}\n\n\n\n\n\u8f93\u51fa\n1\n\n\n\n\u7b54: \u4e00\u4e2a\u51fd\u6570\u91cc\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u5185\u5d4c\u7684\u51fd\u6570\u503c\u5f15\u7528\n\u4f8b5. \u51fd\u6570\u503c\u662f\u5426\u6709\u987a\u5e8f\u8981\u6c42?\nfunc\n \nmain\n()\n \n{\n\n    \nfoo\n \n:=\n \nfunc\n \n()\n \n{\n\n        \nfmt\n.\nPrintln\n(\nA\n)\n\n    \n}\n\n    \nvar\n \nA\n \nint\n \n=\n \n1\n\n    \nfoo\n()\n\n\n}\n\n\n\n\n\u62a5\u9519\nundefined: A\n\n\n\n\u7b54: \u51fd\u6570\u503c\u6709\u987a\u5e8f\u8981\u6c42\n\u4f8b6. \u5305\u7ea7\u522b\u7684\u53d8\u91cf\u80fd\u5426\u5728\u51fd\u6570\u5185\u90e8\u7684\u51fd\u6570\u503c\u91cc\u5f15\u7528?\nvar\n \nA\n \nint\n \n=\n \n1\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfoo\n \n:=\n \nfunc\n \n()\n \n{\n\n        \nA\n \n=\n \n2\n\n    \n}\n\n    \nfoo\n()\n\n    \nfmt\n.\nPrintln\n(\nA\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\n2\n\n\n\n\u7b54: \u5305\u7ea7\u522b\u7684\u53d8\u91cf\u53ef\u4ee5\u5728\u51fd\u6570\u5185\u90e8\u7684\u51fd\u6570\u503c\u91cc\u5f15\u7528\n\u4f8b7. \u51fd\u6570\u503c\u5d4c\u5957\u51fd\u6570\u503c\uff0c\u8fd8\u80fd\u5426\u5f15\u7528\u5916\u90e8\u53d8\u91cf?\nfunc\n \nmain\n()\n \n{\n\n    \nA\n \n:=\n \n1\n\n    \nfoo\n \n:=\n \nfunc\n \n()\n \n{\n\n        \nbar\n \n:=\n \nfunc\n \n()\n \n{\n\n            \nA\n \n=\n \n2\n\n        \n}\n\n        \nbar\n()\n\n    \n}\n\n    \nfoo\n()\n\n    \nfmt\n.\nPrintln\n(\nA\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\n2\n\n\n\n\u7b54: \u51fd\u6570\u503c\u5d4c\u5957\u51fd\u6570\u503c\uff0c\u53ef\u4ee5\u5f15\u7528\u5916\u90e8\u53d8\u91cf\n\u4f8b8. \u662f\u5426\u53ef\u4ee5\u5b58\u5728\u4e0d\u540c\u4f5c\u7528\u57df\uff0c\u4f46\u540d\u5b57\u76f8\u540c\u7684\u53d8\u91cf(\u672c\u4f8b\u5341\u5206\u7ecf\u5178)?\nfunc\n \nmain\n()\n \n{\n\n    \nA\n \n:=\n \n1\n\n    \nfoo\n \n:=\n \nfunc\n \n()\n \n{\n\n        \nA\n \n=\n \n2\n\n        \nA\n \n:=\n \n3\n\n        \nA\n \n=\n \n4\n\n        \nfmt\n.\nPrintln\n(\nA\n)\n\n    \n}\n\n    \nfoo\n()\n\n    \nfmt\n.\nPrintln\n(\nA\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\n4\n2\n\n\n\n\u7b54: \u53ef\u4ee5\u5b58\u5728\u4e0d\u540c\u4f5c\u7528\u57df\uff0c\u4f46\u540d\u5b57\u76f8\u540c\u7684\u53d8\u91cf\n\u4f8b9. \u672c\u4f8b\u4e0e\u4f8b8\u76f8\u4f3c\uff0c\u82e5\u4e00\u5f00\u59cb\u5c31\u58f0\u660e\u540c\u540d\u7684\u53d8\u91cf\u540d\uff0c\u90a3\u4e48\u8fd8\u80fd\u5426\u5f15\u7528\u5916\u90e8\u540c\u540d\u53d8\u91cf?\nfunc\n \nmain\n()\n \n{\n\n    \nA\n \n:=\n \n1\n\n    \nfoo\n \n:=\n \nfunc\n \n()\n \n{\n\n        \nA\n \n:=\n \n3\n\n        \nA\n \n=\n \n2\n\n        \nfmt\n.\nPrintln\n(\nA\n)\n\n    \n}\n\n    \nfoo\n()\n\n    \nfmt\n.\nPrintln\n(\nA\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\n2\n1\n\n\n\n\u7b54: \u82e5\u4e00\u5f00\u59cb\u5c31\u58f0\u660e\u540c\u540d\u7684\u53d8\u91cf\u540d\uff0c\u5219\u65e0\u6cd5\u518d\u5f15\u7528\u5916\u90e8\u540c\u540d\u53d8\u91cf\n\u4f8b\u5b50\u603b\u7ed3:\n\n\n\n\n\n\n\u4f8b1-\u4f8b7\uff1a\u5305\u7ea7\u522b\u7684\u51fd\u6570\uff0c\u5199\u4e0a\u9762\u6216\u5199\u4e0b\u9762\u90fd\u4e00\u6837\uff08\u5305\u62ec\u548c\u5f15\u7528\u7684\u53d8\u91cf\uff0c\u4ee5\u53ca\u88ab\u5f15\u7528\u7684\u4e0a\u5c42\u51fd\u6570\uff0c\u6bd4\u5982\u53d8\u91cfA\u7684\u58f0\u660e\u5199\u5728foo\u51fd\u6570\u58f0\u660e\u540e\uff0c\u6216\u8005foo\u51fd\u6570\u5199\u5728main\u51fd\u6570\u4e0a\u9762\u6216\u8005\u4e0b\u9762\uff09\uff0c\u800c\u5199\u5728\u51fd\u6570\u91cc\uff08\u6bd4\u5982main\u51fd\u6570\uff09\u91cc\u7684\u51fd\u6570\uff08\u51fd\u6570\u503c\uff09\uff0c\u5219\u548c\u987a\u5e8f\u6709\u5173\uff0c\u6bd4\u5982\u5728\u51fd\u6570\u503c\u91cc\u9762\u5f15\u7528\u7684\u53d8\u91cf\u5982\u679c\u662f\u5728\u8fd9\u4e2a\u51fd\u6570\u503c\u4e0a\u9762\u58f0\u660e\u7684\uff0c\u5219\u53ef\u4ee5\u5f15\u7528\uff0c\u5982\u679c\u662f\u5728\u51fd\u6570\u503c\u4e0b\u9762\u58f0\u660e\u7684\u5219\u63d0\u793aundefined\n\n\n\n\n\n\n\u4f8b8-\u4f8b9\uff1a\u53ef\u4ee5\u770b\u5230\u5982\u679c\u5728\u51fd\u6570\u5185\u90e8\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u5916\u90e8\u5df2\u7ecf\u5b58\u5728\u7684\u53d8\u91cf\uff0c\u5219\u5728\u51fd\u6570\u5185\u90e8\uff0c\u8fd9\u4e2a\u53d8\u91cf\u548c\u51fd\u6570\u7684\u53d8\u91cf\u53ea\u662f\u540d\u5b57\u76f8\u540c\uff0c\u4f46\u5b9e\u9645\u662f2\u4e2a\u53d8\u91cf\n\n\n\n\n\n\n\u4f8b3-\u4f8b4\uff1a\u53ef\u4ee5\u770b\u5230\u628a\u51fd\u6570\u653e\u5230\u5305\u7ea7\u522b\u6bd4\u8f83\u597d\uff0c\u56e0\u4e3amain\u51fd\u6570\u91cc\u58f0\u660e\u7684\u53d8\u91cf\u65e0\u6cd5\u76f4\u63a5\u88ab\u8fd9\u4e2a\u51fd\u6570\u91cc\u5f15\u7528\uff0c\u5373\u5b89\u5168\u6027\u63d0\u9ad8\u4e86\uff0c\u4e0d\u5bb9\u6613\u8bef\u64cd\u4f5c\n\n\n\n\n\n\n\u5173\u4e8efor\u3001if\u7b49\u5e26\u6709\u4ee3\u7801\u5757\u7684\u4f5c\u7528\u57df\uff0c\u8be6\u89c1\u5404\u81ea\u7ae0\u8282\n:\n\n\n\n\n\n\nfor\u4f5c\u7528\u57df\n\n\n\n\n\n\nif\u4f5c\u7528\u57df\n\n\n\n\n\n\nswitch\u4f5c\u7528\u57df", 
            "title": "5.2. \u4f5c\u7528\u57df"
        }, 
        {
            "location": "/basic/const/", 
            "text": "\u58f0\u660e\n\n\n\n\n\u7528const\u58f0\u660e\uff0c\u65e0\u8bba\u5728\u5305\u7ea7\u522b\u8fd8\u662f\u51fd\u6570\u7ea7\u522b\u3002\u4e0d\u80fd\u7528:=\n\n\n\u5e38\u91cf\u53ea\u80fd\u662f\u5b57\u7b26\u4e32\u3001\u5e03\u5c14\u3001\u6570\u5b57\u7c7b\u578b\uff08\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u590d\u6570\uff09\u7684\u503c\n\n\nconst\n \nfoo\n \n=\n \nbar\n\n\n\n\n\n\u4e0a\u9762\u58f0\u660e\u4e00\u4e2a\u5e38\u91cf\uff0c\u5e38\u91cf\u540d\u53ebfoo\uff0c\u503c\u662f\"bar\"\uff0cfoo\u7684\u7c7b\u578b\u81ea\u52a8\u63a8\u5bfc\u4e3astring\n\n\n\u4e5f\u53ef\u4ee5\nconst\n \nfoo\n \nstring\n \n=\n \nbar\n\u6765\u76f4\u63a5\u6307\u5b9a\u7c7b\u578b\n\n\n\u6ce8\u610f%T\u662f\u67e5\u770b\u7c7b\u578b\uff0c\u5373string\u8fd8\u662fint\uff0c\u800c\u770b\u4e0d\u51fa\u662f\u5e38\u91cf\u8fd8\u662f\u53d8\u91cf\n\n\n\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u58f0\u660e\n\n\nconst (\n    A int = 100\n    B = \nhello\n\n)\n\n\n\n\n\n\n\u548cvar\u7684\u533a\u522b\n\n\nvar\u53ef\u4ee5\u4e0d\u8d4b\u503c\uff08\u4f1a\u81ea\u52a8\u8d4b\u503c\u521d\u59cb\u503c\uff09\uff0c\u800cconst\u5fc5\u987b\u8d4b\u503c\n\n\n\n\n\u4f5c\u7528\u57df\n\n\n\n\n\u7ecf\u6d4b\u8bd5\uff0c\u5e38\u91cf\u4f5c\u7528\u57df\u548c\u53d8\u91cf\u4f5c\u7528\u57df\u76f8\u540c\u3002\n\n\n\u6570\u503c\u5e38\u91cf\n\n\n\n\n\n\n\n\n\u662f\u9ad8\u7cbe\u5ea6\u7684\u503c\n\n\n\n\n\n\n\u672a\u6307\u5b9a\u7c7b\u578b\u7684\u5e38\u91cf\u7531\u4e0a\u4e0b\u6587\u6765\u51b3\u5b9a\u5176\u7c7b\u578b", 
            "title": "6. \u5e38\u91cf"
        }, 
        {
            "location": "/basic/const/#_1", 
            "text": "\u7528const\u58f0\u660e\uff0c\u65e0\u8bba\u5728\u5305\u7ea7\u522b\u8fd8\u662f\u51fd\u6570\u7ea7\u522b\u3002\u4e0d\u80fd\u7528:=  \u5e38\u91cf\u53ea\u80fd\u662f\u5b57\u7b26\u4e32\u3001\u5e03\u5c14\u3001\u6570\u5b57\u7c7b\u578b\uff08\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u590d\u6570\uff09\u7684\u503c  const   foo   =   bar   \u4e0a\u9762\u58f0\u660e\u4e00\u4e2a\u5e38\u91cf\uff0c\u5e38\u91cf\u540d\u53ebfoo\uff0c\u503c\u662f\"bar\"\uff0cfoo\u7684\u7c7b\u578b\u81ea\u52a8\u63a8\u5bfc\u4e3astring  \u4e5f\u53ef\u4ee5 const   foo   string   =   bar \u6765\u76f4\u63a5\u6307\u5b9a\u7c7b\u578b  \u6ce8\u610f%T\u662f\u67e5\u770b\u7c7b\u578b\uff0c\u5373string\u8fd8\u662fint\uff0c\u800c\u770b\u4e0d\u51fa\u662f\u5e38\u91cf\u8fd8\u662f\u53d8\u91cf  \u4e5f\u53ef\u4ee5\u8fd9\u4e48\u58f0\u660e  const (\n    A int = 100\n    B =  hello \n)   \u548cvar\u7684\u533a\u522b  var\u53ef\u4ee5\u4e0d\u8d4b\u503c\uff08\u4f1a\u81ea\u52a8\u8d4b\u503c\u521d\u59cb\u503c\uff09\uff0c\u800cconst\u5fc5\u987b\u8d4b\u503c", 
            "title": "\u58f0\u660e"
        }, 
        {
            "location": "/basic/const/#_2", 
            "text": "\u7ecf\u6d4b\u8bd5\uff0c\u5e38\u91cf\u4f5c\u7528\u57df\u548c\u53d8\u91cf\u4f5c\u7528\u57df\u76f8\u540c\u3002", 
            "title": "\u4f5c\u7528\u57df"
        }, 
        {
            "location": "/basic/const/#_3", 
            "text": "\u662f\u9ad8\u7cbe\u5ea6\u7684\u503c    \u672a\u6307\u5b9a\u7c7b\u578b\u7684\u5e38\u91cf\u7531\u4e0a\u4e0b\u6587\u6765\u51b3\u5b9a\u5176\u7c7b\u578b", 
            "title": "\u6570\u503c\u5e38\u91cf"
        }, 
        {
            "location": "/basic/type_main/", 
            "text": "// Bool\u7c7b\u578b\n\n\nvar\n \nmy_bool\n \nbool\n \n=\n \ntrue\n\n\n\n// \u5b57\u7b26\u4e32\u7c7b\u578b\n\n\nvar\n \nmy_string\n \nstring\n \n=\n \nhello, world!\n\n\n\n// int: \u6709\u7b26\u53f7\u6574\u5f62\uff0c\u6839\u636e\u7cfb\u7edf\u67b6\u6784\u81ea\u52a8\u5224\u65ad\u662fint8\uff0cint16\uff0cint32\u8fd8\u662fint64\n\n\n// \u6bd4\u5982\u5f53\u524d\u7cfb\u7edf\u662f64\u4f4d\u7cfb\u7edf\uff0c\u5219\u4e3aint64\n\n\nvar\n \nmy_int_min\n \nint\n \n=\n \n-\n9223372036854775808\n\n\nvar\n \nmy_int_max\n \nint\n \n=\n \n9223372036854775807\n\n\n\n// int8: \u6709\u7b26\u53f7 8 \u4f4d\u6574\u578b (-128 \u5230 127)\n\n\nvar\n \nmy_int8_min\n \nint8\n \n=\n \n-\n128\n\n\nvar\n \nmy_int8_max\n \nint8\n \n=\n \n127\n\n\n\n// int16: \u6709\u7b26\u53f7 16 \u4f4d\u6574\u578b (-32768 \u5230 32767)\n\n\nvar\n \nmy_int16_min\n \nint16\n \n=\n \n-\n32768\n\n\nvar\n \nmy_int16_max\n \nint16\n \n=\n \n32767\n\n\n\n// int32: \u6709\u7b26\u53f7 32 \u4f4d\u6574\u578b (-2147483648 \u5230 2147483647)\n\n\nvar\n \nmy_int32_min\n \nint32\n \n=\n \n-\n2147483648\n\n\nvar\n \nmy_int32_max\n \nint32\n \n=\n \n2147483647\n\n\n\n// int64: \u6709\u7b26\u53f7 64 \u4f4d\u6574\u578b (-9223372036854775808 \u5230 9223372036854775807)\n\n\nvar\n \nmy_int64_min\n \nint64\n \n=\n \n-\n9223372036854775808\n\n\nvar\n \nmy_int64_max\n \nint64\n \n=\n \n9223372036854775807\n\n\n\n// uint: \u65e0\u7b26\u53f7\u6574\u5f62\uff0c\u6839\u636e\u7cfb\u7edf\u67b6\u6784\u81ea\u52a8\u5224\u65ad\u662fuint8\uff0cuint16\uff0cuint32\u8fd8\u662fuint64\n\n\n// \u6bd4\u5982\u5f53\u524d\u7cfb\u7edf\u662f64\u4f4d\u7cfb\u7edf\uff0c\u5219\u4e3auint64\n\n\nvar\n \nmy_uint_min\n \nuint\n \n=\n \n0\n\n\nvar\n \nmy_uint_max\n \nuint\n \n=\n \n18446744073709551615\n\n\n\n// uint8: \u65e0\u7b26\u53f7 8 \u4f4d\u6574\u578b (0 \u5230 255)\n\n\nvar\n \nmy_uint8_min\n \nuint8\n \n=\n \n0\n\n\nvar\n \nmy_uint8_max\n \nuint8\n \n=\n \n255\n\n\n\n// uint16: \u65e0\u7b26\u53f7 16 \u4f4d\u6574\u578b (0 \u5230 65535)\n\n\nvar\n \nmy_uint16_min\n \nuint16\n \n=\n \n0\n\n\nvar\n \nmy_uint16_max\n \nuint16\n \n=\n \n65535\n\n\n\n// uint32: \u65e0\u7b26\u53f7 32 \u4f4d\u6574\u578b (0 \u5230 4294967295)\n\n\nvar\n \nmy_uint32_min\n \nuint32\n \n=\n \n0\n\n\nvar\n \nmy_uint32_max\n \nuint32\n \n=\n \n4294967295\n\n\n\n// uint64: \u65e0\u7b26\u53f7 64 \u4f4d\u6574\u578b (0 \u5230 18446744073709551615)\n\n\nvar\n \nmy_uint64_min\n \nuint64\n \n=\n \n0\n\n\nvar\n \nmy_uint64_max\n \nuint64\n \n=\n \n18446744073709551615\n\n\n\n// uintptr: \u65e0\u7b26\u53f7\u6574\u578b\uff0c\u7528\u4e8e\u5b58\u653e\u4e00\u4e2a\u6307\u9488\uff0c\u53ef\u4ee5\u8db3\u591f\u4fdd\u5b58\u6307\u9488\u7684\u503c\u7684\u8303\u56f4\u3002\u548cuint\u8303\u56f4\u76f8\u540c\uff0c\u6839\u636e\u7cfb\u7edf\u67b6\u6784\u81ea\u52a8\u5224\u65ad\n\n\nvar\n \nmy_uintptr_min\n \nuintptr\n \n=\n \n0\n\n\nvar\n \nmy_uintptr_max\n \nuintptr\n \n=\n \n18446744073709551615\n\n\n\n// byte: uint8\u7684\u522b\u540d\n\n\nvar\n \nmy_byte_min\n \nbyte\n \n=\n \n0\n\n\nvar\n \nmy_byte_max\n \nbyte\n \n=\n \n255\n\n\n\n// rune: int32\u7684\u522b\u540d\u3002\u4ee3\u88681\u4e2aunicode\u7801\n\n\nvar\n \nmy_rune_min\n \nrune\n \n=\n \n-\n2147483648\n\n\nvar\n \nmy_rune_max\n \nrune\n \n=\n \n2147483647\n\n\n\n// float32: \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c\u5728C\u8bed\u8a00\u91cc\u7b49\u540c\u4e8efloat\n\n\n// float64: \u53cc\u7cbe\u8bfb\u6d6e\u70b9\u6570\uff0c\u5728C\u8bed\u8a00\u91cc\u7b49\u540c\u4e8edouble\n\n\n// \u5982\u679c\u4e0d\u5199\u7c7b\u578b\uff0c\u5219\u4e3afloat64\uff08\u6682\u65f6\u4e0d\u77e5\u9053\u8fd9\u4e2a\u662f\u6839\u636e\u7cfb\u7edf\u67b6\u6784\u5224\u65ad\u8fd8\u662f\u9ed8\u8ba4\u5c31\u662ffloat64\uff09\n\n\n// \u4ece\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa:\n\n\n//   float32\u53ea\u80fd\u5bb9\u7eb38\u4f4d\u6570\u5b57\uff08\u5305\u62ec\u5c0f\u6570\u70b9\u524d\u540e\u6570\u5b57\uff0c\u4e0d\u5305\u62ec\u5c0f\u6570\u70b9\uff0c\u8d85\u8fc78\u4f4d\u4f1a\u5c06\u56db\u820d\u4e94\u5165\u4fdd\u75598\u4f4d\uff09\n\n\n//   float64\u53ef\u4ee5\u5bb9\u7eb3\u6bd4\u8f83\u591a\u7684\u6570\u5b57\uff08\u5177\u4f53\u6682\u65f6\u8fd8\u6ca1\u6d4b\uff09\uff0c\u800c\u4e14\u8fd9\u79cd\u53cc\u7cbe\u5ea6\u6211\u4e5f\u4e00\u76f4\u6ca1\u641e\u61c2\uff0c\u5f88\u590d\u6742\n\n\n//   \u5f53\u7b26\u5408\u8981\u6c42\u65f6\u5019\u4f1a\u81ea\u52a8\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u6765\u8868\u793a\uff0c\u8981\u6ce8\u610f\n\n\nvar\n \nmy_float32\n \nfloat32\n \n=\n \n10086.141592653\n\n\nvar\n \nmy_float64\n \nfloat64\n \n=\n \n10086.141592653\n\n\nvar\n \nmy_float_auto\n \n=\n \n10086.141592653\n\n\n\n\n\n\u8f93\u51fa\n\n\nbool: true\nstring: hello, world!\nint min: -9223372036854775808\nint max: 9223372036854775807\nint8 min: -128\nint8 max: 127\nint16 min: -32768\nint16 max: 32767\nint32 min: -2147483648\nint32 max: 2147483647\nint64 min: -9223372036854775808\nint64 max: 9223372036854775807\nuint min: 0\nuint max: 18446744073709551615\nuint8 min: 0\nuint8 max: 255\nuint16 min: 0\nuint16 max: 65535\nuint32 min: 0\nuint32 max: 4294967295\nuint64 min: 0\nuint64 max: 18446744073709551615\nuintptr min: 0\nuintptr max: 18446744073709551615\nbyte min: 0\nbyte max: 255\nrune min: -2147483648\nrune max: 2147483647\nfloat32: 10086.142\nfloat64: 10086.141592653\nfloat_auto: 10086.141592653\n\n\n\n\n\u9664\u4e86\u4e0a\u8ff0\u7684\u6570\u636e\u7c7b\u578b\uff0c\u8fd8\u67092\u4e2a\u590d\u6570\uff1acomplex64\u3001complex128\n\n\n\n\n-0\u548c0\n\n\n-0\u7b49\u4e8e0\uff0c\u7528-0\u80fd\u7f16\u8bd1\u901a\u8fc7\uff0c\u5b9e\u9645\u8f93\u51fa\u5c31\u662f0\u3002\u65e0\u8bba\u662funit\u8fd8\u662fint\n\n\n\n\n\n\nint8\n\n\nint8\u610f\u601d\u662f\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u8bdd\uff0c\u4ece\u5de6\u5f80\u53f3\u7b2c1\u4f4d\u8868\u793a\u6b63\u6570\u6216\u662f\u8d1f\u6570\uff0c\u7b2c1\u4f4d\u4e3a0\u8868\u793a\u6b63\u6570\uff0c1\u8868\u793a\u8d1f\u6570\n\n\n\u4e3a\u4ec0\u4e48int8\u6700\u5c0f\u662f-128\u800c\u6700\u5927\u662f127\uff0c\u611f\u89c9\u4e0d\u5bf9\u79f0\uff0c\u4f46\u662f\u6b63\u786e\u7684\u3002\u662f\u56e0\u4e3a00000000\u548c10000000\u90fd\u53ef\u4ee5\u8868\u793a0\uff0c\u4f46\u662f\u6ca1\u5fc5\u8981\u5b58\u57282\u4e2a0\uff0c\u56e0\u6b64\u5f80\u8d1f\u6570\u65b9\u5411\u79fb1\u4f4d\uff0c\u537300000000\u8868\u793a0\uff0c\u800c10000000\u8868\u793a\u4e3a-1\uff0c\u90a3\u4e4811111111\u5c31\u8868\u793a\u4e3a-128\u3002", 
            "title": "7.1. \u4ecb\u7ecd"
        }, 
        {
            "location": "/basic/type_default/", 
            "text": "\u6570\u5b57\u7c7b\u578b\uff08\u5982int\u3001 float64\uff09\u9ed8\u8ba4\u503c\u662f0\n\n\n\u5e03\u5c14\u7c7b\u578b\u9ed8\u8ba4\u503c\u662ffalse\n\n\n\u5b57\u7b26\u4e32\u7c7b\u578b\u9ed8\u8ba4\u503c\u662f\"\"\uff08\u7a7a\u5b57\u7b26\u4e32\uff09", 
            "title": "7.2. \u9ed8\u8ba4\u503c"
        }, 
        {
            "location": "/basic/type_change/", 
            "text": "\u7528T(v)\u8868\u8fbe\u5f0f\u6765\u5c06\u53d8\u91cfv\u8f6c\u6362\u6210\u7c7b\u578bT\n\n\n\n\n\u5fc5\u987b\u6307\u5b9a\u7c7b\u578b\u624d\u80fd\u8f6c\u6362\n\n\nvar a int = 5\uff0c\u90a3\u4e48\uff1a\n\n\nvar b string = string(a) \u662fOK\u7684\uff0c\u800cvar b string = a\u662f\u4f1a\u62a5\u9519\u7684\n\n\n\n\n\u53e6\u5916\uff0cvar b = string(a) \u4e5f\u53ef\u4ee5\u8fd9\u4e48\u5199 b := string(a)\n\n\n\u6ce8\u610f\uff1a\u82e5\u7c7b\u578bT\u662f\u4e2a\u6307\u9488\uff0c\u5219\u9700\u8981\u7528\u5706\u62ec\u53f7\uff0c\u6bd4\u5982\n(*pointer)(r)\n\uff0c\u8be6\u89c1\n\u6307\u9488\u7ae0\u8282\n\n\n\n\n\u7c7b\u578b\u8f6c\u6362\u548c\u7c7b\u578b\u65ad\u8a00\u7684\u533a\u522b\u8be6\u89c1\n\u63a5\u53e3\u7ae0\u8282-\u6df1\u5165\u7406\u89e3", 
            "title": "7.3. \u7c7b\u578b\u8f6c\u6362"
        }, 
        {
            "location": "/basic/type_guess/", 
            "text": "\u5f53\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u5374\u4e0d\u663e\u5f0f\u6307\u5b9a\u7c7b\u578b\u65f6\u5019\uff0c\u7c7b\u578b\u7531\u503c\u63a8\u5bfc\u800c\u51fa\n\n\nvar\n \ni\n \nint\n\n\nj\n \n:=\n \ni\n  \n//j\u662fint\u7c7b\u578b\n\n\nk\n \n:=\n \n0\n  \n//k\u662fint\u7c7b\u578b\n\n\n\n\n\n\u4f46\u662f\u5982\u679c\u503c\u662f\u6570\u5b57\u65f6\u5019\uff0c\u5219\u65b0\u7684\u53d8\u91cf\u53ef\u80fd\u662fint\u3001float64\u3001complex128\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5e38\u91cf\u7684\u7cbe\u5ea6\n\n\ni\n \n:=\n \n42\n           \n// int\n\n\nf\n \n:=\n \n3.142\n        \n// float64\n\n\ng\n \n:=\n \n0.867\n \n+\n \n0.5i\n \n// complex128\n\n\n\n\n\n%T\n\u53ef\u4ee5\u67e5\u770b\u7c7b\u578b\n\n\nfmt\n.\nPrintf\n(\n%T\n,\n \na\n)", 
            "title": "7.4. \u7c7b\u578b\u63a8\u5bfc"
        }, 
        {
            "location": "/basic/type_custom/", 
            "text": "\u58f0\u660e\n\n\n\n\ntype \u81ea\u5b9a\u4e49\u7c7b\u578b \u539f\u59cb\u7c7b\u578b\n\n\n\n\n\u4f8b\u5982\n\n\ntype MyInt int\n\n\n\n\n\n\n\u58f0\u660e\u53ef\u4ee5\u653e\u5728\u5305\u7ea7\u522b\u4e5f\u53ef\u4ee5\u653e\u5728\u51fd\u6570\u7ea7\u522b\n\n\n\n\n\u539f\u59cb\u7c7b\u578b\u4e5f\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u4f8b\u5982\n\n\ntype MyInt int\ntype AbInt MyInt\n\n\n\n\n\u53ef\u4ee5\u7f29\u5199\u4e3a\n\n\ntype (\n    MyInt int\n    AbInt MyInt\n)\n\n\n\n\n\u8d4b\u503c\n\n\n\n\n\u67092\u79cd\u65b9\u5f0f:\n\n\n\n\n\n\n\u4f7f\u7528\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5\u6765\u8d4b\u503c\n\n\n\u7c7b\u578b(\u503c)\n\n\n\n\n\u4f8b\u5982\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nMyInt\n \nint\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \nMyInt\n(\n1\n)\n\n    \nfmt\n.\nPrintf\n(\n%T, %d\\n\n,\n \na\n,\n \na\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nmain.MyInt, 1\n\n\n\n\n\n\n\n\nliteral\u65b9\u5f0f\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nMyInt\n \nint\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \na\n \nMyInt\n \n=\n \n1\n\n    \nfmt\n.\nPrintf\n(\n%T, %d\\n\n,\n \na\n,\n \na\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nmain.MyInt, 1\n\n\n\n\n\n\n\n\n\u6ce8\u610f\n\n\n\n\n\n\n\n\n\u539f\u59cb\u7c7b\u578b\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u4f8b\u5982\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \n(\n\n    \nMyInt\n \nint\n\n    \nAbInt\n \nMyInt\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \nMyInt\n(\n1\n)\n\n    \nb\n \n:=\n \nAbInt\n(\n2\n)\n\n    \nfmt\n.\nPrintf\n(\n%T, %T\\n\n,\n \na\n,\n \nb\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nmain.MyInt, main.AbInt\n\n\n\n\n\n\n\n\n\u81ea\u5b9a\u4e49\u7c7b\u578b\u4e0d\u80fd\u4e0e\u539f\u59cb\u7c7b\u578b\u8fdb\u884c\u8ba1\u7b97\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nMyInt\n \nint\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \nMyInt\n(\n1\n)\n\n    \nb\n \n:=\n \n2\n\n    \nfmt\n.\nPrintln\n(\na\n \n+\n \nb\n)\n\n\n}\n\n\n\n\n\n\u62a5\u9519\n\n\n./type_custom.go:10: invalid operation: a + b (mismatched types MyInt and int)\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \n(\n\n    \nMyInt\n \nint\n\n    \nAAInt\n \nMyInt\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \nMyInt\n(\n1\n)\n\n    \nb\n \n:=\n \nAAInt\n(\n2\n)\n\n    \nfmt\n.\nPrintf\n(\n%T, %T\\n\n,\n \na\n,\n \nb\n)\n\n    \nfmt\n.\nPrintln\n(\na\n,\n \nb\n)\n\n    \nfmt\n.\nPrintln\n(\na\n+\nb\n)\n\n\n}\n\n\n\n\n\n\u62a5\u9519\n\n\n./type_custom.go:15: invalid operation: a + b (mismatched types MyInt and AAInt)\n\n\n\n\n\n\n\n\nfmt.Printf\n\u7684\n%d\n\u53ef\u4ee5\u7528\u4e8e\u6700\u7ec8\u539f\u59cb\u7c7b\u578b\u662fint\u7684MyInt\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \n(\n\n    \nMyInt\n \nint\n\n    \nAAInt\n \nMyInt\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \nMyInt\n(\n1\n)\n\n    \nb\n \n:=\n \nAAInt\n(\n2\n)\n\n    \nfmt\n.\nPrintf\n(\n%T, %T\\n\n,\n \na\n,\n \nb\n)\n\n    \nfmt\n.\nPrintf\n(\n%d, %d\\n\n,\n \na\n,\n \nb\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nmain.MyInt, main.AAInt\n1, 2\n\n\n\n\n\n\n\n\n\u53ef\u4ee5\u628atype\u5199\u5728main\u91cc\uff0c\u6bd4\u5982\uff1a\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ntype\n \ncc\n \nint\n\n    \ntype\n \ndd\n \ncc\n\n    \nvar\n \nc\n \ncc\n\n    \nvar\n \nd\n \ndd\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nc\n)\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nd\n)\n\n    \nfmt\n.\nPrintln\n(\nc\n)\n\n    \nfmt\n.\nPrintln\n(\nd\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nmain.cc\nmain.dd\n0\n0\n\n\n\n\n\u4f46\u662f\u53ea\u6709\u653e\u5728\u5305\u7ea7\u522b\u7684\uff0c\u5e76\u4e14\u9996\u5b57\u6bcd\u5927\u5199\u7684\uff0c\u624d\u80fd\u88ab\u5bfc\u5165\u7ed9\u5176\u4ed6\u6a21\u5757\u5f15\u7528\n\n\n\n\n\n\n\u81ea\u5b9a\u4e49type\u5177\u6709\u9690\u85cf\u539ftype\u7684\u6548\u679c\n\n\ntype\n \nfoo\n \nint\n\n\ntype\n \nbar\n \n[]\nint\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \n[]\nfoo\n{\n1\n,\n \n2\n,\n \n3\n}\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \na\n)\n\n    \nfmt\n.\nPrintln\n(\na\n)\n\n\n    \nb\n \n:=\n \nbar\n{\n1\n,\n \n2\n,\n \n3\n}\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nb\n)\n\n    \nfmt\n.\nPrintln\n(\nb\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n[]main.foo\n[1 2 3]\nmain.bar\n[1 2 3]\n\n\n\n\nfoo\u548cbar\u6700\u7ec8\u662f\u76f8\u4f3c\u6548\u679c\uff0c\u4f46bar\u901a\u8fc7%T\u770b\u4e0d\u5230[]\n\n\n\n\n\n\nTYPE(\u540c\u7c7b\u578b\u7684\u503c)\u53ef\u4ee5\u505a\u7c7b\u578b\u8f6c\u6362\uff0c\u6bd4\u5982\uff1a\n\n\ntype\n \nfoo\n \nint\n\n\na\n \n:=\n \nfoo\n(\n1\n)\n\n\n\ntype\n \nbar\n \n[]\nint\n\n\nc\n \n:=\n \n[]\nint\n{\n1\n,\n \n2\n,\n \n3\n}\n\n\nd\n \n:=\n \nbar\n(\nc\n)\n\n\n\n\n\n\u4e0a\u9762\u7684\u7c7b\u578b\u8f6c\u6362\u90fd\u662f\u5c06\u539f\u6765\u7684\u503c\u8f6c\u6362\u4e3a\u65b0\u7684\u7c7b\u578b\uff0c\u53ea\u4e0d\u8fc7\u65b0\u7684\u7c7b\u578b\u548c\u539f\u6765\u7684\u7c7b\u578b\u5176\u5b9e\u662f\u4e00\u6837\u7684\u800c\u5df2\u3002\n\n\n\u5f53\u7136\u4e5f\u80fd\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u505a\u8f6c\u6362\uff08\u524d\u63d0\u662fgolang\u5141\u8bb8\u8f6c\u6362\u7684\uff09\uff0c\u6bd4\u5982string(1)\uff0c\u5c31\u662f\u5c06int\u7c7b\u578b\u76841\u8f6c\u6362\u6210string\u7c7b\u578b\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u662f\u8f6c\u6362\u6210\"1\"\uff0c\u800c\u662f\u5176\u4ed6\u7b97\u6cd5\uff08ascii\u6216\u8005utf8\uff1f\uff09\uff0c\u4f46\u53cd\u8fc7\u6765int(\"1\")\u5c31\u4f1a\u62a5\u9519\n\n\n\u4e5f\u53ef\u4ee5\u5c06int\u8f6c\u6210float64\uff0c\u6216\u8005\u5c06floaf64\u8f6c\u6210int\u7c7b\u578b", 
            "title": "7.5. \u81ea\u5b9a\u4e49\u7c7b\u578b"
        }, 
        {
            "location": "/basic/type_custom/#_1", 
            "text": "type \u81ea\u5b9a\u4e49\u7c7b\u578b \u539f\u59cb\u7c7b\u578b  \u4f8b\u5982  type MyInt int   \u58f0\u660e\u53ef\u4ee5\u653e\u5728\u5305\u7ea7\u522b\u4e5f\u53ef\u4ee5\u653e\u5728\u51fd\u6570\u7ea7\u522b   \u539f\u59cb\u7c7b\u578b\u4e5f\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u4f8b\u5982  type MyInt int\ntype AbInt MyInt  \u53ef\u4ee5\u7f29\u5199\u4e3a  type (\n    MyInt int\n    AbInt MyInt\n)", 
            "title": "\u58f0\u660e"
        }, 
        {
            "location": "/basic/type_custom/#_2", 
            "text": "\u67092\u79cd\u65b9\u5f0f:    \u4f7f\u7528\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5\u6765\u8d4b\u503c  \u7c7b\u578b(\u503c)  \u4f8b\u5982  package   main  import   fmt  type   MyInt   int  func   main ()   { \n     a   :=   MyInt ( 1 ) \n     fmt . Printf ( %T, %d\\n ,   a ,   a )  }   \u8f93\u51fa  main.MyInt, 1    literal\u65b9\u5f0f  package   main  import   fmt  type   MyInt   int  func   main ()   { \n     var   a   MyInt   =   1 \n     fmt . Printf ( %T, %d\\n ,   a ,   a )  }   \u8f93\u51fa  main.MyInt, 1", 
            "title": "\u8d4b\u503c"
        }, 
        {
            "location": "/basic/type_custom/#_3", 
            "text": "\u539f\u59cb\u7c7b\u578b\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u4f8b\u5982  package   main  import   fmt  type   ( \n     MyInt   int \n     AbInt   MyInt  )  func   main ()   { \n     a   :=   MyInt ( 1 ) \n     b   :=   AbInt ( 2 ) \n     fmt . Printf ( %T, %T\\n ,   a ,   b )  }   \u8f93\u51fa  main.MyInt, main.AbInt    \u81ea\u5b9a\u4e49\u7c7b\u578b\u4e0d\u80fd\u4e0e\u539f\u59cb\u7c7b\u578b\u8fdb\u884c\u8ba1\u7b97  package   main  import   fmt  type   MyInt   int  func   main ()   { \n     a   :=   MyInt ( 1 ) \n     b   :=   2 \n     fmt . Println ( a   +   b )  }   \u62a5\u9519  ./type_custom.go:10: invalid operation: a + b (mismatched types MyInt and int)  package   main  import   fmt  type   ( \n     MyInt   int \n     AAInt   MyInt  )  func   main ()   { \n     a   :=   MyInt ( 1 ) \n     b   :=   AAInt ( 2 ) \n     fmt . Printf ( %T, %T\\n ,   a ,   b ) \n     fmt . Println ( a ,   b ) \n     fmt . Println ( a + b )  }   \u62a5\u9519  ./type_custom.go:15: invalid operation: a + b (mismatched types MyInt and AAInt)    fmt.Printf \u7684 %d \u53ef\u4ee5\u7528\u4e8e\u6700\u7ec8\u539f\u59cb\u7c7b\u578b\u662fint\u7684MyInt  package   main  import   fmt  type   ( \n     MyInt   int \n     AAInt   MyInt  )  func   main ()   { \n     a   :=   MyInt ( 1 ) \n     b   :=   AAInt ( 2 ) \n     fmt . Printf ( %T, %T\\n ,   a ,   b ) \n     fmt . Printf ( %d, %d\\n ,   a ,   b )  }   \u8f93\u51fa  main.MyInt, main.AAInt\n1, 2    \u53ef\u4ee5\u628atype\u5199\u5728main\u91cc\uff0c\u6bd4\u5982\uff1a  func   main ()   { \n     type   cc   int \n     type   dd   cc \n     var   c   cc \n     var   d   dd \n     fmt . Printf ( %T\\n ,   c ) \n     fmt . Printf ( %T\\n ,   d ) \n     fmt . Println ( c ) \n     fmt . Println ( d )  }   \u8f93\u51fa  main.cc\nmain.dd\n0\n0  \u4f46\u662f\u53ea\u6709\u653e\u5728\u5305\u7ea7\u522b\u7684\uff0c\u5e76\u4e14\u9996\u5b57\u6bcd\u5927\u5199\u7684\uff0c\u624d\u80fd\u88ab\u5bfc\u5165\u7ed9\u5176\u4ed6\u6a21\u5757\u5f15\u7528    \u81ea\u5b9a\u4e49type\u5177\u6709\u9690\u85cf\u539ftype\u7684\u6548\u679c  type   foo   int  type   bar   [] int  func   main ()   { \n     a   :=   [] foo { 1 ,   2 ,   3 } \n     fmt . Printf ( %T\\n ,   a ) \n     fmt . Println ( a ) \n\n     b   :=   bar { 1 ,   2 ,   3 } \n     fmt . Printf ( %T\\n ,   b ) \n     fmt . Println ( b )  }   \u8f93\u51fa  []main.foo\n[1 2 3]\nmain.bar\n[1 2 3]  foo\u548cbar\u6700\u7ec8\u662f\u76f8\u4f3c\u6548\u679c\uff0c\u4f46bar\u901a\u8fc7%T\u770b\u4e0d\u5230[]    TYPE(\u540c\u7c7b\u578b\u7684\u503c)\u53ef\u4ee5\u505a\u7c7b\u578b\u8f6c\u6362\uff0c\u6bd4\u5982\uff1a  type   foo   int  a   :=   foo ( 1 )  type   bar   [] int  c   :=   [] int { 1 ,   2 ,   3 }  d   :=   bar ( c )   \u4e0a\u9762\u7684\u7c7b\u578b\u8f6c\u6362\u90fd\u662f\u5c06\u539f\u6765\u7684\u503c\u8f6c\u6362\u4e3a\u65b0\u7684\u7c7b\u578b\uff0c\u53ea\u4e0d\u8fc7\u65b0\u7684\u7c7b\u578b\u548c\u539f\u6765\u7684\u7c7b\u578b\u5176\u5b9e\u662f\u4e00\u6837\u7684\u800c\u5df2\u3002  \u5f53\u7136\u4e5f\u80fd\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u505a\u8f6c\u6362\uff08\u524d\u63d0\u662fgolang\u5141\u8bb8\u8f6c\u6362\u7684\uff09\uff0c\u6bd4\u5982string(1)\uff0c\u5c31\u662f\u5c06int\u7c7b\u578b\u76841\u8f6c\u6362\u6210string\u7c7b\u578b\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u662f\u8f6c\u6362\u6210\"1\"\uff0c\u800c\u662f\u5176\u4ed6\u7b97\u6cd5\uff08ascii\u6216\u8005utf8\uff1f\uff09\uff0c\u4f46\u53cd\u8fc7\u6765int(\"1\")\u5c31\u4f1a\u62a5\u9519  \u4e5f\u53ef\u4ee5\u5c06int\u8f6c\u6210float64\uff0c\u6216\u8005\u5c06floaf64\u8f6c\u6210int\u7c7b\u578b", 
            "title": "\u6ce8\u610f"
        }, 
        {
            "location": "/flow/for/", 
            "text": "\u57fa\u672c\u683c\u5f0f\n\n\n\n\ngolang\u91cc\u5faa\u73af\u53ea\u6709for\u4e00\u79cd\uff0c\u6ca1\u6709\u5176\u4ed6\u7684\uff08\u6bd4\u5982\u5176\u4ed6\u8bed\u8a00\u8fd8\u6709while\uff09\n\n\n\u8bed\u6cd5\uff1a\n\n\nfor\n \ninit\n \nstatement\n;\n \ncondition\n \nexpression\n;\n \npost\n \nstatement\n \n{\n\n    \n...\n\n\n}\n\n\n\n\n\n\n\n\u6ca1\u6709\u62ec\u53f7\n\n\ninit statement; condition expression; post statement\n\u524d\u540e\u6ca1\u6709\u62ec\u53f7\n()\n\n\n\n\n\u4e3e\u4f8b\n\n\nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n++\n \n{\n\n    \nsum\n \n+=\n \ni\n\n\n}\n\n\n\n\n\n\n\ninit statement\u91cc\u4e0d\u80fd\u7528var\n\n\n\u8fd9\u91cc\ni := 0\n\u4e0d\u80fd\u5199\u6210\nvar i int = 0\n\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5730\u65b9\u8981\u6c42\u4e0d\u80fd\u7528\nvar\n\uff0c\u53ea\u80fd\u7528\n:=\n\uff0c\u5982\u679c\u4e00\u5b9a\u8981\nvar\n\uff0c\u8981\u5728\nfor\n\u524d\u5148\nvar\n\uff0c\u6bd4\u5982\u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684\uff1a\n\n\nvar\n \ni\n \nint\n\n\nfor\n \ni\n \n=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n \n++\n \n{\n\n    \nsum\n \n+=\n \ni\n\n\n}\n\n\n\n\n\n\n\n\u7b80\u5199\u683c\u5f0f\n\n\n\n\ninit statement\u548cpost statement\u662f\u53ef\u9009\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5ffd\u7565\uff0c\u6bd4\u5982\uff1a\n\n\nsum\n \n:=\n \n1\n\n\nfor\n \n;\n \nsum\n \n \n1000\n;\n \n{\n\n    \nsum\n \n+=\n \nsum\n\n\n}\n\n\n\n\n\n\u53ef\u4ee5\u7701\u7565\u5206\u53f7\uff0c\u5373\u53ef\u4ee5\u5199\u6210\uff08\u8fd9\u79cd\u5199\u6cd5\u76f8\u5f53\u4e8eC\u8bed\u8a00\u4e2d\u7684while\uff09\n\n\nsum\n \n:=\n \n1\n\n\nfor\n \nsum\n \n \n1000\n \n{\n\n    \nsum\n \n+=\n \nsum\n\n\n}\n\n\n\n\n\n\n\n\u5206\u53f7\u53ea\u80fd\u90fd\u8981\uff0c\u6216\u8005\u90fd\u4e0d\u8981\n\n\n\u4e0b\u9762\u8fd92\u79cd\u662f\u9519\u7684\n\n\nfor\n \n;\n \nsum\n \n \n1000\n \n{\n\n    \nsum\n \n+=\n \nsum\n\n\n}\n\n\n\n\n\n\u6216\n\n\nfor\n \nsum\n \n \n1000\n;\n \n{\n\n    \nsum\n \n+=\n \nsum\n\n\n}\n\n\n\n\n\n\n\n\u6b7b\u5faa\u73af\n\n\n\n\nfor\n \n{\n\n\n}\n\n\n\n\n\n\u7ed3\u5408range\n\n\n\n\n\u7ed3\u5408range\u53ef\u4ee5\u5bf9slice\u3001map\u3001\u6570\u7ec4\u3001\u5b57\u7b26\u4e32\u7b49\u8fdb\u884c\u8fed\u4ee3\u5faa\u73af\n\n\nfor\n \nkey\n,\n \nvalue\n \n:=\n \nrange\n \noldMap\n \n{\n\n    \nnewMap\n[\nkey\n]\n \n=\n \nvalue\n\n\n}\n\n\n\n\n\n\u6bd4\u5982\uff1a\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nnumbers\n \n:=\n \n[\n6\n]\nint\n{\n1\n,\n \n2\n,\n \n3\n,\n \n5\n}\n\n\n    \nfor\n \ni\n,\n \nx\n \n:=\n \nrange\n \nnumbers\n \n{\n\n        \nfmt\n.\nPrintf\n(\n\u7b2c %d \u4f4d x \u7684\u503c = %d\\n\n,\n \ni\n,\n \nx\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nNote\n\n\n\u4f7f\u7528range\u7684\u8bdd\u5c31\u4e0d\u80fd\u5728\u524d\u540e\u4f7f\u7528\u5206\u53f7\u4e86\n\n\n\n\n\u8be6\u89c1range\u8be6\u89e3\n\n\n\u4f5c\u7528\u57df\n\n\n\n\n\u4ee5\u4e0b\u5747\u4e3a\u4e2a\u4eba\u7406\u89e3\uff0c\u4e0d\u4fdd\u8bc1\u51c6\u786e\u6027\n\n\n\n\n\n\nfor\u7684init statement\u91cc\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u4ee5\u53ca\u4ee3\u7801\u5757\u91cc\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u90fd\u4ec5\u9650\u4e8efor\u91cc\uff0c\u5728\u5916\u90e8\u662f\u65e0\u6cd5\u5f15\u7528\u7684\n\n\n\u4f8b\u5b50\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n2\n;\n \ni\n \n++\n \n{\n\n        \nfmt\n.\nPrintln\n(\ni\n)\n\n        \na\n \n:=\n \n100\n\n    \n}\n\n    \nfmt\n.\nPrintln\n(\ni\n)\n\n    \nfmt\n.\nPrintln\n(\na\n)\n\n\n}\n\n\n\n\n\u62a5\u9519\n./for.go:10: undefined: i\n./for.go:11: undefined: a\n\n\n\n\n\n\n\n\u6bcf\u6b21\u5faa\u73af\u90fd\u662f\u4e00\u4e2a\u65b0\u7684\u7a7a\u95f4\uff0c\u5373\u5728\u7b2c\u4e00\u6b21\u5faa\u73af\u65f6\u5019\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u5728\u4e0b\u4e00\u6b21\u5faa\u73af\u65f6\u5019\u662f\u770b\u4e0d\u5230\u7684\n\n\n\u4f8b\u5b50\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \na\n \nint\n \n=\n \n100\n\n    \nfmt\n.\nPrintln\n(\na\n)\n\n\n    \nfmt\n.\nPrintln\n(\n=====\n)\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n2\n;\n \ni\n \n++\n \n{\n\n        \nfmt\n.\nPrintln\n(\n---\n)\n\n        \na\n \n+=\n \n1\n\n        \nfmt\n.\nPrintln\n(\na\n)\n\n        \na\n \n:=\n \n200\n\n        \nfmt\n.\nPrintln\n(\na\n)\n\n        \na\n \n+=\n \n1\n\n        \nfmt\n.\nPrintln\n(\na\n)\n\n    \n}\n\n    \nfmt\n.\nPrintln\n(\n=====\n)\n\n\n    \nfmt\n.\nPrintln\n(\na\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\n100\n=====\n---\n101\n200\n201\n---\n102\n200\n201\n=====\n102\n\n\n\n\u53ef\u4ee5\u770b\u5230\u6bcf\u6b21\u5faa\u73af\u65f6\u5019a\u90fd\u662f200\uff0c\u800c\u4e0d\u4f1a\u4f20\u9012\u5230\u4e0b\u6b21\u5faa\u73af\u4e2d", 
            "title": "1. for"
        }, 
        {
            "location": "/flow/for/#_1", 
            "text": "golang\u91cc\u5faa\u73af\u53ea\u6709for\u4e00\u79cd\uff0c\u6ca1\u6709\u5176\u4ed6\u7684\uff08\u6bd4\u5982\u5176\u4ed6\u8bed\u8a00\u8fd8\u6709while\uff09  \u8bed\u6cd5\uff1a  for   init   statement ;   condition   expression ;   post   statement   { \n     ...  }    \u6ca1\u6709\u62ec\u53f7  init statement; condition expression; post statement \u524d\u540e\u6ca1\u6709\u62ec\u53f7 ()   \u4e3e\u4f8b  for   i   :=   0 ;   i     10 ;   i ++   { \n     sum   +=   i  }    init statement\u91cc\u4e0d\u80fd\u7528var  \u8fd9\u91cc i := 0 \u4e0d\u80fd\u5199\u6210 var i int = 0 \uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5730\u65b9\u8981\u6c42\u4e0d\u80fd\u7528 var \uff0c\u53ea\u80fd\u7528 := \uff0c\u5982\u679c\u4e00\u5b9a\u8981 var \uff0c\u8981\u5728 for \u524d\u5148 var \uff0c\u6bd4\u5982\u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684\uff1a  var   i   int  for   i   =   0 ;   i     10 ;   i   ++   { \n     sum   +=   i  }", 
            "title": "\u57fa\u672c\u683c\u5f0f"
        }, 
        {
            "location": "/flow/for/#_2", 
            "text": "init statement\u548cpost statement\u662f\u53ef\u9009\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5ffd\u7565\uff0c\u6bd4\u5982\uff1a  sum   :=   1  for   ;   sum     1000 ;   { \n     sum   +=   sum  }   \u53ef\u4ee5\u7701\u7565\u5206\u53f7\uff0c\u5373\u53ef\u4ee5\u5199\u6210\uff08\u8fd9\u79cd\u5199\u6cd5\u76f8\u5f53\u4e8eC\u8bed\u8a00\u4e2d\u7684while\uff09  sum   :=   1  for   sum     1000   { \n     sum   +=   sum  }    \u5206\u53f7\u53ea\u80fd\u90fd\u8981\uff0c\u6216\u8005\u90fd\u4e0d\u8981  \u4e0b\u9762\u8fd92\u79cd\u662f\u9519\u7684  for   ;   sum     1000   { \n     sum   +=   sum  }   \u6216  for   sum     1000 ;   { \n     sum   +=   sum  }", 
            "title": "\u7b80\u5199\u683c\u5f0f"
        }, 
        {
            "location": "/flow/for/#_3", 
            "text": "for   {  }", 
            "title": "\u6b7b\u5faa\u73af"
        }, 
        {
            "location": "/flow/for/#range", 
            "text": "\u7ed3\u5408range\u53ef\u4ee5\u5bf9slice\u3001map\u3001\u6570\u7ec4\u3001\u5b57\u7b26\u4e32\u7b49\u8fdb\u884c\u8fed\u4ee3\u5faa\u73af  for   key ,   value   :=   range   oldMap   { \n     newMap [ key ]   =   value  }   \u6bd4\u5982\uff1a  func   main ()   { \n     numbers   :=   [ 6 ] int { 1 ,   2 ,   3 ,   5 } \n\n     for   i ,   x   :=   range   numbers   { \n         fmt . Printf ( \u7b2c %d \u4f4d x \u7684\u503c = %d\\n ,   i ,   x ) \n     }  }    Note  \u4f7f\u7528range\u7684\u8bdd\u5c31\u4e0d\u80fd\u5728\u524d\u540e\u4f7f\u7528\u5206\u53f7\u4e86   \u8be6\u89c1range\u8be6\u89e3", 
            "title": "\u7ed3\u5408range"
        }, 
        {
            "location": "/flow/for/#_4", 
            "text": "\u4ee5\u4e0b\u5747\u4e3a\u4e2a\u4eba\u7406\u89e3\uff0c\u4e0d\u4fdd\u8bc1\u51c6\u786e\u6027    for\u7684init statement\u91cc\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u4ee5\u53ca\u4ee3\u7801\u5757\u91cc\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u90fd\u4ec5\u9650\u4e8efor\u91cc\uff0c\u5728\u5916\u90e8\u662f\u65e0\u6cd5\u5f15\u7528\u7684  \u4f8b\u5b50 package   main  import   fmt  func   main ()   { \n     for   i   :=   0 ;   i     2 ;   i   ++   { \n         fmt . Println ( i ) \n         a   :=   100 \n     } \n     fmt . Println ( i ) \n     fmt . Println ( a )  }   \u62a5\u9519 ./for.go:10: undefined: i\n./for.go:11: undefined: a    \u6bcf\u6b21\u5faa\u73af\u90fd\u662f\u4e00\u4e2a\u65b0\u7684\u7a7a\u95f4\uff0c\u5373\u5728\u7b2c\u4e00\u6b21\u5faa\u73af\u65f6\u5019\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u5728\u4e0b\u4e00\u6b21\u5faa\u73af\u65f6\u5019\u662f\u770b\u4e0d\u5230\u7684  \u4f8b\u5b50 package   main  import   fmt  func   main ()   { \n     var   a   int   =   100 \n     fmt . Println ( a ) \n\n     fmt . Println ( ===== ) \n     for   i   :=   0 ;   i     2 ;   i   ++   { \n         fmt . Println ( --- ) \n         a   +=   1 \n         fmt . Println ( a ) \n         a   :=   200 \n         fmt . Println ( a ) \n         a   +=   1 \n         fmt . Println ( a ) \n     } \n     fmt . Println ( ===== ) \n\n     fmt . Println ( a )  }   \u8f93\u51fa 100\n=====\n---\n101\n200\n201\n---\n102\n200\n201\n=====\n102  \u53ef\u4ee5\u770b\u5230\u6bcf\u6b21\u5faa\u73af\u65f6\u5019a\u90fd\u662f200\uff0c\u800c\u4e0d\u4f1a\u4f20\u9012\u5230\u4e0b\u6b21\u5faa\u73af\u4e2d", 
            "title": "\u4f5c\u7528\u57df"
        }, 
        {
            "location": "/flow/if/", 
            "text": "\u57fa\u672c\u683c\u5f0f\n\n\n\n\nif\n \nx\n \n \n0\n \n{\n\n    \n...\n\n\n}\n\n\n\n\n\n\u652f\u6301\n\n\nif\n \nx\n \n \n0\n \n{\n\n    \n...\n\n\n}\n \nelse\n \nif\n \nx\n \n \n0\n \n{\n\n    \n...\n\n\n}\n \nelse\n \n{\n\n    \n...\n\n\n}\n\n\n\n\n\u77ed\u58f0\u660e\n\n\n\n\nif\n \nv\n \n:=\n \nmath\n.\nPow\n(\nx\n,\n \nn\n);\n \nv\n \n \nlim\n \n{\n\n    \n...\n\n\n}\n\n\n\n\n\n\n\nv\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u53ea\u5728if\u8bed\u53e5\u91cc\u6709\u6548\uff08\u5305\u62ecelse\uff09\n\n\n\n\n\u5e76\u4e0d\u662f\u5fc5\u987b\u8981\u7528\u77ed\u58f0\u660e\n:=\n\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684\n\n\nvar\n \na\n \nint\n\n\nif\n \na\n \n=\n \n1\n;\n \na\n \n \n2\n \n{\n\n    \nfmt\n.\nPrintln\n(\nyes\n)\n\n\n}\n\n\n\n\n\n\n\n\u6ce8\u610f\n\n\n\u65e0\u8bbaa \n 2\u662f\u5426\u4e3atrue\uff0ca = 1\u90fd\u88ab\u6267\u884c\u4e86\u3002\u56e0\u6b64\u8c28\u614e\u5728if\u6761\u4ef6\u53e5\u91cc\u5f15\u7528\u5916\u90e8\u53d8\u91cf\u505a\u52a8\u4f5c\n\n\n\n\nelse if\n\u4e5f\u53ef\u4ee5\u5e26\u77ed\u58f0\u660e\uff0c\u4f46\nelse\n\u4e0d\u80fd\u5e26\u77ed\u58f0\u660e\n\n\nif\n \nx\n \n:=\n \n0\n;\n \na\n \n \n0\n \n{\n\n    \n...\n\n\n}\n \nelse\n \nif\n \nx\n \n:=\n \n1\n;\n \na\n \n \n0\n \n{\n\n    \n...\n\n\n}\n \nelse\n \n{\n\n    \n...\n\n\n}\n\n\n\n\n\nif \u6761\u4ef6\u53ef\u4ee5\u7528bool\u503c\uff0c\u6bd4\u5982\n\n\nif\n \ntrue\n \n{\n\n    \n...\n\n\n}\n\n\n\n\n\n\u4f5c\u7528\u57df\n\n\n\n\n\u4f8b1. if\u7684\u4ee3\u7801\u5757\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u57df\u5417?\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \n1\n\n    \nb\n \n:=\n \n2\n\n\n    \nif\n \n1\n \n \n0\n \n{\n\n        \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n        \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n        \na\n \n=\n \n10\n\n        \nb\n \n=\n \n20\n\n        \na\n \n:=\n \n100\n\n        \nb\n \n:=\n \n200\n\n        \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n        \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n    \n}\n\n\n    \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n    \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\na: 1\nb: 2\na: 100\nb: 200\na: 10\nb: 20\n\n\n\n\u7b54: if\u7684\u4ee3\u7801\u5757\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u57df\n\u4f8b2. if\u6761\u4ef6\u4f7f\u7528\u77ed\u58f0\u660e\u65f6\u662f\u72ec\u7acb\u7684\u53d8\u91cf\u8fd8\u662f\u5f15\u7528\u5916\u90e8\u53d8\u91cf?\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \n1\n\n    \nb\n \n:=\n \n2\n\n\n    \nif\n \na\n \n:=\n \n10000\n;\n \n1\n \n \n0\n \n{\n\n        \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n        \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n        \na\n \n=\n \n10\n\n        \nb\n \n=\n \n20\n\n        \na\n \n:=\n \n100\n\n        \nb\n \n:=\n \n200\n\n        \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n        \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n    \n}\n\n\n    \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n    \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\na: 10000\nb: 2\na: 100\nb: 200\na: 1\nb: 20\n\n\n\n\u7b54: if\u6761\u4ef6\u4f7f\u7528\u77ed\u58f0\u660e\u65f6\u662f\u72ec\u7acb\u7684\u53d8\u91cf\u3002\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u66f4\u80fd\u8bf4\u660e\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nb\n \n:=\n \n2\n\n\n    \nif\n \na\n \n:=\n \n10000\n;\n \n1\n \n \n0\n \n{\n\n        \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n        \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n        \na\n \n=\n \n10\n\n        \nb\n \n=\n \n20\n\n        \na\n \n:=\n \n100\n\n        \nb\n \n:=\n \n200\n\n        \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n        \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n    \n}\n\n\n    \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n    \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n\n}\n\n\n\n\n\u62a5\u9519\n./if.go:19: undefined: a\n\n\n\n\u5728if\u5916\u5f15\u7528\u53d8\u91cfa\uff0c\u63d0\u793a\u672a\u627e\u5230\uff0c\u56e0\u4e3aa\u53ea\u5728if\u4f5c\u7528\u57df\n\u4f8b3. if\u6761\u4ef6\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u65f6\u662f\u72ec\u7acb\u7684\u53d8\u91cf\u8fd8\u662f\u5f15\u7528\u5916\u90e8\u53d8\u91cf?\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \n1\n\n    \nb\n \n:=\n \n2\n\n\n    \nif\n \na\n \n=\n \n10000\n;\n \n1\n \n \n0\n \n{\n\n        \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n        \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n        \na\n \n=\n \n10\n\n        \nb\n \n=\n \n20\n\n        \na\n \n:=\n \n100\n\n        \nb\n \n:=\n \n200\n\n        \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n        \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n    \n}\n\n\n    \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n    \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\na: 10000\nb: 2\na: 100\nb: 200\na: 10\nb: 20\n\n\n\n\u7b54: if\u6761\u4ef6\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u65f6\u662f\u5f15\u7528\u5916\u90e8\u53d8\u91cf\n\u4f8b4. \u82e5if\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u90a3\u4e48\u6761\u4ef6\u53e5\u91cc\u7684\u8d4b\u503c\u8bed\u53e5\u662f\u5426\u6709\u751f\u6548?\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \n1\n\n    \nb\n \n:=\n \n2\n\n\n    \nif\n \na\n \n=\n \n10000\n;\n \nfalse\n \n{\n\n        \nfmt\n.\nPrintln\n(\nif-a:\n,\n \na\n)\n\n        \nfmt\n.\nPrintln\n(\nif-b:\n,\n \nb\n)\n\n    \n}\n\n\n    \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n    \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\na: 10000\nb: 2\n\n\n\n\u5982\u679c\u6709else if\u5462\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \n1\n\n    \nb\n \n:=\n \n2\n\n\n    \nif\n \na\n \n=\n \n10\n;\n \nfalse\n \n{\n\n        \nfmt\n.\nPrintln\n(\nif-a:\n,\n \na\n)\n\n        \nfmt\n.\nPrintln\n(\nif-b:\n,\n \nb\n)\n\n    \n}\n \nelse\n \nif\n \na\n \n=\n \n20\n;\n \ntrue\n \n{\n\n        \nfmt\n.\nPrintln\n(\nif-a:\n,\n \na\n)\n\n        \nfmt\n.\nPrintln\n(\nif-b:\n,\n \nb\n)\n\n    \n}\n \nelse\n \nif\n \na\n \n=\n \n30\n;\n \nfalse\n \n{\n\n        \nfmt\n.\nPrintln\n(\nif-a:\n,\n \na\n)\n\n        \nfmt\n.\nPrintln\n(\nif-b:\n,\n \nb\n)\n\n    \n}\n\n\n    \nfmt\n.\nPrintln\n(\na:\n,\n \na\n)\n\n    \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\nif-a: 20\nif-b: 2\na: 20\nb: 2\n\n\n\n\u7b54: \u82e5if\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u90a3\u4e48\u6761\u4ef6\u53e5\u91cc\u7684\u8d4b\u503c\u8bed\u53e5\u4f9d\u7136\u751f\u6548\u3002\u82e5\u6709else if\uff0c\u5219\u4f1a\u4f9d\u6b21\u6267\u884c\uff0c\u76f4\u5230\u5339\u914d\u5230\u4e3a\u6b62\uff0c\u56e0\u6b64\u8c28\u614e\u5728if\u6761\u4ef6\u53e5\u91cc\u5f15\u7528\u5916\u90e8\u53d8\u91cf\u3002", 
            "title": "2. if"
        }, 
        {
            "location": "/flow/if/#_1", 
            "text": "if   x     0   { \n     ...  }   \u652f\u6301  if   x     0   { \n     ...  }   else   if   x     0   { \n     ...  }   else   { \n     ...  }", 
            "title": "\u57fa\u672c\u683c\u5f0f"
        }, 
        {
            "location": "/flow/if/#_2", 
            "text": "if   v   :=   math . Pow ( x ,   n );   v     lim   { \n     ...  }    v\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u53ea\u5728if\u8bed\u53e5\u91cc\u6709\u6548\uff08\u5305\u62ecelse\uff09   \u5e76\u4e0d\u662f\u5fc5\u987b\u8981\u7528\u77ed\u58f0\u660e := \uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684  var   a   int  if   a   =   1 ;   a     2   { \n     fmt . Println ( yes )  }    \u6ce8\u610f  \u65e0\u8bbaa   2\u662f\u5426\u4e3atrue\uff0ca = 1\u90fd\u88ab\u6267\u884c\u4e86\u3002\u56e0\u6b64\u8c28\u614e\u5728if\u6761\u4ef6\u53e5\u91cc\u5f15\u7528\u5916\u90e8\u53d8\u91cf\u505a\u52a8\u4f5c   else if \u4e5f\u53ef\u4ee5\u5e26\u77ed\u58f0\u660e\uff0c\u4f46 else \u4e0d\u80fd\u5e26\u77ed\u58f0\u660e  if   x   :=   0 ;   a     0   { \n     ...  }   else   if   x   :=   1 ;   a     0   { \n     ...  }   else   { \n     ...  }   if \u6761\u4ef6\u53ef\u4ee5\u7528bool\u503c\uff0c\u6bd4\u5982  if   true   { \n     ...  }", 
            "title": "\u77ed\u58f0\u660e"
        }, 
        {
            "location": "/flow/if/#_3", 
            "text": "\u4f8b1. if\u7684\u4ee3\u7801\u5757\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u57df\u5417? package   main  import   fmt  func   main ()   { \n     a   :=   1 \n     b   :=   2 \n\n     if   1     0   { \n         fmt . Println ( a: ,   a ) \n         fmt . Println ( b: ,   b ) \n         a   =   10 \n         b   =   20 \n         a   :=   100 \n         b   :=   200 \n         fmt . Println ( a: ,   a ) \n         fmt . Println ( b: ,   b ) \n     } \n\n     fmt . Println ( a: ,   a ) \n     fmt . Println ( b: ,   b )  }   \u8f93\u51fa a: 1\nb: 2\na: 100\nb: 200\na: 10\nb: 20  \u7b54: if\u7684\u4ee3\u7801\u5757\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u57df \u4f8b2. if\u6761\u4ef6\u4f7f\u7528\u77ed\u58f0\u660e\u65f6\u662f\u72ec\u7acb\u7684\u53d8\u91cf\u8fd8\u662f\u5f15\u7528\u5916\u90e8\u53d8\u91cf? package   main  import   fmt  func   main ()   { \n     a   :=   1 \n     b   :=   2 \n\n     if   a   :=   10000 ;   1     0   { \n         fmt . Println ( a: ,   a ) \n         fmt . Println ( b: ,   b ) \n         a   =   10 \n         b   =   20 \n         a   :=   100 \n         b   :=   200 \n         fmt . Println ( a: ,   a ) \n         fmt . Println ( b: ,   b ) \n     } \n\n     fmt . Println ( a: ,   a ) \n     fmt . Println ( b: ,   b )  }   \u8f93\u51fa a: 10000\nb: 2\na: 100\nb: 200\na: 1\nb: 20  \u7b54: if\u6761\u4ef6\u4f7f\u7528\u77ed\u58f0\u660e\u65f6\u662f\u72ec\u7acb\u7684\u53d8\u91cf\u3002\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u66f4\u80fd\u8bf4\u660e package   main  import   fmt  func   main ()   { \n     b   :=   2 \n\n     if   a   :=   10000 ;   1     0   { \n         fmt . Println ( a: ,   a ) \n         fmt . Println ( b: ,   b ) \n         a   =   10 \n         b   =   20 \n         a   :=   100 \n         b   :=   200 \n         fmt . Println ( a: ,   a ) \n         fmt . Println ( b: ,   b ) \n     } \n\n     fmt . Println ( a: ,   a ) \n     fmt . Println ( b: ,   b )  }   \u62a5\u9519 ./if.go:19: undefined: a  \u5728if\u5916\u5f15\u7528\u53d8\u91cfa\uff0c\u63d0\u793a\u672a\u627e\u5230\uff0c\u56e0\u4e3aa\u53ea\u5728if\u4f5c\u7528\u57df \u4f8b3. if\u6761\u4ef6\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u65f6\u662f\u72ec\u7acb\u7684\u53d8\u91cf\u8fd8\u662f\u5f15\u7528\u5916\u90e8\u53d8\u91cf? package   main  import   fmt  func   main ()   { \n     a   :=   1 \n     b   :=   2 \n\n     if   a   =   10000 ;   1     0   { \n         fmt . Println ( a: ,   a ) \n         fmt . Println ( b: ,   b ) \n         a   =   10 \n         b   =   20 \n         a   :=   100 \n         b   :=   200 \n         fmt . Println ( a: ,   a ) \n         fmt . Println ( b: ,   b ) \n     } \n\n     fmt . Println ( a: ,   a ) \n     fmt . Println ( b: ,   b )  }   \u8f93\u51fa a: 10000\nb: 2\na: 100\nb: 200\na: 10\nb: 20  \u7b54: if\u6761\u4ef6\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u65f6\u662f\u5f15\u7528\u5916\u90e8\u53d8\u91cf \u4f8b4. \u82e5if\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u90a3\u4e48\u6761\u4ef6\u53e5\u91cc\u7684\u8d4b\u503c\u8bed\u53e5\u662f\u5426\u6709\u751f\u6548? package   main  import   fmt  func   main ()   { \n     a   :=   1 \n     b   :=   2 \n\n     if   a   =   10000 ;   false   { \n         fmt . Println ( if-a: ,   a ) \n         fmt . Println ( if-b: ,   b ) \n     } \n\n     fmt . Println ( a: ,   a ) \n     fmt . Println ( b: ,   b )  }   \u8f93\u51fa a: 10000\nb: 2  \u5982\u679c\u6709else if\u5462 package   main  import   fmt  func   main ()   { \n     a   :=   1 \n     b   :=   2 \n\n     if   a   =   10 ;   false   { \n         fmt . Println ( if-a: ,   a ) \n         fmt . Println ( if-b: ,   b ) \n     }   else   if   a   =   20 ;   true   { \n         fmt . Println ( if-a: ,   a ) \n         fmt . Println ( if-b: ,   b ) \n     }   else   if   a   =   30 ;   false   { \n         fmt . Println ( if-a: ,   a ) \n         fmt . Println ( if-b: ,   b ) \n     } \n\n     fmt . Println ( a: ,   a ) \n     fmt . Println ( b: ,   b )  }   \u8f93\u51fa if-a: 20\nif-b: 2\na: 20\nb: 2  \u7b54: \u82e5if\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u90a3\u4e48\u6761\u4ef6\u53e5\u91cc\u7684\u8d4b\u503c\u8bed\u53e5\u4f9d\u7136\u751f\u6548\u3002\u82e5\u6709else if\uff0c\u5219\u4f1a\u4f9d\u6b21\u6267\u884c\uff0c\u76f4\u5230\u5339\u914d\u5230\u4e3a\u6b62\uff0c\u56e0\u6b64\u8c28\u614e\u5728if\u6761\u4ef6\u53e5\u91cc\u5f15\u7528\u5916\u90e8\u53d8\u91cf\u3002", 
            "title": "\u4f5c\u7528\u57df"
        }, 
        {
            "location": "/flow/switch/", 
            "text": "\u8ddf\u53d8\u91cf\n\n\n\n\n\u67d0\u4e2a\u53d8\u91cf\u7b49\u4e8eA\u6216\u8005\u7b49\u4e8eB\n\n\nswitch\n \nvarA\n \n{\n\n\ncase\n \n0\n:\n\n    \n...\n\n\ncase\n \n1\n:\n\n    \n...\n\n\ndefault\n:\n\n    \n...\n\n\n}\n\n\n\n\n\n\u4e0d\u8ddf\u53d8\u91cf\n\n\n\n\n\u76f8\u5f53\u4e8eif-else if-else if-else\n\n\nswitch\n \n{\n\n\ncase\n \nvarA\n \n \n2\n:\n\n    \n...\n\n\ncase\n \nvarA\n \n \n0\n:\n\n    \n...\n\n\ndefault\n:\n\n    \n...\n\n\n}\n\n\n\n\n\nswitch { ... }\n \u7b49\u540c\u4e8e \nswitch true { ... }\n\n\n\u77ed\u58f0\u660e\n\n\n\n\n2\u79cd\u77ed\u58f0\u660e\u5f62\u5f0f\uff1a\n\n\n\n\n\n\n\u8ddf\u53d8\u91cf\n\n\nswitch\n \nos\n \n:=\n \nruntime\n.\nGOOS\n;\n \nos\n \n{\n\n\ncase\n \ndarwin\n:\n\n    \nfmt\n.\nPrintln\n(\nOS X.\n)\n\n\ncase\n \nlinux\n:\n\n    \nfmt\n.\nPrintln\n(\nLinux.\n)\n\n\ndefault\n:\n\n    \nfmt\n.\nPrintf\n(\n%s.\n,\n \nos\n)\n\n\n}\n\n\n\n\n\n\n\nos\u53d8\u91cf\u4f5c\u7528\u57df\u53ea\u5728switch\u91cc\n\n\n\n\n\n\n\n\n\u4e0d\u8ddf\u53d8\u91cf\uff1a\n\n\nswitch\n \nvarA\n \n:=\n \n5\n;\n \n{\n \n//\u6ce8\u610f\u8fd9\u91cc\u6709\u4e2a\u5206\u53f7\uff0c\u5982\u679c\u6ca1\u6709\u5206\u53f7\u4f1a\u62a5\u9519\n\n\ncase\n \nvarA\n \n \n5\n:\n\n    \nfmt\n.\nPrintln\n(\n5\n)\n\n\ncase\n \nvarA\n \n==\n \n5\n:\n\n    \nfmt\n.\nPrintln\n(\n==5\n)\n\n\ncase\n \nvarA\n \n \n5\n:\n\n    \nfmt\n.\nPrintln\n(\n5\n)\n\n\n}\n\n\n\n\n\n\n\n\n\n\u5c31\u662f\u8bf4switch\u5206\u53f7\u540e\u9762\u5982\u679c\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5219case\u5c31\u662f\u5224\u65ad\u8fd9\u4e2a\u53d8\u91cf\u503c\u7b49\u4e8e\u591a\u5c11\uff0c\u5982\u679c\u5206\u53f7\u540e\u9762\u6ca1\u53d8\u91cf\uff0c\u5219case\u5199\u6761\u4ef6\u53e5\uff0c\u5f53true\u65f6\u89e6\u53d1\n\n\n\u6ce8\u610f: case\u91cc\u4e0d\u80fd\u7528\u77ed\u58f0\u660e\u6216\u8d4b\u503c\u8bed\u53e5\n\n\n\u4f5c\u7528\u57df\n\n\n\n\n\u4f8b1. switch\u7684\u77ed\u58f0\u660e\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u57df\u5417?\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \n3\n\n\n    \nswitch\n \na\n \n:=\n \n5\n;\n \n{\n \n//\u6ce8\u610f\u8fd9\u91cc\u6709\u4e2a\u5206\u53f7\uff0c\u5982\u679c\u6ca1\u6709\u5206\u53f7\u4f1a\u62a5\u9519\n\n    \ncase\n \na\n \n \n5\n:\n\n        \nfmt\n.\nPrintln\n(\n5\n)\n\n    \ncase\n \na\n \n==\n \n5\n:\n\n        \nfmt\n.\nPrintln\n(\n==5\n)\n\n    \ncase\n \na\n \n \n5\n:\n\n        \nfmt\n.\nPrintln\n(\n5\n)\n\n    \n}\n\n\n    \nfmt\n.\nPrintln\n(\na\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\n==5\n3\n\n\n\n\u7b54: switch\u7684\u77ed\u58f0\u660e\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u57df\n\u4f8b2. switch\u7684\u6bcf\u4e2acase\u5747\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u57df\u5417?\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ni\n \n:=\n \n1\n\n\n    \nswitch\n \na\n \n:=\n \n5\n;\n \n{\n \n//\u6ce8\u610f\u8fd9\u91cc\u6709\u4e2a\u5206\u53f7\uff0c\u5982\u679c\u6ca1\u6709\u5206\u53f7\u4f1a\u62a5\u9519\n\n    \ncase\n \na\n \n \n5\n:\n\n        \nfmt\n.\nPrintln\n(\n5\n)\n\n        \ni\n \n:=\n \n2\n\n        \nfmt\n.\nPrintln\n(\ni\n)\n\n    \ncase\n \na\n \n==\n \n5\n:\n\n        \nfmt\n.\nPrintln\n(\n==5\n)\n\n        \ni\n \n:=\n \n3\n\n        \nfmt\n.\nPrintln\n(\ni\n)\n\n    \ncase\n \na\n \n \n5\n:\n\n        \nfmt\n.\nPrintln\n(\n5\n)\n\n        \ni\n \n:=\n \n4\n\n        \nfmt\n.\nPrintln\n(\ni\n)\n\n    \n}\n\n\n    \nfmt\n.\nPrintln\n(\ni\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\n==5\n3\n1\n\n\n\n\u7b54: switch\u7684\u6bcf\u4e2acase\u5747\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u57df\n\u4f8b3. switch\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u65f6\u662f\u72ec\u7acb\u53d8\u91cf\u8fd8\u662f\u5f15\u7528\u5916\u90e8\u53d8\u91cf?\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \n3\n\n\n    \nswitch\n \na\n \n=\n \n5\n;\n \n{\n \n//\u6ce8\u610f\u8fd9\u91cc\u6709\u4e2a\u5206\u53f7\uff0c\u5982\u679c\u6ca1\u6709\u5206\u53f7\u4f1a\u62a5\u9519\n\n    \ncase\n \na\n \n \n5\n:\n\n        \nfmt\n.\nPrintln\n(\n5\n)\n\n    \ncase\n \na\n \n==\n \n5\n:\n\n        \nfmt\n.\nPrintln\n(\n==5\n)\n\n    \ncase\n \na\n \n \n5\n:\n\n        \nfmt\n.\nPrintln\n(\n5\n)\n\n    \n}\n\n\n    \nfmt\n.\nPrintln\n(\na\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\n==5\n5\n\n\n\n\u7b54: switch\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u65f6\u662f\u5f15\u7528\u5916\u90e8\u53d8\u91cf", 
            "title": "3. switch"
        }, 
        {
            "location": "/flow/switch/#_1", 
            "text": "\u67d0\u4e2a\u53d8\u91cf\u7b49\u4e8eA\u6216\u8005\u7b49\u4e8eB  switch   varA   {  case   0 : \n     ...  case   1 : \n     ...  default : \n     ...  }", 
            "title": "\u8ddf\u53d8\u91cf"
        }, 
        {
            "location": "/flow/switch/#_2", 
            "text": "\u76f8\u5f53\u4e8eif-else if-else if-else  switch   {  case   varA     2 : \n     ...  case   varA     0 : \n     ...  default : \n     ...  }   switch { ... }  \u7b49\u540c\u4e8e  switch true { ... }", 
            "title": "\u4e0d\u8ddf\u53d8\u91cf"
        }, 
        {
            "location": "/flow/switch/#_3", 
            "text": "2\u79cd\u77ed\u58f0\u660e\u5f62\u5f0f\uff1a    \u8ddf\u53d8\u91cf  switch   os   :=   runtime . GOOS ;   os   {  case   darwin : \n     fmt . Println ( OS X. )  case   linux : \n     fmt . Println ( Linux. )  default : \n     fmt . Printf ( %s. ,   os )  }    os\u53d8\u91cf\u4f5c\u7528\u57df\u53ea\u5728switch\u91cc     \u4e0d\u8ddf\u53d8\u91cf\uff1a  switch   varA   :=   5 ;   {   //\u6ce8\u610f\u8fd9\u91cc\u6709\u4e2a\u5206\u53f7\uff0c\u5982\u679c\u6ca1\u6709\u5206\u53f7\u4f1a\u62a5\u9519  case   varA     5 : \n     fmt . Println ( 5 )  case   varA   ==   5 : \n     fmt . Println ( ==5 )  case   varA     5 : \n     fmt . Println ( 5 )  }     \u5c31\u662f\u8bf4switch\u5206\u53f7\u540e\u9762\u5982\u679c\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5219case\u5c31\u662f\u5224\u65ad\u8fd9\u4e2a\u53d8\u91cf\u503c\u7b49\u4e8e\u591a\u5c11\uff0c\u5982\u679c\u5206\u53f7\u540e\u9762\u6ca1\u53d8\u91cf\uff0c\u5219case\u5199\u6761\u4ef6\u53e5\uff0c\u5f53true\u65f6\u89e6\u53d1  \u6ce8\u610f: case\u91cc\u4e0d\u80fd\u7528\u77ed\u58f0\u660e\u6216\u8d4b\u503c\u8bed\u53e5", 
            "title": "\u77ed\u58f0\u660e"
        }, 
        {
            "location": "/flow/switch/#_4", 
            "text": "\u4f8b1. switch\u7684\u77ed\u58f0\u660e\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u57df\u5417? package   main  import   fmt  func   main ()   { \n     a   :=   3 \n\n     switch   a   :=   5 ;   {   //\u6ce8\u610f\u8fd9\u91cc\u6709\u4e2a\u5206\u53f7\uff0c\u5982\u679c\u6ca1\u6709\u5206\u53f7\u4f1a\u62a5\u9519 \n     case   a     5 : \n         fmt . Println ( 5 ) \n     case   a   ==   5 : \n         fmt . Println ( ==5 ) \n     case   a     5 : \n         fmt . Println ( 5 ) \n     } \n\n     fmt . Println ( a )  }   \u8f93\u51fa ==5\n3  \u7b54: switch\u7684\u77ed\u58f0\u660e\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u57df \u4f8b2. switch\u7684\u6bcf\u4e2acase\u5747\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u57df\u5417? package   main  import   fmt  func   main ()   { \n     i   :=   1 \n\n     switch   a   :=   5 ;   {   //\u6ce8\u610f\u8fd9\u91cc\u6709\u4e2a\u5206\u53f7\uff0c\u5982\u679c\u6ca1\u6709\u5206\u53f7\u4f1a\u62a5\u9519 \n     case   a     5 : \n         fmt . Println ( 5 ) \n         i   :=   2 \n         fmt . Println ( i ) \n     case   a   ==   5 : \n         fmt . Println ( ==5 ) \n         i   :=   3 \n         fmt . Println ( i ) \n     case   a     5 : \n         fmt . Println ( 5 ) \n         i   :=   4 \n         fmt . Println ( i ) \n     } \n\n     fmt . Println ( i )  }   \u8f93\u51fa ==5\n3\n1  \u7b54: switch\u7684\u6bcf\u4e2acase\u5747\u662f\u72ec\u7acb\u7684\u4f5c\u7528\u57df \u4f8b3. switch\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u65f6\u662f\u72ec\u7acb\u53d8\u91cf\u8fd8\u662f\u5f15\u7528\u5916\u90e8\u53d8\u91cf? package   main  import   fmt  func   main ()   { \n     a   :=   3 \n\n     switch   a   =   5 ;   {   //\u6ce8\u610f\u8fd9\u91cc\u6709\u4e2a\u5206\u53f7\uff0c\u5982\u679c\u6ca1\u6709\u5206\u53f7\u4f1a\u62a5\u9519 \n     case   a     5 : \n         fmt . Println ( 5 ) \n     case   a   ==   5 : \n         fmt . Println ( ==5 ) \n     case   a     5 : \n         fmt . Println ( 5 ) \n     } \n\n     fmt . Println ( a )  }   \u8f93\u51fa ==5\n5  \u7b54: switch\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u65f6\u662f\u5f15\u7528\u5916\u90e8\u53d8\u91cf", 
            "title": "\u4f5c\u7528\u57df"
        }, 
        {
            "location": "/flow/defer/", 
            "text": "defer\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u63a8\u8fdf\u6267\u884c\u7684\u610f\u601d\n\n\ndefer\u4f7f\u5f97\u540e\u9762\u8ddf\u7684\u51fd\u6570\u5728\u5f53\u524d\u51fd\u6570\u7ed3\u675f\u4e4b\u540e\u6267\u884c\uff08\u5982\u679c\u6709return\uff0c\u5c31\u662f\u5728reutrn\u4e4b\u524d\u6267\u884c\uff09\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nfunc1\n(\na\n \nint\n)\n \nint\n \n{\n\n    \nreturn\n \na\n \n+\n \n1\n\n\n}\n\n\n\nfunc\n \nfunc2\n(\na\n \nint\n)\n \nint\n \n{\n\n    \ndefer\n \nfmt\n.\nPrintln\n(\nfunc1\n(\n100\n))\n\n    \nfmt\n.\nPrintln\n(\naa\n)\n\n    \nreturn\n \na\n \n+\n \n1\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nfunc2\n(\n10\n))\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\naa\n101\n11\n\n\n\n\ndefer\u6808\uff1a\u5982\u679c\u6709\u591a\u4e2adefer\uff0c\u5219\u662f\u4ece\u540e\u5f80\u524d\u6267\u884c\n\uff08\u539f\u8bdd\uff1a\u5ef6\u8fdf\u7684\u51fd\u6570\u8c03\u7528\u88ab\u538b\u5165\u4e00\u4e2a\u6808\u4e2d\u3002\u5f53\u51fd\u6570\u8fd4\u56de\u65f6\uff0c \u4f1a\u6309\u7167\u540e\u8fdb\u5148\u51fa\u7684\u987a\u5e8f\u8c03\u7528\u88ab\u5ef6\u8fdf\u7684\u51fd\u6570\u8c03\u7528\u3002\uff09\uff0c\u6bd4\u5982\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nfunc1\n(\na\n \nint\n)\n \nint\n \n{\n\n    \nreturn\n \na\n \n+\n \n1\n\n\n}\n\n\n\nfunc\n \nfunc2\n(\na\n \nint\n)\n \nint\n \n{\n\n    \ndefer\n \nfmt\n.\nPrintln\n(\nfunc1\n(\n100\n))\n\n    \ndefer\n \nfmt\n.\nPrintln\n(\nfunc1\n(\n200\n))\n\n    \nfmt\n.\nPrintln\n(\naa\n)\n\n    \nreturn\n \na\n \n+\n \n1\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nfunc2\n(\n10\n))\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\naa\n201\n101\n11", 
            "title": "4. defer"
        }, 
        {
            "location": "/datatype/pointer/", 
            "text": "\u58f0\u660e\u6307\u9488\n\n\n\n\nvar\n \np\n \n*\nint\n\n\np\n \n=\n \ni\n\n\n\n\n\n\u5176\u4ed6\u58f0\u660e\u65b9\u5f0f\nvar\n \np\n \n*\nint\n \n=\n \ni\n\n\n\n\nvar\n \np\n \n=\n \ni\n\n\n\n\np\n \n:=\n \ni\n\n\n\n\n\u7b26\u53f7\u4f1a\u751f\u6210\u6307\u9488\uff0c\u5982\n\n\ni\n \n:=\n \n42\n\n\np\n \n:=\n \ni\n\n\n\n\n\n*\n\u7b26\u53f7\u8bfb\u53d6\u6307\u9488\u6307\u5411\u7684\u503c\uff0c\u5982\n\n\nfmt\n.\nPrintln\n(\n*\np\n)\n\n\n\n\n\n\u53ef\u4ee5\u53e0\u52a0\uff0c\u6bd4\u5982\uff1a\n\n\ni\n \n:=\n \n42\n\n\np\n \n:=\n \ni\n\n\nq\n \n:=\n \np\n\n\nfmt\n.\nPrintf\n(\n%T\\n\n,\n \np\n)\n\n\nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nq\n)\n\n\nfmt\n.\nPrintln\n(\n*\np\n)\n\n\nfmt\n.\nPrintln\n(\np\n)\n\n\nfmt\n.\nPrintln\n(\n*\nq\n)\n\n\nfmt\n.\nPrintln\n(\n**\nq\n)\n\n\n\n\n\n\u8f93\u51fa\n\n\n*int\n**int\n42\n0xc420056168\n0xc420056168\n42\n\n\n\n\n\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u53e0\u52a0\uff0c\u6bd4\u5982\uff1a\n\n\nx\n \n:=\n \n42\n\n\np\n \n:=\n \nx\n\n\n*\np\n \n=\n \n11\n\n\n*\n*\np\n \n=\n \n12\n\n\n*\n*\n*\np\n \n=\n \n13\n\n\nfmt\n.\nPrintln\n(\nx\n)\n\n\n\n\n\n\u8f93\u51fa\n\n\n13\n\n\n\n\n\u5706\u62ec\u53f7\n\n\n\n\n\u5706\u62ec\u53f7\u53ef\u4ee5\u505a\u5206\u9694\u4f7f\u7528\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nx\n \n:=\n \n42\n\n    \np\n \n:=\n \nx\n\n    \n*\np\n \n=\n \n11\n\n    \n*\n*\np\n++\n\n    \n*\n*\n*\np\n++\n\n    \n*\n*\n*\n(\np\n)\n++\n\n    \n*\n*\n(\n*\np\n)\n++\n\n    \n*\n*\n(\n*\np\n)\n++\n\n    \n*\n(\n*\n*\np\n)\n++\n\n    \n*\n(\n*\n*\np\n)\n++\n\n    \n(\n*\n*\n*\np\n)\n++\n\n    \nfmt\n.\nPrintln\n(\nx\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n19\n\n\n\n\n\u7c7b\u578b\u8f6c\u6362\n\n\n\n\n\u5bf9\u4e8e\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cf\u505a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e5f\u9700\u8981\u5706\u62ec\u53f7\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nfoo\n \nstruct\n \n{}\n\n\n\nfunc\n \n(\nf\n \n*\nfoo\n)\n \nhello\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nf hello\n)\n\n\n}\n\n\n\ntype\n \nbar\n \nstruct\n \n{}\n\n\n\nfunc\n \n(\nb\n \n*\nbar\n)\n \nhello\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nb hello\n)\n\n\n    \n(\n*\nfoo\n)(\nb\n).\nhello\n()\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nb\n \nbar\n\n    \nb\n.\nhello\n()\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nb hello\nf hello", 
            "title": "1. pointer"
        }, 
        {
            "location": "/datatype/pointer/#_1", 
            "text": "var   p   * int  p   =   i   \u5176\u4ed6\u58f0\u660e\u65b9\u5f0f var   p   * int   =   i   var   p   =   i   p   :=   i   \u7b26\u53f7\u4f1a\u751f\u6210\u6307\u9488\uff0c\u5982  i   :=   42  p   :=   i   * \u7b26\u53f7\u8bfb\u53d6\u6307\u9488\u6307\u5411\u7684\u503c\uff0c\u5982  fmt . Println ( * p )   \u53ef\u4ee5\u53e0\u52a0\uff0c\u6bd4\u5982\uff1a  i   :=   42  p   :=   i  q   :=   p  fmt . Printf ( %T\\n ,   p )  fmt . Printf ( %T\\n ,   q )  fmt . Println ( * p )  fmt . Println ( p )  fmt . Println ( * q )  fmt . Println ( ** q )   \u8f93\u51fa  *int\n**int\n42\n0xc420056168\n0xc420056168\n42  \u4e5f\u53ef\u4ee5\u8fd9\u4e48\u53e0\u52a0\uff0c\u6bd4\u5982\uff1a  x   :=   42  p   :=   x  * p   =   11  * * p   =   12  * * * p   =   13  fmt . Println ( x )   \u8f93\u51fa  13", 
            "title": "\u58f0\u660e\u6307\u9488"
        }, 
        {
            "location": "/datatype/pointer/#_2", 
            "text": "\u5706\u62ec\u53f7\u53ef\u4ee5\u505a\u5206\u9694\u4f7f\u7528  package   main  import   fmt  func   main ()   { \n     x   :=   42 \n     p   :=   x \n     * p   =   11 \n     * * p ++ \n     * * * p ++ \n     * * * ( p ) ++ \n     * * ( * p ) ++ \n     * * ( * p ) ++ \n     * ( * * p ) ++ \n     * ( * * p ) ++ \n     ( * * * p ) ++ \n     fmt . Println ( x )  }   \u8f93\u51fa  19", 
            "title": "\u5706\u62ec\u53f7"
        }, 
        {
            "location": "/datatype/pointer/#_3", 
            "text": "\u5bf9\u4e8e\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cf\u505a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e5f\u9700\u8981\u5706\u62ec\u53f7  package   main  import   fmt  type   foo   struct   {}  func   ( f   * foo )   hello ()   { \n     fmt . Println ( f hello )  }  type   bar   struct   {}  func   ( b   * bar )   hello ()   { \n     fmt . Println ( b hello )       ( * foo )( b ). hello ()  }  func   main ()   { \n     var   b   bar \n     b . hello ()  }   \u8f93\u51fa  b hello\nf hello", 
            "title": "\u7c7b\u578b\u8f6c\u6362"
        }, 
        {
            "location": "/datatype/struct_main/", 
            "text": "type\n \nvertex\n \nstruct\n \n{\n\n    \nx\n \nint\n\n    \ny\n \nint\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nvertex\n{\n1\n,\n \n2\n})\n   \n//\u6253\u5370\u6574\u4e2astruct\n\n    \nv\n \n:=\n \nvertex\n{\n1\n,\n \n2\n}\n\n    \nv\n.\nx\n \n=\n \n4\n\n    \nfmt\n.\nPrintln\n(\nv\n.\nx\n)\n            \n//\u4ec5\u6253\u5370x\u8fd9\u4e2a\u5b57\u6bb5\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nv\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n{1 2}\n4\nmain.vertex\n\n\n\n\n\u4e0a\u9762\u8fd9\u79cd\u65b9\u6cd5\u6700\u5e38\u89c1\uff0c\u4f46\u8981\u6ce8\u610f\uff0cv\u8fd9\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u662fvertex\uff08\u51c6\u786e\u8bf4\u662fmain.vertex\uff09\uff0c\u800c\u4e0d\u662fstruct\u3002\n\n\n\u771f\u6b63\u7684 \nstruct\u7c7b\u578b\n \u5e94\u8be5\u662f\u4ee5\u4e0b\u4f8b\u5b50\u8fd9\u6837\u76f4\u63a5\u7528struct{}\u58f0\u660e\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nvertex\n \nstruct\n \n{\n\n    \na\n,\n \nb\n \nint\n\n    \nc\n    \nstring\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns1\n \n:=\n \nstruct\n{\na\n,\n \nb\n \nint\n;\n \nc\n \nstring\n}{\n1\n,\n \n2\n,\n \nhello\n}\n\n    \nfmt\n.\nPrintf\n(\n%T,%v,%+v\\n\n,\n \ns1\n,\n \ns1\n,\n \ns1\n)\n\n\n    \ns2\n \n:=\n \nstruct\n{\na\n,\n \nb\n \nint\n;\n \nc\n \nstring\n}{\na\n:\n1\n,\n \nb\n:\n2\n,\n \nc\n:\nhello\n}\n\n    \nfmt\n.\nPrintf\n(\n%T,%v,%+v\\n\n,\n \ns2\n,\n \ns2\n,\n \ns2\n)\n\n\n    \ns3\n \n:=\n \nstruct\n{\na\n \nint\n;\n \nb\n \nint\n;\n \nc\n \nstring\n}{\n1\n,\n \n2\n,\n \nhello\n}\n\n    \nfmt\n.\nPrintf\n(\n%T,%v,%+v\\n\n,\n \ns3\n,\n \ns3\n,\n \ns3\n)\n\n\n    \ns4\n \n:=\n \nstruct\n{\na\n \nint\n;\n \nb\n \nint\n;\n \nc\n \nstring\n}{\na\n:\n1\n,\n \nb\n:\n2\n,\n \nc\n:\nhello\n}\n\n    \nfmt\n.\nPrintf\n(\n%T,%v,%+v\\n\n,\n \ns4\n,\n \ns4\n,\n \ns4\n)\n\n\n    \ns5\n \n:=\n \nvertex\n{\na\n:\n1\n,\n \nb\n:\n2\n,\n \nc\n:\nhello\n}\n\n    \nfmt\n.\nPrintf\n(\n%T,%v,%+v\\n\n,\n \ns5\n,\n \ns5\n,\n \ns5\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nstruct { a int; b int; c string },{1 2 hello},{a:1 b:2 c:hello}\nstruct { a int; b int; c string },{1 2 hello},{a:1 b:2 c:hello}\nstruct { a int; b int; c string },{1 2 hello},{a:1 b:2 c:hello}\nstruct { a int; b int; c string },{1 2 hello},{a:1 b:2 c:hello}\nmain.vertex,{1 2 hello},{a:1 b:2 c:hello}\n\n\n\n\n\u53ef\u4ee5\u770b\u5230\u76f4\u63a5\u7528struct{}\u58f0\u660e\u7684\u53d8\u91cf\u7684\u7c7b\u578b\u624d\u662fstruct{...}", 
            "title": "2.1. \u58f0\u660e"
        }, 
        {
            "location": "/datatype/struct_export/", 
            "text": "\u9996\u5b57\u6bcd\u5927\u5199\u624d\u53ef\u4ee5\u88ab\u5176\u4ed6\u6a21\u5757\u5bfc\u5165\u5f15\u7528\uff0c\u5305\u542bstruct\u540d\u548c\u5176\u4e2d\u5143\u7d20\uff0c\u53ea\u6709\u5927\u5199\u7684\u624d\u53ef\u88ab\u5176\u4ed6\u6a21\u5757\u5bfc\u5165\u5f15\u7528\u3002\u4f8b\u5982\n\n\n\n\n\n\n\u8fd9\u6837\u90fd\u4e0d\u80fd\u88ab\u5176\u4ed6\u6a21\u5757\u5f15\u7528\n\n\ntype\n \nvertex\n \nstruct\n \n{\n\n    \nx\n \nint\n\n    \ny\n \nint\n\n\n}\n\n\n\n\n\n\n\n\n\n\u8fd9\u6837\u53ea\u6709struct\u53ef\u4ee5\u88ab\u5176\u4ed6\u6a21\u5757\u5f15\u7528\uff0c\u4f46\u662fstruct\u4e2d\u7684\u5143\u7d20\u4e0d\u80fd\u88ab\u5176\u4ed6\u6a21\u5757\u5f15\u7528\n\n\ntype\n \nVertex\n \nstruct\n \n{\n\n    \nx\n \nint\n\n    \ny\n \nint\n\n\n}\n\n\n\n\n\n\n\n\n\n\u8fd9\u6837struct\u548cstruct\u4e2d\u7684\u5143\u7d20\u90fd\u53ef\u4ee5\u88ab\u5176\u4ed6\u6a21\u5757\u5f15\u7528\n\n\ntype\n \nVertex\n \nstruct\n \n{\n\n    \nX\n \nint\n\n    \nY\n \nint\n\n\n}", 
            "title": "2.2. \u5bfc\u51fa\u540d"
        }, 
        {
            "location": "/datatype/struct_pointer/", 
            "text": "type\n \nVertex\n \nstruct\n \n{\n\n    \nX\n \nint\n\n    \nY\n \nint\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nv\n \n:=\n \nVertex\n{\n1\n,\n \n2\n}\n\n    \np\n \n:=\n \nv\n\n    \np\n.\nX\n \n=\n \n1e9\n\n    \nfmt\n.\nPrintln\n(\nv\n)\n\n\n}\n\n\n\n\n\np.X\n\u539f\u672c\u5e94\u8be5\u5199\u6210\n(*p).X\n\uff0c\u4f46golang\u652f\u6301\np.X\n\u8fd9\u6837\u5199\u6cd5\uff0c\u56e0\u6b64\u8fd92\u79cd\u5199\u6cd5\u7684\u6548\u679c\u662f\u4e00\u6837\u7684", 
            "title": "2.3. struct\u6307\u9488"
        }, 
        {
            "location": "/datatype/struct_literal/", 
            "text": "type\n \nVertex\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nvar\n \n(\n\n    \nv1\n \n=\n \nVertex\n{\n1\n,\n \n2\n}\n  \n// has type Vertex\n\n    \nv2\n \n=\n \nVertex\n{\nX\n:\n \n1\n}\n  \n// Y:0 is implicit\n\n    \nv3\n \n=\n \nVertex\n{}\n      \n// X:0 and Y:0\n\n    \np\n  \n=\n \nVertex\n{\n1\n,\n \n2\n}\n \n// has type *Vertex\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nv1\n,\n \np\n,\n \nv2\n,\n \nv3\n)\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \np\n)\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \n*\np\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n{1 2} \n{1 2} {1 0} {0 0}\n*main.Vertex\nmain.Vertex\n\n\n\n\n\n\nNote\n\n\n\n\n\u58f0\u660e\u591a\u4e2a\u53d8\u91cf\u65f6\u5019\u53ef\u4ee5\u7528\nvar (...)\n\n\nv2 = Vertex{X: 1}\n\u8fd9\u6837\u8868\u793aX\u4e3a1\uff0c\u5176\u4ed6\u90fd\u4e3a\u7c7b\u578b\u63a8\u5bfc\u7684\u9ed8\u8ba4\u503c\n\n\n\u8fd9\u91ccstruct\u6307\u9488\u7c7b\u578b\u662f\n*main.Vertex\n\n\n\n\n\n\n\u5728struct\u58f0\u660e\u7ae0\u8282\u4e5f\u6709\u63d0\u5230literal", 
            "title": "2.4. literal"
        }, 
        {
            "location": "/datatype/struct_anon/", 
            "text": "\u5982\u679c\u53ea\u662f\u4e34\u65f6\u4f7f\u7528struct\u4e00\u6b21\uff0c\u800c\u4e0d\u662f\u591a\u6b21\u4f7f\u7528\uff0c\u7528\u533f\u540dstruct\u5373\u53ef\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \nstruct\n{\nname\n \nstring\n}{\nname\n:\n \nhello\n}\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \na\n)\n\n    \nfmt\n.\nPrintf\n(\n%v\\n\n,\n \na\n)\n\n    \nfmt\n.\nPrintln\n(\na\n.\nname\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nstruct { name string }\n{hello}\nhello", 
            "title": "2.5. \u533f\u540dstruct"
        }, 
        {
            "location": "/datatype/struct_interface_element/", 
            "text": "\u8be6\u89c1\n\u63a5\u53e3\u7ae0\u8282-struct\u7684\u5143\u7d20", 
            "title": "2.6. \u63a5\u53e3\u4f5c\u4e3astruct\u5143\u7d20"
        }, 
        {
            "location": "/datatype/struct_struct_element/", 
            "text": "go\u53ef\u4ee5\u6a21\u62df\u9762\u5411\u5bf9\u8c61\u4e2d\u7684\u7ee7\u627f\uff08\u51c6\u786e\u53eb\u6cd5\u662f\u5d4c\u5165\uff0c\u82f1\u8bed\u53ebembed\uff0c\u800c\u4e0d\u662finherit\uff09\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nDog\n \nstruct\n \n{\n\n    \nname\n \nstring\n\n\n}\n\n\n\ntype\n \nBDog\n \nstruct\n \n{\n\n    \nDog\n\n    \nname\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nDog\n)\n \ncallMyName\n()\n \n{\n\n    \nfmt\n.\nPrintf\n(\nmy name is %q\\n\n,\n \nthis\n.\nname\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nb\n \n:=\n \nnew\n(\nBDog\n)\n\n    \nb\n.\nname\n \n=\n \nthis is a BDog name\n\n    \nb\n.\nDog\n.\nname\n \n=\n \nthis is a Dog name\n\n    \nb\n.\ncallMyName\n()\n\n\n}\n\n\n\n\n\n\n\nNote\n\n\n\u4e0a\u9762\nb := new(BDog)\n\u53ef\u4ee5\u7528\nb := BDog{}\n\u66ff\u4ee3\uff0c\u4f46\u8fd92\u8005\u662f\u6709\u4e00\u70b9\u533a\u522b\u7684\uff0c\u533a\u522b\u5728\u4e8e\u524d\u8005\u662f\u6307\u9488\uff0c\u8be6\u89c1\nnew\n\n\n\n\n\u8f93\u51fa\n\n\nmy name is \nthis is a Dog name\n\n\n\n\n\n\n\nWarning\n\n\n\u4e0a\u9762callMyName\u662fDog\u624d\u6709\u7684\u65b9\u6cd5\uff0c\u800cBDog\u6ca1\u6709\uff0c\u4f46\u662f\u5374\u80fd\u8f93\u51fa\uff0c\u5e76\u4e14\u8f93\u51fa\u7684\u662fDog.name\u7684\u5185\u5bb9\u3002\n\n\n\u56e0\u4e3a\uff1aGo\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u68c0\u67e5\u8fc7\u7a0b\uff08\u4e0d\u662f\u5728\u8fd0\u884c\u65f6\u5019\u68c0\u67e5\uff09\u4e2d\uff0c\u4f1a\u53bb\u904d\u5386\u7ed3\u6784\u4e2d\u7684\u6210\u5458\uff0c\u5e76\u68c0\u67e5\u6210\u5458\u4e2d\u662f\u5426\u6709\u652f\u6301callMyName()\u7684\u8c03\u7528\u3002\u5982\u679c\u53ea\u627e\u5230\u4e00\u4e2a\u6210\u5458\u652f\u6301\u8fd9\u79cd\u8c03\u7528\uff0c\u90a3\u4e48b.callMyName()\u662f\u5408\u6cd5\u7684\u3002\u5982\u679c\u662f\u4e24\u4e2a\u6216\u8005\u4e24\u4e2a\u4ee5\u4e0a\u7684\u6210\u5458\u90fd\u652f\u6301\uff0c\u90a3\u4e48\u5c31\u4f1a\u62a5\u4e00\u4e2a\u8c03\u7528\u6709\u6b67\u4e49\u7684\u9519\u8bef\"ambiguous selector b.callMyName\"\u3002\n\n\n\n\n\u6269\u5c55\u4e00\u4e0b\uff0c\u628aDog\u653e\u5230\u4e00\u4e2a\u5305\u91cc\uff0c\u5bfc\u5165\u8fdb\u6765\uff1a\n\n\ndog.go\n\n\npackage\n \ndog\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nDog\n \nstruct\n \n{\n\n\n    \nName\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nDog\n)\n \nCallMyName\n()\n \n{\n\n    \nfmt\n.\nPrintf\n(\nDog my name is %q\\n\n,\n \nthis\n.\nName\n)\n\n\n}\n\n\n\n\n\n\n\n\u6ce8\u610fDog struct\u91ccName\u6539\u6210\u4e86\u5927\u5199\n\n\n\n\nmain.go\n\n\npackage\n \nmain\n\n\n\nimport\n \ngithub.com/cyent/repo1/dog\n\n\n\ntype\n \nBDog\n \nstruct\n \n{\n\n    \ndog\n.\nDog\n\n    \nname\n \nstring\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nb\n \n:=\n \nnew\n(\nBDog\n)\n\n\n    \nb\n.\nName\n \n=\n \nthis is a Dog name\n\n\n    \nb\n.\nCallMyName\n()\n\n\n}\n\n\n\n\n\n\n\n\u6ce8\u610fb.Name\u662f\u5927\u5199\n\n\n\n\n\u8f93\u51fa\u4e5f\u662f\n\n\nDog my name is \nthis is a Dog name\n\n\n\n\n\n\u53ef\u4ee5\u628ab.Name\u6539\u4e3ab.Dog.Name\uff0c\u5373\n\n\npackage\n \nmain\n\n\n\nimport\n \ngithub.com/cyent/repo1/dog\n\n\n\ntype\n \nBDog\n \nstruct\n \n{\n\n    \ndog\n.\nDog\n\n    \nname\n \nstring\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nb\n \n:=\n \nnew\n(\nBDog\n)\n\n\n    \nb\n.\nDog\n.\nName\n \n=\n \nthis is a Dog name\n\n\n    \nb\n.\nCallMyName\n()\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\u4e5f\u662f\n\n\nDog my name is \nthis is a Dog name\n\n\n\n\n\nb.Name\u548cb.Dog.Name\u662f\u6709\u533a\u522b\u7684\uff0c\u53ea\u8981\u628aBDog\u7ed3\u6784\u4f53\u91cc\u7684name\u4e5f\u6539\u6210Name\u5c31\u770b\u5230\u533a\u522b\u4e86\n\n\npackage\n \nmain\n\n\n\nimport\n \ngithub.com/cyent/repo1/dog\n\n\n\ntype\n \nBDog\n \nstruct\n \n{\n\n    \ndog\n.\nDog\n\n\n    \nName\n \nstring\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nb\n \n:=\n \nnew\n(\nBDog\n)\n\n    \nb\n.\nDog\n.\nName\n \n=\n \nthis is a Dog name\n\n    \nb\n.\nCallMyName\n()\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nDog my name is \nthis is a Dog name\n\n\n\n\n\n\u73b0\u5728\u6539\u6210\n\n\npackage\n \nmain\n\n\n\nimport\n \ngithub.com/cyent/repo1/dog\n\n\n\ntype\n \nBDog\n \nstruct\n \n{\n\n    \ndog\n.\nDog\n\n    \nName\n \nstring\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nb\n \n:=\n \nnew\n(\nBDog\n)\n\n\n    \nb\n.\nName\n \n=\n \nthis is a Dog name\n\n\n    \nb\n.\nCallMyName\n()\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nDog my name is \n\n\n\n\n\n\u53ef\u4ee5\u770b\u5230\u533a\u522b\uff1a\u5f53\u81ea\u8eabstruct\u91cc\u7684\u5143\u7d20\u540d\u548cembed\u5bfc\u5165\u7684\u5143\u7d20\u540d\u91cd\u590d\u65f6\u5019\uff0cb.Name\u662f\u4f1a\u8d4b\u503c\u7ed9\u81ea\u8eab\u7684\u5143\u7d20\uff0c\u6b64\u65f6\u53ea\u6709b.Dog.Name\u624d\u80fd\u663e\u5f0f\u6307\u5b9a\u5bfc\u5165\u7684\u5143\u7d20\n\n\n\u6240\u4ee5\uff1a\u5982\u679c\u8981\u7ed9\u5bfc\u5165\u7684\u5143\u7d20\u8d4b\u503c\uff0c\u5e94\u8be5\u8981\u7528b.Dog.Name\u8fd9\u79cd\u65b9\u5f0f\u663e\u5f0f\u8d4b\u503c", 
            "title": "2.7. struct\u4f5c\u4e3astruct\u7684\u5143\u7d20"
        }, 
        {
            "location": "/datatype/struct_empty/", 
            "text": "\u7a7astruct\u8fd9\u4e48\u8868\u793a:\n\n\nstruct{}{}\n\n\n\n\n\u4f8b\u5b50:\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nstruct\n{}{}\n\n    \nfmt\n.\nPrintf\n(\n%T,%v,%+v\\n\n,\n \ns\n,\n \ns\n,\n \ns\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nstruct {},{},{}\n\n\n\n\n\n\nNote\n\n\n\u5927\u62ec\u53f7\u5de6\u53f3\u53ef\u4ee5\u591a\u4e2a\u7a7a\u683c\uff0c\u6bd4\u5982\u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684\n\n\nstruct  {} {}", 
            "title": "2.8. \u7a7astruct"
        }, 
        {
            "location": "/datatype/arr_sli_main/", 
            "text": "\u5728golang\u4e2darray\uff08\u6570\u7ec4\uff09\u548cslice\uff08\u5207\u7247\uff09\u5173\u7cfb\u7d27\u5bc6\uff0c\u56e0\u6b64\u653e\u5728\u4e00\u4e2a\u7ae0\u8282\u91cc\u9610\u8ff0\n\n\n\u4e0b\u9762\u5c06array\u548cslice\u4ece\u4e0d\u540c\u7ef4\u5ea6\u8fdb\u884c\u6bd4\u8f83\n\n\n\u58f0\u660e\u8d4b\u503c\n\n\n\n\narray\n\n\narr\n \n:=\n \n[\n6\n]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n\n\n\n\nslice\n\n\nsli\n \n:=\n \narr\n[\n1\n:\n4\n]\n\n\n\n\n\n\n\narr[1:4]\u5c31\u662f\u5bf9arr\u505a\u7684\u5207\u7247\n\n\n\n\n\u672c\u8d28\n\n\n\n\narray\u5c31\u662farray\n\n\nslice\u662farray\u5143\u7d20\u7684\u5f15\u7528\uff0c\u5b98\u65b9\u628aslice\u53eb\u505aunderlying array\u3001Slices are like references to arrays\n\n\n\n\n\u4ece\u4f7f\u7528\u6548\u679c\u4e0a\u770b\uff0cslice\u5b8c\u5168\u5c31\u50cf\u662farray\u5143\u7d20\u7684\u6307\u9488\n\n\n\n\n\u7528\u51fd\u6570\u4f20\u9012\u4f8b\u5b50\u66f4\u53ef\u4ee5\u770b\u51fa\u533a\u522b\uff1aslice\u4f20\u9012\u7684\u662f\u5730\u5740\uff0c\u6548\u679c\u548c\u6307\u9488\u76f8\u540c\uff0c\u800carray\u662f\u590d\u5236\u5143\u7d20\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \narrDo\n(\nx\n \n[\n6\n]\nint\n)\n \n{\n\n    \nx\n[\n2\n]\n \n=\n \n333\n\n\n}\n\n\n\nfunc\n \nsliDo\n(\nx\n \n[]\nint\n)\n \n{\n\n    \nx\n[\n2\n]\n \n=\n \n333\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \narr\n \n:=\n \n[\n6\n]\nint\n{\n11\n,\n \n22\n,\n \n33\n,\n \n44\n,\n \n55\n,\n \n66\n}\n\n    \nsli\n \n:=\n \n[]\nint\n{\n1\n,\n \n2\n,\n \n3\n,\n \n4\n,\n \n5\n,\n \n6\n}\n\n\n    \narrDo\n(\narr\n)\n\n    \nsliDo\n(\nsli\n)\n\n\n    \nfmt\n.\nPrintln\n(\narr:\n,\n \narr\n)\n\n    \nfmt\n.\nPrintln\n(\nsli:\n,\n \nsli\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\narr: [11 22 33 44 55 66]\nsli: [1 2 333 4 5 6]\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\u901a\u8fc7\u51fd\u6570\u4f20\u9012\u7684array\uff0c\u5728\u51fd\u6570\u91cc\u628a\u503c\u4fee\u6539\u540e\u5728\u51fd\u6570\u5916\u770b\u4e0d\u5230\u3002\u800cslice\u662f\u53ef\u4ee5\u770b\u5230\n\n\n\u957f\u5ea6\u662f\u5426\u53ef\u53d8\n\n\n\n\narray\u662f\u56fa\u5b9a\u957f\u5ea6\uff0c\u5360\u7528\u5185\u5b58\u4e2d\u56fa\u5b9a\u7684\u4e00\u5757\u5730\u5740\uff0c\u56e0\u6b64\u4e0d\u53ef\u80fd\u901a\u8fc7\u5220\u9664array\u5143\u7d20\u6765\u5bfc\u81f4\u957f\u5ea6\u53d8\u5316\n\n\nslice\u662f\u53ef\u53d8\u957f\u5ea6\uff0c\u5185\u5b58\u5730\u5740\u53ef\u6269\u5c55\n\n\n2\u79cd\u58f0\u660e\u65b9\u5f0f\n\n\n\n\narray\n\n\n\n\n\n\n\u666e\u901a\u65b9\u5f0f\uff1a\n\n\n//\u663e\u5f0f\u58f0\u660e\u6570\u7ec4arr\uff0c\u957f\u5ea6\u4e3a6\uff0c\u5143\u7d20\u7c7b\u578b\u4e3aint\n\n\nvar\n \narr\n \n[\n6\n]\nint\n\n\narr\n[\n0\n]\n \n=\n \n2\n\n\narr\n[\n1\n]\n \n=\n \n3\n\n\narr\n[\n2\n]\n \n=\n \n5\n\n\narr\n[\n3\n]\n \n=\n \n7\n\n\narr\n[\n4\n]\n \n=\n \n11\n\n\narr\n[\n5\n]\n \n=\n \n13\n\n\n\n\n\n\n\n\n\nliteral\u65b9\u5f0f\uff1a\n\n\narr\n \n:=\n \n[\n6\n]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n\n\n\n\n\n\n\n\nslice\n\n\n\n\n\n\n\u666e\u901a\u65b9\u5f0f\uff1a\n\n\n//\u663e\u5f0f\u58f0\u660e\u5207\u7247sli\uff0c\u5176\u4e2d\u53ef\u89c1\u5143\u7d20\u4e3aarr\u7684\u7b2c2\u4e2a\u5143\u7d20\u5730\u5740\u5230\u7b2c4\u4e2a\u5143\u7d20\u5730\u5740\uff0c\u4f46\u5bb9\u91cf\u4e3a\u7b2c2\u4e2a\u5143\u7d20\u5730\u5740\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5730\u5740\n\n\nvar\n \nsli\n \n[]\nint\n \n=\n \narr\n[\n1\n:\n4\n]\n\n\n\n\n\n\n\n\n\nliteral\u65b9\u5f0f\uff1a\n\n\nsli := []int{2, 3, 5, 7, 11, 13}\n\n\n\n\n\n\n\n\n\u7c7b\u578b\n\n\n\n\narray\u7684\u7c7b\u578b\u793a\u4f8b\uff1a[6]int\n\n\nslice\u7684\u7c7b\u578b\u793a\u4f8b\uff1a[]int", 
            "title": "3.1. \u4ecb\u7ecd\u4e0e\u6bd4\u8f83"
        }, 
        {
            "location": "/datatype/arr_sli_main/#_1", 
            "text": "array  arr   :=   [ 6 ] int { 2 ,   3 ,   5 ,   7 ,   11 ,   13 }   slice  sli   :=   arr [ 1 : 4 ]    arr[1:4]\u5c31\u662f\u5bf9arr\u505a\u7684\u5207\u7247", 
            "title": "\u58f0\u660e\u8d4b\u503c"
        }, 
        {
            "location": "/datatype/arr_sli_main/#_2", 
            "text": "array\u5c31\u662farray  slice\u662farray\u5143\u7d20\u7684\u5f15\u7528\uff0c\u5b98\u65b9\u628aslice\u53eb\u505aunderlying array\u3001Slices are like references to arrays   \u4ece\u4f7f\u7528\u6548\u679c\u4e0a\u770b\uff0cslice\u5b8c\u5168\u5c31\u50cf\u662farray\u5143\u7d20\u7684\u6307\u9488   \u7528\u51fd\u6570\u4f20\u9012\u4f8b\u5b50\u66f4\u53ef\u4ee5\u770b\u51fa\u533a\u522b\uff1aslice\u4f20\u9012\u7684\u662f\u5730\u5740\uff0c\u6548\u679c\u548c\u6307\u9488\u76f8\u540c\uff0c\u800carray\u662f\u590d\u5236\u5143\u7d20  package   main  import   fmt  func   arrDo ( x   [ 6 ] int )   { \n     x [ 2 ]   =   333  }  func   sliDo ( x   [] int )   { \n     x [ 2 ]   =   333  }  func   main ()   { \n     arr   :=   [ 6 ] int { 11 ,   22 ,   33 ,   44 ,   55 ,   66 } \n     sli   :=   [] int { 1 ,   2 ,   3 ,   4 ,   5 ,   6 } \n\n     arrDo ( arr ) \n     sliDo ( sli ) \n\n     fmt . Println ( arr: ,   arr ) \n     fmt . Println ( sli: ,   sli )  }   \u8f93\u51fa  arr: [11 22 33 44 55 66]\nsli: [1 2 333 4 5 6]  \u53ef\u4ee5\u770b\u51fa\u901a\u8fc7\u51fd\u6570\u4f20\u9012\u7684array\uff0c\u5728\u51fd\u6570\u91cc\u628a\u503c\u4fee\u6539\u540e\u5728\u51fd\u6570\u5916\u770b\u4e0d\u5230\u3002\u800cslice\u662f\u53ef\u4ee5\u770b\u5230", 
            "title": "\u672c\u8d28"
        }, 
        {
            "location": "/datatype/arr_sli_main/#_3", 
            "text": "array\u662f\u56fa\u5b9a\u957f\u5ea6\uff0c\u5360\u7528\u5185\u5b58\u4e2d\u56fa\u5b9a\u7684\u4e00\u5757\u5730\u5740\uff0c\u56e0\u6b64\u4e0d\u53ef\u80fd\u901a\u8fc7\u5220\u9664array\u5143\u7d20\u6765\u5bfc\u81f4\u957f\u5ea6\u53d8\u5316  slice\u662f\u53ef\u53d8\u957f\u5ea6\uff0c\u5185\u5b58\u5730\u5740\u53ef\u6269\u5c55", 
            "title": "\u957f\u5ea6\u662f\u5426\u53ef\u53d8"
        }, 
        {
            "location": "/datatype/arr_sli_main/#2", 
            "text": "array    \u666e\u901a\u65b9\u5f0f\uff1a  //\u663e\u5f0f\u58f0\u660e\u6570\u7ec4arr\uff0c\u957f\u5ea6\u4e3a6\uff0c\u5143\u7d20\u7c7b\u578b\u4e3aint  var   arr   [ 6 ] int  arr [ 0 ]   =   2  arr [ 1 ]   =   3  arr [ 2 ]   =   5  arr [ 3 ]   =   7  arr [ 4 ]   =   11  arr [ 5 ]   =   13     literal\u65b9\u5f0f\uff1a  arr   :=   [ 6 ] int { 2 ,   3 ,   5 ,   7 ,   11 ,   13 }     slice    \u666e\u901a\u65b9\u5f0f\uff1a  //\u663e\u5f0f\u58f0\u660e\u5207\u7247sli\uff0c\u5176\u4e2d\u53ef\u89c1\u5143\u7d20\u4e3aarr\u7684\u7b2c2\u4e2a\u5143\u7d20\u5730\u5740\u5230\u7b2c4\u4e2a\u5143\u7d20\u5730\u5740\uff0c\u4f46\u5bb9\u91cf\u4e3a\u7b2c2\u4e2a\u5143\u7d20\u5730\u5740\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5730\u5740  var   sli   [] int   =   arr [ 1 : 4 ]     literal\u65b9\u5f0f\uff1a  sli := []int{2, 3, 5, 7, 11, 13}", 
            "title": "2\u79cd\u58f0\u660e\u65b9\u5f0f"
        }, 
        {
            "location": "/datatype/arr_sli_main/#_4", 
            "text": "array\u7684\u7c7b\u578b\u793a\u4f8b\uff1a[6]int  slice\u7684\u7c7b\u578b\u793a\u4f8b\uff1a[]int", 
            "title": "\u7c7b\u578b"
        }, 
        {
            "location": "/datatype/arr_sli_len_cap/", 
            "text": "\u67092\u4e2a\u5f88\u91cd\u8981\u7684\u5185\u7f6e\u51fd\u6570\uff1a\nlen()\n\u548c\ncap()\n\n\nlen()\n\u53ef\u4ee5\u7528\u6765\u67e5\u770b\u6570\u7ec4\u6216slice\u7684\u957f\u5ea6\n\n\ncap()\n\u53ef\u4ee5\u7528\u6765\u67e5\u770b\u6570\u7ec4\u6216slice\u7684\u5bb9\u91cf\n\n\n\u5728\u6570\u7ec4\u4e2d\u7531\u4e8e\u957f\u5ea6\u56fa\u5b9a\u4e0d\u53ef\u53d8\uff0c\u56e0\u6b64\nlen(arr)\n\u548c\ncap(arr)\n\u7684\u8f93\u51fa\u6c38\u8fdc\u76f8\u540c\n\n\n\u5728slice\u4e2d\uff0c\nlen(sli)\n\u8868\u793a\u53ef\u89c1\u5143\u7d20\u6709\u51e0\u4e2a\uff08\u4e5f\u5373\u76f4\u63a5\u6253\u5370\u5143\u7d20\u770b\u5230\u7684\u5143\u7d20\u4e2a\u6570\uff09\uff0c\u800c\ncap(sli)\n\u8868\u793a\u6240\u6709\u5143\u7d20\u6709\u51e0\u4e2a\uff0c\u6bd4\u5982\uff1a\n\n\narr\n \n:=\n \n[]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n\nsli\n \n:=\n \narr\n[\n1\n:\n4\n]\n\n\nfmt\n.\nPrintln\n(\nsli\n)\n\n\nfmt\n.\nPrintln\n(\nlen\n(\nsli\n))\n\n\nfmt\n.\nPrintln\n(\ncap\n(\nsli\n))\n\n\n\n\n\n\u8f93\u51fa\n\n\n[3 5 7]\n3\n5\n\n\n\n\n\u67e5\u770b\u4e00\u5171\u6709\u51e0\u4e2a\u5143\u7d20\u7684\u65b9\u6cd5\uff1a\n\n\nfmt\n.\nPrintln\n(\nsli\n[:\ncap\n(\nsli\n)])\n\n\n\n\n\n\u8f93\u51fa\n\n\n[3 5 7 11 13]\n\n\n\n\n\u8fd9\u6837\u67e5\u770b\u6709\u4e2a\u597d\u5904\u5c31\u662f\u5bf9sli\u6ca1\u6709\u5f71\u54cd\uff0c\u5305\u62ec\u5143\u7d20\u5185\u5bb9\u3001len\u3001cap", 
            "title": "3.2. len()\u4e0ecap()"
        }, 
        {
            "location": "/datatype/arr_sli_index/", 
            "text": "startIndex\u548cendIndex\n\n\n\n\n[startIndex:endIndex]\n\n\n\u8868\u793a\u7684\u662f\u4ece\u7b2cstartIndex\u4e0b\u6807\u7684\u5143\u7d20\u5f00\u59cb\uff0c\u76f4\u5230endIndex-1\u4e0b\u6807\u7684\u5143\u7d20\u7ed3\u675f\u3002\n\n\n\u5176\u4e2d\u5143\u7d20\u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u8ba1\u6570\u3002\u5982\u679c\u7528\u901a\u4fd7\u7684\u8bdd\u6765\u8bb0\u5fc6\u5c31\u662f\u4ece\u7b2cstartIndex+1\u5f00\u59cb\uff0c\u5230\u7b2cendIndex\u7ed3\u675f\u3002\n\n\n\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684endIndex\u662f\u6307\u53ef\u89c1\u5143\u7d20\u5230\u54ea\u4e3a\u6b62\uff0c\u5373\u5f71\u54cdlen()\uff0c\n\u800c\u4e0d\u5f71\u54cdcap()\uff0c\u5176\u4e2dcap()\u90fd\u662f\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n\n\n\u4e0b\u6807\u4e3e\u4f8b\u8bf4\u660e\n\n\n\n\n\n\n\n\n[1:5] \u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\uff080\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c1\u4e3a\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff09\uff0c\u53d6\u5230\u7b2c5\u4e2a\u5143\u7d20\uff08\u4e0b\u6807\u4e3a5-1=4\uff0c\u4e0b\u68074\u8868\u793a\u7b2c5\u4e2a\u5143\u7d20\uff09\u51fa\u6765\uff0c\u540c\u65f6\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46cap\u4f9d\u7136\u662f\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n\n\n\n\n\n\n[:] \u53d6\u6240\u6709\u5143\u7d20\uff0c\u6ca1\u6709\u5220\u9664\u5143\u7d20\n\n\n\n\n\n\n[1:] \u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u53d6\u6240\u6709\u5143\u7d20\uff0c\u540c\u65f6\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\n\n\n\n\n\n\n[:5] \u7b49\u540c\u4e8e[0:5]\uff0c\u5373\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u53d6\u5230\u7b2c5\u4e2a\u5143\u7d20\u51fa\u6765\uff0c\u4f46cap\u4f9d\u7136\u662f\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n\n\n\n\n\n\n[3:3] \u8f93\u51fa\u4e3a\u7a7a\n\n\n\n\n\n\n\u4e0b\u6807\u8fb9\u754c\u5199\u6cd5\n\n\n\n\n\u9996\u5148\u8bf4\u4e0b\uff0c\u8fb9\u754c\u8fd92\u4e2a\u5b57\u662f\u6211\u81ea\u5df1\u53d6\u7684\n\n\n\u82e5\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\nvar a [10]int\n\uff0c\u5219\u4e0b\u9762\u7684\u8bed\u53e5\u662f\u76f8\u540c\u7684\n\n\na[0:10]\na[:10]\na[0:]\na[:]\na[:cap(a)]\n\n\n\n\n\u4e3e\u4f8b\u5982\u4e0b:\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \narr\n \n:=\n \n[]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n    \nsli1\n \n:=\n \narr\n[\n1\n:\n4\n]\n\n    \nfmt\n.\nPrintln\n(\n[1:4]\n,\n \nsli1\n)\n\n    \nfmt\n.\nPrintln\n(\n[1:4]\n,\n \nlen\n(\nsli1\n))\n\n    \nfmt\n.\nPrintln\n(\n[1:4]\n,\n \ncap\n(\nsli1\n))\n\n    \nfmt\n.\nPrintln\n(\n-----\n)\n\n    \nsli2\n \n:=\n \narr\n[\n1\n:\n3\n]\n\n    \nfmt\n.\nPrintln\n(\n[1:3]\n,\n \nsli2\n)\n\n    \nfmt\n.\nPrintln\n(\n[1:3]\n,\n \nlen\n(\nsli2\n))\n\n    \nfmt\n.\nPrintln\n(\n[1:3]\n,\n \ncap\n(\nsli2\n))\n\n    \nfmt\n.\nPrintln\n(\n-----\n)\n\n    \nsli3\n \n:=\n \narr\n[\n1\n:\n2\n]\n\n    \nfmt\n.\nPrintln\n(\n[1:2]\n,\n \nsli3\n)\n\n    \nfmt\n.\nPrintln\n(\n[1:2]\n,\n \nlen\n(\nsli3\n))\n\n    \nfmt\n.\nPrintln\n(\n[1:2]\n,\n \ncap\n(\nsli3\n))\n\n    \nfmt\n.\nPrintln\n(\n-----\n)\n\n    \nsli4\n \n:=\n \narr\n[\n1\n:\n1\n]\n\n    \nfmt\n.\nPrintln\n(\n[1:1]\n,\n \nsli4\n)\n\n    \nfmt\n.\nPrintln\n(\n[1:1]\n,\n \nlen\n(\nsli4\n))\n\n    \nfmt\n.\nPrintln\n(\n[1:1]\n,\n \ncap\n(\nsli4\n))\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n[1:4] [3 5 7]\n[1:4] 3\n[1:4] 5\n-----\n[1:3] [3 5]\n[1:3] 2\n[1:3] 5\n-----\n[1:2] [3]\n[1:2] 1\n[1:2] 5\n-----\n[1:1] []\n[1:1] 0\n[1:1] 5\n\n\n\n\n\u5f53endIndex\u8d85\u51fa\u8fb9\u754c\u65f6\u5019\u5219\u4f1a\u62a5\u9519\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \narr\n \n:=\n \n[]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n    \nsli1\n \n:=\n \narr\n[\n1\n:\n0\n]\n\n    \nfmt\n.\nPrintln\n(\n[1:0]\n,\n \nsli1\n)\n\n    \nfmt\n.\nPrintln\n(\n[1:0]\n,\n \nlen\n(\nsli1\n))\n\n    \nfmt\n.\nPrintln\n(\n[1:0]\n,\n \ncap\n(\nsli1\n))\n\n\n}\n\n\n\n\n\n\u62a5\u9519\n\n\n./slice.go:7: invalid slice index: 1 \n 0", 
            "title": "3.3. \u4e0b\u6807"
        }, 
        {
            "location": "/datatype/arr_sli_index/#startindexendindex", 
            "text": "[startIndex:endIndex]  \u8868\u793a\u7684\u662f\u4ece\u7b2cstartIndex\u4e0b\u6807\u7684\u5143\u7d20\u5f00\u59cb\uff0c\u76f4\u5230endIndex-1\u4e0b\u6807\u7684\u5143\u7d20\u7ed3\u675f\u3002  \u5176\u4e2d\u5143\u7d20\u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u8ba1\u6570\u3002\u5982\u679c\u7528\u901a\u4fd7\u7684\u8bdd\u6765\u8bb0\u5fc6\u5c31\u662f\u4ece\u7b2cstartIndex+1\u5f00\u59cb\uff0c\u5230\u7b2cendIndex\u7ed3\u675f\u3002  \u6ce8\u610f\uff1a\u8fd9\u91cc\u7684endIndex\u662f\u6307\u53ef\u89c1\u5143\u7d20\u5230\u54ea\u4e3a\u6b62\uff0c\u5373\u5f71\u54cdlen()\uff0c \u800c\u4e0d\u5f71\u54cdcap()\uff0c\u5176\u4e2dcap()\u90fd\u662f\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20", 
            "title": "startIndex\u548cendIndex"
        }, 
        {
            "location": "/datatype/arr_sli_index/#_1", 
            "text": "[1:5] \u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\uff080\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c1\u4e3a\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff09\uff0c\u53d6\u5230\u7b2c5\u4e2a\u5143\u7d20\uff08\u4e0b\u6807\u4e3a5-1=4\uff0c\u4e0b\u68074\u8868\u793a\u7b2c5\u4e2a\u5143\u7d20\uff09\u51fa\u6765\uff0c\u540c\u65f6\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46cap\u4f9d\u7136\u662f\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20    [:] \u53d6\u6240\u6709\u5143\u7d20\uff0c\u6ca1\u6709\u5220\u9664\u5143\u7d20    [1:] \u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u53d6\u6240\u6709\u5143\u7d20\uff0c\u540c\u65f6\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20    [:5] \u7b49\u540c\u4e8e[0:5]\uff0c\u5373\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u53d6\u5230\u7b2c5\u4e2a\u5143\u7d20\u51fa\u6765\uff0c\u4f46cap\u4f9d\u7136\u662f\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20    [3:3] \u8f93\u51fa\u4e3a\u7a7a", 
            "title": "\u4e0b\u6807\u4e3e\u4f8b\u8bf4\u660e"
        }, 
        {
            "location": "/datatype/arr_sli_index/#_2", 
            "text": "\u9996\u5148\u8bf4\u4e0b\uff0c\u8fb9\u754c\u8fd92\u4e2a\u5b57\u662f\u6211\u81ea\u5df1\u53d6\u7684  \u82e5\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf var a [10]int \uff0c\u5219\u4e0b\u9762\u7684\u8bed\u53e5\u662f\u76f8\u540c\u7684  a[0:10]\na[:10]\na[0:]\na[:]\na[:cap(a)]  \u4e3e\u4f8b\u5982\u4e0b:  package   main  import   fmt  func   main ()   { \n     arr   :=   [] int { 2 ,   3 ,   5 ,   7 ,   11 ,   13 } \n     sli1   :=   arr [ 1 : 4 ] \n     fmt . Println ( [1:4] ,   sli1 ) \n     fmt . Println ( [1:4] ,   len ( sli1 )) \n     fmt . Println ( [1:4] ,   cap ( sli1 )) \n     fmt . Println ( ----- ) \n     sli2   :=   arr [ 1 : 3 ] \n     fmt . Println ( [1:3] ,   sli2 ) \n     fmt . Println ( [1:3] ,   len ( sli2 )) \n     fmt . Println ( [1:3] ,   cap ( sli2 )) \n     fmt . Println ( ----- ) \n     sli3   :=   arr [ 1 : 2 ] \n     fmt . Println ( [1:2] ,   sli3 ) \n     fmt . Println ( [1:2] ,   len ( sli3 )) \n     fmt . Println ( [1:2] ,   cap ( sli3 )) \n     fmt . Println ( ----- ) \n     sli4   :=   arr [ 1 : 1 ] \n     fmt . Println ( [1:1] ,   sli4 ) \n     fmt . Println ( [1:1] ,   len ( sli4 )) \n     fmt . Println ( [1:1] ,   cap ( sli4 ))  }   \u8f93\u51fa  [1:4] [3 5 7]\n[1:4] 3\n[1:4] 5\n-----\n[1:3] [3 5]\n[1:3] 2\n[1:3] 5\n-----\n[1:2] [3]\n[1:2] 1\n[1:2] 5\n-----\n[1:1] []\n[1:1] 0\n[1:1] 5  \u5f53endIndex\u8d85\u51fa\u8fb9\u754c\u65f6\u5019\u5219\u4f1a\u62a5\u9519  package   main  import   fmt  func   main ()   { \n     arr   :=   [] int { 2 ,   3 ,   5 ,   7 ,   11 ,   13 } \n     sli1   :=   arr [ 1 : 0 ] \n     fmt . Println ( [1:0] ,   sli1 ) \n     fmt . Println ( [1:0] ,   len ( sli1 )) \n     fmt . Println ( [1:0] ,   cap ( sli1 ))  }   \u62a5\u9519  ./slice.go:7: invalid slice index: 1   0", 
            "title": "\u4e0b\u6807\u8fb9\u754c\u5199\u6cd5"
        }, 
        {
            "location": "/datatype/arr_sli_key/", 
            "text": "slice\u539f\u7406\n\n\n\n\n\n\n\n\n\u5728\u5207\u7247\u65f6\u5019\u4ec5\u4ec5\u628a\u539f\u6765\u5143\u7d20\u7684\u5730\u5740\u7ed9\u62f7\u8d1d\u8fc7\u6765\u4e86\uff0c\u5373\u6709\u5f53\u5143\u7d20\u7684\u503c\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\uff0c\u4e4b\u524d\u548c\u4e4b\u540e\u5f15\u7528\u7684slice\u90fd\u53ef\u4ee5\u770b\u5230\u53d8\u5316\n\n\n\n\n\n\n\u4e00\u4e2aslice\u4e2d\u5143\u7d20\u88ab\u5220\u6389\u540e\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6slice\u3002\u6bd4\u5982\u67093\u4e2aslice\u90fd\u662f\u6765\u81ea\u540c\u4e00\u4e2aarray\u6216\u8005slice\uff0c\u90a3\u4e48\u5f53\u8fd9\u4e2aslice\u7684\u5143\u7d20\u88ab\u5220\u6389\u540e\uff0c\u90a33\u4e2aslice\u548c\u539f\u6765\u7684array\u4e0d\u53d7\u5f71\u54cd\u3002\u5e94\u8be5\u662f\u5f53\u90a3\u4e2a\u5143\u7d20\u88ab\u5220\u6389\u540e\uff0cgo\u53d1\u73b0\u6709\u88ab\u5f15\u7528\u4e86\uff0c\u4e8e\u662f\u5185\u5b58\u4e2d\u5e76\u6ca1\u6709\u53bb\u5220\u6389\uff0c\u56e0\u6b64\u90a33\u4e2aslice\u624d\u4e0d\u53d7\u5f71\u54cd\uff0c\u4f46\u662f\u90a33\u4e2aslice\u7684\u5143\u7d20\u4f9d\u7136\u662f\u6765\u81ea\u539f\u6765\u7684\u5730\u5740\n\n\n\n\n\n\n\n\npython\u4e0d\u662f\u5f15\u7528\uff0c\u800c\u662f\u590d\u5236\n\n\n#!/usr/bin/env python\n\n\n# -*- coding: utf-8 -*-\n\n\n\narr\n \n=\n \n[\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n]\n\n\nprint\n \narr\n\n\n\nsli\n \n=\n \narr\n[\n1\n:\n4\n]\n\n\nprint\n \nsli\n\n\n\narr\n[\n1\n]\n \n=\n \n33\n\n\nsli\n[\n2\n]\n \n=\n \n55\n\n\nprint\n \narr\n\n\nprint\n \nsli\n\n\n\n\n\n\u8f93\u51fa\n\n\n[2, 3, 5, 7, 11, 13]\n[3, 5, 7]\n[2, 33, 5, 7, 11, 13]\n[3, 5, 55]\n\n\n\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u4fee\u6539arr\u7684\u5143\u7d20\u503c\u6ca1\u6709\u5f71\u54cd\u5230sli\uff0c\u540c\u6837\uff0c\u4fee\u6539sli\u7684\u5143\u7d20\u503c\u4e5f\u6ca1\u6709\u5f71\u54cd\u5230arr\n\n\n\n\n\u5173\u4e8eliteral\n\n\n\n\n\n\n\n\n\u5373\u4f7f\u539f\u6765slice\u5df2\u7ecf\u58f0\u660e\u4e86\uff0c\u4f9d\u7136\u53ef\u4ee5\u7528literal\u8d4b\u503c\uff0c\u4f46\u7c7b\u578b\u5fc5\u987b\u662f\u548c\u58f0\u660e\u65f6\u5019\u76f8\u540c\u7c7b\u578b\n\n\n\n\n\n\n\u7528literal\u8d4b\u503c\u540e\uff08\u5373\u4f7f\u8d4b\u7684\u503c\u548c\u539f\u6765\u7684\u503c\u4e00\u6837\uff09\uff0c\u6240\u6709\u5143\u7d20\u90fd\u662f\u65b0\u7684\u4e86\uff0c\u548c\u539f\u6765\u6ca1\u6709\u5173\u7cfb\u4e86\uff0c\u5982\u679c\u539f\u6765\u6709\u5173\u8054\u7684slice\uff0c\u90a3\u4e48\u5173\u8054\u5c31\u89e3\u9664\u4e86\n\n\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nsli1\n \n:=\n \n[]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n    \nsli2\n \n:=\n \nsli1\n[\n1\n:\n4\n]\n\n    \nfmt\n.\nPrintln\n(\nsli1\n,\n \nlen\n(\nsli1\n),\n \ncap\n(\nsli1\n))\n\n    \nfmt\n.\nPrintln\n(\nsli2\n,\n \nlen\n(\nsli2\n),\n \ncap\n(\nsli2\n))\n\n\n    \nsli1\n \n=\n \n[]\nint\n{\n20\n,\n \n30\n,\n \n50\n,\n \n70\n,\n \n110\n,\n \n130\n}\n\n    \nsli2\n[\n2\n]\n \n=\n \n500\n\n    \nfmt\n.\nPrintln\n(\nsli1\n,\n \nlen\n(\nsli1\n),\n \ncap\n(\nsli1\n))\n\n    \nfmt\n.\nPrintln\n(\nsli2\n,\n \nlen\n(\nsli2\n),\n \ncap\n(\nsli2\n))\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n[2 3 5 7 11 13] 6 6\n[3 5 7] 3 5\n[20 30 50 70 110 130] 6 6\n[3 5 500] 3 5\n\n\n\n\n\u5173\u4e8e\u5173\u8054\u8131\u79bb\n\n\n\n\n\u7ecf\u6d4b\u8bd5\uff0c\u5982\u4e0b\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u548carray\u3001\u884d\u751fslice\u7b49\u8131\u79bb\u5173\u8054\n\n\n\n\n\n\nliteral\u8d4b\u503c\n\n\n\n\n\n\nappend()\n\n\n\n\n\n\ncopy()\n\n\n\n\n\n\n\u53ef\u4ee5\u88ab\u5207\u7247\u7684\u6570\u636e\u7c7b\u578b\n\n\n\n\n\n\n\n\narray\n\n\narr\n \n:=\n \n[\n6\n]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n\nsli\n \n:=\n \narr\n[\n1\n:\n4\n]\n\n\n\n\n\n\n\n\n\nslice\n\n\nsli1\n \n:=\n \n[]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n\nsli2\n \n:=\n \nsli1\n[\n1\n:\n4\n]\n\n\n\n\n\n\n\n\n\nstring\n\n\nstr\n \n:=\n \nhello, world!\n\n\nsli\n \n:=\n \nstr\n[\n1\n:\n4\n]\n\n\n\n\n\n\u793a\u4f8b\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nstr\n \n:=\n \nhello, world!\n\n    \nres\n \n:=\n \nstr\n[\n2\n:]\n\n    \nfmt\n.\nPrintln\n(\nstr\n)\n\n    \nfmt\n.\nPrintln\n(\nres\n)\n\n    \nfmt\n.\nPrintln\n(\nstr\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\nhello, world!\nllo, world!\nhello, world!", 
            "title": "3.4. \u6df1\u5165\u7406\u89e3"
        }, 
        {
            "location": "/datatype/arr_sli_key/#slice", 
            "text": "\u5728\u5207\u7247\u65f6\u5019\u4ec5\u4ec5\u628a\u539f\u6765\u5143\u7d20\u7684\u5730\u5740\u7ed9\u62f7\u8d1d\u8fc7\u6765\u4e86\uff0c\u5373\u6709\u5f53\u5143\u7d20\u7684\u503c\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\uff0c\u4e4b\u524d\u548c\u4e4b\u540e\u5f15\u7528\u7684slice\u90fd\u53ef\u4ee5\u770b\u5230\u53d8\u5316    \u4e00\u4e2aslice\u4e2d\u5143\u7d20\u88ab\u5220\u6389\u540e\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6slice\u3002\u6bd4\u5982\u67093\u4e2aslice\u90fd\u662f\u6765\u81ea\u540c\u4e00\u4e2aarray\u6216\u8005slice\uff0c\u90a3\u4e48\u5f53\u8fd9\u4e2aslice\u7684\u5143\u7d20\u88ab\u5220\u6389\u540e\uff0c\u90a33\u4e2aslice\u548c\u539f\u6765\u7684array\u4e0d\u53d7\u5f71\u54cd\u3002\u5e94\u8be5\u662f\u5f53\u90a3\u4e2a\u5143\u7d20\u88ab\u5220\u6389\u540e\uff0cgo\u53d1\u73b0\u6709\u88ab\u5f15\u7528\u4e86\uff0c\u4e8e\u662f\u5185\u5b58\u4e2d\u5e76\u6ca1\u6709\u53bb\u5220\u6389\uff0c\u56e0\u6b64\u90a33\u4e2aslice\u624d\u4e0d\u53d7\u5f71\u54cd\uff0c\u4f46\u662f\u90a33\u4e2aslice\u7684\u5143\u7d20\u4f9d\u7136\u662f\u6765\u81ea\u539f\u6765\u7684\u5730\u5740     python\u4e0d\u662f\u5f15\u7528\uff0c\u800c\u662f\u590d\u5236  #!/usr/bin/env python  # -*- coding: utf-8 -*-  arr   =   [ 2 ,   3 ,   5 ,   7 ,   11 ,   13 ]  print   arr  sli   =   arr [ 1 : 4 ]  print   sli  arr [ 1 ]   =   33  sli [ 2 ]   =   55  print   arr  print   sli   \u8f93\u51fa  [2, 3, 5, 7, 11, 13]\n[3, 5, 7]\n[2, 33, 5, 7, 11, 13]\n[3, 5, 55]  \u53ef\u4ee5\u770b\u5230\uff0c\u4fee\u6539arr\u7684\u5143\u7d20\u503c\u6ca1\u6709\u5f71\u54cd\u5230sli\uff0c\u540c\u6837\uff0c\u4fee\u6539sli\u7684\u5143\u7d20\u503c\u4e5f\u6ca1\u6709\u5f71\u54cd\u5230arr", 
            "title": "slice\u539f\u7406"
        }, 
        {
            "location": "/datatype/arr_sli_key/#literal", 
            "text": "\u5373\u4f7f\u539f\u6765slice\u5df2\u7ecf\u58f0\u660e\u4e86\uff0c\u4f9d\u7136\u53ef\u4ee5\u7528literal\u8d4b\u503c\uff0c\u4f46\u7c7b\u578b\u5fc5\u987b\u662f\u548c\u58f0\u660e\u65f6\u5019\u76f8\u540c\u7c7b\u578b    \u7528literal\u8d4b\u503c\u540e\uff08\u5373\u4f7f\u8d4b\u7684\u503c\u548c\u539f\u6765\u7684\u503c\u4e00\u6837\uff09\uff0c\u6240\u6709\u5143\u7d20\u90fd\u662f\u65b0\u7684\u4e86\uff0c\u548c\u539f\u6765\u6ca1\u6709\u5173\u7cfb\u4e86\uff0c\u5982\u679c\u539f\u6765\u6709\u5173\u8054\u7684slice\uff0c\u90a3\u4e48\u5173\u8054\u5c31\u89e3\u9664\u4e86    package   main  import   fmt  func   main ()   { \n     sli1   :=   [] int { 2 ,   3 ,   5 ,   7 ,   11 ,   13 } \n     sli2   :=   sli1 [ 1 : 4 ] \n     fmt . Println ( sli1 ,   len ( sli1 ),   cap ( sli1 )) \n     fmt . Println ( sli2 ,   len ( sli2 ),   cap ( sli2 )) \n\n     sli1   =   [] int { 20 ,   30 ,   50 ,   70 ,   110 ,   130 } \n     sli2 [ 2 ]   =   500 \n     fmt . Println ( sli1 ,   len ( sli1 ),   cap ( sli1 )) \n     fmt . Println ( sli2 ,   len ( sli2 ),   cap ( sli2 ))  }   \u8f93\u51fa  [2 3 5 7 11 13] 6 6\n[3 5 7] 3 5\n[20 30 50 70 110 130] 6 6\n[3 5 500] 3 5", 
            "title": "\u5173\u4e8eliteral"
        }, 
        {
            "location": "/datatype/arr_sli_key/#_1", 
            "text": "\u7ecf\u6d4b\u8bd5\uff0c\u5982\u4e0b\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u548carray\u3001\u884d\u751fslice\u7b49\u8131\u79bb\u5173\u8054    literal\u8d4b\u503c    append()    copy()", 
            "title": "\u5173\u4e8e\u5173\u8054\u8131\u79bb"
        }, 
        {
            "location": "/datatype/arr_sli_key/#_2", 
            "text": "array  arr   :=   [ 6 ] int { 2 ,   3 ,   5 ,   7 ,   11 ,   13 }  sli   :=   arr [ 1 : 4 ]     slice  sli1   :=   [] int { 2 ,   3 ,   5 ,   7 ,   11 ,   13 }  sli2   :=   sli1 [ 1 : 4 ]     string  str   :=   hello, world!  sli   :=   str [ 1 : 4 ]   \u793a\u4f8b package   main  import   fmt  func   main ()   { \n     str   :=   hello, world! \n     res   :=   str [ 2 :] \n     fmt . Println ( str ) \n     fmt . Println ( res ) \n     fmt . Println ( str )  }   \u8f93\u51fa hello, world!\nllo, world!\nhello, world!", 
            "title": "\u53ef\u4ee5\u88ab\u5207\u7247\u7684\u6570\u636e\u7c7b\u578b"
        }, 
        {
            "location": "/datatype/arr_sli_nil/", 
            "text": "A nil slice has a length and capacity of 0 and has no underlying array.\n\n\n\n\n\u76ee\u524d\u5df2\u77e5\u53ea\u6709\nvar s []int\n\u8fd91\u79cd\u65b9\u6cd5\u624d\u662fnil slice\u3002\u5176\u4ed6\u60c5\u51b5\u90fd\u4e0d\u662f\uff0c\u56e0\u4e3a\n\u53ea\u6709no underlying array\u624d\u662fnil slice\n\n\n\u4e0b\u9762\u51e0\u79cd\u65b9\u6cd5\u90fd\u4e0d\u662fnil slice\n\n\n\n\n\n\ns := []int{}\n\u4e0d\u662fnil\n\n\n\n\n\n\n\u5220\u9664\u6240\u6709\u5143\u7d20\u4e5f\u4e0d\u7b97\u662fnil\uff0c\u5982\n\n\nsli\n \n=\n \nsli\n[:\ncap\n(\nsli\n)]\n\n\nsli\n \n=\n \nsli\n[\nlen\n(\nsli\n):]\n\n\n\n\n\n\n\n\n\n\u7528\nmake([]int, 0, 0)\n\u4e5f\u4e0d\u662fnil\n\n\n\n\n\n\n\u5b9e\u8df5\u8bc1\u660e\u4e0a\u9762\u7684\u9610\u8ff0\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \na\n \n[]\nint\n\n    \nfmt\n.\nPrintln\n(\na:\n,\n \na\n,\n \nlen\n(\na\n),\n \ncap\n(\na\n))\n\n\n    \nb\n \n:=\n \n[]\nint\n{}\n\n    \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n,\n \nlen\n(\nb\n),\n \ncap\n(\nb\n))\n\n\n    \nc\n \n:=\n \nmake\n([]\nint\n,\n \n0\n,\n \n0\n)\n\n    \nfmt\n.\nPrintln\n(\nc:\n,\n \nc\n,\n \nlen\n(\nc\n),\n \ncap\n(\nc\n))\n\n\n    \nd\n \n:=\n \n[]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n    \nd\n \n=\n \nd\n[:\ncap\n(\nd\n)]\n\n    \nd\n \n=\n \nd\n[\nlen\n(\nd\n):]\n\n    \nfmt\n.\nPrintln\n(\nd:\n,\n \nd\n,\n \nlen\n(\nd\n),\n \ncap\n(\nd\n))\n\n\n    \nif\n \na\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\na is nil\n)\n\n    \n}\n\n\n    \nif\n \nb\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\nb is nil\n)\n\n    \n}\n\n\n    \nif\n \nc\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\nc is nil\n)\n\n    \n}\n\n\n    \nif\n \nd\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\nd is nil\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\na: [] 0 0\nb: [] 0 0\nc: [] 0 0\nd: [] 0 0\na is nil", 
            "title": "3.5. nil"
        }, 
        {
            "location": "/datatype/arr_sli_make/", 
            "text": "make\uff1a\u5728\u521d\u59cb\u5316\u65f6\u5019\u5c31\u6307\u5b9alen\u548ccap\n\n\na\n \n:=\n \nmake\n([]\nint\n,\n \n5\n)\n  \n// len(a)=5\n\n\nb\n \n:=\n \nmake\n([]\nint\n,\n \n0\n,\n \n5\n)\n \n// len(b)=0, cap(b)=5\n\n\nb\n \n=\n \nb\n[:\ncap\n(\nb\n)]\n \n// len(b)=5, cap(b)=5\n\n\nb\n \n=\n \nb\n[\n1\n:]\n      \n// len(b)=4, cap(b)=4\n\n\n\n\n\n\u6ce8\u610f\uff0c\u5728\u8d4b\u503c\u65f6\u5019\uff0c\u82e5\u8d85\u8fc7len\u8fb9\u754c\uff0c\u5219\u4f1a\u62a5\u9519\uff0c\u5982\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nsli1\n \n:=\n \nmake\n([]\nint\n,\n \n0\n,\n \n5\n)\n\n    \nfmt\n.\nPrintln\n(\nsli1\n,\n \nlen\n(\nsli1\n),\n \ncap\n(\nsli1\n))\n\n\n    \nsli1\n[\n0\n]\n \n=\n \n3\n\n    \nfmt\n.\nPrintln\n(\nsli1\n,\n \nlen\n(\nsli1\n),\n \ncap\n(\nsli1\n))\n\n\n}\n\n\n\n\n\n\u62a5\u9519\n\n\n[] 0 5\npanic: runtime error: index out of range\n\ngoroutine 1 [running]:\nmain.main()\n    /golang/example/slice.go:9 +0x2a3\nexit status 2\n\n\n\n\n\u6539\u6210\u5982\u4e0b\u624d\u53ef\u4ee5\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nsli1\n \n:=\n \nmake\n([]\nint\n,\n \n0\n,\n \n5\n)\n\n    \nfmt\n.\nPrintln\n(\nsli1\n,\n \nlen\n(\nsli1\n),\n \ncap\n(\nsli1\n))\n\n\n    \nsli1\n \n=\n \nsli1\n[:\ncap\n(\nsli1\n)]\n\n    \nsli1\n[\n0\n]\n \n=\n \n3\n\n    \nfmt\n.\nPrintln\n(\nsli1\n,\n \nlen\n(\nsli1\n),\n \ncap\n(\nsli1\n))\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n[] 0 5\n[3 0 0 0 0] 5 5", 
            "title": "3.6. make"
        }, 
        {
            "location": "/datatype/arr_sli_nest/", 
            "text": "slice\u53ef\u4ee5\u5d4c\u5957\u5305\u542bslice\uff0c\u5e76\u4e14\u53ef\u4ee5\u5d4c\u5957\u591a\u5c42\n\n\n\u5d4c\u5957\u4e00\u5c42\n\n\nboard1\n \n:=\n \n[][]\nstring\n{\n\n    \n[]\nstring\n{\n_\n,\n \n_\n,\n \n_\n},\n\n    \n[]\nstring\n{\n_\n,\n \n_\n,\n \n_\n},\n\n    \n[]\nstring\n{\n_\n,\n \n_\n,\n \n_\n},\n\n\n}\n\n\n\n\n\n\u5d4c\u5957\u4e24\u5c42\n\n\nboard2\n \n:=\n \n[][][]\nstring\n{\n\n    \n[][]\nstring\n{\n\n        \n[]\nstring\n{\n_\n,\n \n_\n,\n \n_\n},\n\n        \n[]\nstring\n{\n_\n,\n \n_\n,\n \n_\n},\n\n        \n[]\nstring\n{\n_\n,\n \n_\n,\n \n_\n},\n\n    \n},\n\n    \n[][]\nstring\n{\n\n        \n[]\nstring\n{\n_\n,\n \n_\n,\n \n_\n},\n\n        \n[]\nstring\n{\n_\n,\n \n_\n,\n \n_\n},\n\n        \n[]\nstring\n{\n_\n,\n \n_\n,\n \n_\n},\n\n    \n},\n\n    \n[][]\nstring\n{\n\n        \n[]\nstring\n{\n_\n,\n \n_\n,\n \n_\n},\n\n        \n[]\nstring\n{\n_\n,\n \n_\n,\n \n_\n},\n\n        \n[]\nstring\n{\n_\n,\n \n_\n,\n \n_\n},\n\n    \n},\n\n\n}\n\n\n\n\n\n\u8d4b\u503c\n\n\nboard1\n[\n0\n][\n0\n]\n \n=\n \nX\n\n\nboard2\n[\n0\n][\n0\n][\n0\n]\n \n=\n \nY\n\n\n\n\n\n\u901a\u8fc7\u5d4c\u5957\u5b9e\u73b0\u4e86\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982python\u4e2d\u5217\u8868\u5d4c\u5957\u5b57\u5178\u5d4c\u5957\u5217\u8868\u7b49\u7b49\n\n\n\n\n\u5206\u89e3\u8bf4\u660e\n\n\nboard1 := [][]string\n \u8fd9\u91cc\u7684\n[][]string\n\u53ef\u4ee5\u5206\u89e3\u6210\n[] []string\u6765\u770b\n\uff0c\u6bd4\u5982\n[]int\n\u8868\u793a\u5143\u7d20\u90fd\u662f\u6574\u578b\u7684slice\uff0c\n[]string\n\u8868\u793a\u5143\u7d20\u90fd\u662f\u5b57\u7b26\u4e32\u578b\u7684slice\uff0c\u90a3\u4e48\n[][]string\n\u5c31\u8868\u793a\u5143\u7d20\u4e3a\n[]string\n\u7c7b\u578b\u7684slice\n\n\n\n\n\n\n\u6ce8\u610f\u9017\u53f7\n\n\n\u53ef\u4ee5\u770b\u5230\uff0cgolang\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5f53\u8868\u793a\u591a\u4e2a\u5143\u7d20\u7684\u65f6\u5019\uff0c\u82e5\u4f7f\u7528\u4e86\u9017\u53f7\uff0c\u5219\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u540e\u4e5f\u5fc5\u987b\u52a0\u9017\u53f7\uff0c\u5426\u5219\u4f1a\u62a5\u9519", 
            "title": "3.7. slice\u5d4c\u5957"
        }, 
        {
            "location": "/datatype/arr_sli_expand/", 
            "text": "\u867d\u7136slice\u4e0d\u50cfarray\u662f\u6c38\u4e45\u4e0d\u53d8\u7684\u957f\u5ea6\u548c\u5bb9\u91cf\uff0c\u4f46\u662f\u6bcf\u6b21\u58f0\u660e\u6216\u8d4b\u503c\u540e\u5bb9\u91cf\u662f\u56fa\u5b9a\u7684\u3002\n\n\nslice\u6269\u5bb9\u6709\u591a\u79cd\u65b9\u6cd5\n\n\n\n\n\n\nliteral\u8d4b\u503c\uff0c\u4f46\u6bcf\u6b21\u8d4b\u503c\u4e4b\u540e\uff0c\u539f\u6765\u7684\u5143\u7d20\u5c31\u4e22\u5931\u4e86\uff0c\u8be6\u89c1\n\u5173\u4e8eliteral\n\n\n\n\n\n\n\u4f7f\u7528append\uff0c\u8be6\u89c1\nappend\u6dfb\u52a0\u5143\u7d20", 
            "title": "3.8. slice\u6269\u5bb9"
        }, 
        {
            "location": "/datatype/arr_sli_append/", 
            "text": "sli = append(sli, \u5143\u7d20)\n\n\n\n\n\u6ce8\u610f\uff1a\u5728\u6dfb\u52a0\u5143\u7d20\u65f6\u5019\uff0c\n\u82e5\u539f\u672cslice\u7684\u5bb9\u91cf\u4e0d\u591f\u4e86\uff0c\u5219\u4f1a\u81ea\u52a8\u6269\u5927\u4e00\u500dcap\n\uff0c\u5728\u6269\u5927cap\u65f6\u5019\u662f\u5c06\u539f\u6765\u5143\u7d20\u590d\u5236\u4e00\u4efd\uff08\u800c\u4e0d\u662f\u5f15\u7528\uff09\n\n\n\n\n\u547d\u4ee4\u89e3\u8bfb\n\n\nsli = append(sli, \u5143\u7d20)\u610f\u601d\u662f\u5148\u8bfb\u53d6\u539f\u6709\u5143\u7d20\uff0c\u7136\u540ecap\u6269\u5bb9\u4e00\u500d\uff0c\u7136\u540e\u5728\u672b\u5c3e\u63d2\u5165\u6570\u5b570\u8fd9\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u628a\u63d2\u5165\u5b8c\u7684\u8d4b\u503c\u7ed9sli\uff08\u8d4b\u503c\u7ed9\u65b0\u53d8\u91cf\u4e5f\u662f\u53ef\u4ee5\u7684\uff09\uff0c\u56e0\u6b64\u548c\u539f\u6709slice\u8131\u79bb\u5173\u7cfb\u3002\n\n\n\u6bcf\u4e00\u6b21\u6269\u5bb9\u7a7a\u95f4\uff0c\u90fd\u4f1a\u91cd\u65b0\u7533\u8bf7\u4e00\u5757\u533a\u57df\uff0c\u628a\u65e7\u7a7a\u95f4\u91cc\u9762\u7684\u5143\u7d20\u590d\u5236\u8fdb\u6765\u5230\u65b0\u7a7a\u95f4\u91cc\uff0c\u7136\u540e\u628a\u65b0\u7684\u5143\u7d20\u8ffd\u52a0\u8fdb\u6765\u3002\u65e7\u7a7a\u95f4\u91cc\u9762\u7684\u5143\u7d20\u7b49\u7740\u5783\u573e\u56de\u6536\u3002\n\n\n\n\n\u793a\u4f8b\nfunc\n \nprintSlice\n(\nstr\n \nstring\n,\n \ns\n \n[]\nint\n)\n \n{\n\n    \nfmt\n.\nPrintf\n(\n%s len=%d cap=%d %v\\n\n,\n \nstr\n,\n \nlen\n(\ns\n),\n \ncap\n(\ns\n),\n \ns\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ns\n \n[]\nint\n\n    \nprintSlice\n(\ns\n,\n \ns\n)\n  \n//s len=0 cap=0 []\n\n\n    \ns\n \n=\n \nappend\n(\ns\n,\n \n0\n)\n\n    \nprintSlice\n(\ns\n,\n \ns\n)\n \n// s len=1 cap=1 [0]\n\n\n    \ns\n \n=\n \nappend\n(\ns\n,\n \n1\n)\n\n    \nprintSlice\n(\ns\n,\n \ns\n)\n \n// s len=2 cap=2 [0 1]\n\n\n    \ns\n \n=\n \nappend\n(\ns\n,\n \n2\n)\n\n    \nprintSlice\n(\ns\n,\n \ns\n)\n \n// s len=3 cap=4 [0 1 2]\n\n    \na\n \n:=\n \ns\n\n    \na\n[\n0\n]\n \n=\n \n88\n\n    \nb\n \n:=\n \ns\n\n    \nb\n[\n0\n]\n \n=\n \n888\n\n    \nprintSlice\n(\na\n,\n \na\n)\n \n// a len=3 cap=4 [888 1 2]\n\n    \nprintSlice\n(\nb\n,\n \nb\n)\n \n// b len=3 cap=4 [888 1 2]\n\n\n    \ns\n \n=\n \nappend\n(\ns\n,\n \n3\n)\n\n    \na\n[\n0\n]\n \n=\n \n77\n\n    \nb\n[\n0\n]\n \n=\n \n777\n\n    \nprintSlice\n(\ns\n,\n \ns\n)\n \n// s len=4 cap=4 [777 1 2 3]\n\n    \nprintSlice\n(\na\n,\n \na\n)\n \n// a len=3 cap=4 [777 1 2]\n\n    \nprintSlice\n(\nb\n,\n \nb\n)\n \n// b len=3 cap=4 [777 1 2]\n\n\n\n    \ns\n \n=\n \nappend\n(\ns\n,\n \n4\n)\n\n\n    \na\n[\n0\n]\n \n=\n \n66\n\n    \nb\n[\n0\n]\n \n=\n \n666\n\n    \nprintSlice\n(\ns\n,\n \ns\n)\n \n// s len=5 cap=8 [777 1 2 3 4]\n\n    \nprintSlice\n(\na\n,\n \na\n)\n \n// a len=3 cap=4 [666 1 2]\n\n    \nprintSlice\n(\nb\n,\n \nb\n)\n \n// b len=3 cap=4 [666 1 2]\n\n\n    \ns\n \n=\n \nappend\n(\ns\n,\n \n5\n)\n\n    \na\n[\n0\n]\n \n=\n \n55\n\n    \nb\n[\n0\n]\n \n=\n \n555\n\n    \nprintSlice\n(\ns\n,\n \ns\n)\n \n// s len=6 cap=8 [777 1 2 3 4 5]\n\n    \nprintSlice\n(\na\n,\n \na\n)\n \n// a len=3 cap=4 [555 1 2]\n\n    \nprintSlice\n(\nb\n,\n \nb\n)\n \n// b len=3 cap=4 [555 1 2]\n\n\n    \ns\n \n=\n \nappend\n(\ns\n,\n \n6\n)\n\n    \na\n[\n0\n]\n \n=\n \n44\n\n    \nb\n[\n0\n]\n \n=\n \n444\n\n    \nprintSlice\n(\ns\n,\n \ns\n)\n \n// s len=7 cap=8 [777 1 2 3 4 5 6]\n\n    \nprintSlice\n(\na\n,\n \na\n)\n \n// a len=3 cap=4 [444 1 2]\n\n    \nprintSlice\n(\nb\n,\n \nb\n)\n \n// b len=3 cap=4 [444 1 2]\n\n\n    \ns\n \n=\n \nappend\n(\ns\n,\n \n7\n)\n\n    \na\n[\n0\n]\n \n=\n \n33\n\n    \nb\n[\n0\n]\n \n=\n \n333\n\n    \nprintSlice\n(\ns\n,\n \ns\n)\n \n// s len=8 cap=8 [777 1 2 3 4 5 6 7]\n\n    \nprintSlice\n(\na\n,\n \na\n)\n \n// a len=3 cap=4 [333 1 2]\n\n    \nprintSlice\n(\nb\n,\n \nb\n)\n \n// b len=3 cap=4 [333 1 2]\n\n\n    \ns\n \n=\n \nappend\n(\ns\n,\n \n8\n)\n\n    \na\n[\n0\n]\n \n=\n \n22\n\n    \nb\n[\n0\n]\n \n=\n \n222\n\n    \nprintSlice\n(\ns\n,\n \ns\n)\n \n// s len=9 cap=16 [777 1 2 3 4 5 6 7 8]\n\n    \nprintSlice\n(\na\n,\n \na\n)\n \n// a len=3 cap=4 [222 1 2]\n\n    \nprintSlice\n(\nb\n,\n \nb\n)\n \n// b len=3 cap=4 [222 1 2]\n\n\n    \ns\n \n=\n \nappend\n(\ns\n,\n \n9\n)\n\n    \na\n[\n0\n]\n \n=\n \n11\n\n    \nb\n[\n0\n]\n \n=\n \n111\n\n    \nprintSlice\n(\ns\n,\n \ns\n)\n \n// s len=10 cap=16 [777 1 2 3 4 5 6 7 8 9]\n\n    \nprintSlice\n(\na\n,\n \na\n)\n \n// a len=3 cap=4 [111 1 2]\n\n    \nprintSlice\n(\nb\n,\n \nb\n)\n \n// b len=3 cap=4 [111 1 2]\n\n\n}\n\n\n\n\n\u6ce8\u610f\uff1a\u867d\u7136a\u662fs\u7684\u884d\u751f\u51fa\u6765\u7684\uff0c\u4f46\u4ece\u4e0a\u9762\u80cc\u666f\u9ad8\u4eae\u90e8\u5206\u5f00\u59cb\uff0ca\u548cs\u5c31\u5206\u9053\u626c\u9573\u4e86\n\n\n\u5efa\u8bae\u4f7f\u7528make()\u63d0\u524d\u7533\u8bf7\u7a7a\u95f4\n\n\n\u5efa\u8bae\u4f7f\u7528\nmake([]int64, 0, 8)\b\n\u8fd9\u79cd\u65b9\u5f0f\u63d0\u524d\u7533\u8bf7\u597d\u7a7a\u95f4\uff0c\u4ee5\u4fbf\u964d\u4f4eappend\u6269\u5bb9\u5f15\u8d77\u7684\u65e7\u7a7a\u95f4\u5185\u5b58\u56de\u6536\u95ee\u9898\uff0c\u6765\u8fbe\u5230\u6027\u80fd\u4f18\u5316\u3002", 
            "title": "3.9. append\u6dfb\u52a0\u5143\u7d20"
        }, 
        {
            "location": "/datatype/arr_sli_copy/", 
            "text": "copy\u4f7f\u7528\n\n\n\n\na\n \n:=\n \n[]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n\nd\n \n:=\n \nmake\n([]\nint\n,\n \nlen\n(\na\n))\n\n\ncopy\n(\nd\n,\n \na\n)\n\n\n\n\n\n\u4e0a\u9762\u5c06a\u7684\u5143\u7d20\u590d\u5236\u7ed9\u4e86d\uff0c\u662f\u590d\u5236\u800c\u4e0d\u662f\u5f15\u7528\n\n\n\n\n\n\nappend\u548ccopy\u90fd\u662f\u53ef\u4ee5\u5c06\u5143\u7d20\u5185\u5bb9\u62f7\u8d1d\u7ed9\u53e6\u4e00\u4e2aslice\uff08\u7528\u4e8e\u590d\u5236\u800c\u4e0d\u662f\u5f15\u7528\uff09\uff0c\u8fd9\u6837\u65b0\u751f\u6210\u7684slice\u5c31\u548c\u539f\u6765\u7684slice\u5f7b\u5e95\u8131\u79bb\u5173\u7cfb\u4e86\uff08\u590d\u5236\u5143\u7d20\u5185\u5bb9\u5230\u65b0\u7684\u5185\u5b58\u5730\u5740\uff09\n\n\n\n\n\n\nappend\u5f53\u5bb9\u91cf\u4e0d\u591f\u65f6\u5019\u4f1a\u6269\u5927cap\uff0c\u800c\u6269\u5927cap\u662f\u5c06\u5143\u7d20\u5185\u5bb9\u590d\u5236\u51fa\u6765\uff0c\u56e0\u6b64\u4ece\u539f\u6765slice\u884d\u751f\u51fa\u6765\u7684slice\u90fd\u5c06\u548c\u8fd9\u4e2aslice\u8131\u79bb\u5173\u7cfb\n\n\n\n\n\n\ncopy\u65e0\u6cd5\u81ea\u5df1\u590d\u5236\u7ed9\u81ea\u5df1\uff0c\u5373\ncopy(a,a)\n\u8fd9\u6837\u867d\u7136\u4e0d\u62a5\u9519\uff0c\u4f46\u662f\u6ca1\u6709\u4efb\u4f55\u6548\u679c\uff08\u6ca1\u6709\u548c\u884d\u751f\u7684slice\u8131\u79bb\u5173\u7cfb\uff09\n\n\n\n\n\n\ncopy\u91cc\u7b2c2\u4e2a\u53c2\u6570\u4e5f\u5fc5\u987b\u662fslice\uff0c\u4e14\u7c7b\u578b\u8981\u548c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e00\u81f4\n\n\n\n\n\n\n\u5f53\u590d\u5236\u7684\u5143\u7d20\u548c\u88ab\u590d\u5236\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u4e00\u81f4\u65f6\n\n\n\n\n\n\n\n\n\u4e0d\u4f1a\u6269\u5927\u88ab\u590d\u5236\u7684cap\n\n\n\n\n\n\n\u4f1a\u5728len\u8303\u56f4\u5185\u4ea7\u751f\u8986\u76d6\n\n\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \n[]\nint\n{\n1\n,\n \n2\n,\n \n3\n,\n \n4\n,\n \n5\n}\n\n\n    \ns1\n \n:=\n \nmake\n([]\nint\n,\n \n5\n,\n \n10\n)\n\n    \nfmt\n.\nPrintln\n(\ns1\n)\n\n    \ncopy\n(\ns1\n,\n \na\n)\n\n    \nfmt\n.\nPrintln\n(\ns1\n,\n \nlen\n(\ns1\n),\n \ncap\n(\ns1\n))\n\n\n    \nfmt\n.\nPrintln\n(\n-----\n)\n\n\n    \ns2\n \n:=\n \nmake\n([]\nint\n,\n \n3\n,\n \n10\n)\n\n    \nfmt\n.\nPrintln\n(\ns2\n)\n\n    \ncopy\n(\ns2\n,\n \na\n)\n\n    \nfmt\n.\nPrintln\n(\ns2\n,\n \nlen\n(\ns2\n),\n \ncap\n(\ns2\n))\n\n\n    \nfmt\n.\nPrintln\n(\n-----\n)\n\n\n    \ns3\n \n:=\n \nmake\n([]\nint\n,\n \n7\n,\n \n10\n)\n\n    \nfmt\n.\nPrintln\n(\ns3\n)\n\n    \ncopy\n(\ns3\n,\n \na\n)\n\n    \nfmt\n.\nPrintln\n(\ns3\n,\n \nlen\n(\ns3\n),\n \ncap\n(\ns3\n))\n\n\n    \nfmt\n.\nPrintln\n(\n-----\n)\n\n\n    \ns4\n \n:=\n \nmake\n([]\nint\n,\n \n3\n,\n \n3\n)\n\n    \nfmt\n.\nPrintln\n(\ns4\n)\n\n    \ncopy\n(\ns4\n,\n \na\n)\n\n    \nfmt\n.\nPrintln\n(\ns4\n,\n \nlen\n(\ns4\n),\n \ncap\n(\ns4\n))\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n[0 0 0 0 0]\n[1 2 3 4 5] 5 10\n-----\n[0 0 0]\n[1 2 3] 3 10\n-----\n[0 0 0 0 0 0 0]\n[1 2 3 4 5 0 0] 7 10\n-----\n[0 0 0]\n[1 2 3] 3 3", 
            "title": "3.10. copy\u590d\u5236\u5143\u7d20"
        }, 
        {
            "location": "/datatype/arr_sli_copy/#copy", 
            "text": "a   :=   [] int { 2 ,   3 ,   5 ,   7 ,   11 ,   13 }  d   :=   make ([] int ,   len ( a ))  copy ( d ,   a )   \u4e0a\u9762\u5c06a\u7684\u5143\u7d20\u590d\u5236\u7ed9\u4e86d\uff0c\u662f\u590d\u5236\u800c\u4e0d\u662f\u5f15\u7528    append\u548ccopy\u90fd\u662f\u53ef\u4ee5\u5c06\u5143\u7d20\u5185\u5bb9\u62f7\u8d1d\u7ed9\u53e6\u4e00\u4e2aslice\uff08\u7528\u4e8e\u590d\u5236\u800c\u4e0d\u662f\u5f15\u7528\uff09\uff0c\u8fd9\u6837\u65b0\u751f\u6210\u7684slice\u5c31\u548c\u539f\u6765\u7684slice\u5f7b\u5e95\u8131\u79bb\u5173\u7cfb\u4e86\uff08\u590d\u5236\u5143\u7d20\u5185\u5bb9\u5230\u65b0\u7684\u5185\u5b58\u5730\u5740\uff09    append\u5f53\u5bb9\u91cf\u4e0d\u591f\u65f6\u5019\u4f1a\u6269\u5927cap\uff0c\u800c\u6269\u5927cap\u662f\u5c06\u5143\u7d20\u5185\u5bb9\u590d\u5236\u51fa\u6765\uff0c\u56e0\u6b64\u4ece\u539f\u6765slice\u884d\u751f\u51fa\u6765\u7684slice\u90fd\u5c06\u548c\u8fd9\u4e2aslice\u8131\u79bb\u5173\u7cfb    copy\u65e0\u6cd5\u81ea\u5df1\u590d\u5236\u7ed9\u81ea\u5df1\uff0c\u5373 copy(a,a) \u8fd9\u6837\u867d\u7136\u4e0d\u62a5\u9519\uff0c\u4f46\u662f\u6ca1\u6709\u4efb\u4f55\u6548\u679c\uff08\u6ca1\u6709\u548c\u884d\u751f\u7684slice\u8131\u79bb\u5173\u7cfb\uff09    copy\u91cc\u7b2c2\u4e2a\u53c2\u6570\u4e5f\u5fc5\u987b\u662fslice\uff0c\u4e14\u7c7b\u578b\u8981\u548c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e00\u81f4", 
            "title": "copy\u4f7f\u7528"
        }, 
        {
            "location": "/datatype/arr_sli_copy/#_1", 
            "text": "\u4e0d\u4f1a\u6269\u5927\u88ab\u590d\u5236\u7684cap    \u4f1a\u5728len\u8303\u56f4\u5185\u4ea7\u751f\u8986\u76d6    package   main  import   fmt  func   main ()   { \n     a   :=   [] int { 1 ,   2 ,   3 ,   4 ,   5 } \n\n     s1   :=   make ([] int ,   5 ,   10 ) \n     fmt . Println ( s1 ) \n     copy ( s1 ,   a ) \n     fmt . Println ( s1 ,   len ( s1 ),   cap ( s1 )) \n\n     fmt . Println ( ----- ) \n\n     s2   :=   make ([] int ,   3 ,   10 ) \n     fmt . Println ( s2 ) \n     copy ( s2 ,   a ) \n     fmt . Println ( s2 ,   len ( s2 ),   cap ( s2 )) \n\n     fmt . Println ( ----- ) \n\n     s3   :=   make ([] int ,   7 ,   10 ) \n     fmt . Println ( s3 ) \n     copy ( s3 ,   a ) \n     fmt . Println ( s3 ,   len ( s3 ),   cap ( s3 )) \n\n     fmt . Println ( ----- ) \n\n     s4   :=   make ([] int ,   3 ,   3 ) \n     fmt . Println ( s4 ) \n     copy ( s4 ,   a ) \n     fmt . Println ( s4 ,   len ( s4 ),   cap ( s4 ))  }   \u8f93\u51fa  [0 0 0 0 0]\n[1 2 3 4 5] 5 10\n-----\n[0 0 0]\n[1 2 3] 3 10\n-----\n[0 0 0 0 0 0 0]\n[1 2 3 4 5 0 0] 7 10\n-----\n[0 0 0]\n[1 2 3] 3 3", 
            "title": "\u5f53\u590d\u5236\u7684\u5143\u7d20\u548c\u88ab\u590d\u5236\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u4e00\u81f4\u65f6"
        }, 
        {
            "location": "/datatype/arr_empty_interface/", 
            "text": "\u8be6\u89c1\n\u63a5\u53e3\u7ae0\u8282", 
            "title": "3.11. \u7a7a\u63a5\u53e3\u5bf9\u5207\u7247\u7684\u5f71\u54cd"
        }, 
        {
            "location": "/datatype/map_main/", 
            "text": "map\u5c31\u662f\u952e\u503c\u5bf9(key-\nvalue)\uff0c\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u901a\u5e38\u53ebhash\u6216\u8005\u5b57\u5178\n\n\n\u5b8c\u6574\u5199\u6cd5\n\n\n\n\nvar m map[key_type]value_type\nm = make(map[key_type]value_type)\n\n\n\n\n\u4f8b\u5b50\n\n\nvar m map[string]int\nm = make(map[string]int)\n\n\n\n\n\n\n\u7b80\u5199\n\n\nvar m map[key_type]value_type = make(map[key_type]value_type)\n\n\n\n\n\u4f8b\u5b50\n\n\nvar m map[string]int = make(make[string]int)\n\n\n\n\n\n\n\u77ed\u58f0\u660e\u5199\u6cd5\n\n\n\n\nm := make(map[key_type]value_type)\n\n\n\n\n\u4f8b\u5b50\n\n\nm := make(map[string]int)", 
            "title": "4.1. \u58f0\u660e"
        }, 
        {
            "location": "/datatype/map_main/#_1", 
            "text": "var m map[key_type]value_type\nm = make(map[key_type]value_type)  \u4f8b\u5b50  var m map[string]int\nm = make(map[string]int)   \u7b80\u5199  var m map[key_type]value_type = make(map[key_type]value_type)  \u4f8b\u5b50  var m map[string]int = make(make[string]int)", 
            "title": "\u5b8c\u6574\u5199\u6cd5"
        }, 
        {
            "location": "/datatype/map_main/#_2", 
            "text": "m := make(map[key_type]value_type)  \u4f8b\u5b50  m := make(map[string]int)", 
            "title": "\u77ed\u58f0\u660e\u5199\u6cd5"
        }, 
        {
            "location": "/datatype/map_nil/", 
            "text": "\u53ea\u6709\u4ec5\u5199\nvar m map[key_type]value_type\n\u624d\u80fd\u5f97\u5230nil map\n\n\n\u4e00\u65e6\u521d\u59cb\u5316\uff0c\u5373\nm = make(map[key_type]value_type)\n\u5c31\u4e0d\u662fnil map\u4e86\n\n\n\n\nNote\n\n\nnil map\u662f\u65e0\u6cd5\u901a\u8fc7%T\u770b\u5230\uff0c%T\u770b\u5230\u7684\u90fd\u662fmap[key_type]value_type\uff0c\u6bd4\u5982map[string]int\n\n\n\u82e5\u5f80nil map\uff08\u5373\u672amake\u7684map\uff09\u4e2d\u63d2\u5165\u952e\u503c\u5bf9\uff0c\u5219\u4f1a\u62a5\u9519\npanic: assignment to entry in nil map", 
            "title": "4.2. nil map"
        }, 
        {
            "location": "/datatype/map_struct/", 
            "text": "type\n \nKey\n \nstruct\n \n{\n\n    \na\n,\n \nb\n \nstring\n\n\n}\n\n\n\ntype\n \nValue\n \nstruct\n \n{\n\n    \nc\n,\n \nd\n \nint\n\n\n}\n\n\n\nvar\n \nm\n \nmap\n[\nKey\n]\nValue\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nm\n \n=\n \nmake\n(\nmap\n[\nKey\n]\nValue\n)\n\n    \nm\n[\nKey\n{\n\n        \nA\n,\n \nB\n,\n\n    \n}]\n \n=\n \nValue\n{\n\n        \n1\n,\n \n2\n,\n\n    \n}\n\n    \nfmt\n.\nPrintln\n(\nm\n[\nKey\n{\n\n        \nA\n,\nB\n,\n\n    \n}])\n\n    \nfmt\n.\nPrintln\n(\nm\n)\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nm\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n{1 2}\nmap[{A B}:{1 2}]\nmap[main.Key]main.Value\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nKey\u3001Value\u5199\u5728\u51fd\u6570\u5916\u548c\u5199\u5728main\u51fd\u6570\u91cc\uff0c\u90fd\u662fmain.key\u3001main.Value\n\n\n\n\n\n\n\u4e0a\u9762\u7684Key\u3001Value\u3001m\u7684\u58f0\u660e\u90fd\u53ef\u4ee5\u653e\u5230main\u51fd\u6570\u91cc\u5199", 
            "title": "4.3. key\u548cvalue\u53ef\u4ee5\u7528struct"
        }, 
        {
            "location": "/datatype/map_literal/", 
            "text": "type\n \nVertex\n \nstruct\n \n{\n\n    \nLat\n,\n \nLong\n \nfloat64\n\n\n}\n\n\n\nvar\n \nm\n \n=\n \nmap\n[\nstring\n]\nVertex\n{\n\n    \nBell Labs\n:\n \nVertex\n{\n\n        \n40.68433\n,\n \n-\n74.39967\n,\n\n    \n},\n\n    \nGoogle\n:\n \nVertex\n{\n\n        \n37.42202\n,\n \n-\n122.08408\n,\n\n    \n},\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nm\n)\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nm\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nmap[Bell Labs:{40.68433 -74.39967} Google:{37.42202 -122.08408}]\nmap[string]main.Vertex\n\n\n\n\n\n\n\u7b80\u5199\u65b9\u5f0f\n\n\n\n\nIf the top-level type is just a type name, you can omit it from the elements of the literal.\n\n\n\n\nvar\n \nm\n \n=\n \nmap\n[\nstring\n]\nVertex\n{\n\n    \nBell Labs\n:\n \nVertex\n{\n\n        \n40.68433\n,\n \n-\n74.39967\n,\n\n    \n},\n\n    \nGoogle\n:\n \nVertex\n{\n\n        \n37.42202\n,\n \n-\n122.08408\n,\n\n    \n},\n\n\n}\n\n\n\n\u53ef\u4ee5\u7b80\u5199\u4e3a\n\n\nvar\n \nm\n \n=\n \nmap\n[\nstring\n]\nVertex\n{\n\n    \nBell Labs\n:\n \n{\n40.68433\n,\n \n-\n74.39967\n},\n\n    \nGoogle\n:\n    \n{\n37.42202\n,\n \n-\n122.08408\n},\n\n\n}", 
            "title": "4.4. literal"
        }, 
        {
            "location": "/datatype/map_get_insert_update/", 
            "text": "\u68c0\u7d22\u503c\n\n\n\n\nm[key]\n\n\n\n\n\u6bd4\u5982\n\n\na := m[key]\n\n\n\n\n\n\n\u5f53\u68c0\u7d22\u4e0d\u5230\u65f6\u5019\uff0c\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u662fa\u7684\u503c\u5c31\u662fvalue\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c\uff0c\u6bd4\u5982value\u662fint\u7c7b\u578b\uff0c\u90a3a\u5c31\u662f0\n\n\n\n\ntwo-value\u5199\u6cd5\uff1a\n\n\na, ok := m[key]\n\n\n\n\n\u5f53key\u5b58\u5728\u65f6\uff0cok\u662ftrue\uff0c\u5426\u5219\u662ffalse\n\n\n\u63d2\u5165\u6216\u66f4\u65b0\u503c\n\n\n\n\n\u5f53key\u4e0d\u5b58\u5728\u65f6\u5019\u5c31\u662f\u63d2\u5165\u65b0\u7684key-value\uff1a\n\n\nm[key] = value", 
            "title": "4.5. \u68c0\u7d22\u3001\u6dfb\u52a0\u548c\u4fee\u6539\u5143\u7d20"
        }, 
        {
            "location": "/datatype/map_get_insert_update/#_1", 
            "text": "m[key]  \u6bd4\u5982  a := m[key]   \u5f53\u68c0\u7d22\u4e0d\u5230\u65f6\u5019\uff0c\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u662fa\u7684\u503c\u5c31\u662fvalue\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c\uff0c\u6bd4\u5982value\u662fint\u7c7b\u578b\uff0c\u90a3a\u5c31\u662f0   two-value\u5199\u6cd5\uff1a  a, ok := m[key]  \u5f53key\u5b58\u5728\u65f6\uff0cok\u662ftrue\uff0c\u5426\u5219\u662ffalse", 
            "title": "\u68c0\u7d22\u503c"
        }, 
        {
            "location": "/datatype/map_get_insert_update/#_2", 
            "text": "\u5f53key\u4e0d\u5b58\u5728\u65f6\u5019\u5c31\u662f\u63d2\u5165\u65b0\u7684key-value\uff1a  m[key] = value", 
            "title": "\u63d2\u5165\u6216\u66f4\u65b0\u503c"
        }, 
        {
            "location": "/datatype/map_delete/", 
            "text": "delete(m, key)\n\n\n\n\n\u6bd4\u5982\n\n\ndelete(m, \nAnswer\n)\n\n\n\n\n\n\n\u5f53Answer\u4e0d\u5b58\u5728\u65f6\u5019\u4e0d\u4f1a\u63d0\u793a\u62a5\u9519", 
            "title": "4.6. delete\u5220\u9664\u5143\u7d20"
        }, 
        {
            "location": "/datatype/funcvalue_main/", 
            "text": "\u51fd\u6570\u503c(Function values): \u51fd\u6570\u4e5f\u662f\u503c\u3002\u4ed6\u4eec\u53ef\u4ee5\u50cf\u5176\u4ed6\u503c\u4e00\u6837\u4f20\u9012\uff0c\u6bd4\u5982\uff0c\u51fd\u6570\u503c\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u6216\u8005\u8fd4\u56de\u503c\u3002\n\n\n\u5728\u5176\u4ed6\u8bed\u8a00\u91cc\uff0c\u51fd\u6570\u503c\u53eb\u505a\u51fd\u6570\u6307\u9488(Function pointer)\uff0c\u5e38\u7528\u4e8e\u56de\u8c03\u548c\u95ed\u5305\n\n\n\u4e3e\u4f8b\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nbb\n(\nx\n,\n \ny\n \nint\n)\n \nint\n \n{\n\n    \nreturn\n \nx\n \n+\n \ny\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ncc\n \n:=\n \nfunc\n(\nx\n,\n \ny\n \nint\n)\n \nint\n \n{\n\n        \nreturn\n \nx\n \n+\n \ny\n\n    \n}\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nbb\n)\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \ncc\n)\n\n    \nfmt\n.\nPrintln\n(\nbb\n(\n1\n,\n \n2\n))\n\n    \nfmt\n.\nPrintln\n(\ncc\n(\n1\n,\n \n2\n))\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nfunc(int, int) int\nfunc(int, int) int\n3\n3\n\n\n\n\n\u7ed3\u8bba:\n\n\n\n\n\n\n\u51fd\u6570bb\u7684\u7c7b\u578b\u548c\u53d8\u91cfcc\u7684\u7c7b\u578b\u76f8\u540c\uff0c\u90fd\u662ffunc(int, int) int\n\n\n\n\n\n\n\u8bf4\u660ebb\u548ccc\u662f\u76f8\u540c\u7684\uff0c\u53ea\u662f\u5199\u6cd5\u4e0d\u540c\uff0c\u4f46\u5b9e\u8d28\u662f\u76f8\u540c\u7684\uff0c\u800c\u4e14\u4f7f\u7528\u8d77\u6765\u6548\u679c\u4e5f\u4e00\u6837", 
            "title": "5.1. \u4ecb\u7ecd"
        }, 
        {
            "location": "/datatype/funcvalue_parameter/", 
            "text": "\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \ndd\n(\ni\n \nfunc\n(\nint\n,\n \nint\n)\n \nint\n)\n \nint\n \n{\n\n    \nfmt\n.\nPrintf\n(\ni type: %T\\n\n,\n \ni\n)\n\n    \nreturn\n \ni\n(\n1\n,\n \n2\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nee\n \n:=\n \nfunc\n(\nx\n,\n \ny\n \nint\n)\n \nint\n \n{\n\n        \nreturn\n \nx\n \n+\n \ny\n\n    \n}\n\n    \nfmt\n.\nPrintf\n(\nee type: %T\\n\n,\n \nee\n)\n\n    \nfmt\n.\nPrintln\n(\ndd\n(\nee\n))\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nee type: func(int, int) int\ni type: func(int, int) int\n3\n\n\n\n\n\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c31\u662f\u51fd\u6570ee\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570dd\n\n\n\n\nNote\n\n\n\u6ce8\u610f\uff1a\u4e3a\u4ec0\u4e48dd(ee)\u8fd9\u6837\u662f\u53ef\u4ee5\u7684\uff0c\u662f\u56e0\u4e3aee\u7684\u503c\u7684\u7c7b\u578b\u548cdd\u7684\u53c2\u6570i\u7684\u7c7b\u578b\u662f\u4e00\u81f4\u7684\n\n\n\u4e0a\u9762\u8fd9\u79cd\u505a\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u53bb\u7406\u89e3\uff1a\n\n\n\u6bd4\u5982\u7b80\u5355\u7684\u51fd\u6570\uff1a\n\n\nfunc\n \nabc\n(\ni\n \nint\n)\n \nint\n \n{\n\n    \nreturn\n \ni\n \n+\n \n1\n\n\n}\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nabc\n(\n2\n))\n\n\n}\n\n\n\n\n\n\u4e0a\u9762\u53ef\u4ee5\u7406\u89e3\u4e3a2\u7684\u7c7b\u578b\u4e3aint\uff0c\u548cabc\u7684\u53c2\u6570i\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u6240\u4ee5\u53ef\u4ee5abc(2)\uff0c\u63a5\u7740\u5c31\u662f\u6267\u884cabc\u51fd\u6570\uff0c\u5c062\u8d4b\u503c\u7ed9i\uff0c\u7136\u540e\u6267\u884c2 + 1\uff0c\u7ed3\u679c\u4e3a3\n\n\n\u540c\u7406\uff0c\u5728\u4e0a\u9762\u7684\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cee\u7684\u7c7b\u578b\u4e3afunc(int, int) int\uff0c\u548cdd\u7684\u53c2\u6570i\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u6240\u4ee5\u53ef\u4ee5dd(ee)\uff0c\u63a5\u7740\u5c31\u662f\u6267\u884cdd\u51fd\u6570\uff0c\u5c06ee\u8d4b\u503c\u7ed9i\uff0c\u7136\u540e\u6267\u884ci(1, 2)\uff0c\u8fd9\u91cc\u6709\u70b9\u50cf\u53d8\u91cf\u66ff\u6362\uff0c\u5373i(1, 2)\u53ef\u4ee5\u66ff\u6362\u6210ee(1, 2)\uff0c\u5373return ee(1, 2)\uff0c\u4e5f\u5c31\u662freturn 1 + 2\uff0c\u7ed3\u679c\u4e3a3\u3002\uff08\u8fd9\u884c\u63cf\u8ff0\u4e0d\u4e00\u5b9a\u5bf9\uff0c\u53ea\u662f\u76ee\u524d\u7684\u7406\u89e3\uff0c\u4e5f\u53ef\u80fd\u4e0d\u662f\u628aee\u5e26\u8fdb\u53bb\uff0c\u800c\u662fee\u7684\u51fd\u6570\u672c\u8eab\u76f4\u63a5\u5e26\u8fdb\u53bb\uff09\n\n\n\n\n\u5305\u7ea7\u522b\u7684\u4e5f\u80fd\u7528\u51fd\u6570\u503c\u65b9\u5f0f\u6765\u58f0\u660e\u51fd\u6570\uff0c\u53ea\u4e0d\u8fc7\u8981\u7528var\uff1a\n\n\nvar\n \nabc\n \n=\n \nfunc\n \n(\ni\n \nint\n)\n \nint\n \n{\n\n    \nreturn\n \ni\n \n+\n \n1\n\n\n}\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nabc\n(\n2\n))\n\n\n}\n\n\n\n\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u95f2\u7684\u86cb\u75bc\u5b8c\u6574\u5199\u6cd5\uff1a\n\n\nvar\n \nabc\n \nfunc\n \n(\nint\n)\n \nint\n \n=\n \nfunc\n \n(\ni\n \nint\n)\n \nint\n \n{\n\n    \nreturn\n \ni\n \n+\n \n1\n\n\n}\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nabc\n(\n2\n))\n\n\n}", 
            "title": "5.2. \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570"
        }, 
        {
            "location": "/datatype/funcvalue_callback/", 
            "text": "\u4ec0\u4e48\u662f\u56de\u8c03\u51fd\u6570\n\n\n\n\n\u5173\u4e8e\u56de\u8c03\u7684\u7406\u89e3\uff0c\u77e5\u4e4e\u4e0a\u6709\u4e2a\u4e0d\u9519\u7684\u5e16\u5b50\uff0c\u8fd9\u91cc\u8d34\u51fa\u6765: \nhttps://www.zhihu.com/question/19801131\n\n\n\u51fd\u6570\u503c\u53ef\u7528\u4e8e\u56de\u8c03\uff0c\u4e0b\u9762\u662f\u5173\u4e8e\u56de\u8c03\u51fd\u6570\u7684\u7406\u89e3:\n\n\n\u56de\u8c03\u51fd\u6570\u82f1\u6587\u53eb\u505acallback\uff0c\u6280\u672f\u672c\u8d28\u662f\u5c31\u662f\u4e00\u4e2a\u901a\u8fc7\u51fd\u6570\u6307\u9488\uff08\u53ea\u4e0d\u8fc7\u5728golang\u91cc\u53eb\u51fd\u6570\u503c\uff0c\u4e0d\u53eb\u51fd\u6570\u6307\u9488\uff09\u8c03\u7528\u7684\u51fd\u6570\u3002\u6bd4\u5982\u5c06\u51fd\u6570A\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570B\uff0c\u90a3\u4e48A\u5c31\u53eb\u505a \n\u56de\u8c03\u51fd\u6570\n \uff0cB\u5c31\u53eb\u505a \n\u4e2d\u95f4\u51fd\u6570\n\uff0c\u8c03\u7528B\u7684\u51fd\u6570\u53eb\u505a \n\u8d77\u59cb\u51fd\u6570\n\n\n\n\nNote\n\n\n\u4e2d\u95f4\u51fd\u6570\uff1a\u4ec0\u4e48\u65f6\u95f4\u3001\u505a\u4ec0\u4e48\n\n\n\u56de\u8c03\u51fd\u6570\uff1a\u600e\u4e48\u505a\n\n\n\n\n\u56de\u8c03\u793a\u4f8b\uff08\u6765\u81ea\u77e5\u4e4e\uff09\uff1a\n\n\n\n\n\n\n\u6709\u4e00\u5bb6\u65c5\u9986\u63d0\u4f9b\u53eb\u9192\u670d\u52a1\uff0c\u4f46\u662f\u8981\u6c42\u65c5\u5ba2\u81ea\u5df1\u51b3\u5b9a\u53eb\u9192\u7684\u65b9\u6cd5\u3002\u53ef\u4ee5\u662f\u6253\u5ba2\u623f\u7535\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u662f\u6d3e\u670d\u52a1\u5458\u53bb\u6572\u95e8\uff0c\u7761\u5f97\u6b7b\u6015\u803d\u8bef\u4e8b\u7684\uff0c\u8fd8\u53ef\u4ee5\u8981\u6c42\u5f80\u81ea\u5df1\u5934\u4e0a\u6d47\u76c6\u6c34\u3002\u8fd9\u91cc\uff0c\u201c\u53eb\u9192\u201d\u8fd9\u4e2a\u884c\u4e3a\u662f\u65c5\u9986\u63d0\u4f9b\u7684\uff0c\u76f8\u5f53\u4e8e\u4e2d\u95f4\u51fd\u6570\uff0c\u4f46\u662f\u53eb\u9192\u7684\u65b9\u5f0f\u662f\u7531\u65c5\u5ba2\u51b3\u5b9a\u5e76\u544a\u8bc9\u65c5\u9986\u7684\uff0c\u4e5f\u5c31\u662f\u56de\u8c03\u51fd\u6570\u3002\u800c\u65c5\u5ba2\u544a\u8bc9\u65c5\u9986\u600e\u4e48\u53eb\u9192\u81ea\u5df1\u7684\u52a8\u4f5c\uff0c\u4e5f\u5c31\u662f\u628a\u56de\u8c03\u51fd\u6570\u4f20\u5165\u4e2d\u95f4\u51fd\u6570\u7684\u52a8\u4f5c\uff0c\u79f0\u4e3a\u767b\u8bb0\u56de\u8c03\u51fd\u6570\uff08to register a callback function\uff09\n\n\n\n\n\n\n\u4f60\u5230\u4e00\u4e2a\u5546\u5e97\u4e70\u4e1c\u897f\uff0c\u521a\u597d\u4f60\u8981\u7684\u4e1c\u897f\u6ca1\u6709\u8d27\uff0c\u4e8e\u662f\u4f60\u5728\u5e97\u5458\u90a3\u91cc\u7559\u4e0b\u4e86\u4f60\u7684\u7535\u8bdd\uff0c\u8fc7\u4e86\u51e0\u5929\u5e97\u91cc\u6709\u8d27\u4e86\uff0c\u5e97\u5458\u5c31\u6253\u4e86\u4f60\u7684\u7535\u8bdd\uff0c\u7136\u540e\u4f60\u63a5\u5230\u7535\u8bdd\u540e\u5c31\u5230\u5e97\u91cc\u53bb\u53d6\u4e86\u8d27\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c \u4f60\u7684\u7535\u8bdd\u53f7\u7801\u5c31\u53eb \n\u56de\u8c03\u51fd\u6570\n \uff0c\u4f60\u628a\u7535\u8bdd\u7559\u7ed9\u5e97\u5458\u5c31\u53eb \n\u767b\u8bb0\u56de\u8c03\u51fd\u6570\n \uff0c\u5e97\u91cc\u540e\u6765\u6709\u8d27\u4e86\u53eb\u505a \n\u89e6\u53d1\u4e86\u56de\u8c03\u5173\u8054\u7684\u4e8b\u4ef6\n \uff0c\u5e97\u5458\u7ed9\u4f60\u6253\u7535\u8bdd\u53eb\u505a \n\u8c03\u7528\u56de\u8c03\u51fd\u6570\n \uff0c\u4f60\u5230\u5e97\u91cc\u53bb\u53d6\u8d27\u53eb\u505a \n\u54cd\u5e94\u56de\u8c03\u4e8b\u4ef6\n  \u3002\n\n\n\n\n\n\n\n\n\u56de\u8c03: \u56de\u8fc7\u5934\u6765\u8c03\u7528\n\n\n\u56de\u8c03\u51fd\u6570\u8fd94\u4e2a\u5b57\u5bb9\u6613\u8ba9\u4eba\u7406\u89e3\u4e3a\u8c03\u7528\u522b\u4eba\uff0c\u8fd9\u662f\u9519\u8bef\u7684\uff0c\u5982\u679c\u5728\u524d\u9762\u52a0\u4e0a\u4e00\u4e2a\"\u88ab\"\u5b57\u5c31\u597d\u7406\u89e3\u4e86\uff0c\u5373\u7b49\u7740\u88ab\u4e2d\u95f4\u51fd\u6570\u8c03\u7528\uff0c\u53ea\u4e0d\u8fc7\u56de\u8c03\u51fd\u6570\u662f\u4e3b\u7a0b\u5e8f\u5199\u7684\uff0c\u4e5f\u5c31\u662f\u81ea\u5df1\u7684\u610f\u601d\uff0c\u6240\u4ee5\u53eb\u56de\u8c03\u3002\n\n\n\u6211\u662f\u8fd9\u4e48\u8bb0\u5fc6\u7684\uff1a\u6211\u628a\u6211\u5199\u7684\u51fd\u6570\uff0c\u4f20\u9012\u7ed9\u4f60\uff0c\u5e0c\u671b\u4f60\u5728\u67d0\u4e2a\u65f6\u5019 \n\u56de\u8fc7\u5934\u6765\u8c03\u7528\n \u6211\u7684\u8fd9\u4e2a\u51fd\u6570\u3002\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u79f0\u4e3a\u56de\u8c03\u51fd\u6570\n\n\n\n\n\u4e0b\u9762\u662f\u4e00\u4e2a\u4ee3\u7801\u4f8b\u5b50\uff0c\u53ef\u4ee5\u6bd4\u8f83\u4e0bpython\u548cgolang\u5728\u56de\u8c03\u65b9\u9762\u7684\u7f16\u7801\u533a\u522b\n\n\n\n\n\n\npython\u793a\u4f8b\n\n\neven.py\n#!/usr/bin/env python\n\n\n# -*- coding: utf-8 -*-\n\n\n\n#\u56de\u8c03\u51fd\u65701\n\n\n#\u751f\u6210\u4e00\u4e2a2k\u5f62\u5f0f\u7684\u5076\u6570\n\n\ndef\n \ndouble\n(\nx\n):\n\n    \nreturn\n \nx\n \n*\n \n2\n\n\n\n#\u56de\u8c03\u51fd\u65702\n\n\n#\u751f\u6210\u4e00\u4e2a4k\u5f62\u5f0f\u7684\u5076\u6570\n\n\ndef\n \nquadruple\n(\nx\n):\n\n    \nreturn\n \nx\n \n*\n \n4\n\n\n\n\nmain.py\nfrom\n \neven\n \nimport\n \n*\n\n\n\n#\u4e2d\u95f4\u51fd\u6570\n\n\n#\u63a5\u53d7\u4e00\u4e2a\u751f\u6210\u5076\u6570\u7684\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\n\n\n#\u8fd4\u56de\u4e00\u4e2a\u5947\u6570\n\n\ndef\n \ngetOddNumber\n(\nk\n,\n \ngetEvenNumber\n):\n\n    \nreturn\n \n1\n \n+\n \ngetEvenNumber\n(\nk\n)\n\n\n\n#\u8d77\u59cb\u51fd\u6570\uff0c\u8fd9\u91cc\u662f\u7a0b\u5e8f\u7684\u4e3b\u51fd\u6570\n\n\ndef\n \nmain\n():\n\n    \nk\n \n=\n \n1\n\n\n    \n#\u5f53\u9700\u8981\u751f\u6210\u4e00\u4e2a2k+1\u5f62\u5f0f\u7684\u5947\u6570\u65f6\n\n    \ni\n \n=\n \ngetOddNumber\n(\nk\n,\n \ndouble\n)\n\n    \nprint\n(\ni\n)\n\n\n    \n#\u5f53\u9700\u8981\u4e00\u4e2a4k+1\u5f62\u5f0f\u7684\u5947\u6570\u65f6\n\n    \ni\n \n=\n \ngetOddNumber\n(\nk\n,\n \nquadruple\n)\n\n    \nprint\n(\ni\n)\n\n\n\nif\n \n__name__\n \n==\n \n__main__\n:\n\n    \nmain\n()\n\n\n\n\n python main.py\n\n 3\n\n 5\n\n\n\n\n\n\n\n\ngolang\u793a\u4f8b\n\n\n$GOPATH/src/github.com/cyent/golang/example/even/even.go\npackage\n \neven\n\n\n\n//\u56de\u8c03\u51fd\u65701\n\n\n//\u751f\u6210\u4e00\u4e2a2k\u5f62\u5f0f\u7684\u5076\u6570\n\n\nfunc\n \nDouble\n(\nx\n \nint\n)\n \nint\n \n{\n\n    \nreturn\n \nx\n \n*\n \n2\n\n\n}\n\n\n\n//\u56de\u8c03\u51fd\u65702\n\n\n//\u751f\u6210\u4e00\u4e2a4k\u5f62\u5f0f\u7684\u5076\u6570\n\n\nfunc\n \nQuadruple\n(\nx\n \nint\n)\n \nint\n \n{\n\n    \nreturn\n \nx\n \n*\n \n4\n\n\n}\n\n\n\n\nmain.go\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ngithub.com/cyent/golang/example/even\n\n\n)\n\n\n\n//\u4e2d\u95f4\u51fd\u6570\n\n\n//\u63a5\u53d7\u4e00\u4e2a\u751f\u6210\u5076\u6570\u7684\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\n\n\n//\u8fd4\u56de\u4e00\u4e2a\u5947\u6570\n\n\nfunc\n \ngetOddNumber\n(\nk\n \nint\n,\n \ngetEvenNumber\n \nfunc\n(\nint\n)\n \nint\n)\n \nint\n \n{\n\n    \nreturn\n \n1\n \n+\n \ngetEvenNumber\n(\nk\n)\n\n\n}\n\n\n\n//\u8d77\u59cb\u51fd\u6570\uff0c\u8fd9\u91cc\u662f\u7a0b\u5e8f\u7684\u4e3b\u51fd\u6570\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nk\n \n:=\n \n1\n\n\n    \n//\u5f53\u9700\u8981\u751f\u6210\u4e00\u4e2a2k+1\u5f62\u5f0f\u7684\u5947\u6570\u65f6\n\n    \ni\n \n:=\n \ngetOddNumber\n(\nk\n,\n \neven\n.\nDouble\n)\n\n    \nfmt\n.\nPrintln\n(\ni\n)\n\n\n    \n//\u5f53\u9700\u8981\u4e00\u4e2a4k+1\u5f62\u5f0f\u7684\u5947\u6570\u65f6\n\n    \ni\n \n=\n \ngetOddNumber\n(\nk\n,\n \neven\n.\nQuadruple\n)\n\n    \nfmt\n.\nPrintln\n(\ni\n)\n\n\n}\n\n\n\n\n go run main.go\n\n 3\n\n 5\n\n\n\n\n\n\n\n\n\u6211\u7684\u4f8b\u5b50\n\n\n\n\n\u4f7f\u7528libvirt api\u5bf9\u865a\u62df\u673a\u8fdb\u884c\u64cd\u4f5c\uff0c\u67092\u79cd\u65b9\u5f0f\uff1a\n\n\n\n\n\n\n\u53ea\u5199\u4e00\u4e2alibvirt\u6a21\u5757\uff0c\u63a5\u6536\u53c2\u6570\u6765\u5bf9\u865a\u62df\u673a\u8fdb\u884c\u542f\u52a8\u3001\u505c\u6b62\u3001\u91cd\u542f\u3001\u5220\u9664\u7b49\u64cd\u4f5c\u3002\u4f46\u8fd9\u6837\u67093\u4e2a\u95ee\u9898\n\n\n\n\n\n\n\u8fd9\u4e2a\u6a21\u5757\u8981\u505a\u5f88\u591a\u7c7b\u578b\u7684\u4e8b\u60c5\uff0c\u5305\u62ec\u8fde\u63a5libvirt\u63a5\u53e3\u3001\u5bbf\u4e3b\u673a\u64cd\u4f5c\uff08\u7f51\u7edc\u3001\u5b58\u50a8\u3001\u6027\u80fd\u83b7\u53d6\uff09\u3001vm\u64cd\u4f5c\uff08\u521b\u5efa\u3001\u5220\u9664\u3001\u542f\u52a8\u3001\u505c\u6b62\uff09\n\n\n\n\n\n\n\u8fd9\u4e2a\u6a21\u5757\u8981\u7ef4\u62a4libvirt\u7248\u672c\u7684\u517c\u5bb9\u6027\uff0c\u5f53\u7248\u672c\u8d8a\u6765\u8d8a\u591a\u7684\u65f6\u5019\uff0c\u4f1a\u56e0\u4e3a\u517c\u5bb9\u5404\u4e2a\u7248\u672c\u5bfc\u81f4\u6a21\u5757\u5f88\u81c3\u80bf\n\n\n\n\n\n\n\u6bcf\u589e\u52a0\u4e00\u4e2a\u5bf9\u865a\u62df\u673a\u64cd\u4f5c\u7684\u529f\u80fd\uff0c\u90fd\u662f\u5728\u66f4\u65b0\u8fd9\u4e2a\u6a21\u5757\uff0c\u6b21\u6570\u591a\u4e86\uff0c\u81ea\u7136\u4e5f\u53d8\u5f97\u81c3\u80bf\n\n\n\n\n\n\n\n\n\n\nlibvirt\u6a21\u5757\u53ea\u5199\u6700\u57fa\u7840\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u53ea\u5199\u8fde\u63a5libvirt\u63a5\u53e3\uff0c\u7136\u540e\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u6765\u5bf9\u5bbf\u4e3b\u673a\u6216\u8005\u865a\u62df\u673a\u505a\u64cd\u4f5c\u3002\u7136\u540e\u8c03\u7528\u8005\u81ea\u5df1\u5b9e\u73b0\u5bbf\u4e3b\u673a\u64cd\u4f5c\u7684\u56de\u8c03\u51fd\u6570\u3001\u865a\u62df\u673a\u64cd\u4f5c\u7684\u56de\u8c03\u51fd\u6570\uff0c\u4f8b\u5982\u9700\u8981\u5bf9\u67d0\u4e2a\u865a\u62df\u673a\u8fdb\u884c\u542f\u52a8\uff0c\u64cd\u4f5c\u662f\uff1a\n\n\n\n\n\n\n\u8c03\u7528libvirt\u6a21\u5757\u8fde\u63a5api\n\n\n\n\n\n\n\u4f20\u5165\u8c03\u7528\u8005\u81ea\u5df1\u5b9e\u73b0\u7684\u542f\u52a8\u865a\u62df\u673a\u7684\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9libvirt\u6a21\u5757\n\n\n\n\n\n\n\u8fd9\u6837\u7684\u597d\u5904\u67092\u4e2a\uff1a\n\n\n\n\n\n\n\u5c06\u539f\u672clibvirt\u6a21\u5757\u9700\u8981\u505a\u76843\u4ef6\u4e8b\uff0c\u62c6\u89e3\u5f00\u6765\uff0c\u7ef4\u62a4\u91cf\u5927\u5927\u51cf\u5c11\n\n\n\n\n\n\n\u8c03\u7528\u8005\u9700\u8981\u54ea\u4e2a\u529f\u80fd\uff0c\u5c31\u5b9e\u73b0\u54ea\u4e2a\u529f\u80fd\uff0c\u4e0d\u9700\u8981\u5c31\u4e0d\u7528\u5b9e\u73b0\uff0c\u4ee3\u7801\u5f00\u91cf\u660e\u663e\u51cf\u5c11\n\n\n\n\n\n\n\n\n\n\n\u56de\u8c03\u51fd\u6570\u7c7b\u578b\n\n\n\n\n\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u56de\u8c03\u51fd\u6570\uff1a\n\n\n\n\n\n\n\u963b\u585e\u5f0f\u56de\u8c03\uff08\u4e5f\u53eb\u540c\u6b65\u56de\u8c03\uff09\n\n\n\n\nblocking callbacks (also known as synchronous callbacks or just callbacks)\n\n\n\n\n\n\n\n\n\u5ef6\u8fdf\u5f0f\u56de\u8c03\uff08\u4e5f\u53eb\u5f02\u6b65\u56de\u8c03\uff09\n\n\n\n\ndeferred callbacks (also known as asynchronous callbacks)\n\n\n\n\n\n\n\n\n\u672c\u9875\u6240\u6709\u4f8b\u5b50\u90fd\u662f\u963b\u585e\u5f0f\u56de\u8c03", 
            "title": "5.3. \u7528\u90141-\u56de\u8c03\u51fd\u6570"
        }, 
        {
            "location": "/datatype/funcvalue_callback/#_1", 
            "text": "\u5173\u4e8e\u56de\u8c03\u7684\u7406\u89e3\uff0c\u77e5\u4e4e\u4e0a\u6709\u4e2a\u4e0d\u9519\u7684\u5e16\u5b50\uff0c\u8fd9\u91cc\u8d34\u51fa\u6765:  https://www.zhihu.com/question/19801131  \u51fd\u6570\u503c\u53ef\u7528\u4e8e\u56de\u8c03\uff0c\u4e0b\u9762\u662f\u5173\u4e8e\u56de\u8c03\u51fd\u6570\u7684\u7406\u89e3:  \u56de\u8c03\u51fd\u6570\u82f1\u6587\u53eb\u505acallback\uff0c\u6280\u672f\u672c\u8d28\u662f\u5c31\u662f\u4e00\u4e2a\u901a\u8fc7\u51fd\u6570\u6307\u9488\uff08\u53ea\u4e0d\u8fc7\u5728golang\u91cc\u53eb\u51fd\u6570\u503c\uff0c\u4e0d\u53eb\u51fd\u6570\u6307\u9488\uff09\u8c03\u7528\u7684\u51fd\u6570\u3002\u6bd4\u5982\u5c06\u51fd\u6570A\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570B\uff0c\u90a3\u4e48A\u5c31\u53eb\u505a  \u56de\u8c03\u51fd\u6570  \uff0cB\u5c31\u53eb\u505a  \u4e2d\u95f4\u51fd\u6570 \uff0c\u8c03\u7528B\u7684\u51fd\u6570\u53eb\u505a  \u8d77\u59cb\u51fd\u6570   Note  \u4e2d\u95f4\u51fd\u6570\uff1a\u4ec0\u4e48\u65f6\u95f4\u3001\u505a\u4ec0\u4e48  \u56de\u8c03\u51fd\u6570\uff1a\u600e\u4e48\u505a   \u56de\u8c03\u793a\u4f8b\uff08\u6765\u81ea\u77e5\u4e4e\uff09\uff1a    \u6709\u4e00\u5bb6\u65c5\u9986\u63d0\u4f9b\u53eb\u9192\u670d\u52a1\uff0c\u4f46\u662f\u8981\u6c42\u65c5\u5ba2\u81ea\u5df1\u51b3\u5b9a\u53eb\u9192\u7684\u65b9\u6cd5\u3002\u53ef\u4ee5\u662f\u6253\u5ba2\u623f\u7535\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u662f\u6d3e\u670d\u52a1\u5458\u53bb\u6572\u95e8\uff0c\u7761\u5f97\u6b7b\u6015\u803d\u8bef\u4e8b\u7684\uff0c\u8fd8\u53ef\u4ee5\u8981\u6c42\u5f80\u81ea\u5df1\u5934\u4e0a\u6d47\u76c6\u6c34\u3002\u8fd9\u91cc\uff0c\u201c\u53eb\u9192\u201d\u8fd9\u4e2a\u884c\u4e3a\u662f\u65c5\u9986\u63d0\u4f9b\u7684\uff0c\u76f8\u5f53\u4e8e\u4e2d\u95f4\u51fd\u6570\uff0c\u4f46\u662f\u53eb\u9192\u7684\u65b9\u5f0f\u662f\u7531\u65c5\u5ba2\u51b3\u5b9a\u5e76\u544a\u8bc9\u65c5\u9986\u7684\uff0c\u4e5f\u5c31\u662f\u56de\u8c03\u51fd\u6570\u3002\u800c\u65c5\u5ba2\u544a\u8bc9\u65c5\u9986\u600e\u4e48\u53eb\u9192\u81ea\u5df1\u7684\u52a8\u4f5c\uff0c\u4e5f\u5c31\u662f\u628a\u56de\u8c03\u51fd\u6570\u4f20\u5165\u4e2d\u95f4\u51fd\u6570\u7684\u52a8\u4f5c\uff0c\u79f0\u4e3a\u767b\u8bb0\u56de\u8c03\u51fd\u6570\uff08to register a callback function\uff09    \u4f60\u5230\u4e00\u4e2a\u5546\u5e97\u4e70\u4e1c\u897f\uff0c\u521a\u597d\u4f60\u8981\u7684\u4e1c\u897f\u6ca1\u6709\u8d27\uff0c\u4e8e\u662f\u4f60\u5728\u5e97\u5458\u90a3\u91cc\u7559\u4e0b\u4e86\u4f60\u7684\u7535\u8bdd\uff0c\u8fc7\u4e86\u51e0\u5929\u5e97\u91cc\u6709\u8d27\u4e86\uff0c\u5e97\u5458\u5c31\u6253\u4e86\u4f60\u7684\u7535\u8bdd\uff0c\u7136\u540e\u4f60\u63a5\u5230\u7535\u8bdd\u540e\u5c31\u5230\u5e97\u91cc\u53bb\u53d6\u4e86\u8d27\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c \u4f60\u7684\u7535\u8bdd\u53f7\u7801\u5c31\u53eb  \u56de\u8c03\u51fd\u6570  \uff0c\u4f60\u628a\u7535\u8bdd\u7559\u7ed9\u5e97\u5458\u5c31\u53eb  \u767b\u8bb0\u56de\u8c03\u51fd\u6570  \uff0c\u5e97\u91cc\u540e\u6765\u6709\u8d27\u4e86\u53eb\u505a  \u89e6\u53d1\u4e86\u56de\u8c03\u5173\u8054\u7684\u4e8b\u4ef6  \uff0c\u5e97\u5458\u7ed9\u4f60\u6253\u7535\u8bdd\u53eb\u505a  \u8c03\u7528\u56de\u8c03\u51fd\u6570  \uff0c\u4f60\u5230\u5e97\u91cc\u53bb\u53d6\u8d27\u53eb\u505a  \u54cd\u5e94\u56de\u8c03\u4e8b\u4ef6   \u3002     \u56de\u8c03: \u56de\u8fc7\u5934\u6765\u8c03\u7528  \u56de\u8c03\u51fd\u6570\u8fd94\u4e2a\u5b57\u5bb9\u6613\u8ba9\u4eba\u7406\u89e3\u4e3a\u8c03\u7528\u522b\u4eba\uff0c\u8fd9\u662f\u9519\u8bef\u7684\uff0c\u5982\u679c\u5728\u524d\u9762\u52a0\u4e0a\u4e00\u4e2a\"\u88ab\"\u5b57\u5c31\u597d\u7406\u89e3\u4e86\uff0c\u5373\u7b49\u7740\u88ab\u4e2d\u95f4\u51fd\u6570\u8c03\u7528\uff0c\u53ea\u4e0d\u8fc7\u56de\u8c03\u51fd\u6570\u662f\u4e3b\u7a0b\u5e8f\u5199\u7684\uff0c\u4e5f\u5c31\u662f\u81ea\u5df1\u7684\u610f\u601d\uff0c\u6240\u4ee5\u53eb\u56de\u8c03\u3002  \u6211\u662f\u8fd9\u4e48\u8bb0\u5fc6\u7684\uff1a\u6211\u628a\u6211\u5199\u7684\u51fd\u6570\uff0c\u4f20\u9012\u7ed9\u4f60\uff0c\u5e0c\u671b\u4f60\u5728\u67d0\u4e2a\u65f6\u5019  \u56de\u8fc7\u5934\u6765\u8c03\u7528  \u6211\u7684\u8fd9\u4e2a\u51fd\u6570\u3002\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u79f0\u4e3a\u56de\u8c03\u51fd\u6570   \u4e0b\u9762\u662f\u4e00\u4e2a\u4ee3\u7801\u4f8b\u5b50\uff0c\u53ef\u4ee5\u6bd4\u8f83\u4e0bpython\u548cgolang\u5728\u56de\u8c03\u65b9\u9762\u7684\u7f16\u7801\u533a\u522b    python\u793a\u4f8b  even.py #!/usr/bin/env python  # -*- coding: utf-8 -*-  #\u56de\u8c03\u51fd\u65701  #\u751f\u6210\u4e00\u4e2a2k\u5f62\u5f0f\u7684\u5076\u6570  def   double ( x ): \n     return   x   *   2  #\u56de\u8c03\u51fd\u65702  #\u751f\u6210\u4e00\u4e2a4k\u5f62\u5f0f\u7684\u5076\u6570  def   quadruple ( x ): \n     return   x   *   4   main.py from   even   import   *  #\u4e2d\u95f4\u51fd\u6570  #\u63a5\u53d7\u4e00\u4e2a\u751f\u6210\u5076\u6570\u7684\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570  #\u8fd4\u56de\u4e00\u4e2a\u5947\u6570  def   getOddNumber ( k ,   getEvenNumber ): \n     return   1   +   getEvenNumber ( k )  #\u8d77\u59cb\u51fd\u6570\uff0c\u8fd9\u91cc\u662f\u7a0b\u5e8f\u7684\u4e3b\u51fd\u6570  def   main (): \n     k   =   1 \n\n     #\u5f53\u9700\u8981\u751f\u6210\u4e00\u4e2a2k+1\u5f62\u5f0f\u7684\u5947\u6570\u65f6 \n     i   =   getOddNumber ( k ,   double ) \n     print ( i ) \n\n     #\u5f53\u9700\u8981\u4e00\u4e2a4k+1\u5f62\u5f0f\u7684\u5947\u6570\u65f6 \n     i   =   getOddNumber ( k ,   quadruple ) \n     print ( i )  if   __name__   ==   __main__ : \n     main ()    python main.py  3  5    golang\u793a\u4f8b  $GOPATH/src/github.com/cyent/golang/example/even/even.go package   even  //\u56de\u8c03\u51fd\u65701  //\u751f\u6210\u4e00\u4e2a2k\u5f62\u5f0f\u7684\u5076\u6570  func   Double ( x   int )   int   { \n     return   x   *   2  }  //\u56de\u8c03\u51fd\u65702  //\u751f\u6210\u4e00\u4e2a4k\u5f62\u5f0f\u7684\u5076\u6570  func   Quadruple ( x   int )   int   { \n     return   x   *   4  }   main.go package   main  import   ( \n     fmt \n     github.com/cyent/golang/example/even  )  //\u4e2d\u95f4\u51fd\u6570  //\u63a5\u53d7\u4e00\u4e2a\u751f\u6210\u5076\u6570\u7684\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570  //\u8fd4\u56de\u4e00\u4e2a\u5947\u6570  func   getOddNumber ( k   int ,   getEvenNumber   func ( int )   int )   int   { \n     return   1   +   getEvenNumber ( k )  }  //\u8d77\u59cb\u51fd\u6570\uff0c\u8fd9\u91cc\u662f\u7a0b\u5e8f\u7684\u4e3b\u51fd\u6570  func   main ()   { \n     k   :=   1 \n\n     //\u5f53\u9700\u8981\u751f\u6210\u4e00\u4e2a2k+1\u5f62\u5f0f\u7684\u5947\u6570\u65f6 \n     i   :=   getOddNumber ( k ,   even . Double ) \n     fmt . Println ( i ) \n\n     //\u5f53\u9700\u8981\u4e00\u4e2a4k+1\u5f62\u5f0f\u7684\u5947\u6570\u65f6 \n     i   =   getOddNumber ( k ,   even . Quadruple ) \n     fmt . Println ( i )  }    go run main.go  3  5", 
            "title": "\u4ec0\u4e48\u662f\u56de\u8c03\u51fd\u6570"
        }, 
        {
            "location": "/datatype/funcvalue_callback/#_2", 
            "text": "\u4f7f\u7528libvirt api\u5bf9\u865a\u62df\u673a\u8fdb\u884c\u64cd\u4f5c\uff0c\u67092\u79cd\u65b9\u5f0f\uff1a    \u53ea\u5199\u4e00\u4e2alibvirt\u6a21\u5757\uff0c\u63a5\u6536\u53c2\u6570\u6765\u5bf9\u865a\u62df\u673a\u8fdb\u884c\u542f\u52a8\u3001\u505c\u6b62\u3001\u91cd\u542f\u3001\u5220\u9664\u7b49\u64cd\u4f5c\u3002\u4f46\u8fd9\u6837\u67093\u4e2a\u95ee\u9898    \u8fd9\u4e2a\u6a21\u5757\u8981\u505a\u5f88\u591a\u7c7b\u578b\u7684\u4e8b\u60c5\uff0c\u5305\u62ec\u8fde\u63a5libvirt\u63a5\u53e3\u3001\u5bbf\u4e3b\u673a\u64cd\u4f5c\uff08\u7f51\u7edc\u3001\u5b58\u50a8\u3001\u6027\u80fd\u83b7\u53d6\uff09\u3001vm\u64cd\u4f5c\uff08\u521b\u5efa\u3001\u5220\u9664\u3001\u542f\u52a8\u3001\u505c\u6b62\uff09    \u8fd9\u4e2a\u6a21\u5757\u8981\u7ef4\u62a4libvirt\u7248\u672c\u7684\u517c\u5bb9\u6027\uff0c\u5f53\u7248\u672c\u8d8a\u6765\u8d8a\u591a\u7684\u65f6\u5019\uff0c\u4f1a\u56e0\u4e3a\u517c\u5bb9\u5404\u4e2a\u7248\u672c\u5bfc\u81f4\u6a21\u5757\u5f88\u81c3\u80bf    \u6bcf\u589e\u52a0\u4e00\u4e2a\u5bf9\u865a\u62df\u673a\u64cd\u4f5c\u7684\u529f\u80fd\uff0c\u90fd\u662f\u5728\u66f4\u65b0\u8fd9\u4e2a\u6a21\u5757\uff0c\u6b21\u6570\u591a\u4e86\uff0c\u81ea\u7136\u4e5f\u53d8\u5f97\u81c3\u80bf      libvirt\u6a21\u5757\u53ea\u5199\u6700\u57fa\u7840\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u53ea\u5199\u8fde\u63a5libvirt\u63a5\u53e3\uff0c\u7136\u540e\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u6765\u5bf9\u5bbf\u4e3b\u673a\u6216\u8005\u865a\u62df\u673a\u505a\u64cd\u4f5c\u3002\u7136\u540e\u8c03\u7528\u8005\u81ea\u5df1\u5b9e\u73b0\u5bbf\u4e3b\u673a\u64cd\u4f5c\u7684\u56de\u8c03\u51fd\u6570\u3001\u865a\u62df\u673a\u64cd\u4f5c\u7684\u56de\u8c03\u51fd\u6570\uff0c\u4f8b\u5982\u9700\u8981\u5bf9\u67d0\u4e2a\u865a\u62df\u673a\u8fdb\u884c\u542f\u52a8\uff0c\u64cd\u4f5c\u662f\uff1a    \u8c03\u7528libvirt\u6a21\u5757\u8fde\u63a5api    \u4f20\u5165\u8c03\u7528\u8005\u81ea\u5df1\u5b9e\u73b0\u7684\u542f\u52a8\u865a\u62df\u673a\u7684\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9libvirt\u6a21\u5757    \u8fd9\u6837\u7684\u597d\u5904\u67092\u4e2a\uff1a    \u5c06\u539f\u672clibvirt\u6a21\u5757\u9700\u8981\u505a\u76843\u4ef6\u4e8b\uff0c\u62c6\u89e3\u5f00\u6765\uff0c\u7ef4\u62a4\u91cf\u5927\u5927\u51cf\u5c11    \u8c03\u7528\u8005\u9700\u8981\u54ea\u4e2a\u529f\u80fd\uff0c\u5c31\u5b9e\u73b0\u54ea\u4e2a\u529f\u80fd\uff0c\u4e0d\u9700\u8981\u5c31\u4e0d\u7528\u5b9e\u73b0\uff0c\u4ee3\u7801\u5f00\u91cf\u660e\u663e\u51cf\u5c11", 
            "title": "\u6211\u7684\u4f8b\u5b50"
        }, 
        {
            "location": "/datatype/funcvalue_callback/#_3", 
            "text": "\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u56de\u8c03\u51fd\u6570\uff1a    \u963b\u585e\u5f0f\u56de\u8c03\uff08\u4e5f\u53eb\u540c\u6b65\u56de\u8c03\uff09   blocking callbacks (also known as synchronous callbacks or just callbacks)     \u5ef6\u8fdf\u5f0f\u56de\u8c03\uff08\u4e5f\u53eb\u5f02\u6b65\u56de\u8c03\uff09   deferred callbacks (also known as asynchronous callbacks)     \u672c\u9875\u6240\u6709\u4f8b\u5b50\u90fd\u662f\u963b\u585e\u5f0f\u56de\u8c03", 
            "title": "\u56de\u8c03\u51fd\u6570\u7c7b\u578b"
        }, 
        {
            "location": "/datatype/funcvalue_closure/", 
            "text": "\u4f5c\u7528\uff1a\u7f29\u5c0f\u53d8\u91cf\u4f5c\u7528\u57df\uff0c\u51cf\u5c11\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u6c61\u67d3\n\n\n\u5148\u4e0a\u4f8b\u5b50\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nadder\n()\n \nfunc\n(\nint\n)\n \nint\n \n{\n\n    \nsum\n \n:=\n \n0\n\n    \nreturn\n \nfunc\n(\nx\n \nint\n)\n \nint\n \n{\n\n        \nsum\n \n+=\n \nx\n\n        \nreturn\n \nsum\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \npos\n,\n \nneg\n \n:=\n \nadder\n(),\n \nadder\n()\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n++\n \n{\n\n        \nfmt\n.\nPrintln\n(\n\n            \npos\n(\ni\n),\n\n            \nneg\n(\n-\n2\n*\ni\n),\n\n        \n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n0 0\n1 -2\n3 -6\n6 -12\n10 -20\n15 -30\n21 -42\n28 -56\n36 -72\n45 -90\n\n\n\n\n\n\nNote\n\n\npos, neg := adder(), adder()\n\n\n\n\n\u76f8\u5f53\u4e8e\n\n\npos := adder()\nneg := adder()\n\n\n\n\nvar\u53ef\u4ee5\u8fd9\u4e48\u5199\n\n\nvar pos func(int) int\nvar neg func(int) int\npos = adder()\nreg = adder()\n\n\n\n\n\n\n\u4e0a\u9762\u7684\n\n\npos := adder()\n\n\n\n\n\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u6267\u884cadder()\uff0c\u7136\u540e\u5c06\u5176return\u7684\u5185\u5bb9\u8d4b\u503c\u7ed9pos\uff0c\u800creturn\u7684\u5185\u5bb9\u5c31\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u51fd\u6570\uff0c\u5373\uff1a\n\n\nfunc\n(\nx\n \nint\n)\n \nint\n \n{\n\n    \nsum\n \n+=\n \nx\n\n    \nreturn\n \nsum\n\n\n}\n\n\n\n\n\n\n\n\u56e0\u6b64\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u662f\n\n\npos\n \n:=\n \nfunc\n(\nx\n \nint\n)\n \nint\n \n{\n\n    \nsum\n \n+=\n \nx\n\n    \nreturn\n \nsum\n\n\n}\n\n\n\n\n\n\n\n\u95ed\u5305\u51fd\u6570\u672c\u8eab\u53ef\u7528\u51fd\u6570\u503c\u4e66\u5199\n\n\n\n\n\u6bd4\u5982\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nadder\n \n:=\n \nfunc\n \n()\n \nfunc\n(\nint\n)\n \nint\n \n{\n\n        \nsum\n \n:=\n \n0\n\n        \nreturn\n \nfunc\n(\nx\n \nint\n)\n \nint\n \n{\n\n            \nsum\n \n+=\n \nx\n\n            \nreturn\n \nsum\n\n        \n}\n\n    \n}\n\n\n    \npos\n,\n \nneg\n \n:=\n \nadder\n(),\n \nadder\n()\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n++\n \n{\n\n        \nfmt\n.\nPrintln\n(\n\n            \npos\n(\ni\n),\n\n            \nneg\n(\n-\n2\n*\ni\n),\n\n        \n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nNote\n\n\n\u51fd\u6570\u503c\u5185\u5d4c\u51fd\u6570\u503c\n\n\n\n\n\u8f93\u51fa\u4e5f\u662f\n\n\n0 0\n1 -2\n3 -6\n6 -12\n10 -20\n15 -30\n21 -42\n28 -56\n36 -72\n45 -90\n\n\n\n\n\u4ec0\u4e48\u662f\u95ed\u5305\n\n\n\n\n\n\n\u5b98\u65b9\u89e3\u91ca\uff08\u8bd1\u6587\uff09\n\n\nGo \u51fd\u6570\u53ef\u4ee5\u662f\u4e00\u4e2a\u95ed\u5305\u3002\u95ed\u5305\u662f\u4e00\u4e2a\u51fd\u6570\u503c\uff0c\u5b83\u5f15\u7528\u4e86\u51fd\u6570\u4f53\u4e4b\u5916\u7684\u53d8\u91cf\u3002 \u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u5f15\u7528\u7684\u53d8\u91cf\u8fdb\u884c\u8bbf\u95ee\u548c\u8d4b\u503c\uff1b\u6362\u53e5\u8bdd\u8bf4\u8fd9\u4e2a\u51fd\u6570\u88ab\u201c\u7ed1\u5b9a\u201d\u5728\u8fd9\u4e2a\u53d8\u91cf\u4e0a\u3002\n\n\n\n\n\u4f8b\u5982\uff0c\u51fd\u6570 adder \u8fd4\u56de\u4e00\u4e2a\u95ed\u5305\u3002\u6bcf\u4e2a\u8fd4\u56de\u7684\u95ed\u5305\u90fd\u88ab\u7ed1\u5b9a\u5230\u5176\u5404\u81ea\u7684 sum \u53d8\u91cf\u4e0a\u3002\n\n\n\u5728\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff08\u8fd9\u91cc\u91cd\u65b0\u8d34\u4e0b\u4ee3\u7801\uff0c\u548c\u4e0a\u9762\u4ee3\u7801\u4e00\u6837\uff09\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nadder\n()\n \nfunc\n(\nint\n)\n \nint\n \n{\n\n    \nsum\n \n:=\n \n0\n\n\n    \nreturn\n \nfunc\n(\nx\n \nint\n)\n \nint\n \n{\n\n\n        \nsum\n \n+=\n \nx\n\n\n        \nreturn\n \nsum\n\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \npos\n,\n \nneg\n \n:=\n \nadder\n(),\n \nadder\n()\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n++\n \n{\n\n        \nfmt\n.\nPrintln\n(\n\n            \npos\n(\ni\n),\n\n            \nneg\n(\n-\n2\n*\ni\n),\n\n        \n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u4e0a\u9762\u80cc\u666f\u9ad8\u4eae\u90e8\u5206\u5c31\u662f\u4e00\u4e2a\u95ed\u5305\uff0c\u5982pos := adder()\u7684adder()\u8868\u793a\u8fd4\u56de\u4e86\u4e00\u4e2a\u95ed\u5305\uff0c\u5e76\u8d4b\u503c\u7ed9\u4e86pos\uff0c\u540c\u65f6\uff0c\u8fd9\u4e2a\u88ab\u8d4b\u503c\u7ed9\u4e86pos\u7684\u95ed\u5305\u51fd\u6570\u88ab\u7ed1\u5b9a\u5728sum\u53d8\u91cf\u4e0a\uff0c\u56e0\u6b64pos\u95ed\u5305\u51fd\u6570\u91cc\u7684\u53d8\u91cfsum\u548cneg\u53d8\u91cf\u91cc\u7684sum\u6beb\u65e0\u5173\u7cfb\u3002\n\n\n\n\nNote\n\n\nfunc adder() func(int) int\n\u7684\nfunc(int) int\n\u8868\u793aadder()\u7684\u8f93\u51fa\u503c\u7684\u7c7b\u578b\u662ffunc(int) int\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\n\n\n\n\n\u6211\u5bf9\u95ed\u5305\u7684\u7406\u89e3\n\n\n\n\n\u6ca1\u6709\u95ed\u5305\u7684\u65f6\u5019\uff0c\u51fd\u6570\u5c31\u662f\u4e00\u6b21\u6027\u4e70\u5356\uff0c\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\u5c31\u65e0\u6cd5\u518d\u66f4\u6539\u51fd\u6570\u4e2d\u53d8\u91cf\u7684\u503c\uff08\u5e94\u8be5\u662f\u5185\u5b58\u91ca\u653e\u4e86\uff09\uff1b\u6709\u4e86\u95ed\u5305\u540e\u51fd\u6570\u5c31\u6210\u4e3a\u4e86\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u53ea\u8981\u53d8\u91cf\u6ca1\u88ab\u91ca\u653e\uff0c\u51fd\u6570\u5c31\u4f1a\u4e00\u76f4\u5904\u4e8e\u5b58\u6d3b\u5e76\u72ec\u4eab\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u53ef\u4ee5\u540e\u671f\u66f4\u6539\u51fd\u6570\u4e2d\u53d8\u91cf\u7684\u503c\uff08\u56e0\u4e3a\u8fd9\u6837\u5c31\u4e0d\u4f1a\u88abgo\u7ed9\u56de\u6536\u5185\u5b58\u4e86\uff0c\u4f1a\u4e00\u76f4\u7f13\u5b58\u5728\u90a3\u91cc\uff09\u3002\n\n\n\u6bd4\u5982\uff0c\u5b9e\u73b0\u4e00\u4e2a\u8ba1\u7b97\u529f\u80fd\uff1a\u4e00\u4e2a\u6570\u4ece0\u5f00\u59cb\uff0c\u6bcf\u6b21\u52a0\u4e0a\u81ea\u5df1\u7684\u503c\u548c\u5f53\u524d\u5faa\u73af\u6b21\u6570\uff08\u5f53\u524d\u7b2c\u51e0\u6b21\uff0c\u5faa\u73af\u4ece0\u5f00\u59cb\uff0c\u52309\uff0c\u517110\u6b21\uff09\uff0c\u7136\u540e*2\uff0c\u8fd9\u6837\u8fed\u4ee310\u6b21\uff1a\n\n\n\u6ca1\u6709\u95ed\u5305\u7684\u65f6\u5019\u8fd9\u4e48\u5199\uff1a\n\n\nfunc\n \nabc\n(\nx\n \nint\n)\n \nint\n \n{\n\n    \nreturn\n \nx\n \n*\n \n2\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \na\n \nint\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n \n++\n \n{\n\n        \na\n \n=\n \nabc\n(\na\n+\ni\n)\n\n        \nfmt\n.\nPrintln\n(\na\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u5982\u679c\u7528\u95ed\u5305\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a\n\n\nfunc\n \nabc\n()\n \nfunc\n(\nint\n)\n \nint\n \n{\n\n    \nres\n \n:=\n \n0\n\n    \nreturn\n \nfunc\n(\nx\n \nint\n)\n \nint\n \n{\n\n        \nres\n \n=\n \n(\nres\n \n+\n \nx\n)\n \n*\n \n2\n\n        \nreturn\n \nres\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \nabc\n()\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n++\n \n{\n\n        \nfmt\n.\nPrintln\n(\na\n(\ni\n))\n\n    \n}\n\n\n}\n\n\n\n\n\n2\u79cd\u5199\u6cd5\u8f93\u51fa\u503c\u90fd\u662f\uff1a\n\n\n0\n2\n8\n22\n52\n114\n240\n494\n1004\n2026\n\n\n\n\n\u4ece\u4e0a\u9762\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\u95ed\u5305\u76843\u4e2a\u597d\u5904\uff1a\n\n\n\n\n\n\n\u4e0d\u662f\u4e00\u6b21\u6027\u6d88\u8d39\uff0c\u88ab\u5f15\u7528\u58f0\u660e\u540e\u53ef\u4ee5\u91cd\u590d\u8c03\u7528\uff0c\u540c\u65f6\u53d8\u91cf\u53c8\u53ea\u9650\u5b9a\u5728\u51fd\u6570\u91cc\uff0c\u540c\u65f6\u6bcf\u6b21\u8c03\u7528\u4e0d\u662f\u4ece\u521d\u59cb\u503c\u5f00\u59cb\uff08\u51fd\u6570\u91cc\u957f\u671f\u5b58\u50a8\u53d8\u91cf\uff09\n\n\n\n\n\u8fd9\u6709\u70b9\u50cf\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u611f\u89c9\uff0c\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7c7b\uff0c\u8fd9\u6837\u8fd9\u4e2a\u7c7b\u91cc\u7684\u6240\u6709\u65b9\u6cd5\u3001\u5c5e\u6027\u90fd\u662f\u4e3a\u67d0\u4e2a\u4eba\u79c1\u6709\u72ec\u4eab\u7684\u3002\u4f46\u6bd4\u9762\u5411\u5bf9\u8c61\u66f4\u52a0\u7684\u8f7b\u91cf\u5316\n\n\n\n\n\n\n\n\n\u7528\u4e86\u95ed\u5305\u540e\uff0c\u4e3b\u51fd\u6570\u5c31\u53d8\u5f97\u7b80\u5355\u4e86\uff0c\u628a\u7b97\u6cd5\u5c01\u88c5\u5728\u4e00\u4e2a\u51fd\u6570\u91cc\uff0c\u4f7f\u5f97\u4e3b\u51fd\u6570\u7701\u7565\u4e86a=abc(a+i)\u8fd9\u79cd\u9ebb\u70e6\u4e8b\u4e86\n\n\n\n\n\n\n\u53d8\u91cf\u6c61\u67d3\u5c11\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u7528\u95ed\u5305\uff0c\u5c31\u4f1a\u4e3a\u4e86\u4f20\u9012\u503c\u5230\u51fd\u6570\u91cc\uff0c\u800c\u5728\u51fd\u6570\u5916\u90e8\u58f0\u660e\u53d8\u91cf\uff0c\u4f46\u8fd9\u6837\u58f0\u660e\u7684\u53d8\u91cf\u53c8\u4f1a\u88ab\u4e0b\u9762\u7684\u5176\u4ed6\u51fd\u6570\u6216\u4ee3\u7801\u8bef\u6539\u3002\n\n\n\n\n\n\n\u5173\u4e8e\u95ed\u5305\u7684\u7b2c\u4e00\u4e2a\u597d\u5904\uff0c\u518d\u5570\u55e6\u4e3e\u4e2a\u4f8b\u5b50\n\n\n\n\n\n\n\u82e5\u4e0d\u7528\u95ed\u5305\uff0c\u5219\u5bb9\u6613\u5bf9\u51fd\u6570\u5916\u7684\u53d8\u91cf\u8bef\u64cd\u4f5c\uff08\u8bef\u64cd\u4f5c\u522b\u4eba\uff09\uff0c\u4f8b\uff1a\n\n\nvar\n \nA\n \nint\n \n=\n \n1\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfoo\n \n:=\n \nfunc\n \n()\n \n{\n\n        \nA\n \n:=\n \n2\n\n        \nfmt\n.\nPrintln\n(\nA\n)\n\n    \n}\n\n    \nfoo\n()\n\n    \nfmt\n.\nPrintln\n(\nA\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\uff1a\n\n\n2\n1\n\n\n\n\n\u5982\u679c\u624b\u8bef\u5c06A := 2\u5199\u6210\u4e86A = 2\uff0c\u90a3\u4e48\u8f93\u51fa\u5c31\u662f\uff1a\n\n\n2\n2\n\n\n\n\n\u5373\u4f1a\u5f71\u54cd\u5916\u90e8\u53d8\u91cfA\n\n\n\n\n\n\n\u4e3a\u4e86\u5c06\u67d0\u4e00\u4e2a\u79c1\u6709\u7684\u503c\u4f20\u9012\u5230\u67d0\u4e2a\u51fd\u6570\u91cc\uff0c\u5c31\u9700\u8981\u5728\u51fd\u6570\u5916\u58f0\u660e\u8fd9\u4e2a\u503c\uff0c\u4f46\u662f\u8fd9\u6837\u58f0\u660e\u4f1a\u5bfc\u81f4\u8fd9\u4e2a\u503c\u5728\u5176\u4ed6\u51fd\u6570\u91cc\u4e5f\u53ef\u89c1\u4e86\uff08\u522b\u4eba\u8bef\u64cd\u4f5c\u6211\uff09\uff0c\u4f8b\uff1a\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nA\n \n:=\n \n1\n\n    \nfoo\n \n:=\n \nfunc\n \n()\n \nint\n \n{\n\n        \nreturn\n \nA\n \n+\n \n1\n\n    \n}\n\n    \nB\n \n:=\n \n1\n\n    \nbar\n \n:=\n \nfunc\n \n()\n \nint\n \n{\n\n        \nreturn\n \nB\n \n+\n \n2\n\n    \n}\n\n    \nfmt\n.\nPrintln\n(\nfoo\n())\n\n    \nfmt\n.\nPrintln\n(\nbar\n())\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\uff1a\n\n\n2\n3\n\n\n\n\n\u5728bar\u91cc\u662f\u53ef\u4ee5\u5bf9\u53d8\u91cfA\u505a\u64cd\u4f5c\u7684\uff0c\u4e00\u4e2a\u4e0d\u5c0f\u5fc3\u5c31\u5bb9\u6613\u8bef\u4fee\u6539\u53d8\u91cfA\n\n\n\u7ed3\u8bba\uff1a\u51fd\u6570\u5916\u7684\u53d8\u91cf\u53ea\u80fd\u901a\u8fc7\u53c2\u6570\u4f20\u9012\u8fdb\u53bb\uff0c\u4e0d\u8981\u901a\u8fc7\u5168\u5c40\u53d8\u91cf\u7684\u65b9\u5f0f\u7684\u6e20\u9053\u4f20\u9012\u8fdb\u53bb\uff0c\u5f53\u51fd\u6570\u5185\u80fd\u8bfb\u53d6\u5230\u7684\u53d8\u91cf\u8d8a\u591a\uff0c\u51fa\u9519\u6982\u7387(\u8bef\u64cd\u4f5c)\u4e5f\u5c31\u8d8a\u9ad8\u3002\n\n\n\n\n\n\n\u6700\u540e\u4e3e\u4e2a\u4f8b\u5b50\n\n\n\n\n\u5b9e\u73b0\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1a\n\n\n\u7528\u95ed\u5305\uff1a\n\n\nfunc\n \nfibonacci\n()\n \nfunc\n()\n \nint\n \n{\n\n    \nb1\n \n:=\n \n1\n\n    \nb2\n \n:=\n \n0\n\n    \nbc\n \n:=\n \n0\n\n    \nreturn\n \nfunc\n()\n \nint\n \n{\n\n        \nbc\n \n=\n \nb1\n \n+\n \nb2\n\n        \nb1\n \n=\n \nb2\n\n        \nb2\n \n=\n \nbc\n\n        \nreturn\n \nbc\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nf\n \n:=\n \nfibonacci\n()\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n++\n \n{\n\n        \nfmt\n.\nPrintln\n(\nf\n())\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n1\n1\n2\n3\n5\n8\n13\n21\n34\n55\n\n\n\n\n\u4e0d\u7528\u95ed\u5305\uff1a\n\n\nfunc\n \nfibonacci\n(\nnum\n \nint\n)\n \n{\n\n    \nb1\n \n:=\n \n1\n\n    \nb2\n \n:=\n \n0\n\n    \nbc\n \n:=\n \n0\n\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \nnum\n;\n \ni\n \n++\n \n{\n\n        \nbc\n \n=\n \nb1\n \n+\n \nb2\n\n        \nb1\n \n=\n \nb2\n\n        \nb2\n \n=\n \nbc\n\n        \nfmt\n.\nPrintln\n(\nbc\n)\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfibonacci\n(\n10\n)\n\n\n}\n\n\n\n\n\n\u8fd9\u6837\u8f93\u51fa\u4e5f\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f\u8fd9\u4e48\u5199\u7684\u8bdd\u5c31\u5c06\u5faa\u73af\u6b21\u6570\u4ea4\u7ed9\u4e86fibonacci\u51fd\u6570\uff0c\u5373\u8fd9\u4e2a\u51fd\u6570\u662f\u4e2a\u4e00\u6b21\u6027\u4f7f\u7528\u7684\uff0c\u5f53\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\u5982\u679c\u518d\u6267\u884c\u51fd\u6570\uff0c\u53c8\u662f\u4ece\u521d\u59cb\u503c\uff08\u8fd9\u91cc\u662fb1=1\uff09\u5f00\u59cb\uff0c\u5982\u679c\u60f3\u80fd\u7ee7\u7eed\u4e0b\u53bb\uff0c\u5c31\u5fc5\u987b\u5728\u51fd\u6570\u5916\u58f0\u660e\u53d8\u91cf\uff0c\u4f46\u8fd9\u6837\u53c8\u9020\u6210\u4e86\u53d8\u91cf\u7684\u6cdb\u6ee5\uff08\u5373\u5bf9\u5176\u4ed6\u4ee3\u7801\u6765\u8bf4\u8fd9\u51e0\u4e2a\u53d8\u91cf\u662f\u6beb\u65e0\u610f\u4e49\uff0c\u8fd8\u53ef\u80fd\u9020\u6210\u5bf9\u8fd9\u51e0\u4e2a\u53d8\u91cf\u7684\u8bef\u64cd\u4f5c\uff09\uff0c\u800c\u6709\u7684\u65f6\u5019\u60f3\u628afor\u5faa\u73af\u4ea4\u7531main\u63a7\u5236\uff0c\u800c\u662f\u8ba9fibonacci\u51fd\u6570\u5b8c\u6210\u6838\u5fc3\u7b97\u6cd5\u3001\u6838\u5fc3\u6570\u636e\u5b58\u50a8\uff0c\u540c\u65f6\u53d8\u91cf\u53c8\u4e0d\u6cdb\u6ee5\u7ed9\u5176\u4ed6\u4ee3\u7801\n\n\n\u4e0d\u7528\u95ed\u5305\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nb1\n \n:=\n \n1\n\n    \nb2\n \n:=\n \n0\n\n    \nbc\n \n:=\n \n0\n\n    \nfibonacci\n \n:=\n \nfunc\n \n()\n \n{\n\n        \nbc\n \n=\n \nb1\n \n+\n \nb2\n\n        \nb1\n \n=\n \nb2\n\n        \nb2\n \n=\n \nbc\n\n        \nfmt\n.\nPrintln\n(\nbc\n)\n\n    \n}\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n \n++\n \n{\n\n        \nfibonacci\n()\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8fd9\u6837\u8f93\u51fa\u7ed3\u679c\u4e5f\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u8fd9\u4e48\u5199\u7684\u8bdd\uff0cb1\u3001b2\u3001bc\u5c31\u53d8\u6210\u4e86\u5168\u5c40\u90fd\u80fd\u5f15\u7528\u7684\u53d8\u91cf\u4e86\uff0c\u800c\u8fd93\u4e2a\u53d8\u91cf\u5176\u5b9e\u53ea\u5728fibonacci\u91cc\u7528\u7684\u5230\uff0c\u6240\u4ee5\u8fd9\u6837\u628ab1\u3001b2\u3001bc\u7ed9\u653e\u5230\u5168\u5c40\u5c31\u663e\u5f97\u6beb\u65e0\u610f\u4e49\uff0c\u8fd8\u6709\u53ef\u80fd\u5bf9\u8fd93\u4e2a\u53d8\u91cf\u8bef\u64cd\u4f5c", 
            "title": "5.4. \u7528\u90142-\u95ed\u5305"
        }, 
        {
            "location": "/datatype/funcvalue_closure/#_1", 
            "text": "package   main  import   fmt  func   adder ()   func ( int )   int   { \n     sum   :=   0 \n     return   func ( x   int )   int   { \n         sum   +=   x \n         return   sum \n     }  }  func   main ()   { \n     pos ,   neg   :=   adder (),   adder () \n     for   i   :=   0 ;   i     10 ;   i ++   { \n         fmt . Println ( \n             pos ( i ), \n             neg ( - 2 * i ), \n         ) \n     }  }   \u8f93\u51fa  0 0\n1 -2\n3 -6\n6 -12\n10 -20\n15 -30\n21 -42\n28 -56\n36 -72\n45 -90   Note  pos, neg := adder(), adder()  \u76f8\u5f53\u4e8e  pos := adder()\nneg := adder()  var\u53ef\u4ee5\u8fd9\u4e48\u5199  var pos func(int) int\nvar neg func(int) int\npos = adder()\nreg = adder()   \u4e0a\u9762\u7684  pos := adder()  \u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u6267\u884cadder()\uff0c\u7136\u540e\u5c06\u5176return\u7684\u5185\u5bb9\u8d4b\u503c\u7ed9pos\uff0c\u800creturn\u7684\u5185\u5bb9\u5c31\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u51fd\u6570\uff0c\u5373\uff1a  func ( x   int )   int   { \n     sum   +=   x \n     return   sum  }    \u56e0\u6b64\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u662f  pos   :=   func ( x   int )   int   { \n     sum   +=   x \n     return   sum  }", 
            "title": "\u5148\u4e0a\u4f8b\u5b50"
        }, 
        {
            "location": "/datatype/funcvalue_closure/#_2", 
            "text": "\u6bd4\u5982\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210\uff1a  package   main  import   fmt  func   main ()   { \n     adder   :=   func   ()   func ( int )   int   { \n         sum   :=   0 \n         return   func ( x   int )   int   { \n             sum   +=   x \n             return   sum \n         } \n     } \n\n     pos ,   neg   :=   adder (),   adder () \n     for   i   :=   0 ;   i     10 ;   i ++   { \n         fmt . Println ( \n             pos ( i ), \n             neg ( - 2 * i ), \n         ) \n     }  }    Note  \u51fd\u6570\u503c\u5185\u5d4c\u51fd\u6570\u503c   \u8f93\u51fa\u4e5f\u662f  0 0\n1 -2\n3 -6\n6 -12\n10 -20\n15 -30\n21 -42\n28 -56\n36 -72\n45 -90", 
            "title": "\u95ed\u5305\u51fd\u6570\u672c\u8eab\u53ef\u7528\u51fd\u6570\u503c\u4e66\u5199"
        }, 
        {
            "location": "/datatype/funcvalue_closure/#_3", 
            "text": "\u5b98\u65b9\u89e3\u91ca\uff08\u8bd1\u6587\uff09  Go \u51fd\u6570\u53ef\u4ee5\u662f\u4e00\u4e2a\u95ed\u5305\u3002\u95ed\u5305\u662f\u4e00\u4e2a\u51fd\u6570\u503c\uff0c\u5b83\u5f15\u7528\u4e86\u51fd\u6570\u4f53\u4e4b\u5916\u7684\u53d8\u91cf\u3002 \u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u5f15\u7528\u7684\u53d8\u91cf\u8fdb\u884c\u8bbf\u95ee\u548c\u8d4b\u503c\uff1b\u6362\u53e5\u8bdd\u8bf4\u8fd9\u4e2a\u51fd\u6570\u88ab\u201c\u7ed1\u5b9a\u201d\u5728\u8fd9\u4e2a\u53d8\u91cf\u4e0a\u3002   \u4f8b\u5982\uff0c\u51fd\u6570 adder \u8fd4\u56de\u4e00\u4e2a\u95ed\u5305\u3002\u6bcf\u4e2a\u8fd4\u56de\u7684\u95ed\u5305\u90fd\u88ab\u7ed1\u5b9a\u5230\u5176\u5404\u81ea\u7684 sum \u53d8\u91cf\u4e0a\u3002  \u5728\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff08\u8fd9\u91cc\u91cd\u65b0\u8d34\u4e0b\u4ee3\u7801\uff0c\u548c\u4e0a\u9762\u4ee3\u7801\u4e00\u6837\uff09\uff1a  package   main  import   fmt  func   adder ()   func ( int )   int   { \n     sum   :=   0       return   func ( x   int )   int   {           sum   +=   x           return   sum       }  }  func   main ()   { \n     pos ,   neg   :=   adder (),   adder () \n     for   i   :=   0 ;   i     10 ;   i ++   { \n         fmt . Println ( \n             pos ( i ), \n             neg ( - 2 * i ), \n         ) \n     }  }   \u4e0a\u9762\u80cc\u666f\u9ad8\u4eae\u90e8\u5206\u5c31\u662f\u4e00\u4e2a\u95ed\u5305\uff0c\u5982pos := adder()\u7684adder()\u8868\u793a\u8fd4\u56de\u4e86\u4e00\u4e2a\u95ed\u5305\uff0c\u5e76\u8d4b\u503c\u7ed9\u4e86pos\uff0c\u540c\u65f6\uff0c\u8fd9\u4e2a\u88ab\u8d4b\u503c\u7ed9\u4e86pos\u7684\u95ed\u5305\u51fd\u6570\u88ab\u7ed1\u5b9a\u5728sum\u53d8\u91cf\u4e0a\uff0c\u56e0\u6b64pos\u95ed\u5305\u51fd\u6570\u91cc\u7684\u53d8\u91cfsum\u548cneg\u53d8\u91cf\u91cc\u7684sum\u6beb\u65e0\u5173\u7cfb\u3002   Note  func adder() func(int) int \u7684 func(int) int \u8868\u793aadder()\u7684\u8f93\u51fa\u503c\u7684\u7c7b\u578b\u662ffunc(int) int\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570", 
            "title": "\u4ec0\u4e48\u662f\u95ed\u5305"
        }, 
        {
            "location": "/datatype/funcvalue_closure/#_4", 
            "text": "\u6ca1\u6709\u95ed\u5305\u7684\u65f6\u5019\uff0c\u51fd\u6570\u5c31\u662f\u4e00\u6b21\u6027\u4e70\u5356\uff0c\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\u5c31\u65e0\u6cd5\u518d\u66f4\u6539\u51fd\u6570\u4e2d\u53d8\u91cf\u7684\u503c\uff08\u5e94\u8be5\u662f\u5185\u5b58\u91ca\u653e\u4e86\uff09\uff1b\u6709\u4e86\u95ed\u5305\u540e\u51fd\u6570\u5c31\u6210\u4e3a\u4e86\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u53ea\u8981\u53d8\u91cf\u6ca1\u88ab\u91ca\u653e\uff0c\u51fd\u6570\u5c31\u4f1a\u4e00\u76f4\u5904\u4e8e\u5b58\u6d3b\u5e76\u72ec\u4eab\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u53ef\u4ee5\u540e\u671f\u66f4\u6539\u51fd\u6570\u4e2d\u53d8\u91cf\u7684\u503c\uff08\u56e0\u4e3a\u8fd9\u6837\u5c31\u4e0d\u4f1a\u88abgo\u7ed9\u56de\u6536\u5185\u5b58\u4e86\uff0c\u4f1a\u4e00\u76f4\u7f13\u5b58\u5728\u90a3\u91cc\uff09\u3002  \u6bd4\u5982\uff0c\u5b9e\u73b0\u4e00\u4e2a\u8ba1\u7b97\u529f\u80fd\uff1a\u4e00\u4e2a\u6570\u4ece0\u5f00\u59cb\uff0c\u6bcf\u6b21\u52a0\u4e0a\u81ea\u5df1\u7684\u503c\u548c\u5f53\u524d\u5faa\u73af\u6b21\u6570\uff08\u5f53\u524d\u7b2c\u51e0\u6b21\uff0c\u5faa\u73af\u4ece0\u5f00\u59cb\uff0c\u52309\uff0c\u517110\u6b21\uff09\uff0c\u7136\u540e*2\uff0c\u8fd9\u6837\u8fed\u4ee310\u6b21\uff1a  \u6ca1\u6709\u95ed\u5305\u7684\u65f6\u5019\u8fd9\u4e48\u5199\uff1a  func   abc ( x   int )   int   { \n     return   x   *   2  }  func   main ()   { \n     var   a   int \n     for   i   :=   0 ;   i     10 ;   i   ++   { \n         a   =   abc ( a + i ) \n         fmt . Println ( a ) \n     }  }   \u5982\u679c\u7528\u95ed\u5305\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a  func   abc ()   func ( int )   int   { \n     res   :=   0 \n     return   func ( x   int )   int   { \n         res   =   ( res   +   x )   *   2 \n         return   res \n     }  }  func   main ()   { \n     a   :=   abc () \n     for   i   :=   0 ;   i     10 ;   i ++   { \n         fmt . Println ( a ( i )) \n     }  }   2\u79cd\u5199\u6cd5\u8f93\u51fa\u503c\u90fd\u662f\uff1a  0\n2\n8\n22\n52\n114\n240\n494\n1004\n2026  \u4ece\u4e0a\u9762\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\u95ed\u5305\u76843\u4e2a\u597d\u5904\uff1a    \u4e0d\u662f\u4e00\u6b21\u6027\u6d88\u8d39\uff0c\u88ab\u5f15\u7528\u58f0\u660e\u540e\u53ef\u4ee5\u91cd\u590d\u8c03\u7528\uff0c\u540c\u65f6\u53d8\u91cf\u53c8\u53ea\u9650\u5b9a\u5728\u51fd\u6570\u91cc\uff0c\u540c\u65f6\u6bcf\u6b21\u8c03\u7528\u4e0d\u662f\u4ece\u521d\u59cb\u503c\u5f00\u59cb\uff08\u51fd\u6570\u91cc\u957f\u671f\u5b58\u50a8\u53d8\u91cf\uff09   \u8fd9\u6709\u70b9\u50cf\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u611f\u89c9\uff0c\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7c7b\uff0c\u8fd9\u6837\u8fd9\u4e2a\u7c7b\u91cc\u7684\u6240\u6709\u65b9\u6cd5\u3001\u5c5e\u6027\u90fd\u662f\u4e3a\u67d0\u4e2a\u4eba\u79c1\u6709\u72ec\u4eab\u7684\u3002\u4f46\u6bd4\u9762\u5411\u5bf9\u8c61\u66f4\u52a0\u7684\u8f7b\u91cf\u5316     \u7528\u4e86\u95ed\u5305\u540e\uff0c\u4e3b\u51fd\u6570\u5c31\u53d8\u5f97\u7b80\u5355\u4e86\uff0c\u628a\u7b97\u6cd5\u5c01\u88c5\u5728\u4e00\u4e2a\u51fd\u6570\u91cc\uff0c\u4f7f\u5f97\u4e3b\u51fd\u6570\u7701\u7565\u4e86a=abc(a+i)\u8fd9\u79cd\u9ebb\u70e6\u4e8b\u4e86    \u53d8\u91cf\u6c61\u67d3\u5c11\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u7528\u95ed\u5305\uff0c\u5c31\u4f1a\u4e3a\u4e86\u4f20\u9012\u503c\u5230\u51fd\u6570\u91cc\uff0c\u800c\u5728\u51fd\u6570\u5916\u90e8\u58f0\u660e\u53d8\u91cf\uff0c\u4f46\u8fd9\u6837\u58f0\u660e\u7684\u53d8\u91cf\u53c8\u4f1a\u88ab\u4e0b\u9762\u7684\u5176\u4ed6\u51fd\u6570\u6216\u4ee3\u7801\u8bef\u6539\u3002    \u5173\u4e8e\u95ed\u5305\u7684\u7b2c\u4e00\u4e2a\u597d\u5904\uff0c\u518d\u5570\u55e6\u4e3e\u4e2a\u4f8b\u5b50    \u82e5\u4e0d\u7528\u95ed\u5305\uff0c\u5219\u5bb9\u6613\u5bf9\u51fd\u6570\u5916\u7684\u53d8\u91cf\u8bef\u64cd\u4f5c\uff08\u8bef\u64cd\u4f5c\u522b\u4eba\uff09\uff0c\u4f8b\uff1a  var   A   int   =   1  func   main ()   { \n     foo   :=   func   ()   { \n         A   :=   2 \n         fmt . Println ( A ) \n     } \n     foo () \n     fmt . Println ( A )  }   \u8f93\u51fa\uff1a  2\n1  \u5982\u679c\u624b\u8bef\u5c06A := 2\u5199\u6210\u4e86A = 2\uff0c\u90a3\u4e48\u8f93\u51fa\u5c31\u662f\uff1a  2\n2  \u5373\u4f1a\u5f71\u54cd\u5916\u90e8\u53d8\u91cfA    \u4e3a\u4e86\u5c06\u67d0\u4e00\u4e2a\u79c1\u6709\u7684\u503c\u4f20\u9012\u5230\u67d0\u4e2a\u51fd\u6570\u91cc\uff0c\u5c31\u9700\u8981\u5728\u51fd\u6570\u5916\u58f0\u660e\u8fd9\u4e2a\u503c\uff0c\u4f46\u662f\u8fd9\u6837\u58f0\u660e\u4f1a\u5bfc\u81f4\u8fd9\u4e2a\u503c\u5728\u5176\u4ed6\u51fd\u6570\u91cc\u4e5f\u53ef\u89c1\u4e86\uff08\u522b\u4eba\u8bef\u64cd\u4f5c\u6211\uff09\uff0c\u4f8b\uff1a  func   main ()   { \n     A   :=   1 \n     foo   :=   func   ()   int   { \n         return   A   +   1 \n     } \n     B   :=   1 \n     bar   :=   func   ()   int   { \n         return   B   +   2 \n     } \n     fmt . Println ( foo ()) \n     fmt . Println ( bar ())  }   \u8f93\u51fa\uff1a  2\n3  \u5728bar\u91cc\u662f\u53ef\u4ee5\u5bf9\u53d8\u91cfA\u505a\u64cd\u4f5c\u7684\uff0c\u4e00\u4e2a\u4e0d\u5c0f\u5fc3\u5c31\u5bb9\u6613\u8bef\u4fee\u6539\u53d8\u91cfA  \u7ed3\u8bba\uff1a\u51fd\u6570\u5916\u7684\u53d8\u91cf\u53ea\u80fd\u901a\u8fc7\u53c2\u6570\u4f20\u9012\u8fdb\u53bb\uff0c\u4e0d\u8981\u901a\u8fc7\u5168\u5c40\u53d8\u91cf\u7684\u65b9\u5f0f\u7684\u6e20\u9053\u4f20\u9012\u8fdb\u53bb\uff0c\u5f53\u51fd\u6570\u5185\u80fd\u8bfb\u53d6\u5230\u7684\u53d8\u91cf\u8d8a\u591a\uff0c\u51fa\u9519\u6982\u7387(\u8bef\u64cd\u4f5c)\u4e5f\u5c31\u8d8a\u9ad8\u3002", 
            "title": "\u6211\u5bf9\u95ed\u5305\u7684\u7406\u89e3"
        }, 
        {
            "location": "/datatype/funcvalue_closure/#_5", 
            "text": "\u5b9e\u73b0\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1a  \u7528\u95ed\u5305\uff1a  func   fibonacci ()   func ()   int   { \n     b1   :=   1 \n     b2   :=   0 \n     bc   :=   0 \n     return   func ()   int   { \n         bc   =   b1   +   b2 \n         b1   =   b2 \n         b2   =   bc \n         return   bc \n     }  }  func   main ()   { \n     f   :=   fibonacci () \n     for   i   :=   0 ;   i     10 ;   i ++   { \n         fmt . Println ( f ()) \n     }  }   \u8f93\u51fa  1\n1\n2\n3\n5\n8\n13\n21\n34\n55  \u4e0d\u7528\u95ed\u5305\uff1a  func   fibonacci ( num   int )   { \n     b1   :=   1 \n     b2   :=   0 \n     bc   :=   0 \n\n     for   i   :=   0 ;   i     num ;   i   ++   { \n         bc   =   b1   +   b2 \n         b1   =   b2 \n         b2   =   bc \n         fmt . Println ( bc ) \n     }  }  func   main ()   { \n     fibonacci ( 10 )  }   \u8fd9\u6837\u8f93\u51fa\u4e5f\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f\u8fd9\u4e48\u5199\u7684\u8bdd\u5c31\u5c06\u5faa\u73af\u6b21\u6570\u4ea4\u7ed9\u4e86fibonacci\u51fd\u6570\uff0c\u5373\u8fd9\u4e2a\u51fd\u6570\u662f\u4e2a\u4e00\u6b21\u6027\u4f7f\u7528\u7684\uff0c\u5f53\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\u5982\u679c\u518d\u6267\u884c\u51fd\u6570\uff0c\u53c8\u662f\u4ece\u521d\u59cb\u503c\uff08\u8fd9\u91cc\u662fb1=1\uff09\u5f00\u59cb\uff0c\u5982\u679c\u60f3\u80fd\u7ee7\u7eed\u4e0b\u53bb\uff0c\u5c31\u5fc5\u987b\u5728\u51fd\u6570\u5916\u58f0\u660e\u53d8\u91cf\uff0c\u4f46\u8fd9\u6837\u53c8\u9020\u6210\u4e86\u53d8\u91cf\u7684\u6cdb\u6ee5\uff08\u5373\u5bf9\u5176\u4ed6\u4ee3\u7801\u6765\u8bf4\u8fd9\u51e0\u4e2a\u53d8\u91cf\u662f\u6beb\u65e0\u610f\u4e49\uff0c\u8fd8\u53ef\u80fd\u9020\u6210\u5bf9\u8fd9\u51e0\u4e2a\u53d8\u91cf\u7684\u8bef\u64cd\u4f5c\uff09\uff0c\u800c\u6709\u7684\u65f6\u5019\u60f3\u628afor\u5faa\u73af\u4ea4\u7531main\u63a7\u5236\uff0c\u800c\u662f\u8ba9fibonacci\u51fd\u6570\u5b8c\u6210\u6838\u5fc3\u7b97\u6cd5\u3001\u6838\u5fc3\u6570\u636e\u5b58\u50a8\uff0c\u540c\u65f6\u53d8\u91cf\u53c8\u4e0d\u6cdb\u6ee5\u7ed9\u5176\u4ed6\u4ee3\u7801  \u4e0d\u7528\u95ed\u5305\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a  func   main ()   { \n     b1   :=   1 \n     b2   :=   0 \n     bc   :=   0 \n     fibonacci   :=   func   ()   { \n         bc   =   b1   +   b2 \n         b1   =   b2 \n         b2   =   bc \n         fmt . Println ( bc ) \n     } \n     for   i   :=   0 ;   i     10 ;   i   ++   { \n         fibonacci () \n     }  }   \u8fd9\u6837\u8f93\u51fa\u7ed3\u679c\u4e5f\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u8fd9\u4e48\u5199\u7684\u8bdd\uff0cb1\u3001b2\u3001bc\u5c31\u53d8\u6210\u4e86\u5168\u5c40\u90fd\u80fd\u5f15\u7528\u7684\u53d8\u91cf\u4e86\uff0c\u800c\u8fd93\u4e2a\u53d8\u91cf\u5176\u5b9e\u53ea\u5728fibonacci\u91cc\u7528\u7684\u5230\uff0c\u6240\u4ee5\u8fd9\u6837\u628ab1\u3001b2\u3001bc\u7ed9\u653e\u5230\u5168\u5c40\u5c31\u663e\u5f97\u6beb\u65e0\u610f\u4e49\uff0c\u8fd8\u6709\u53ef\u80fd\u5bf9\u8fd93\u4e2a\u53d8\u91cf\u8bef\u64cd\u4f5c", 
            "title": "\u6700\u540e\u4e3e\u4e2a\u4f8b\u5b50"
        }, 
        {
            "location": "/method/overview/", 
            "text": "go\u6ca1\u6709\u7c7b\uff0c\u4f46\u662f\u5728type\u4e0a\u5b9a\u4e49method\uff0c\u8fd9\u6837\u6548\u679c\u548c\u7c7b\u7528\u8d77\u6765\u5f88\u76f8\u4f3c\n\n\n\u5982\u679c\u8bf4\u7c7b\u662f\u5bf9\u6570\u636e\u548c\u65b9\u6cd5\u7684\u62bd\u8c61\u548c\u5c01\u88c5\uff0c\u90a3\u4e48\u63a5\u53e3\u5c31\u662f\u5bf9\u7c7b\u7684\u62bd\u8c61\u3002\n\n\nGolang \u4e2d\u6ca1\u6709 class \u7684\u6982\u5ff5\uff0c\u800c\u662f\u901a\u8fc7 interface \u7c7b\u578b\u8f6c\u6362\u652f\u6301\u5728\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u4e2d\u5e38\u89c1\u7684\u9e2d\u5b50\u7c7b\u578b\u4ece\u800c\u8fbe\u5230\u8fd0\u884c\u65f6\u591a\u6001\u7684\u6548\u679c\u3002\n\n\n\u5173\u4e8e\u9762\u5411\u5bf9\u8c61\u3001\u6cdb\u578b\u3001\u9e2d\u5b50\u7c7b\u578b\u7b49\u6982\u5ff5\u8be6\u89c1\n\u9762\u5411\u5bf9\u8c61\n\n\n\u7f51\u4e0a\u641c\u5230\u7684interface\u8d44\u6599\n\n\n\n\n\n\n\n\ngo\u4e2d\u600e\u6837\u5f62\u8c61\u7684\u7406\u89e3\u63a5\u53e3\n\nhttps://segmentfault.com/q/1010000005140317\n\n\n\n\n\n\n\u6df1\u5165\u7406\u89e3Go Interface\uff1a\nhttp://legendtkl.com/2017/06/12/understanding-golang-interface/\n\n\n\n\n\n\n\u5173\u4e8einterface\u7684\u7406\u89e3: \nhttp://www.itnose.net/detail/6079953.html\n\n\n\n\n\n\n\u6bd4\u8f83python\u548cgo\u7684\u9762\u5411\u5bf9\u8c61\u5199\u6cd5\n\n\n\n\n\u7c7b\n\n\n\u4e0d\u5305\u542b\u7236\u7c7b\uff08\u6216\u8005\u53eb\u57fa\u7c7b\uff09\n\n\npython\n\n\n#!/usr/bin/env python\n\n\n# -*- coding: utf-8 -*-\n\n\n\nclass\n \nPerson\n:\n\n    \ndef\n \n__init__\n(\nself\n,\n \nname\n):\n\n        \nself\n.\nname\n \n=\n \nname\n\n\n    \ndef\n \nprintName\n(\nself\n):\n\n        \nprint\n \nself\n.\nname\n\n\n\nme\n \n=\n \nPerson\n(\ncyent\n)\n\n\nme\n.\nprintName\n()\n\n\n\n\n\ngo\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nPerson\n \nstruct\n \n{\n\n    \nname\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\np\n \n*\nPerson\n)\n \nprintName\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\np\n.\nname\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nme\n \n:=\n \nPerson\n{\nname\n:\n \ncyent\n}\n\n    \nme\n.\nprintName\n()\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\u90fd\u662f\n\n\ncyent\n\n\n\n\n\u7ee7\u627f\n\n\n\u4f7f\u7528struct\u5d4c\u5957\u6a21\u62df\u7ee7\u627f\n\n\n\u8be5\u4f8b\u5b50\u5f88\u7ecf\u5178\uff0c\u5305\u542b\u4e86\u7236\u7c7b\uff08\u6216\u8005\u53eb\u57fa\u7c7b\uff09\u3001\u5b50\u7c7b\u3001\u7ee7\u627f\u3001\u91cd\u8f7d(\u6216\u8005\u662f\u91cd\u5199\uff0c\u4e00\u76f4\u6ca1\u641e\u61c2)\n\n\npython\n\n\n# -*- coding: utf-8 -*-\n\n\n\nclass\n \nSchoolMember\n:\n\n    \ndef\n \n__init__\n(\nself\n,\n \nname\n,\n \nage\n):\n\n        \nself\n.\nname\n \n=\n \nname\n\n        \nself\n.\nage\n \n=\n \nage\n\n\n    \ndef\n \ntell\n(\nself\n):\n\n        \nprint\n \nname:\n{}\n, age:\n{}\n.\nformat\n(\nself\n.\nname\n,\nself\n.\nage\n)\n\n\n\nclass\n \nTeacher\n(\nSchoolMember\n):\n\n    \ndef\n \n__init__\n(\nself\n,\n \nname\n,\n \nage\n,\n \nsalary\n):\n\n        \nSchoolMember\n.\n__init__\n(\nself\n,\n \nname\n,\n \nage\n)\n\n        \nself\n.\nsalary\n \n=\n \nsalary\n\n\n    \ndef\n \ntell\n(\nself\n):\n\n        \nSchoolMember\n.\ntell\n(\nself\n)\n\n        \nprint\n \nSalary: \n%d\n \n%\n \nself\n.\nsalary\n\n\n\nclass\n \nStudent\n(\nSchoolMember\n):\n\n    \ndef\n \n__init__\n(\nself\n,\n \nname\n,\n \nage\n,\n \nmarks\n):\n\n        \nSchoolMember\n.\n__init__\n(\nself\n,\n \nname\n,\n \nage\n)\n\n        \nself\n.\nmarks\n \n=\n \nmarks\n\n\n    \ndef\n \ntell\n(\nself\n):\n\n        \nSchoolMember\n.\ntell\n(\nself\n)\n\n        \nprint\n \nMarks: \n%d\n \n%\n \nself\n.\nmarks\n\n\n\nt\n \n=\n \nTeacher\n(\nMrs. Shrividya\n,\n \n40\n,\n \n30000\n)\n\n\ns\n \n=\n \nStudent\n(\nSwaroop\n,\n \n22\n,\n \n75\n)\n\n\n\nt\n.\ntell\n()\n\n\ns\n.\ntell\n()\n\n\n\n\n\n\u8f93\u51fa\n\n\nname:\nMrs. Shrividya\n, age:\n40\n\nSalary: \n30000\n\nname:\nSwaroop\n, age:\n22\n\nMarks: \n75\n\n\n\n\n\ngo\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nSchoolMember\n \nstruct\n \n{\n\n    \nname\n \nstring\n\n    \nage\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \nSchoolMember\n)\n \ntell\n()\n \n{\n\n    \nfmt\n.\nPrintf\n(\nname:\\\n%s\\\n, age:\\\n%d\\\n\\n\n,\n \nthis\n.\nname\n,\n \nthis\n.\nage\n)\n\n\n}\n\n\n\ntype\n \nTeacher\n \nstruct\n \n{\n\n    \nSchoolMember\n\n    \nsalary\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \nTeacher\n)\n \ntell\n()\n \n{\n\n    \nthis\n.\nSchoolMember\n.\ntell\n()\n\n    \nfmt\n.\nPrintf\n(\nSalary: \\\n%d\\\n\\n\n,\n \nthis\n.\nsalary\n)\n\n\n}\n\n\n\ntype\n \nStudent\n \nstruct\n \n{\n\n    \nSchoolMember\n\n    \nmarks\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \nStudent\n)\n \ntell\n()\n \n{\n\n    \nthis\n.\nSchoolMember\n.\ntell\n()\n\n    \nfmt\n.\nPrintf\n(\nMarks: \\\n%d\\\n\\n\n,\n \nthis\n.\nmarks\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nt\n \n:=\n \nTeacher\n{}\n\n    \ns\n \n:=\n \nStudent\n{}\n\n    \nt\n.\nname\n \n=\n \nMrs. Shrividya\n\n    \nt\n.\nage\n \n=\n \n40\n\n    \nt\n.\nsalary\n \n=\n \n30000\n\n    \ns\n.\nname\n \n=\n \nSwaroop\n\n    \ns\n.\nage\n \n=\n \n22\n\n    \ns\n.\nmarks\n \n=\n \n75\n\n\n    \nt\n.\ntell\n()\n\n    \ns\n.\ntell\n()\n\n\n}\n\n\n\n\n\n\n\nNote\n\n\n\u4e0a\u9762\nt := Teacher{}\n\u53ef\u4ee5\u7528\nt := new(Teacher)\n\u66ff\u4ee3\uff0c\u4f46\u8fd92\u8005\u662f\u6709\u4e00\u70b9\u533a\u522b\u7684\uff0c\u533a\u522b\u5728\u4e8e\u524d\u8005\u662f\u6307\u9488\uff0c\u8be6\u89c1\nnew\n\n\n\n\n\u8f93\u51fa\u4e5f\u662f\n\n\nname:\nMrs. Shrividya\n, age:\n40\n\nSalary: \n30000\n\nname:\nSwaroop\n, age:\n22\n\nMarks: \n75\n\n\n\n\n\n\u66f4\u591a\u5173\u4e8estruct\u5d4c\u5957\u7684\u77e5\u8bc6\uff0c\u8be6\u89c1\nstruct\u4f5c\u4e3astruct\u7684\u5143\u7d20\n\n\ntar-gz\n\n\npython\n\n\nimport\n \ntarfile\n\n\nimport\n \nos\n\n\n\ndef\n \ntar\n(\nfname\n):\n\n    \nt\n \n=\n \ntarfile\n.\nopen\n(\nfname\n \n+\n \n.tar.gz\n,\n \nw:gz\n)\n\n    \nfor\n \nroot\n,\n \ndir\n,\n \nfiles\n \nin\n \nos\n.\nwalk\n(\nfname\n):\n\n        \nprint\n \nroot\n,\n \ndir\n,\n \nfiles\n\n        \nfor\n \nfile\n \nin\n \nfiles\n:\n\n            \nfullpath\n \n=\n \nos\n.\npath\n.\njoin\n(\nroot\n,\n \nfile\n)\n\n            \nt\n.\nadd\n(\nfullpath\n)\n\n    \nt\n.\nclose\n()\n\n\n\nif\n \n__name__\n \n==\n \n__main__\n:\n\n    \ntar\n(\ndel\n)\n\n\n\n\n\ngo\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nos\n\n    \nio\n\n    \narchive/tar\n\n    \ncompress/gzip\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \n// file write\n\n    \nfw\n,\n \nerr\n \n:=\n \nos\n.\nCreate\n(\ntar/lin_golang_src.tar.gz\n)\n\n    \nif\n \nerr\n \n!=\n \nnil\n \n{\n\n        \npanic\n(\nerr\n)\n\n    \n}\n\n    \ndefer\n \nfw\n.\nClose\n()\n\n\n    \n// gzip write\n\n    \ngw\n \n:=\n \ngzip\n.\nNewWriter\n(\nfw\n)\n\n    \ndefer\n \ngw\n.\nClose\n()\n\n\n    \n// tar write\n\n    \ntw\n \n:=\n \ntar\n.\nNewWriter\n(\ngw\n)\n\n    \ndefer\n \ntw\n.\nClose\n()\n\n\n    \n// \u6253\u5f00\u6587\u4ef6\u5939\n\n    \ndir\n,\n \nerr\n \n:=\n \nos\n.\nOpen\n(\nfile/\n)\n\n    \nif\n \nerr\n \n!=\n \nnil\n \n{\n\n        \npanic\n(\nnil\n)\n\n    \n}\n\n    \ndefer\n \ndir\n.\nClose\n()\n\n\n    \n// \u8bfb\u53d6\u6587\u4ef6\u5217\u8868\n\n    \nfis\n,\n \nerr\n \n:=\n \ndir\n.\nReaddir\n(\n0\n)\n\n    \nif\n \nerr\n \n!=\n \nnil\n \n{\n\n        \npanic\n(\nerr\n)\n\n    \n}\n\n\n    \n// \u904d\u5386\u6587\u4ef6\u5217\u8868\n\n    \nfor\n \n_\n,\n \nfi\n \n:=\n \nrange\n \nfis\n \n{\n\n        \n// \u9003\u8fc7\u6587\u4ef6\u5939, \u6211\u8fd9\u91cc\u5c31\u4e0d\u9012\u5f52\u4e86\n\n        \nif\n \nfi\n.\nIsDir\n()\n \n{\n\n            \ncontinue\n\n        \n}\n\n\n        \n// \u6253\u5370\u6587\u4ef6\u540d\u79f0\n\n        \nfmt\n.\nPrintln\n(\nfi\n.\nName\n())\n\n\n        \n// \u6253\u5f00\u6587\u4ef6\n\n        \nfr\n,\n \nerr\n \n:=\n \nos\n.\nOpen\n(\ndir\n.\nName\n()\n \n+\n \n/\n \n+\n \nfi\n.\nName\n())\n\n        \nif\n \nerr\n \n!=\n \nnil\n \n{\n\n            \npanic\n(\nerr\n)\n\n        \n}\n\n        \ndefer\n \nfr\n.\nClose\n()\n\n\n        \n// \u4fe1\u606f\u5934\n\n        \nh\n \n:=\n \nnew\n(\ntar\n.\nHeader\n)\n\n        \nh\n.\nName\n \n=\n \nfi\n.\nName\n()\n\n        \nh\n.\nSize\n \n=\n \nfi\n.\nSize\n()\n\n        \nh\n.\nMode\n \n=\n \nint64\n(\nfi\n.\nMode\n())\n\n        \nh\n.\nModTime\n \n=\n \nfi\n.\nModTime\n()\n\n\n        \n// \u5199\u4fe1\u606f\u5934\n\n        \nerr\n \n=\n \ntw\n.\nWriteHeader\n(\nh\n)\n\n        \nif\n \nerr\n \n!=\n \nnil\n \n{\n\n            \npanic\n(\nerr\n)\n\n        \n}\n\n\n        \n// \u5199\u6587\u4ef6\n\n        \n_\n,\n \nerr\n \n=\n \nio\n.\nCopy\n(\ntw\n,\n \nfr\n)\n\n        \nif\n \nerr\n \n!=\n \nnil\n \n{\n\n            \npanic\n(\nerr\n)\n\n        \n}\n\n    \n}\n\n    \nfmt\n.\nPrintln\n(\ntar.gz ok\n)\n\n\n}\n\n\n\n\n\n\u603b\u7ed3\u6838\u5fc3\u4ee3\u7801\uff1a\n\n\npython\uff1a\n\n\n//\n \n\u521b\u5efa\ntar\n.\ngz\n\n\nt\n \n=\n \ntarfile\n.\nopen\n(\nfname\n \n+\n \n.tar.gz\n,\n \nw:gz\n)\n\n\n//\n \n\u5f80\ntar\n\u91cc\u6dfb\u52a0\u6587\u4ef6\n\n\nt\n.\nadd\n(\nfiepath\n)\n\n\n\n\n\ngo\uff1a\n\n\n// \u521b\u5efatar.gz\n\n\nfw\n,\n \nerr\n \n:=\n \nos\n.\nCreate\n(\ntar/lin_golang_src.tar.gz\n)\n\n\ngw\n \n:=\n \ngzip\n.\nNewWriter\n(\nfw\n)\n\n\ntw\n \n:=\n \ntar\n.\nNewWriter\n(\ngw\n)\n\n\n// \u5f80tar\u91cc\u6dfb\u52a0\u6587\u4ef6\n\n\nfr\n,\n \nerr\n \n:=\n \nos\n.\nOpen\n(\nfilepath\n)\n\n\n_\n,\n \nerr\n \n=\n \nio\n.\nCopy\n(\ntw\n,\n \nfr\n)\n\n\n\n\n\n\u53ef\u4ee5\u770b\u5230\uff1a\n\n\n\n\n\n\npython\u5c01\u88c5\u4e86\u505atar\u7684\u6240\u6709\u7ec6\u8282\uff08\u521b\u5efatar\u5e76gzip\u538b\u7f29\uff09\uff0c\u800cgolang\u6ca1\u6709\u5c01\u88c5\u7ec6\u8282\uff0c\u8981\u81ea\u5df1\u4f9d\u6b21\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u5e26\u7ed9gzip\uff0c\u518d\u5c06gzip\u7684\u8f93\u51fa\u5e26\u7ed9tar\u3002\n\n\n\n\n\n\n\u521b\u5efatar.gz\uff1apython\u53ea\u9700\u8981\u8c03\u7528tarfile\u5305\u81ea\u5df1\u7684\u65b9\u6cd5open\u5373\u53ef\uff0c\u800cgolang\u52063\u6b65\uff0c\u5148os.Create\u83b7\u5f97fw\uff0c\u518d\u628afw\u5e26\u5230gzip.NewWriter\u83b7\u5f97gw\uff0c\u518d\u628agw\u5e26\u5230tar.NewWriter\u83b7\u5f97tw\n\n\n\n\n\n\n\u5f80tar\u91cc\u6dfb\u52a0\u6587\u4ef6\uff1apython\u53ea\u9700\u8981\u8c03\u7528tarfile\u5305\u81ea\u5df1\u7684\u65b9\u6cd5add\u5373\u53ef\uff0c\u800cgolang\u52062\u6b65\uff0c\u9996\u5148\u662f\u901a\u8fc7os.Open\uff08\u516c\u5171\u65b9\u6cd5\uff09\u83b7\u5f97\u6587\u4ef6\u53e5\u67c4\uff0c\u518d\u628a\u6587\u4ef6\u53e5\u67c4\u5e26\u5230io.Copy\uff08\u516c\u5171\u65b9\u6cd5\uff09\u6765\u5904\u7406\n\n\n\n\n\n\n\n\n\n\n\u7531\u4e8ego\u8bed\u8a00\u7684\u63a5\u53e3\u7279\u70b9\uff0cgolang\u6ca1\u6709\u5fc5\u8981\u50cfpython\u4e00\u6837\u5b8c\u5168\u5c01\u88c5\u7ec6\u8282\uff0c\u800c\u662f\u4f7f\u7528\u516c\u5171\u63a5\u53e3\uff08\u6bcf\u4e2a\u7c7b\u578b\u90fd\u5b9e\u73b0\u4e86\u76f8\u540c\u7684\u63a5\u53e3\uff09\n\n\n\n\n\n\n\n\nNote\n\n\n\u5f53\u7136\u7528golang\u81ea\u5df1\u53ef\u4ee5\u518d\u505a\u4e00\u6b21\u5c01\u88c5\uff0c\u6bd4\u5982\u81ea\u5df1\u4e5f\u641e\u4e2atarfile\u5305\uff0c\u5c01\u88c5\u521b\u5efatar\u548cgzip\u538b\u7f29\u65b9\u6cd5\n\n\n\n\n\u8be6\u7ec6\u5256\u6790\u4e0a\u9762\u7684tar.gz\u4f8b\u5b50\uff0c\u8be6\u89c1\ngolang-targz\u8111\u56fe\n\uff08\u70b9\u51fb\u4e0b\u8f7d\uff0c\u5e76\u4f7f\u7528iThoughtsX\u6253\u5f00\uff09", 
            "title": "1. \u6982\u5ff5\u6c47\u603b"
        }, 
        {
            "location": "/method/overview/#interface", 
            "text": "go\u4e2d\u600e\u6837\u5f62\u8c61\u7684\u7406\u89e3\u63a5\u53e3 https://segmentfault.com/q/1010000005140317    \u6df1\u5165\u7406\u89e3Go Interface\uff1a http://legendtkl.com/2017/06/12/understanding-golang-interface/    \u5173\u4e8einterface\u7684\u7406\u89e3:  http://www.itnose.net/detail/6079953.html", 
            "title": "\u7f51\u4e0a\u641c\u5230\u7684interface\u8d44\u6599"
        }, 
        {
            "location": "/method/overview/#pythongo", 
            "text": "", 
            "title": "\u6bd4\u8f83python\u548cgo\u7684\u9762\u5411\u5bf9\u8c61\u5199\u6cd5"
        }, 
        {
            "location": "/method/overview/#_1", 
            "text": "\u4e0d\u5305\u542b\u7236\u7c7b\uff08\u6216\u8005\u53eb\u57fa\u7c7b\uff09  python  #!/usr/bin/env python  # -*- coding: utf-8 -*-  class   Person : \n     def   __init__ ( self ,   name ): \n         self . name   =   name \n\n     def   printName ( self ): \n         print   self . name  me   =   Person ( cyent )  me . printName ()   go  package   main  import   fmt  type   Person   struct   { \n     name   string  }  func   ( p   * Person )   printName ()   { \n     fmt . Println ( p . name )  }  func   main ()   { \n     me   :=   Person { name :   cyent } \n     me . printName ()  }   \u8f93\u51fa\u90fd\u662f  cyent", 
            "title": "\u7c7b"
        }, 
        {
            "location": "/method/overview/#_2", 
            "text": "\u4f7f\u7528struct\u5d4c\u5957\u6a21\u62df\u7ee7\u627f  \u8be5\u4f8b\u5b50\u5f88\u7ecf\u5178\uff0c\u5305\u542b\u4e86\u7236\u7c7b\uff08\u6216\u8005\u53eb\u57fa\u7c7b\uff09\u3001\u5b50\u7c7b\u3001\u7ee7\u627f\u3001\u91cd\u8f7d(\u6216\u8005\u662f\u91cd\u5199\uff0c\u4e00\u76f4\u6ca1\u641e\u61c2)  python  # -*- coding: utf-8 -*-  class   SchoolMember : \n     def   __init__ ( self ,   name ,   age ): \n         self . name   =   name \n         self . age   =   age \n\n     def   tell ( self ): \n         print   name: {} , age: {} . format ( self . name , self . age )  class   Teacher ( SchoolMember ): \n     def   __init__ ( self ,   name ,   age ,   salary ): \n         SchoolMember . __init__ ( self ,   name ,   age ) \n         self . salary   =   salary \n\n     def   tell ( self ): \n         SchoolMember . tell ( self ) \n         print   Salary:  %d   %   self . salary  class   Student ( SchoolMember ): \n     def   __init__ ( self ,   name ,   age ,   marks ): \n         SchoolMember . __init__ ( self ,   name ,   age ) \n         self . marks   =   marks \n\n     def   tell ( self ): \n         SchoolMember . tell ( self ) \n         print   Marks:  %d   %   self . marks  t   =   Teacher ( Mrs. Shrividya ,   40 ,   30000 )  s   =   Student ( Swaroop ,   22 ,   75 )  t . tell ()  s . tell ()   \u8f93\u51fa  name: Mrs. Shrividya , age: 40 \nSalary:  30000 \nname: Swaroop , age: 22 \nMarks:  75   go  package   main  import   fmt  type   SchoolMember   struct   { \n     name   string \n     age   int  }  func   ( this   SchoolMember )   tell ()   { \n     fmt . Printf ( name:\\ %s\\ , age:\\ %d\\ \\n ,   this . name ,   this . age )  }  type   Teacher   struct   { \n     SchoolMember \n     salary   int  }  func   ( this   Teacher )   tell ()   { \n     this . SchoolMember . tell () \n     fmt . Printf ( Salary: \\ %d\\ \\n ,   this . salary )  }  type   Student   struct   { \n     SchoolMember \n     marks   int  }  func   ( this   Student )   tell ()   { \n     this . SchoolMember . tell () \n     fmt . Printf ( Marks: \\ %d\\ \\n ,   this . marks )  }  func   main ()   { \n     t   :=   Teacher {} \n     s   :=   Student {} \n     t . name   =   Mrs. Shrividya \n     t . age   =   40 \n     t . salary   =   30000 \n     s . name   =   Swaroop \n     s . age   =   22 \n     s . marks   =   75 \n\n     t . tell () \n     s . tell ()  }    Note  \u4e0a\u9762 t := Teacher{} \u53ef\u4ee5\u7528 t := new(Teacher) \u66ff\u4ee3\uff0c\u4f46\u8fd92\u8005\u662f\u6709\u4e00\u70b9\u533a\u522b\u7684\uff0c\u533a\u522b\u5728\u4e8e\u524d\u8005\u662f\u6307\u9488\uff0c\u8be6\u89c1 new   \u8f93\u51fa\u4e5f\u662f  name: Mrs. Shrividya , age: 40 \nSalary:  30000 \nname: Swaroop , age: 22 \nMarks:  75   \u66f4\u591a\u5173\u4e8estruct\u5d4c\u5957\u7684\u77e5\u8bc6\uff0c\u8be6\u89c1 struct\u4f5c\u4e3astruct\u7684\u5143\u7d20", 
            "title": "\u7ee7\u627f"
        }, 
        {
            "location": "/method/overview/#tar-gz", 
            "text": "python  import   tarfile  import   os  def   tar ( fname ): \n     t   =   tarfile . open ( fname   +   .tar.gz ,   w:gz ) \n     for   root ,   dir ,   files   in   os . walk ( fname ): \n         print   root ,   dir ,   files \n         for   file   in   files : \n             fullpath   =   os . path . join ( root ,   file ) \n             t . add ( fullpath ) \n     t . close ()  if   __name__   ==   __main__ : \n     tar ( del )   go  package   main  import   ( \n     fmt \n     os \n     io \n     archive/tar \n     compress/gzip  )  func   main ()   { \n     // file write \n     fw ,   err   :=   os . Create ( tar/lin_golang_src.tar.gz ) \n     if   err   !=   nil   { \n         panic ( err ) \n     } \n     defer   fw . Close () \n\n     // gzip write \n     gw   :=   gzip . NewWriter ( fw ) \n     defer   gw . Close () \n\n     // tar write \n     tw   :=   tar . NewWriter ( gw ) \n     defer   tw . Close () \n\n     // \u6253\u5f00\u6587\u4ef6\u5939 \n     dir ,   err   :=   os . Open ( file/ ) \n     if   err   !=   nil   { \n         panic ( nil ) \n     } \n     defer   dir . Close () \n\n     // \u8bfb\u53d6\u6587\u4ef6\u5217\u8868 \n     fis ,   err   :=   dir . Readdir ( 0 ) \n     if   err   !=   nil   { \n         panic ( err ) \n     } \n\n     // \u904d\u5386\u6587\u4ef6\u5217\u8868 \n     for   _ ,   fi   :=   range   fis   { \n         // \u9003\u8fc7\u6587\u4ef6\u5939, \u6211\u8fd9\u91cc\u5c31\u4e0d\u9012\u5f52\u4e86 \n         if   fi . IsDir ()   { \n             continue \n         } \n\n         // \u6253\u5370\u6587\u4ef6\u540d\u79f0 \n         fmt . Println ( fi . Name ()) \n\n         // \u6253\u5f00\u6587\u4ef6 \n         fr ,   err   :=   os . Open ( dir . Name ()   +   /   +   fi . Name ()) \n         if   err   !=   nil   { \n             panic ( err ) \n         } \n         defer   fr . Close () \n\n         // \u4fe1\u606f\u5934 \n         h   :=   new ( tar . Header ) \n         h . Name   =   fi . Name () \n         h . Size   =   fi . Size () \n         h . Mode   =   int64 ( fi . Mode ()) \n         h . ModTime   =   fi . ModTime () \n\n         // \u5199\u4fe1\u606f\u5934 \n         err   =   tw . WriteHeader ( h ) \n         if   err   !=   nil   { \n             panic ( err ) \n         } \n\n         // \u5199\u6587\u4ef6 \n         _ ,   err   =   io . Copy ( tw ,   fr ) \n         if   err   !=   nil   { \n             panic ( err ) \n         } \n     } \n     fmt . Println ( tar.gz ok )  }   \u603b\u7ed3\u6838\u5fc3\u4ee3\u7801\uff1a  python\uff1a  //   \u521b\u5efa tar . gz  t   =   tarfile . open ( fname   +   .tar.gz ,   w:gz )  //   \u5f80 tar \u91cc\u6dfb\u52a0\u6587\u4ef6  t . add ( fiepath )   go\uff1a  // \u521b\u5efatar.gz  fw ,   err   :=   os . Create ( tar/lin_golang_src.tar.gz )  gw   :=   gzip . NewWriter ( fw )  tw   :=   tar . NewWriter ( gw )  // \u5f80tar\u91cc\u6dfb\u52a0\u6587\u4ef6  fr ,   err   :=   os . Open ( filepath )  _ ,   err   =   io . Copy ( tw ,   fr )   \u53ef\u4ee5\u770b\u5230\uff1a    python\u5c01\u88c5\u4e86\u505atar\u7684\u6240\u6709\u7ec6\u8282\uff08\u521b\u5efatar\u5e76gzip\u538b\u7f29\uff09\uff0c\u800cgolang\u6ca1\u6709\u5c01\u88c5\u7ec6\u8282\uff0c\u8981\u81ea\u5df1\u4f9d\u6b21\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u5e26\u7ed9gzip\uff0c\u518d\u5c06gzip\u7684\u8f93\u51fa\u5e26\u7ed9tar\u3002    \u521b\u5efatar.gz\uff1apython\u53ea\u9700\u8981\u8c03\u7528tarfile\u5305\u81ea\u5df1\u7684\u65b9\u6cd5open\u5373\u53ef\uff0c\u800cgolang\u52063\u6b65\uff0c\u5148os.Create\u83b7\u5f97fw\uff0c\u518d\u628afw\u5e26\u5230gzip.NewWriter\u83b7\u5f97gw\uff0c\u518d\u628agw\u5e26\u5230tar.NewWriter\u83b7\u5f97tw    \u5f80tar\u91cc\u6dfb\u52a0\u6587\u4ef6\uff1apython\u53ea\u9700\u8981\u8c03\u7528tarfile\u5305\u81ea\u5df1\u7684\u65b9\u6cd5add\u5373\u53ef\uff0c\u800cgolang\u52062\u6b65\uff0c\u9996\u5148\u662f\u901a\u8fc7os.Open\uff08\u516c\u5171\u65b9\u6cd5\uff09\u83b7\u5f97\u6587\u4ef6\u53e5\u67c4\uff0c\u518d\u628a\u6587\u4ef6\u53e5\u67c4\u5e26\u5230io.Copy\uff08\u516c\u5171\u65b9\u6cd5\uff09\u6765\u5904\u7406      \u7531\u4e8ego\u8bed\u8a00\u7684\u63a5\u53e3\u7279\u70b9\uff0cgolang\u6ca1\u6709\u5fc5\u8981\u50cfpython\u4e00\u6837\u5b8c\u5168\u5c01\u88c5\u7ec6\u8282\uff0c\u800c\u662f\u4f7f\u7528\u516c\u5171\u63a5\u53e3\uff08\u6bcf\u4e2a\u7c7b\u578b\u90fd\u5b9e\u73b0\u4e86\u76f8\u540c\u7684\u63a5\u53e3\uff09     Note  \u5f53\u7136\u7528golang\u81ea\u5df1\u53ef\u4ee5\u518d\u505a\u4e00\u6b21\u5c01\u88c5\uff0c\u6bd4\u5982\u81ea\u5df1\u4e5f\u641e\u4e2atarfile\u5305\uff0c\u5c01\u88c5\u521b\u5efatar\u548cgzip\u538b\u7f29\u65b9\u6cd5   \u8be6\u7ec6\u5256\u6790\u4e0a\u9762\u7684tar.gz\u4f8b\u5b50\uff0c\u8be6\u89c1 golang-targz\u8111\u56fe \uff08\u70b9\u51fb\u4e0b\u8f7d\uff0c\u5e76\u4f7f\u7528iThoughtsX\u6253\u5f00\uff09", 
            "title": "tar-gz"
        }, 
        {
            "location": "/method/method_main/", 
            "text": "method\u5c31\u662f\u51fd\u6570\uff0c\u53ea\u4e0d\u8fc7\u62e5\u6709receiver\u53c2\u6570\uff08\u666e\u901a\u51fd\u6570\u6ca1\u6709receiver\u53c2\u6570\uff09\n\n\nrecevier\u5199\u5728func\u548cmethod\u540d\u5b57\u4e4b\u95f4\uff0c\u6bd4\u5982\uff1a\n\n\ntype\n \nVertex\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nfloat64\n\n\n}\n\n\n\nfunc\n \n(\nv\n \nVertex\n)\n \nAbs\n()\n \nfloat64\n \n{\n\n\n    \nreturn\n \nmath\n.\nSqrt\n(\nv\n.\nX\n*\nv\n.\nX\n \n+\n \nv\n.\nY\n*\nv\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \nVertex\n{\n3\n,\n \n4\n}\n\n    \nfmt\n.\nPrintln\n(\na\n.\nAbs\n())\n\n\n}\n\n\n\n\n\n\n\nNote\n\n\n\u4e0a\u9762v Vertex\u5c31\u662frecevier\n\n\n\u9ad8\u4eae\u7684\u8fd9\u884c\u4ee3\u7801\u53ef\u4ee5\u89e3\u8bfb\u4e3a\uff1aAbs method\u62e5\u6709\u4e00\u4e2a\u7c7b\u578b\u4e3aVertex\uff0c\u540d\u5b57\u4e3av\u7684receiver\n\n\n\n\n\u6ce8\u610f\uff1a\n\n\n\n\n\n\n\u5185\u7f6etype\u4e0d\u80fd\u4f5c\u4e3areceiver\n\n\nfunc\n \n(\na\n \nint\n)\n \nfoo\n()\n \nint\n \n{\n\n    \nreturn\n \na\n \n+\n \n1\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ni\n \n:=\n \n1\n\n    \nf\n \n:=\n \ni\n.\nfoo\n()\n\n    \nfmt\n.\nPrintln\n(\na\n)\n\n\n}\n\n\n\n\n\n\u62a5\u9519\n\n\ncannot define new methods on non-local type int\n\n\n\n\n\n\n\n\n\u540c\u4e00\u4e2a\u5305\u91cc\u81ea\u5b9a\u4e49\u7684type\uff0c\u624d\u80fd\u4f5c\u4e3amethod\u7684receiver\n\n\n$GOPATH/src/github.com/cyent/golang/example/foo.go\n\n\npackage\n \nfoo\n\n\n\ntype\n \nMyInt\n \nint\n\n\n\n\n\nbar.go\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ngithub.com/cyent/golang/example/foo\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \nfoo\n.\nMyInt\n(\n1\n)\n\n    \nfmt\n.\nPrintln\n(\na\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n1\n\n\n\n\n\u4f46\u5982\u679c\u628abar.go\u6539\u6210\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ngithub.com/cyent/golang/example/foo\n\n\n)\n\n\n\nfunc\n \n(\nx\n \nfoo\n.\nMyInt\n)\n \nmymethod\n()\n \nint\n \n{\n\n    \nreturn\n \nint\n(\nx\n+\n1\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \nfoo\n.\nMyInt\n(\n1\n)\n\n    \nfmt\n.\nPrintln\n(\na\n)\n\n\n    \nb\n \n:=\n \na\n.\nmymethod\n()\n\n    \nfmt\n.\nPrintln\n(\nb\n)\n\n\n}\n\n\n\n\n\n\u62a5\u9519\n\n\n./bar.go:8: cannot define new methods on non-local type foo.MyInt\n./bar.go:16: a.mymethod undefined (type foo.MyInt has no field or method mymethod)\n\n\n\n\n\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e86\u5bfc\u5165\u7684\u5305\u91cc\u7684\u81ea\u5b9a\u4e49type\u53ef\u4ee5\u7528\uff08type\u9996\u5b57\u6bcd\u5927\u5199\uff09\uff0c\u4f46\u4e0d\u80fd\u4f5c\u4e3amethod\u7684receiver\n\n\n\n\n\n\n\u53ea\u6709\u653e\u5728\u5305\u7ea7\u522b\u7684type\uff0c\u5e76\u4e14\u9996\u5b57\u6bcd\u5927\u5199\u7684\uff0c\u624d\u80fd\u88ab\u5bfc\u5165\u7ed9\u5176\u4ed6\u6a21\u5757\u5f15\u7528\uff0c\u8be6\u89c1\n\u6570\u636e\u7c7b\u578b\u7ae0\u8282-\u81ea\u5b9a\u4e49\u7c7b\u578b\n\u7684\u7b2c4\u70b9\n\n\n\n\n\n\n\u82e5\u53ea\u8c03\u7528\u4e00\u6b21\u65b9\u6cd5\uff0c\u5219\u4e0d\u7528\u8d4b\u7ed9\u53d8\u91cf\uff0c\u76f4\u63a5\u5728\u7c7b\u578b\u540e\u8ddf\u65b9\u6cd5\u5c31\u884c\uff0c\u6bd4\u5982\n\n\na\n \n:=\n \nVertex\n{\n3\n,\n \n4\n}\n\n\nfmt\n.\nPrintln\n(\na\n.\nAbs\n())\n\n\n\n\n\n\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u5199\n\n\nfmt\n.\nPrintln\n(\nVertex\n{\n3\n,\n \n4\n}.\nAbs\n())", 
            "title": "2.1. \u58f0\u660e"
        }, 
        {
            "location": "/method/method_receiver/", 
            "text": "receiver\u53ef\u4ee5\u4f7f\u7528\u6307\u9488\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nx\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nm\n \nMyStruct\n)\n \nSet1\n()\n \n{\n\n    \nm\n.\nx\n \n=\n \n1\n\n\n}\n\n\n\nfunc\n \n(\nm\n \n*\nMyStruct\n)\n \nSet2\n()\n \n{\n\n    \nm\n.\nx\n \n=\n \n2\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nMyStruct\n{\nx\n:\n \n0\n}\n\n    \ns\n.\nSet1\n()\n\n    \nfmt\n.\nPrintln\n(\ns\n.\nx\n)\n\n    \ns\n.\nSet2\n()\n\n    \nfmt\n.\nPrintln\n(\ns\n.\nx\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n0\n2\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\uff0cSet1\u5e76\u6ca1\u6709\u4fee\u6539\u503c\uff0cSet2\u624d\u4fee\u6539\u4e86\u503c\uff0c\u662f\u56e0\u4e3a\u6307\u9488receiver\u624d\u662f\u4fee\u6539\u539f\u6765\u7684\u503c\uff0c\u5426\u5219\u53ea\u662f\u590d\u5236\u53d8\u91cf\u51fa\u6765\u6210\u4e3a\u51fd\u6570\u91cc\u7684\u5c40\u90e8\u53d8\u91cf\n\n\nfunction argument\u3001method receiver\u3001method argument\u5173\u4e8epointer\u7684\u533a\u522b\n\n\n\n\nfunction\u7684argument\u548cmethod\u7684receiver\u90fd\u80fd\u63a5\u6536pointer\uff0c\u533a\u522b\uff1a\n\n\n\n\n\n\nfunction\u7684argument\u7c7b\u578b\u5fc5\u987b\u548c\u4f20\u5165\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u6bd4\u5982argument\u662fpointer\u7c7b\u578b\uff0c\u5219\u4f20\u5165\u53c2\u6570\u4e5f\u5fc5\u987b\u662fpointer\uff0c\u5982\u679cargument\u4e0d\u662fpointer\u7c7b\u578b\uff0c\u5219\u4f20\u5165\u53c2\u6570\u4e0d\u80fd\u662fpointer\u3002\n\n\n\n\n\n\nmethod\u7684receiver\u7c7b\u578b\u6bd4\u8f83\u667a\u80fd\uff0c\u5982\u679creceiver\u7c7b\u578b\u662fpointer\uff0c\u90a3\u4e48\u5f53\u4f20\u5165\u53c2\u6570\u7c7b\u578b\u4e0d\u662fpointer\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u8f6c\u4e3apointer\u3002\u5982\u679creceiver\u7c7b\u578b\u4e0d\u662fpointer\uff0c\u90a3\u4e48\u5f53\u4f20\u5165\u53c2\u6570\u7c7b\u578b\u662fpointer\uff0c\u4f1a\u81ea\u52a8\u5c06pointer\u8f6c\u6362\u4e3apointer\u6240\u5bf9\u5e94\u7684\u503c\u3002\n\n\n\n\nWarning\n\n\n\u63a5\u53e3\u7684receiver\u7c7b\u578b\u5fc5\u987b\u548c\u5b9e\u73b0\u63a5\u53e3\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff0c\u8be6\u89c1\n\u63a5\u53e3\u7ae0\u8282\u90e8\u5206\n\n\n\n\n\u5982\u679c\u5c06\u4e0a\u9762\u7684\u4f8b\u5b50\u7a0d\u5fae\u4fee\u6539\u4e0b\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nx\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nm\n \nMyStruct\n)\n \nSet1\n()\n \n{\n\n    \nm\n.\nx\n \n=\n \n1\n\n\n}\n\n\n\nfunc\n \n(\nm\n \n*\nMyStruct\n)\n \nSet2\n()\n \n{\n\n    \nm\n.\nx\n \n=\n \n2\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n\n    \ns\n \n:=\n \nMyStruct\n{\nx\n:\n \n0\n}\n\n\n    \ns\n.\nSet1\n()\n\n    \nfmt\n.\nPrintln\n(\ns\n.\nx\n)\n\n    \ns\n.\nSet2\n()\n\n    \nfmt\n.\nPrintln\n(\ns\n.\nx\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\u4e0d\u53d8\uff0c\u4e5f\u662f\n\n\n0\n2\n\n\n\n\n\u4e0a\u9762\u7684\ns.Set1()\n\u4f1a\u88abgo\u81ea\u52a8\u8f6c\u4e3a\n(*s).Set1()\n\n\n\u540c\u7406\uff0c\u5982\u679c\u6539\u4e3a\ns := MyStruct{x: 0}\n\uff0c\u90a3\u4e48\ns.Set2()\n\u4f1a\u88abgo\u81ea\u52a8\u8f6c\u4e3a\n(\ns).Set2()\n\n\n\n\n\n\nmethod argument\u548cfunction argument\u662f\u76f8\u540c\u7684\uff0c\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4\n\n\n\n\nNote\n\n\nreceiver\u5728\u5176\u4ed6\u8bed\u8a00\u4ee5\u53cago\u8bed\u8a00\u91cc\u4e5f\u53eb\u505a \n\u51fd\u6570\u7b7e\u540d\n\uff08\u51fd\u6570\u7b7e\u540d\u662f\u6700\u666e\u904d\u7684\u53eb\u6cd5\uff09\n\n\n\n\n\u5982\u4f55\u5224\u65adreceiver\u662f\u5426\u8981\u7528\u6307\u9488\n\n\n\n\nmethod\u7684value receiver\u548cpointer receiver\u600e\u4e48\u9009\u62e9\uff0c\u5b98\u65b9\u8bf4\u4e862\u4e2a\u539f\u56e0\u6765\u4f7f\u7528pointer receiver\n\n\n\n\n\n\n\u9700\u8981\u4fee\u6539\u539f\u6765\u7684\u503c\n\n\n\n\n\n\n\u9632\u6b62\u6bcf\u6b21\u8c03\u7528method\u65f6\u5019\u90fd\u62f7\u8d1dvalue\uff0c\u6bd4\u5982\u5f53struct\u5f88\u5927\u7684\u65f6\u5019\u6bcf\u6b21\u90fd\u62f7\u8d1dvalue\u4f1a\u964d\u4f4e\u6548\u7387\n\n\n\n\n\n\n\u4e0b\u9762\u662f\u6211\u4e2a\u4eba\u7406\u89e3\uff0c\u4e0d\u4e00\u5b9a\u51c6\u786e\uff1a\n\n\n\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6709\u4e00\u4e2a\u60c5\u51b5\u662f\u4e0d\u80fd\u7528pointer receiver\uff1apointer\u53ef\u80fd\u9020\u6210\u5b89\u5168\u98ce\u9669\uff0c\u4f8b\u5982\u67d0\u4e2amethod\u53ea\u662f\u8981\u83b7\u53d6\u91d1\u989d\uff0c\u800c\u4e0d\u662f\u4fee\u6539\u91d1\u989d\uff0c\u90a3\u4e48\u4f7f\u7528pointer\u7684\u8bdd\u5c31\u5b58\u5728\u5f53\u5185\u5b58\u88ab\u6cc4\u9732\u7b49\u60c5\u51b5\u5bfc\u81f4\u91d1\u989d\u88ab\u4fee\u6539\u3002\n\n\n\u56e0\u6b64\uff0c\u82e5\u6ca1\u6709\u6d89\u53ca\u6027\u80fd\u95ee\u9898\uff0c\u4e14method\u7684\u529f\u80fd\u662f\u8bfb\uff0c\u800c\u975e\u5199\u7684\u65f6\u5019\uff0c\u9996\u9009value receiver", 
            "title": "2.2. \u6307\u9488receiver"
        }, 
        {
            "location": "/method/method_receiver/#receiver", 
            "text": "package   main  import   fmt  type   MyStruct   struct   { \n     x   int  }  func   ( m   MyStruct )   Set1 ()   { \n     m . x   =   1  }  func   ( m   * MyStruct )   Set2 ()   { \n     m . x   =   2  }  func   main ()   { \n     s   :=   MyStruct { x :   0 } \n     s . Set1 () \n     fmt . Println ( s . x ) \n     s . Set2 () \n     fmt . Println ( s . x )  }   \u8f93\u51fa  0\n2  \u53ef\u4ee5\u770b\u51fa\uff0cSet1\u5e76\u6ca1\u6709\u4fee\u6539\u503c\uff0cSet2\u624d\u4fee\u6539\u4e86\u503c\uff0c\u662f\u56e0\u4e3a\u6307\u9488receiver\u624d\u662f\u4fee\u6539\u539f\u6765\u7684\u503c\uff0c\u5426\u5219\u53ea\u662f\u590d\u5236\u53d8\u91cf\u51fa\u6765\u6210\u4e3a\u51fd\u6570\u91cc\u7684\u5c40\u90e8\u53d8\u91cf", 
            "title": "receiver\u53ef\u4ee5\u4f7f\u7528\u6307\u9488"
        }, 
        {
            "location": "/method/method_receiver/#function-argumentmethod-receivermethod-argumentpointer", 
            "text": "function\u7684argument\u548cmethod\u7684receiver\u90fd\u80fd\u63a5\u6536pointer\uff0c\u533a\u522b\uff1a    function\u7684argument\u7c7b\u578b\u5fc5\u987b\u548c\u4f20\u5165\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u6bd4\u5982argument\u662fpointer\u7c7b\u578b\uff0c\u5219\u4f20\u5165\u53c2\u6570\u4e5f\u5fc5\u987b\u662fpointer\uff0c\u5982\u679cargument\u4e0d\u662fpointer\u7c7b\u578b\uff0c\u5219\u4f20\u5165\u53c2\u6570\u4e0d\u80fd\u662fpointer\u3002    method\u7684receiver\u7c7b\u578b\u6bd4\u8f83\u667a\u80fd\uff0c\u5982\u679creceiver\u7c7b\u578b\u662fpointer\uff0c\u90a3\u4e48\u5f53\u4f20\u5165\u53c2\u6570\u7c7b\u578b\u4e0d\u662fpointer\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u8f6c\u4e3apointer\u3002\u5982\u679creceiver\u7c7b\u578b\u4e0d\u662fpointer\uff0c\u90a3\u4e48\u5f53\u4f20\u5165\u53c2\u6570\u7c7b\u578b\u662fpointer\uff0c\u4f1a\u81ea\u52a8\u5c06pointer\u8f6c\u6362\u4e3apointer\u6240\u5bf9\u5e94\u7684\u503c\u3002   Warning  \u63a5\u53e3\u7684receiver\u7c7b\u578b\u5fc5\u987b\u548c\u5b9e\u73b0\u63a5\u53e3\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff0c\u8be6\u89c1 \u63a5\u53e3\u7ae0\u8282\u90e8\u5206   \u5982\u679c\u5c06\u4e0a\u9762\u7684\u4f8b\u5b50\u7a0d\u5fae\u4fee\u6539\u4e0b  package   main  import   fmt  type   MyStruct   struct   { \n     x   int  }  func   ( m   MyStruct )   Set1 ()   { \n     m . x   =   1  }  func   ( m   * MyStruct )   Set2 ()   { \n     m . x   =   2  }  func   main ()   {       s   :=   MyStruct { x :   0 }       s . Set1 () \n     fmt . Println ( s . x ) \n     s . Set2 () \n     fmt . Println ( s . x )  }   \u8f93\u51fa\u4e0d\u53d8\uff0c\u4e5f\u662f  0\n2  \u4e0a\u9762\u7684 s.Set1() \u4f1a\u88abgo\u81ea\u52a8\u8f6c\u4e3a (*s).Set1()  \u540c\u7406\uff0c\u5982\u679c\u6539\u4e3a s := MyStruct{x: 0} \uff0c\u90a3\u4e48 s.Set2() \u4f1a\u88abgo\u81ea\u52a8\u8f6c\u4e3a ( s).Set2()    method argument\u548cfunction argument\u662f\u76f8\u540c\u7684\uff0c\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4   Note  receiver\u5728\u5176\u4ed6\u8bed\u8a00\u4ee5\u53cago\u8bed\u8a00\u91cc\u4e5f\u53eb\u505a  \u51fd\u6570\u7b7e\u540d \uff08\u51fd\u6570\u7b7e\u540d\u662f\u6700\u666e\u904d\u7684\u53eb\u6cd5\uff09", 
            "title": "function argument\u3001method receiver\u3001method argument\u5173\u4e8epointer\u7684\u533a\u522b"
        }, 
        {
            "location": "/method/method_receiver/#receiver_1", 
            "text": "method\u7684value receiver\u548cpointer receiver\u600e\u4e48\u9009\u62e9\uff0c\u5b98\u65b9\u8bf4\u4e862\u4e2a\u539f\u56e0\u6765\u4f7f\u7528pointer receiver    \u9700\u8981\u4fee\u6539\u539f\u6765\u7684\u503c    \u9632\u6b62\u6bcf\u6b21\u8c03\u7528method\u65f6\u5019\u90fd\u62f7\u8d1dvalue\uff0c\u6bd4\u5982\u5f53struct\u5f88\u5927\u7684\u65f6\u5019\u6bcf\u6b21\u90fd\u62f7\u8d1dvalue\u4f1a\u964d\u4f4e\u6548\u7387    \u4e0b\u9762\u662f\u6211\u4e2a\u4eba\u7406\u89e3\uff0c\u4e0d\u4e00\u5b9a\u51c6\u786e\uff1a  \u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6709\u4e00\u4e2a\u60c5\u51b5\u662f\u4e0d\u80fd\u7528pointer receiver\uff1apointer\u53ef\u80fd\u9020\u6210\u5b89\u5168\u98ce\u9669\uff0c\u4f8b\u5982\u67d0\u4e2amethod\u53ea\u662f\u8981\u83b7\u53d6\u91d1\u989d\uff0c\u800c\u4e0d\u662f\u4fee\u6539\u91d1\u989d\uff0c\u90a3\u4e48\u4f7f\u7528pointer\u7684\u8bdd\u5c31\u5b58\u5728\u5f53\u5185\u5b58\u88ab\u6cc4\u9732\u7b49\u60c5\u51b5\u5bfc\u81f4\u91d1\u989d\u88ab\u4fee\u6539\u3002  \u56e0\u6b64\uff0c\u82e5\u6ca1\u6709\u6d89\u53ca\u6027\u80fd\u95ee\u9898\uff0c\u4e14method\u7684\u529f\u80fd\u662f\u8bfb\uff0c\u800c\u975e\u5199\u7684\u65f6\u5019\uff0c\u9996\u9009value receiver", 
            "title": "\u5982\u4f55\u5224\u65adreceiver\u662f\u5426\u8981\u7528\u6307\u9488"
        }, 
        {
            "location": "/method/interface_main/", 
            "text": "\u63a5\u53e3\u7c7b\u578b\u662f\u7531\u4e00\u7ec4\u65b9\u6cd5\u5b9a\u4e49\u7684\u96c6\u5408\u3002\n\n\n\n\n\n\n\u63a5\u53e3\u7c7b\u578b\u7684\u503c\u53ef\u4ee5\u5b58\u653e\u5b9e\u73b0\u8fd9\u4e9b\u65b9\u6cd5\u7684\u4efb\u4f55\u503c\u3002\n\n\n\n\n\n\n\u63a5\u53e3\u4e0d\u662f\u88ab\u8c03\u7528\u8005\u6765\u5199\uff0c\u800c\u662f\u8c03\u7528\u8005\u6765\u5199\n\n\n\n\n\n\ngo\u8bed\u8a00\u7684\u8bbe\u8ba1\u54f2\u5b66\u8ba4\u4e3a\uff1a\u529f\u80fd\u5b9e\u73b0\u8005\u7684\u8d23\u4efb\u53ea\u8981\u63d0\u4f9b\u5177\u4f53\u529f\u80fd\uff0c\u7528\u54ea\u4e9binterface\u6765\u5bf9\u529f\u80fd\u505a\u62bd\u8c61\u662f\u4f7f\u7528\u8005\u7684\u81ea\u7531\u3002\u529f\u80fd\u5b9e\u73b0\u8005\u6ca1\u6709\u529e\u6cd5\u786e\u5b9a\u4f7f\u7528\u8005\u4f1a\u5bf9\u81ea\u5df1\u63d0\u4f9b\u7684\u529f\u80fd\u505a\u54ea\u4e9b\u62bd\u8c61\uff0c\u6240\u4ee5\u529f\u80fd\u5b9e\u73b0\u8005\u4e0d\u5e94\u8be5\u4e5f\u6ca1\u6709\u80fd\u529b\u8bbe\u5b9a\u63a5\u53e3\u3002\n\n\n\u4f8b\u5982\uff1a\u81ea\u5df1\u7684\u4ee3\u7801\u8981\u8c03\u7528\u6a21\u5757A\uff0c\u90a3\u4e48\u63a5\u53e3\u662f\u81ea\u5df1\u6765\u5199\uff0c\u800c\u4e0d\u662f\u6a21\u5757A\u6765\u5199\uff0c\u5373\u6a21\u5757A\u91cc\u53ea\u6709\u4e00\u5806\u7684struct\u548c\u5176\u65b9\u6cd5\uff0c\u81ea\u5df1\u5199\u63a5\u53e3\u6765\u5c01\u88c5\u8fd9\u4e9bstruct\u65b9\u6cd5\u662f\u4e3a\u4e86\u8ba9\u81ea\u5df1\u7684\u4ee3\u7801\u5199\u8d77\u6765\u66f4\u7075\u6d3b\uff08\u89e3\u8026\uff09\u3002", 
            "title": "3.1. \u4ec0\u4e48\u662f\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_syntax/", 
            "text": "\u4e0d\u7528interface\u65f6\u5019\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\na\n \n*\nMyStruct\n)\n \nadd\n()\n \nint\n \n{\n\n    \nreturn\n \na\n.\nX\n \n+\n \na\n.\nY\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \nfmt\n.\nPrintln\n(\ns\n.\nadd\n())\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n7\n\n\n\n\n\n\n\n\n\u73b0\u5728\u7528interface\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n\n    \nadd\n()\n \nint\n\n\n}\n\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\na\n \n*\nMyStruct\n)\n \nadd\n()\n \nint\n \n{\n\n    \nreturn\n \na\n.\nX\n \n+\n \na\n.\nY\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n\n    \nvar\n \nf\n \nAdder\n\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n\n    \nf\n \n=\n \ns\n\n\n    \nfmt\n.\nPrintln\n(\nf\n.\nadd\n())\n\n\n}\n\n\n\n\n\n\u4e0a\u9762\u9ec4\u8272\u9ad8\u4eae\u90e8\u5206\u5c31\u662f\u63a5\u53e3\u90e8\u5206\n\n\n\n\n\u7b80\u5199\n\n\nvar\n \nf\n \nAdder\n\n\ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n\nf\n \n=\n \ns\n\n\n\n\n\n\u53ef\u4ee5\u5199\u6210\n\n\nvar\n \nf\n \nAdder\n \n=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n\n\n\n\n\n\n\u8f93\u51fa\n\n\n7", 
            "title": "3.2. \u63a5\u53e3\u8bed\u6cd5"
        }, 
        {
            "location": "/method/interface_why/", 
            "text": "\u6ca1\u6709interface\u65f6\u5019:\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nDriver\n \nstruct\n \n{\n\n    \nName\n \nstring\n\n\n}\n\n\n\ntype\n \nBenz\n \nstruct\n{}\n\n\n\nfunc\n \n(\nthis\n \n*\nBenz\n)\n \nDrive\n(\ndr\n \nDriver\n)\n \n{\n\n    \nfmt\n.\nPrintf\n(\n%s drives Benz.\\n\n,\n \ndr\n.\nName\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nme\n \n:=\n \nDriver\n{\nName\n:\n \nCyent\n}\n\n\n    \n// \u5f00Benz\n\n    \ncar\n \n:=\n \nBenz\n{}\n\n    \ncar\n.\nDrive\n(\nme\n)\n\n\n}\n\n\n\n\n\n\n\n\u6ce8\u610f\u4e0a\u9762main\u51fd\u6570\u91cc\u5199\u4e86\u591a\u5c11\u884c\uff0c\u8fd9\u91cc\u4e00\u5171\u67093\u884c\u6709\u6548\u4ee3\u7801\n\n\n\n\n\u8f93\u51fa\n\n\nCyent drives Benz.\n\n\n\n\n\n\n\n\n\u73b0\u5728\u589e\u52a0\u4e00\u8f86Audi\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nDriver\n \nstruct\n \n{\n\n    \nName\n \nstring\n\n\n}\n\n\n\ntype\n \nBenz\n \nstruct\n{}\n\n\n\nfunc\n \n(\nthis\n \n*\nBenz\n)\n \nDrive\n(\ndr\n \nDriver\n)\n \n{\n\n    \nfmt\n.\nPrintf\n(\n%s drives Benz.\\n\n,\n \ndr\n.\nName\n)\n\n\n}\n\n\n\ntype\n \nAudi\n \nstruct\n \n{}\n\n\n\nfunc\n \n(\nthis\n \n*\nAudi\n)\n \nDrive\n(\ndr\n \nDriver\n)\n \n{\n\n    \nfmt\n.\nPrintf\n(\n%s drives Audi.\\n\n,\n \ndr\n.\nName\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nme\n \n:=\n \nDriver\n{\nName\n:\n \nCyent\n}\n\n\n    \n// car\u4e3a\u5916\u90e8\u4f20\u9012\u8fdb\u6765\u7684\u503c\uff0c\u5047\u8bbe\u4f20\u8fdb\u6765\u7684\u662fAudi\n\n    \nget_car\n \n:=\n \nAudi\n\n    \nswitch\n \nget_car\n \n{\n\n    \ncase\n \nBenz\n:\n\n        \ncar\n \n:=\n \nBenz\n{}\n\n        \ncar\n.\nDrive\n(\nme\n)\n\n    \ncase\n \nAudi\n:\n\n        \ncar\n \n:=\n \nAudi\n{}\n\n        \ncar\n.\nDrive\n(\nme\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u6ce8\u610f\uff1a\n\n\n\n\n\n\n\u7531\u4e8ecase\u91cc\u662f\u5c40\u90e8\u53d8\u91cf\u4f5c\u7528\u57df\uff0c\u56e0\u6b64\ncar.Drive(me)\n\u53ea\u80fd\u653e\u5728case\u91cc\u9762\uff0c\u65e0\u6cd5\u653e\u5728switch\u5916\uff08python\u662f\u53ef\u4ee5\u7684\uff09\u3002\u56e0\u6b64\u8fd9\u79cd\u5199\u6cd5\u4e5f\u4e0d\u53cb\u597d\n\n\n\n\n\n\n\u6ce8\u610f\u4e0a\u9762main\u51fd\u6570\u91cc\u7528\u4e86switch\u53ef\u4ee5\u5bf9\u4f20\u9012\u8fdb\u6765\u7684\u53d8\u91cf\u505a\u5224\u65ad\uff0c\u4f46\u8fd9\u4e48\u5199\u4e5f\u4e0d\u591f\u597d\uff0c\u56e0\u4e3a\u6bcf\u589e\u52a0\u4e00\u8f86\u8f66\uff0cswitch\u90fd\u8981\u591a\u52a0\u4e00\u4e2acase\uff0c\u90a3\u6709\u6ca1\u6709\u65e0\u8bba\u589e\u52a0\u591a\u5c11\u8f86\u8f66\uff0cmain\u51fd\u6570\u6c38\u8fdc\u4e0d\u7528\u6539\u4ee3\u7801\u7684\u529e\u6cd5\u5462\uff0c\u5f53\u7136\u6709\uff0c\u63a5\u4e0b\u6765\u8be5interface\u4e0a\u573a\u4e86\n\n\n\n\n\n\n\n\n\n\n\u4f7f\u7528interface\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nerrors\n\n\n)\n\n\n\ntype\n \nCar\n \ninterface\n \n{\n\n    \nDrive\n(\nDriver\n)\n\n\n}\n\n\n\nfunc\n \nNewCar\n(\nc\n \nstring\n)\n \n(\nCar\n,\n \nerror\n)\n \n{\n\n    \nswitch\n \nc\n \n{\n\n    \ncase\n \nBenz\n:\n\n        \nreturn\n \nBenz\n{},\n \nnil\n\n    \ncase\n \nAudi\n:\n\n        \nreturn\n \nAudi\n{},\n \nnil\n\n    \ndefault\n:\n\n        \nreturn\n \nnil\n,\n \nerrors\n.\nNew\n(\nnot support\n)\n\n    \n}\n\n\n    \nreturn\n \nnil\n,\n \nerrors\n.\nNew\n(\nnot support\n)\n\n\n}\n\n\n\ntype\n \nDriver\n \nstruct\n \n{\n\n    \nName\n \nstring\n\n\n}\n\n\n\ntype\n \nBenz\n \nstruct\n{}\n\n\n\nfunc\n \n(\nthis\n \n*\nBenz\n)\n \nDrive\n(\ndr\n \nDriver\n)\n \n{\n\n    \nfmt\n.\nPrintf\n(\n%s drives Benz.\\n\n,\n \ndr\n.\nName\n)\n\n\n}\n\n\n\ntype\n \nAudi\n \nstruct\n \n{}\n\n\n\nfunc\n \n(\nthis\n \n*\nAudi\n)\n \nDrive\n(\ndr\n \nDriver\n)\n \n{\n\n    \nfmt\n.\nPrintf\n(\n%s drives Audi.\\n\n,\n \ndr\n.\nName\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nme\n \n:=\n \nDriver\n{\nName\n:\n \nCyent\n}\n\n\n    \n// \u5916\u90e8\u4f20\u9012\u8fdb\u6765\u7684\u503c\uff0c\u5047\u8bbe\u4f20\u8fdb\u6765\u7684\u662fAudi\n\n    \ncar\n,\n \nerr\n \n:=\n \nNewCar\n(\nAudi\n)\n\n    \nif\n \nerr\n \n!=\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\nerr\n)\n\n    \n}\n \nelse\n \n{\n\n        \ncar\n.\nDrive\n(\nme\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nCyent drives Audi.\n\n\n\n\n\u6ce8\u610f: \u4e0a\u9762main\u51fd\u6570\u91cc\u6ca1\u6709\u660e\u6587\u63d0\u5230\u5177\u4f53\u4ec0\u4e48\u8f66\uff0c\u56e0\u6b64\u65e0\u8bba\u589e\u52a0\u591a\u5c11\u8f86\u8f66\uff0cmain\u51fd\u6570\u91cc\u7684\u4ee3\u7801\u53ef\u4ee5\u957f\u4e45\u4e0d\u53d8\uff0c\u8fd9\u5c31\u662f\u5c06\u5f00\u8f66\u548c\u5177\u4f53\u5f00\u4ec0\u4e48\u8f66\u5728main\u51fd\u6570\u91cc\u505a\u4e86\u89e3\u8026", 
            "title": "3.3. Why interface"
        }, 
        {
            "location": "/method/interface_oo/", 
            "text": "golang\u4e2d\u6ca1\u6709\u9762\u5411\u5bf9\u8c61\uff0c\u4f46\u5374\u53ef\u4ee5\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u7684\u57fa\u7840\u529f\u80fd\uff0c\u7c7b\u6bd4\u5982\u4e0b\uff1a\n\n\n\n\n\n\n\u57fa\u7c7b\uff1agolang\u4e2d\u7684\u63a5\u53e3\u76f8\u5f53\u4e8e\u9762\u5411\u5bf9\u8c61\u4e2d\u7684\u57fa\u7c7b\uff08\u867d\u7136\u63a5\u53e3\u5e76\u4e0d\u5b8c\u5168\u662f\u57fa\u7c7b\u7684\u6982\u5ff5\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f1a\u628a\u63a5\u53e3\u5f53\u4f5c\u57fa\u7c7b\u6765\u4f7f\u7528\uff09\uff0c\u53ea\u4e0d\u8fc7\u7ee7\u627f\u57fa\u7c7b\u9700\u8981\u663e\u5f0f\uff0c\u800cgolang\u7684\u63a5\u53e3\u662f\u9690\u5f0f\uff0c\u5e76\u4e14\u53ea\u662f\u65b9\u6cd5\u540d\u548c\u4f20\u5165\u4f20\u51fa\u53c2\u6570\u76f8\u540c\u5373\u53ef\n\n\n\n\n\n\n\u7c7b\uff1agolang\u4e2d\u7684struct\u76f8\u5f53\u4e8e\u9762\u5411\u5bf9\u8c61\u4e2d\u7684\u7c7b\n\n\n\n\n\n\n\u7c7b\u7684\u5c5e\u6027\uff1agolang\u4e2dstruct\u7684\u5143\u7d20\u76f8\u5f53\u4e8e\u9762\u5411\u5bf9\u8c61\u4e2d\u7c7b\u7684\u5c5e\u6027\n\n\n\n\n\n\n\u7c7b\u7684\u65b9\u6cd5\uff1agolang\u4e2dstruct\u7684\u65b9\u6cd5\uff08\u5c31\u53ebmethod\uff0c\u5728\u67d0\u4e9b\u8bed\u8a00\u91cc\u53eb\u7b7e\u540d\u51fd\u6570\uff09\u76f8\u5f53\u4e8e\u9762\u5411\u4e2d\u7684\u7c7b\u7684\u65b9\u6cd5\n\n\n\n\n\n\n\u4f8b\u5b50\u8be6\u89c1\n\u6bd4\u8f83python\u548cgo\u7684\u9762\u5411\u5bf9\u8c61\u5199\u6cd5", 
            "title": "3.4. \u63a5\u53e3\u548c\u9762\u5411\u5bf9\u8c61\u7684\u5173\u7cfb"
        }, 
        {
            "location": "/method/interface_application/", 
            "text": "interface\u7684\u4f7f\u7528\u8981\u6ee1\u8db32\u4e2a\u6761\u4ef6\u624d\u6709\u610f\u4e49\uff1a\n\n\n\n\n\n\n\u5b9e\u73b0\u4e86interface\u7684\u51e0\u4e2astruct\u662f\u76f8\u4f3c\u5173\u7cfb\uff08\u6bd4\u5982docker\u548ckvm\u90fd\u662f\u865a\u62df\u673a\uff09\u3001\u5e73\u7ea7\u7684\uff0c\u5e76\u4e14\u8f93\u5165\u8f93\u51fa\u53c2\u6570\u5b8c\u5168\u4e00\u81f4\u3002\uff08\u8fd9\u70b9\u662finterface\u7684\u672c\u8d28\uff0c\u80fd\u5b9e\u73b0interface\u7684\u80af\u5b9a\u662f\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff09\n\n\n\n\n\n\n\u5728\u4e1a\u52a1\u903b\u8f91\u4e0a\uff0c\u8c03\u7528\u5b9e\u73b0interface\u7684struct\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u662f\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u4f20\u9012\u8fdb\u6765\uff0c\u800c\u4e0d\u662f\u987a\u5e8f\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u6bd4\u5982\n\u8fd9\u6837\u662f\u4e0d\u5bf9\u7684\uff0c\u56e0\u4e3anetns_struct\u3001bridge_struct\u3001veth_struct\u662f\u6709\u987a\u5e8f\u7684\uff08\u5148\u6709netns\u3001bridge\uff0c\u624d\u80fd\u6709veth\uff09\uff1a\n\n\n\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni\n \nvnic\n\n    \ni\n \n=\n \nnetns_struct\n{\n...\n}\n\n    \ni\n.\nAdd\n()\n\n    \ni\n \n=\n \nbridge_struct\n{\n...\n}\n\n    \ni\n.\nAdd\n()\n\n    \ni\n \n=\n \nveth_struct\n{\n...\n}\n\n    \ni\n.\nAdd\n()\n\n\n}\n\n\n\n\n\n\u8fd9\u6837\u903b\u8f91\u662f\u6b63\u786e\u7684\uff1a\n\n\nvar\n \ni\n \nvnic\n\n\nswitch\n \nopt\n \n{\n\n\ncase\n \nnetns\n:\n\n    \ni\n \n=\n \nnetns\n.\nstruct\n{}\n\n\ncase\n \nbridge\n:\n\n    \ni\n \n=\n \nbridge\n.\nstruct\n{}\n\n\ncase\n \nveth\n:\n\n    \ni\n \n=\n \nveth\n.\nstruct\n{}\n\n\n}\n\n\ni\n.\nAdd\n()\n\n\ni\n.\nDel\n()\n\n\n\n\n\n\u5c31\u662f\u8bf4\u8c03\u7528\u8005\u8fd9\u65b9\u5bf9\u4e8e\u5b9e\u73b0interface\u7684struct\u662f\u6839\u636e\u67d0\u4e2a\u53c2\u6570\uff08\u901a\u8fc7API\u4f20\u9012\u8fc7\u6765\uff0c\u6216\u8005\u914d\u7f6e\u6587\u4ef6\u4f20\u9012\u8fc7\u6765\uff0c\u6216\u8005etcd\u4f20\u9012\u8fc7\u6765\uff09\u6765\u9009\u62e9\u67d0\u4e2astruct\uff0c\u8fd9\u79cd\u903b\u8f91\u624d\u9002\u7528interface\u3002\u800c\u5728vrouter\u7a0b\u5e8f\u903b\u8f91\u91cc\uff0cnetns\u3001bridge\u3001veth\u662f\u88ab\u8c03\u7528\u8005\u4f9d\u6b21\u6267\u884c\uff0c\u56e0\u6b64\u4e0d\u9002\u7528interface\u3002\n\n\n\u603b\u7ed3\u9002\u7528interface\u7684\u8c03\u7528\u8005\u4e1a\u52a1\u903b\u8f91\uff08\u4f2a\u4ee3\u7801\uff09\uff1a\n\n\ntype\n \nI\n \ninterface\n \n{\n\n    \n...\n\n\n}\n\n\n\nvar\n \ni\n \nI\n\n\nswitch\n \nopt\n \n{\n    \n//opt\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u4f20\u9012\u8fdb\u6765\uff0c\u800c\u4e0d\u662f\u5199\u6b7b\n\n\ncase\n \nA\n:\n\n    \ni\n \n=\n \nstructA\n{\n...\n}\n\n\ncase\n \nB\n:\n\n    \ni\n \n=\n \nstructB\n{\n...\n}\n\n\ncase\n \nC\n:\n\n    \ni\n \n=\n \nstructC\n{\n...\n}\n\n\ndefault\n:\n\n    \nerrors\n.\nNew\n(\nnot support\n)\n\n\n}\n\n\n\n\n\n\n\nNote\n\n\ninterface\u4f7f\u7528\u8d77\u6765\u6709\u65e0\u6570\u79cd\u53d8\u5f62\u65b9\u5f0f\uff0c\u4f46\u65e0\u8bba\u662f\u90a3\u79cd\uff0c\u90fd\u8981\u7b26\u5408\u4e0a\u9762\u8bf4\u7684\u5e73\u884c\u9009\u4e00\u7684\u4e1a\u52a1\u903b\u8f91\u3002\u6bd4\u5982\ngolang-targz\u8111\u56fe\n\uff08\u70b9\u51fb\u4e0b\u8f7d\uff0c\u5e76\u4f7f\u7528iThoughtsX\u6253\u5f00\uff09\uff0c\u5176\u4e2darchive/tar/writer.go\u91cc\n\n\nfunc NewWriter(w io.Writer) *Writer { return \nWriter{w: w} }\n\n\n\n\n\u8fd9\u91cc\u7528\nw io.Writer\n\u5c31\u662f\u56e0\u4e3a\u6709\u591a\u79cd\u538b\u7f29\u65b9\u5f0f\uff0c\u6709gzip\u3001\u6709bzip2\u7b49\u7b49\u8bb8\u591a\u79cd\uff0c\u4f46\u65e0\u8bba\u54ea\u79cd\uff0c\u90fd\u5b9e\u73b0\u4e86io.Writer", 
            "title": "3.5. \u5e94\u7528\u573a\u666f"
        }, 
        {
            "location": "/method/interface_argv/", 
            "text": "\u5982\u679c\u5b9e\u73b0\u63a5\u53e3\u7684\u7b7e\u540d\u51fd\u6570\u6709\u4f20\u5165\u53c2\u6570\u6216\u4f20\u51fa\u53c2\u6570\uff0c\u5219\u63a5\u53e3\u5b9a\u4e49\u65f6\u5019\u8981\u5e26\u4e0a\uff0c\u6bd4\u5982\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n(\nx\n,\n \ny\n \nint\n)\n \n(\na\n \nint\n)\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nm\n \n*\nMyStruct\n)\n \nAdd\n(\na\n,\n \nb\n \nint\n)\n \nint\n \n{\n\n    \nreturn\n \na\n \n+\n \nb\n \n+\n \nm\n.\nX\n \n+\n \nm\n.\nY\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \na\n \nAdder\n\n    \na\n \n=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \nres\n \n:=\n \na\n.\nAdd\n(\n5\n,\n \n6\n)\n\n    \nfmt\n.\nPrintln\n(\nres\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n18\n\n\n\n\n\n\nNote\n\n\n\u4e0a\u9762\u7684\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n(\nx\n,\n \ny\n \nint\n)\n \n(\na\n \nint\n)\n\n\n}\n\n\n\n\n\n\u53ef\u4ee5\u6539\u4e3a\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n(\nint\n,\n \nint\n)\n \n(\na\n \nint\n)\n\n\n}\n\n\n\n\n\n\u4e5f\u53ef\u4ee5\u6539\u4e3a\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n(\na\n,\nb\n \nint\n)\n \n(\nx\n \nint\n)\n\n\n}\n\n\n\n\n\n\u4e5f\u53ef\u4ee5\u6539\u4e3a\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n(\na\n,\n \nb\n \nint\n)\n \n(\nint\n)\n\n\n}\n\n\n\n\n\n\u4f46\u662f\u8f93\u5165\u548c\u8f93\u51fa\u53c2\u6570\u4e0d\u80fd\u5b58\u5728\u76f8\u540c\u53d8\u91cf\u540d\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u6837\u5c31\u4f1a\u62a5\u9519\uff1a\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n(\nx\n,\n \ny\n \nint\n)\n \n(\nx\n \nint\n)\n\n\n}\n\n\n\n\n\n\u62a5\u9519\n\n\nduplicate argument x", 
            "title": "3.6. \u4f20\u5165\u548c\u4f20\u51fa\u53c2\u6570\u8981\u5e26\u4e0a"
        }, 
        {
            "location": "/method/interface_receiver/", 
            "text": "\u7528interface.method\u548c\u76f4\u63a5\u7528\u81ea\u5b9a\u4e49TYPE.method()\u6709\u4e00\u70b9\u4e0d\u540c\u8981\u6ce8\u610f\uff1a\n\n\n\u5982\u679c\u7528interface.method()\uff0c\u90a3\u4e48method\u7684receiver\u53c2\u6570\u7c7b\u578b\u5fc5\u987b\u548c\u5b9e\u73b0interface\u65f6\u5019\u7684\u7c7b\u578b\u76f8\u540c\uff0c\u6bd4\u5982\uff1a\n\n\ntype\n \nI\n \ninterface\n \n{\n\n    \nM\n()\n\n\n}\n\n\n\ntype\n \nT\n \nstruct\n \n{\n\n    \nS\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\nt\n \n*\nT\n)\n \nM\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nt\n.\nS\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni\n \nI\n\n    \ni\n \n=\n \nT\n{\nhello\n}\n \n//\u4e0d\u80fd\u5199\u6210i = T{\nhello\n}\n\n    \ni\n.\nM\n()\n\n\n}\n\n\n\n\n\n\u4f46\u5982\u679c\u662f\u76f4\u63a5\u7528method()\uff0c\u5c31\u4e0d\u7528\u7c7b\u578b\u4e00\u81f4\uff0c\u4f1a\u81ea\u52a8\u5224\u65ad\uff0c\u6bd4\u5982\uff1a\n\n\ntype\n \nT\n \nstruct\n \n{\n\n    \nS\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\nt\n \n*\nT\n)\n \nM\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nt\n.\nS\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ni\n \n:=\n \nT\n{\nhello\n}\n \n//\u4e5f\u53ef\u4ee5\u5199\u6210i := \nT{\nhello\n}\n\n    \ni\n.\nM\n()\n\n\n}\n\n\n\n\n\n\u8fd92\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u90fd\u662fhello", 
            "title": "3.7. \u63a5\u53e3receiver\u53c2\u6570\u7c7b\u578b\u4e0d\u4f1a\u81ea\u52a8\u8f6c\u6362"
        }, 
        {
            "location": "/method/interface_implement/", 
            "text": "\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86\u4e00\u4e2a\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u90a3\u4e48\u5c31\u8bf4\u8fd9\u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\n\n\ntype\n \nFile\n \ninterface\n \n{\n\n    \nRead\n(\nb\n \nBuffer\n)\n \nbool\n\n    \nWrite\n(\nb\n \nBuffer\n)\n \nbool\n\n    \nClose\n()\n\n\n}\n\n\n\ntype\n \nT\n \nstruct\n \n{\n\n    \n...\n\n\n}\n\n\n\nfunc\n \n(\np\n \nT\n)\n \nRead\n(\nb\n \nBuffer\n)\n \nbool\n \n{\n \nreturn\n \n...\n \n}\n\n\nfunc\n \n(\np\n \nT\n)\n \nWrite\n(\nb\n \nBuffer\n)\n \nbool\n \n{\n \nreturn\n \n...\n \n}\n\n\nfunc\n \n(\np\n \nT\n)\n \nClose\n()\n \n{\n \n...\n \n}\n\n\n\n\n\n\u4e0a\u9762\u4f8b\u5b50\u53ef\u4ee5\u8fd9\u4e48\u63cf\u8ff0\uff1a\u7c7b\u578bT\u5b9e\u73b0\u4e86File\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5\uff08\u5373Read()\u3001Write()\u3001Close()\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bf4\u7c7b\u578bT\u5b9e\u73b0\u4e86\u63a5\u53e3File\n\n\n\n\n\n\n\u67d0\u7c7b\u578b\u5b9e\u73b0\u67d0\u65b9\u6cd5\uff1a\u6bd4\u5982\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u53ef\u4ee5\u8bf4\u7c7b\u578bT\u5b9e\u73b0\u4e86\u65b9\u6cd5Read()\u3001Write()\u3001Close()", 
            "title": "3.8. \u5404\u79cd\u5b9e\u73b0"
        }, 
        {
            "location": "/method/interface_nil/", 
            "text": "nil interface\u7684\u5b98\u65b9\u89e3\u91ca\uff1aInterface values with nil underlying values\n\n\n\u53ea\u6709\u58f0\u660e\u4e86\u4f46\u6ca1\u8d4b\u503c\u7684interface\u624d\u662fnil interface\uff0c\u53ea\u8981\u8d4b\u503c\u4e86\uff0c\u5373\u4f7f\u8d4b\u4e86\u4e00\u4e2anil\u7c7b\u578b\uff0c\u4e5f\u4e0d\u662fnil interface\u4e86\n\n\n\n\nCalling a method on a nil interface is a run-time error because there is no type inside the interface tuple to indicate which concrete method to call.\n\n\n\n\nnil interface\u662f\u4e0d\u80fd\u8c03\u7528\u65b9\u6cd5\u7684\uff0c\u5982\u679c\u8c03\u7528\u65b9\u6cd5\uff0c\u6bd4\u5982xxx\u662f\u4e2anil interface\uff0c\u90a3\u4e48xxx.M()\u4f1aruntime error\u3002\n\n\n\u53e6\u5916\uff0c\u5982\u679cinterface\u7684\u503c\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2ainterface\u7684\u503c\u7c7b\u578b\u5c31\u662f\n\uff0c\u8fd9\u65f6\u5019.method()\u6765\u8c03\u7528\u65b9\u6cd5\u7684\u8bdd\uff0c\u4f20\u9012\u8fdb\u53bb\u7684receiver\u7684\u503c\u7c7b\u578b\u4e5f\u5c06\u662fnil\n\n\n\u6ce8\u610f\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679cmethod\u91cc\u518d\u8c03\u7528\uff0c\u5c31\u4f1a\u629b\u51fa\u8fd0\u884c\u65f6\u5f02\u5e38\n\n\n\u4e3e\u4f8b\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nI\n \ninterface\n \n{\n\n    \nM\n()\n\n\n}\n\n\n\ntype\n \nT\n \nstruct\n \n{\n\n    \nS\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\nt\n \n*\nT\n)\n \nM\n()\n \n{\n\n    \nif\n \nt\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\nnil\n)\n\n        \nreturn\n\n    \n}\n\n    \nfmt\n.\nPrintln\n(\nt\n.\nS\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni\n \nI\n\n\n    \nvar\n \nt\n \n*\nT\n\n    \ni\n \n=\n \nt\n\n    \ndescribe\n(\ni\n)\n\n    \ni\n.\nM\n()\n\n\n    \ni\n \n=\n \nT\n{\nhello\n}\n\n    \ndescribe\n(\ni\n)\n\n    \ni\n.\nM\n()\n\n\n}\n\n\n\nfunc\n \ndescribe\n(\ni\n \nI\n)\n \n{\n\n    \nfmt\n.\nPrintf\n(\n(%v, %T)\\n\n,\n \ni\n,\n \ni\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n(\nnil\n, *main.T)\n\nnil\n\n(\n{hello}, *main.T)\nhello\n\n\n\n\n\u5982\u679c\u628a\u4e0a\u9762M()\u91cc\u9762\u7684return\u8fd9\u884c\u6ce8\u91ca\u6389\uff0c\u5219\u4f1a\u8f93\u51fa\n\n\n(\nnil\n, *main.T)\n\nnil\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0xffffffff addr=0x0 pc=0xc8971]\n\ngoroutine 1 [running]:\nmain.(*T).M(0x0, 0x0)\n    /tmp/sandbox104196984/main.go:18 +0x31\nmain.main()\n    /tmp/sandbox104196984/main.go:27 +0x60\n\n\n\n\n\n\nIf the concrete value inside the interface itself is nil, the method will be called with a nil receiver.\n\n\nIn some languages this would trigger a null pointer exception, but in Go it is common to write methods that gracefully handle being called with a nil receiver (as with the method M in this example.)\n\n\nNote that an interface value that holds a nil concrete value is itself non-nil.\n\n\n\n\n\u4e0a\u9762\u662f\u5b98\u7f51\u7684\u8bdd\uff0c\u5176\u4e2d\u6700\u540e\u4e00\u53e5\uff0c\u662f\u8bf4\u5f53\u58f0\u660e\u4e00\u4e2ainterface\u65f6\u5019\uff0c\u8fd9\u4e2ainterface\u662fnil\uff0c\u7136\u540e\u7ed9\u8fd9\u4e2ainterface\u8d4b\u4e86\u4e00\u4e2a\u4e3anil\u7684\u53d8\u91cf\u65f6\u5019\uff0c\u8fd9\u4e2ainterface\u5c31\u4e0d\u662fnil\u3002\u6d4b\u8bd5\u4f8b\u5b50\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nI\n \ninterface\n \n{\n\n    \nM\n()\n\n\n}\n\n\n\ntype\n \nT\n \n[]\nint\n\n\n\nfunc\n \n(\nt\n \nT\n)\n \nM\n()\n \n{\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nt\n)\n\n    \nif\n \nt\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\nnil\n)\n\n        \nreturn\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \na\n \nT\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \na\n,\n \na\n)\n\n    \nif\n \na\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\na is nil\n)\n\n    \n}\n\n\n    \nvar\n \ni\n \nI\n\n    \nif\n \ni\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\ni is nil\n)\n\n    \n}\n\n\n    \ni\n \n=\n \na\n\n    \nif\n \ni\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\ni is nil also.\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nmain.T []\na is nil\ni is nil", 
            "title": "3.9. nil interface"
        }, 
        {
            "location": "/method/interface_empty/", 
            "text": "empty interface\u7a7a\u63a5\u53e3\n\n\n\n\n\n\nIt represents the empty set of methods and is satisfied by any value at all, since any value has zero or more methods.\n\n\n\n\ninterface{}\u53eb\u505a\u7a7a\u63a5\u53e3\uff0c\u7a7a\u63a5\u53e3\u8868\u793a\u5305\u542b\u4e860\u4e2a\u65b9\u6cd5\u7684\u96c6\u5408\uff0c\u7531\u4e8e\u4efb\u4f55\u7c7b\u578b\u90fd\u81f3\u5c11\u5b9e\u73b0\u4e860\u4e2a\u6216\u591a\u4e2a\u65b9\u6cd5\uff0c\u6240\u4ee5\u7a7a\u63a5\u53e3\u53ef\u4ee5\u627f\u63a5\u4efb\u610f\u7c7b\u578b\u3002\n\n\n\u524d\u9762\u5b66\u4e60\u7684\u53d8\u91cf\u90fd\u8981\u5728\u58f0\u660e\u65f6\u5019\u786e\u5b9a\u7c7b\u578b\uff0c\u867d\u7136\u7528:=\u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a\u7c7b\u578b\uff0c\u4f46\u5b9e\u9645\u662f\u7c7b\u578b\u63a8\u5012\uff0c\u5728\u8d4b\u503c\u540e\u7c7b\u578b\u5c31\u786e\u5b9a\u4e0b\u6765\u4e0d\u80fd\u6539\u4e86\u3002\n\n\n\u7a7a\u63a5\u53e3\u7684\u4f5c\u7528\uff1a\u4e0d\u7528\u6307\u5b9a\u7c7b\u578b\u53d8\u91cf\uff0c\u5e76\u4e14\u7c7b\u578b\u53ef\u53d8\u3002\u6bd4\u5982\uff1a\n\n\nvar i interface{}\ni = 42  //\u8fd9\u4e2a\u65f6\u5019i\u5c31\u662fint\u7c7b\u578b\ni = \nhello\n //\u8fd9\u4e2a\u65f6\u5019i\u5c31\u662fstring\u7c7b\u578b\n\n\n\n\n\n\nNote\n\n\ninterface{}\u8fd9\u4e48\u5199\u6bd4\u8f83\u65b9\u4fbf\uff0c\u5f53\u7136\u4e5f\u5199\u62102\u884c\uff1a\n\n\ntype I interface {\n}\n\n\n\n\n\n\n\u5b8c\u6574\u4f8b\u5b50\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nI\n \ninterface\n{}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni\n \nI\n\n    \ni\n \n=\n \n42\n \n//\u8fd9\u4e2a\u65f6\u5019i\u5c31\u662fint\u7c7b\u578b\n\n    \nfmt\n.\nPrintf\n(\n%v,%T\\n\n,\n \ni\n,\n \ni\n)\n\n    \ni\n \n=\n \nhello\n \n//\u8fd9\u4e2a\u65f6\u5019i\u5c31\u662fstring\u7c7b\u578b\n\n    \nfmt\n.\nPrintf\n(\n%v,%T\\n\n,\n \ni\n,\n \ni\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n42,int\nhello,string\n\n\n\n\n\u7a7a\u63a5\u53e3\u5bf9\u5207\u7247\u7684\u5f71\u54cd\n\n\n\n\n\n\n\n\n\u82e5\u5c06\u4e00\u4e2aarray\u6216slice\u8d4b\u503c\u7ed9\u7a7a\u63a5\u53e3\uff0c\u8fd9\u4e2a\u7a7a\u63a5\u53e3\u65e0\u6cd5\u518d\u8fdb\u884c\u5207\u7247\n\n\n\n\n\n\narray\u6216slice\u8d4b\u503c\u7ed9\u7a7a\u63a5\u53e3\u7684\u884c\u4e3a\u4e0d\u662f\u590d\u5236\uff0c\u800c\u662f\u7c7b\u4f3c\u6307\u9488\u6548\u679c\uff0c\u53ea\u4e0d\u8fc7\u65e0\u6cd5\u518d\u8fdb\u884c\u5207\u7247\uff0c\u4f46\u5143\u7d20\u548c\u539f\u6765\u7684array\u3001slice\u53ca\u5176\u884d\u751f\u7684\uff0c\u90fd\u6709\u5173\u8054\n\n\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nsli\n \n:=\n \n[]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n\n    \nvar\n \ne\n \ninterface\n{}\n\n    \ne\n \n=\n \nsli\n\n\n    \nf\n \n:=\n \nsli\n[\n0\n:\n3\n]\n\n    \nf\n[\n2\n]\n \n=\n \n55\n\n\n    \nfmt\n.\nPrintf\n(\n%T,%v\\n\n,\n \nsli\n,\n \nsli\n)\n\n    \nfmt\n.\nPrintf\n(\n%T,%v\\n\n,\n \ne\n,\n \ne\n)\n\n    \nfmt\n.\nPrintf\n(\n%T,%v\\n\n,\n \nf\n,\n \nf\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n[]int,[2 3 55 7 11 13]\n[]int,[2 3 55 7 11 13]\n[]int,[2 3 55]\n\n\n\n\n\u82e5\u6539\u4e3a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nsli\n \n:=\n \n[]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n\n    \nvar\n \ne\n \ninterface\n{}\n\n    \ne\n \n=\n \nsli\n\n\n    \ng\n \n:=\n \ne\n[\n1\n:\n3\n]\n\n    \nfmt\n.\nPrintln\n(\ng\n)\n\n\n}\n\n\n\n\n\n\u62a5\u9519\n\n\n./example.go:11: cannot slice e (type interface {})\n\n\n\n\n\u7a7a\u63a5\u53e3\u627f\u63a5\u6307\u9488\u53d8\u91cf\n\n\n\n\nvar empty interface{}\nempty = w\n\n\n\n\n\u7531\u4e8e\u7a7a\u63a5\u53e3\u4e00\u5b9a\u80fd\u591f\u627f\u63a5\u6210\u529f\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e0d\u9700\u8981\u7c7b\u578b\u65ad\u8a00\n\n\n\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5173\u4e8e\u7a7a\u63a5\u53e3\u627f\u63a5\u4e86\u6307\u9488\u53d8\u91cf\u540e\u5982\u4f55\u83b7\u5f97\u627f\u63a5\u7684\u53d8\u91cf\uff08\u6307\u9488\uff09\u6307\u5411\u7684\u503c\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \na\n \nint\n \n=\n \n10\n\n    \np\n \n:=\n \na\n\n    \nvar\n \ne\n \ninterface\n{}\n \n=\n \np\n\n\n    \nfmt\n.\nPrintf\n(\np %T %v\\n\n,\n \np\n,\n \np\n)\n\n    \nfmt\n.\nPrintf\n(\n*p %T %v\\n\n,\n \n*\np\n,\n \n*\np\n)\n\n    \nfmt\n.\nPrintf\n(\ne %T %v\\n\n,\n \ne\n,\n \ne\n)\n\n    \nfmt\n.\nPrintf\n(\ne.(*int) %T %v\\n\n,\n \ne\n.(\n*\nint\n),\n \ne\n.(\n*\nint\n))\n\n    \nfmt\n.\nPrintf\n(\n*e.(*int) %T %v\\n\n,\n \n*\ne\n.(\n*\nint\n),\n \n*\ne\n.(\n*\nint\n))\n \n// *e.(*int)\u53ef\u4ee5\u5199\u4e3a*(e.(*int))\uff0c\u524d\u8005\u662f\u540e\u8005\u7684\u7b80\u5199\u65b9\u5f0f\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\np *int 0xc42000e248\n*p int 10\ne *int 0xc42000e248\ne.(*int) *int 0xc42000e248\n*e.(*int) int 10\n\n\n\n\n\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u662f\u7a7a\u63a5\u53e3\u7684\u65f6\u5019\u7528\u7c7b\u578b\u65ad\u8a00\u6765\u83b7\u5f97\u6307\u9488\u6307\u5411\u7684\u503c\n\n\n\n\nWarning\n\n\n\u5982\u679c\u76f4\u63a5\u6253\u5370*e\u4f1a\u62a5\u9519\n\n\ninvalid indirect of e (type interface {})", 
            "title": "3.10. \u7a7a\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_empty/#empty-interface", 
            "text": "It represents the empty set of methods and is satisfied by any value at all, since any value has zero or more methods.   interface{}\u53eb\u505a\u7a7a\u63a5\u53e3\uff0c\u7a7a\u63a5\u53e3\u8868\u793a\u5305\u542b\u4e860\u4e2a\u65b9\u6cd5\u7684\u96c6\u5408\uff0c\u7531\u4e8e\u4efb\u4f55\u7c7b\u578b\u90fd\u81f3\u5c11\u5b9e\u73b0\u4e860\u4e2a\u6216\u591a\u4e2a\u65b9\u6cd5\uff0c\u6240\u4ee5\u7a7a\u63a5\u53e3\u53ef\u4ee5\u627f\u63a5\u4efb\u610f\u7c7b\u578b\u3002  \u524d\u9762\u5b66\u4e60\u7684\u53d8\u91cf\u90fd\u8981\u5728\u58f0\u660e\u65f6\u5019\u786e\u5b9a\u7c7b\u578b\uff0c\u867d\u7136\u7528:=\u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a\u7c7b\u578b\uff0c\u4f46\u5b9e\u9645\u662f\u7c7b\u578b\u63a8\u5012\uff0c\u5728\u8d4b\u503c\u540e\u7c7b\u578b\u5c31\u786e\u5b9a\u4e0b\u6765\u4e0d\u80fd\u6539\u4e86\u3002  \u7a7a\u63a5\u53e3\u7684\u4f5c\u7528\uff1a\u4e0d\u7528\u6307\u5b9a\u7c7b\u578b\u53d8\u91cf\uff0c\u5e76\u4e14\u7c7b\u578b\u53ef\u53d8\u3002\u6bd4\u5982\uff1a  var i interface{}\ni = 42  //\u8fd9\u4e2a\u65f6\u5019i\u5c31\u662fint\u7c7b\u578b\ni =  hello  //\u8fd9\u4e2a\u65f6\u5019i\u5c31\u662fstring\u7c7b\u578b   Note  interface{}\u8fd9\u4e48\u5199\u6bd4\u8f83\u65b9\u4fbf\uff0c\u5f53\u7136\u4e5f\u5199\u62102\u884c\uff1a  type I interface {\n}   \u5b8c\u6574\u4f8b\u5b50  package   main  import   fmt  type   I   interface {}  func   main ()   { \n     var   i   I \n     i   =   42   //\u8fd9\u4e2a\u65f6\u5019i\u5c31\u662fint\u7c7b\u578b \n     fmt . Printf ( %v,%T\\n ,   i ,   i ) \n     i   =   hello   //\u8fd9\u4e2a\u65f6\u5019i\u5c31\u662fstring\u7c7b\u578b \n     fmt . Printf ( %v,%T\\n ,   i ,   i )  }   \u8f93\u51fa  42,int\nhello,string", 
            "title": "empty interface\u7a7a\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_empty/#_1", 
            "text": "\u82e5\u5c06\u4e00\u4e2aarray\u6216slice\u8d4b\u503c\u7ed9\u7a7a\u63a5\u53e3\uff0c\u8fd9\u4e2a\u7a7a\u63a5\u53e3\u65e0\u6cd5\u518d\u8fdb\u884c\u5207\u7247    array\u6216slice\u8d4b\u503c\u7ed9\u7a7a\u63a5\u53e3\u7684\u884c\u4e3a\u4e0d\u662f\u590d\u5236\uff0c\u800c\u662f\u7c7b\u4f3c\u6307\u9488\u6548\u679c\uff0c\u53ea\u4e0d\u8fc7\u65e0\u6cd5\u518d\u8fdb\u884c\u5207\u7247\uff0c\u4f46\u5143\u7d20\u548c\u539f\u6765\u7684array\u3001slice\u53ca\u5176\u884d\u751f\u7684\uff0c\u90fd\u6709\u5173\u8054    package   main  import   fmt  func   main ()   { \n     sli   :=   [] int { 2 ,   3 ,   5 ,   7 ,   11 ,   13 } \n\n     var   e   interface {} \n     e   =   sli \n\n     f   :=   sli [ 0 : 3 ] \n     f [ 2 ]   =   55 \n\n     fmt . Printf ( %T,%v\\n ,   sli ,   sli ) \n     fmt . Printf ( %T,%v\\n ,   e ,   e ) \n     fmt . Printf ( %T,%v\\n ,   f ,   f )  }   \u8f93\u51fa  []int,[2 3 55 7 11 13]\n[]int,[2 3 55 7 11 13]\n[]int,[2 3 55]  \u82e5\u6539\u4e3a  package   main  import   fmt  func   main ()   { \n     sli   :=   [] int { 2 ,   3 ,   5 ,   7 ,   11 ,   13 } \n\n     var   e   interface {} \n     e   =   sli \n\n     g   :=   e [ 1 : 3 ] \n     fmt . Println ( g )  }   \u62a5\u9519  ./example.go:11: cannot slice e (type interface {})", 
            "title": "\u7a7a\u63a5\u53e3\u5bf9\u5207\u7247\u7684\u5f71\u54cd"
        }, 
        {
            "location": "/method/interface_empty/#_2", 
            "text": "var empty interface{}\nempty = w  \u7531\u4e8e\u7a7a\u63a5\u53e3\u4e00\u5b9a\u80fd\u591f\u627f\u63a5\u6210\u529f\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e0d\u9700\u8981\u7c7b\u578b\u65ad\u8a00  \u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5173\u4e8e\u7a7a\u63a5\u53e3\u627f\u63a5\u4e86\u6307\u9488\u53d8\u91cf\u540e\u5982\u4f55\u83b7\u5f97\u627f\u63a5\u7684\u53d8\u91cf\uff08\u6307\u9488\uff09\u6307\u5411\u7684\u503c  package   main  import   fmt  func   main ()   { \n     var   a   int   =   10 \n     p   :=   a \n     var   e   interface {}   =   p \n\n     fmt . Printf ( p %T %v\\n ,   p ,   p ) \n     fmt . Printf ( *p %T %v\\n ,   * p ,   * p ) \n     fmt . Printf ( e %T %v\\n ,   e ,   e ) \n     fmt . Printf ( e.(*int) %T %v\\n ,   e .( * int ),   e .( * int )) \n     fmt . Printf ( *e.(*int) %T %v\\n ,   * e .( * int ),   * e .( * int ))   // *e.(*int)\u53ef\u4ee5\u5199\u4e3a*(e.(*int))\uff0c\u524d\u8005\u662f\u540e\u8005\u7684\u7b80\u5199\u65b9\u5f0f  }   \u8f93\u51fa  p *int 0xc42000e248\n*p int 10\ne *int 0xc42000e248\ne.(*int) *int 0xc42000e248\n*e.(*int) int 10  \u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u662f\u7a7a\u63a5\u53e3\u7684\u65f6\u5019\u7528\u7c7b\u578b\u65ad\u8a00\u6765\u83b7\u5f97\u6307\u9488\u6307\u5411\u7684\u503c   Warning  \u5982\u679c\u76f4\u63a5\u6253\u5370*e\u4f1a\u62a5\u9519  invalid indirect of e (type interface {})", 
            "title": "\u7a7a\u63a5\u53e3\u627f\u63a5\u6307\u9488\u53d8\u91cf"
        }, 
        {
            "location": "/method/interface_assertion/", 
            "text": "\u57fa\u7840\n\n\n\n\ntype assertions\u7c7b\u578b\u65ad\u8a00\uff1a\n\n\n\u9650\u5236\uff1a\n\u53ea\u80fd\u7528\u4e8einterface\u7684\u503c\n\n\nt := i.(T)\n\n\n\n\n\u65ad\u8a00interface i\u7684\u503c\u7c7b\u578b\u662fT\uff0c\u5982\u679c\u662f\uff0ct\u5219\u4e3ainterface i\u7684\u503c\uff0c\u5e76\u4e14t\u7684\u7c7b\u578b\u4e5f\u4e3ainterface i\u7684\u503c\u7c7b\u578b\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219panic\u62a5\u9519\uff0c\u7c7b\u4f3c\uff1apanic: interface conversion: interface {} is int, not float64\n\n\nt, ok := i.(T)\n\n\n\n\n\u65ad\u8a00interface i\u7684\u503c\u7c7b\u578b\u662fT\uff0c\u5982\u679c\u662f\uff0ct\u5219\u4e3ainterface i\u7684\u503c\uff0c\u5e76\u4e14t\u7684\u7c7b\u578b\u4e5f\u4e3ainterface i\u7684\u503c\u7c7b\u578b\uff0cok\u4e3a\u5e03\u5c14\u7c7b\u578b\u7684true\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u4e0d\u4f1a\u62a5panic\uff0c\u800c\u662fok\u4e3afalse\uff0c\u540c\u65f6t\u7684\u503c\u7c7b\u578b\u4e3aT\uff0ct\u7684\u503c\u4e3a\u7c7b\u578bT\u7684\u521d\u59cb\u503c\uff08\u6bd4\u5982int\u3001float64\u7684\u521d\u59cb\u503c\u4e3a0\uff0cstring\u521d\u59cb\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff09\n\n\n\u4f8b\u5b50\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni\n \ninterface\n{}\n \n=\n \n100\n\n\n    \ns\n,\n \nok\n \n:=\n \ni\n.(\nint\n)\n\n    \nfmt\n.\nPrintln\n(\ns\n,\n \nok\n)\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \ns\n)\n\n\n    \nf\n,\n \nok\n \n:=\n \ni\n.(\nfloat64\n)\n\n    \nfmt\n.\nPrintln\n(\nf\n,\n \nok\n)\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nf\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n100 true\nint\n0 false\nfloat64\n\n\n\n\n\u7c7b\u578b\u65ad\u8a00\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u53ef\u4ee5\u5c06\u7a7a\u63a5\u53e3\u53d8\u91cfhold\u7684\u53d8\u91cf\u91cd\u65b0\u8d4b\u503c\u7ed9\u975e\u7a7a\u63a5\u53e3\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n\n)\n\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n()\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \nMyStruct\n)\n \nAdd\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nthis\n.\nX\n \n+\n \nthis\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \nvar\n \ne\n \ninterface\n{}\n\n    \ne\n \n=\n \ns\n\n    \nfmt\n.\nPrintf\n(\ne: %T %v\\n\n,\n \ne\n,\n \ne\n)\n\n    \nfmt\n.\nPrintln\n(\n-----\n)\n\n\n    \n// \u5199\u6cd51: \u7c7b\u578b\u65ad\u8a00\u5199\u6cd5\n\n    \nx\n,\n \nok\n \n:=\n \ne\n.(\nMyStruct\n)\n\n    \nif\n \nok\n \n==\n \ntrue\n \n{\n\n        \nfmt\n.\nPrintf\n(\nx: %T %v\\n\n,\n \nx\n,\n \nx\n)\n\n        \nx\n.\nAdd\n()\n\n    \n}\n\n    \nvar\n \ni\n \nAdder\n\n    \ni\n \n=\n \nx\n\n    \nfmt\n.\nPrintf\n(\ni: %T %v\\n\n,\n \ni\n,\n \ni\n)\n\n    \ni\n.\nAdd\n()\n\n    \nfmt\n.\nPrintln\n(\n-----\n)\n\n\n    \n// \u5199\u6cd52: \u7c7b\u578b\u65ad\u8a00+\u5b9e\u73b0\u63a5\u53e3\u5199\u6cd5\uff0c\u652f\u6301\u7a7a\u63a5\u53e3\u3002\u8be5\u5199\u6cd5\u662f\u5199\u6cd51\u7684\u7b80\u5199\u65b9\u5f0f\n\n    \nvar\n \nj\n \nAdder\n\n    \nj\n \n=\n \ne\n.(\nAdder\n)\n\n    \nfmt\n.\nPrintf\n(\nj: %T %v\\n\n,\n \nj\n,\n \nj\n)\n\n    \nj\n.\nAdd\n()\n\n    \nfmt\n.\nPrintln\n(\n-----\n)\n\n\n    \n// \u5199\u6cd53: \u7c7b\u578b\u65ad\u8a00+\u5b9e\u73b0\u63a5\u53e3\u5199\u6cd5\uff0c\u652f\u6301\u975e\u7a7a\u63a5\u53e3\n\n    \nvar\n \nk\n \nAdder\n\n    \nk\n \n=\n \ni\n.(\nAdder\n)\n\n    \nfmt\n.\nPrintf\n(\nk: %T %v\\n\n,\n \nk\n,\n \nk\n)\n\n    \nk\n.\nAdd\n()\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\ne: main.MyStruct {3 4}\n-----\nx: main.MyStruct {3 4}\n7\ni: main.MyStruct {3 4}\n7\n-----\nj: main.MyStruct {3 4}\n7\n-----\nk: main.MyStruct {3 4}\n7\n\n\n\n\n\u7c7b\u578b\u65ad\u8a00\u5b9e\u73b0\u63a5\u53e3\n\n\n\n\n\u8be6\u89c1\u5404\u79cd\u5b9e\u73b0\u7ae0\u8282\n\n\n\u7c7b\u578b\u65ad\u8a00\u83b7\u5f97\u627f\u63a5\u7684\u6307\u9488\u53d8\u91cf\u6307\u5411\u7684\u503c\n\n\n\n\n\u8be6\u89c1\u7a7a\u63a5\u53e3\u627f\u63a5\u6307\u9488\u53d8\u91cf\n\n\n\u7c7b\u578b\u8f6c\u6362\u548c\u7c7b\u578b\u65ad\u8a00\u7684\u533a\u522b\n\n\n\n\n\u8be6\u89c1\n\u63a5\u53e3\u7ae0\u8282-\u6df1\u5165\u7406\u89e3", 
            "title": "3.11. \u7c7b\u578b\u65ad\u8a00"
        }, 
        {
            "location": "/method/interface_assertion/#_1", 
            "text": "type assertions\u7c7b\u578b\u65ad\u8a00\uff1a  \u9650\u5236\uff1a \u53ea\u80fd\u7528\u4e8einterface\u7684\u503c  t := i.(T)  \u65ad\u8a00interface i\u7684\u503c\u7c7b\u578b\u662fT\uff0c\u5982\u679c\u662f\uff0ct\u5219\u4e3ainterface i\u7684\u503c\uff0c\u5e76\u4e14t\u7684\u7c7b\u578b\u4e5f\u4e3ainterface i\u7684\u503c\u7c7b\u578b\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219panic\u62a5\u9519\uff0c\u7c7b\u4f3c\uff1apanic: interface conversion: interface {} is int, not float64  t, ok := i.(T)  \u65ad\u8a00interface i\u7684\u503c\u7c7b\u578b\u662fT\uff0c\u5982\u679c\u662f\uff0ct\u5219\u4e3ainterface i\u7684\u503c\uff0c\u5e76\u4e14t\u7684\u7c7b\u578b\u4e5f\u4e3ainterface i\u7684\u503c\u7c7b\u578b\uff0cok\u4e3a\u5e03\u5c14\u7c7b\u578b\u7684true\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u4e0d\u4f1a\u62a5panic\uff0c\u800c\u662fok\u4e3afalse\uff0c\u540c\u65f6t\u7684\u503c\u7c7b\u578b\u4e3aT\uff0ct\u7684\u503c\u4e3a\u7c7b\u578bT\u7684\u521d\u59cb\u503c\uff08\u6bd4\u5982int\u3001float64\u7684\u521d\u59cb\u503c\u4e3a0\uff0cstring\u521d\u59cb\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff09  \u4f8b\u5b50\uff1a  package   main  import   fmt  func   main ()   { \n     var   i   interface {}   =   100 \n\n     s ,   ok   :=   i .( int ) \n     fmt . Println ( s ,   ok ) \n     fmt . Printf ( %T\\n ,   s ) \n\n     f ,   ok   :=   i .( float64 ) \n     fmt . Println ( f ,   ok ) \n     fmt . Printf ( %T\\n ,   f )  }   \u8f93\u51fa  100 true\nint\n0 false\nfloat64  \u7c7b\u578b\u65ad\u8a00\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u53ef\u4ee5\u5c06\u7a7a\u63a5\u53e3\u53d8\u91cfhold\u7684\u53d8\u91cf\u91cd\u65b0\u8d4b\u503c\u7ed9\u975e\u7a7a\u63a5\u53e3  package   main  import   ( \n     fmt  )  type   Adder   interface   { \n     Add ()  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( this   MyStruct )   Add ()   { \n     fmt . Println ( this . X   +   this . Y )  }  func   main ()   { \n     s   :=   MyStruct { 3 ,   4 } \n     var   e   interface {} \n     e   =   s \n     fmt . Printf ( e: %T %v\\n ,   e ,   e ) \n     fmt . Println ( ----- ) \n\n     // \u5199\u6cd51: \u7c7b\u578b\u65ad\u8a00\u5199\u6cd5 \n     x ,   ok   :=   e .( MyStruct ) \n     if   ok   ==   true   { \n         fmt . Printf ( x: %T %v\\n ,   x ,   x ) \n         x . Add () \n     } \n     var   i   Adder \n     i   =   x \n     fmt . Printf ( i: %T %v\\n ,   i ,   i ) \n     i . Add () \n     fmt . Println ( ----- ) \n\n     // \u5199\u6cd52: \u7c7b\u578b\u65ad\u8a00+\u5b9e\u73b0\u63a5\u53e3\u5199\u6cd5\uff0c\u652f\u6301\u7a7a\u63a5\u53e3\u3002\u8be5\u5199\u6cd5\u662f\u5199\u6cd51\u7684\u7b80\u5199\u65b9\u5f0f \n     var   j   Adder \n     j   =   e .( Adder ) \n     fmt . Printf ( j: %T %v\\n ,   j ,   j ) \n     j . Add () \n     fmt . Println ( ----- ) \n\n     // \u5199\u6cd53: \u7c7b\u578b\u65ad\u8a00+\u5b9e\u73b0\u63a5\u53e3\u5199\u6cd5\uff0c\u652f\u6301\u975e\u7a7a\u63a5\u53e3 \n     var   k   Adder \n     k   =   i .( Adder ) \n     fmt . Printf ( k: %T %v\\n ,   k ,   k ) \n     k . Add ()  }   \u8f93\u51fa  e: main.MyStruct {3 4}\n-----\nx: main.MyStruct {3 4}\n7\ni: main.MyStruct {3 4}\n7\n-----\nj: main.MyStruct {3 4}\n7\n-----\nk: main.MyStruct {3 4}\n7", 
            "title": "\u57fa\u7840"
        }, 
        {
            "location": "/method/interface_assertion/#_2", 
            "text": "\u8be6\u89c1\u5404\u79cd\u5b9e\u73b0\u7ae0\u8282", 
            "title": "\u7c7b\u578b\u65ad\u8a00\u5b9e\u73b0\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_assertion/#_3", 
            "text": "\u8be6\u89c1\u7a7a\u63a5\u53e3\u627f\u63a5\u6307\u9488\u53d8\u91cf", 
            "title": "\u7c7b\u578b\u65ad\u8a00\u83b7\u5f97\u627f\u63a5\u7684\u6307\u9488\u53d8\u91cf\u6307\u5411\u7684\u503c"
        }, 
        {
            "location": "/method/interface_assertion/#_4", 
            "text": "\u8be6\u89c1 \u63a5\u53e3\u7ae0\u8282-\u6df1\u5165\u7406\u89e3", 
            "title": "\u7c7b\u578b\u8f6c\u6362\u548c\u7c7b\u578b\u65ad\u8a00\u7684\u533a\u522b"
        }, 
        {
            "location": "/method/interface_typeswitch/", 
            "text": "\u5bf9\u63a5\u53e3\u53d8\u91cfhold\u503c\u505a\u7c7b\u578b\u5224\u65ad\n\n\n\n\n\u5f53i\u662f\u4e2a\u63a5\u53e3\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528i.(type)\u6765\u5bf9\u8fd9\u4e2a\u63a5\u53e3\u53d8\u91cfhold\u7684\u503c\u7c7b\u578b\u505a\u5224\u65ad\n\n\nswitch\n \nv\n \n:=\n \ni\n.(\ntype\n)\n  \n{\n\n\ncase\n \nint\n:\n\n    \n...\n\n\ncase\n \nstring\n:\n\n    \n...\n\n\ndefault\n:\n\n    \n...\n\n\n}\n\n\n\n\n\n\u6ce8\u610f\uff1a\u4e4b\u524d\u7c7b\u578b\u65ad\u8a00\u662f\u7528i.($TYPE)\u6bd4\u5982i.(int)\u6765\u5224\u65ad\u662f\u4e0d\u662fint\u7c7b\u578b\uff0c\u4f46\u662f\u8fd9\u91cc\u7528\u5173\u952e\u5b57type\u3002\u5173\u952e\u5b57type\u53ea\u80fd\u7528\u5728switch\u8bed\u53e5\u91cc\uff0c\u5982\u679c\u7528\u5728switch\u5916\u9762\u4f1a\u62a5\u9519\uff0c\u6bd4\u5982\uff1a\n\n\na := i.(type)\nfmt.Printf(\n%v %T\\n\n, a, a)\n\n\n\n\n\u62a5\u9519\uff1a\n\n\nuse of .(type) outside type switch\n\n\n\n\n\u9664\u4e86\u80fd\u8bc6\u522b\u5185\u7f6e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u8bc6\u522b\u5176\u4ed6\u7c7b\u578b\uff0c\u6bd4\u5982\u51fd\u6570\u7c7b\u578b\uff0c\u6216\u8005\u5e26\u6307\u9488\u7684struct\uff0c\u6bd4\u5982\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5e26\u6307\u9488\u7684struct\n\n\ntype\n \nFoo\n \ninterface\n \n{\n\n    \nfoo\n()\n \nint\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\na\n \n*\nMyStruct\n)\n \nfoo\n()\n \nint\n \n{\n\n    \nreturn\n \na\n.\nX\n \n+\n \na\n.\nY\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nf\n \nFoo\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \nf\n \n=\n \ns\n\n    \nfmt\n.\nPrintf\n(\n%v,%T\\n\n,\n \nf\n,\n \nf\n)\n\n    \nswitch\n \nv\n \n:=\n \nf\n.(\ntype\n)\n \n{\n\n    \ncase\n \n*\nMyStruct\n:\n\n        \nfmt\n.\nPrintf\n(\n1,%v,%T\\n\n,\n \nv\n,\n \nv\n)\n\n    \ndefault\n:\n\n        \nfmt\n.\nPrintf\n(\n2,%v,%T\\n\n,\n \nv\n,\n \nv\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n{3 4},*main.MyStruct\n1,\n{3 4},*main.MyStruct\n\n\n\n\n\u6ce8\u610f\uff1a\u8fd9\u4e2atype\u7528%T\u663e\u793a\u51fa\u6765\u7684\u662f*main.MyStruct\uff0c\u800ccase\u91cc\u662f*MyStruct\uff0c\u6ca1\u6709main\u5594\u3002\n\n\n\u8fd9\u4e2a\u4f8b\u5b50\u662f\u51fd\u6570\uff1a\n\n\nfunc\n \nmain\n()\n \n{\n\n    \npos\n \n:=\n \nfunc\n \n()\n \nint\n \n{\n \nreturn\n \n1\n \n}\n\n    \nfmt\n.\nPrintf\n(\n%v,%T\\n\n,\n \npos\n,\n \npos\n)\n\n\n    \nvar\n \ni\n \ninterface\n{}\n\n    \ni\n \n=\n \npos\n\n    \nfmt\n.\nPrintf\n(\n%v,%T\\n\n,\n \ni\n,\n \ni\n)\n\n\n    \nswitch\n \nv\n \n:=\n \ni\n.(\ntype\n)\n \n{\n\n    \ncase\n \nint\n:\n\n        \nfmt\n.\nPrintf\n(\n1,%v,%T\\n\n,\n \nv\n,\n \nv\n)\n\n    \ncase\n \nfunc\n()\n \nint\n:\n\n        \nfmt\n.\nPrintf\n(\n2,%v,%T\\n\n,\n \nv\n,\n \nv\n)\n\n    \ncase\n \nfunc\n(\nint\n)\n \nint\n:\n\n        \nfmt\n.\nPrintf\n(\n3,%v,%T\\n\n,\n \nv\n,\n \nv\n)\n\n    \ndefault\n:\n\n        \nfmt\n.\nPrintf\n(\n4,%v,%T\\n\n,\n \nv\n,\n \nv\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\uff1a\n\n\n0x1088f30,func() int\n0x1088f30,func() int\n2,0x1088f30,func() int\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\uff1acase\u540e\u9762\u8ddf\u7684\u5c31\u662fi\u503c\u7684\u7c7b\u578b\n\n\n\u6ce8\u610f\uff1acase\u540e\u9762\u4e0d\u80fd\u8ddf\u4e0d\u5b58\u5728\u7684\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u6bd4\u5982\uff1a\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni\n \ninterface\n{}\n\n    \ni\n \n=\n \n1\n\n    \nfmt\n.\nPrintf\n(\n%v,%T\\n\n,\n \ni\n,\n \ni\n)\n\n\n    \nswitch\n \nv\n \n:=\n \ni\n.(\ntype\n)\n \n{\n\n    \ncase\n \nint\n:\n\n        \nfmt\n.\nPrintf\n(\n1,%v,%T\\n\n,\n \nv\n,\n \nv\n)\n\n    \ncase\n \nfunc\n()\n \nint\n:\n\n        \nfmt\n.\nPrintf\n(\n2,%v,%T\\n\n,\n \nv\n,\n \nv\n)\n\n    \ncase\n \nfunc\n(\nint\n)\n \nint\n:\n\n        \nfmt\n.\nPrintf\n(\n3,%v,%T\\n\n,\n \nv\n,\n \nv\n)\n\n    \ncase\n \n*\nMyStruct\n:\n\n        \nfmt\n.\nPrintf\n(\n4,%v,%T\\n\n,\n \nv\n,\n \nv\n)\n\n    \ndefault\n:\n\n        \nfmt\n.\nPrintf\n(\n5,%v,%T\\n\n,\n \nv\n,\n \nv\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u62a5\u9519\uff1a\n\n\nundefined: MyStruct\n\n\n\n\n\u53ef\u4ee5\u7528\u662f\u5426\u5b9e\u73b0\u63a5\u53e3\u505a\u5224\u65ad\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n()\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \nMyStruct\n)\n \nAdd\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nthis\n.\nX\n \n+\n \nthis\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \n//var i interface{} = s\n\n    \nvar\n \ni\n \nAdder\n \n=\n \ns\n\n    \nswitch\n \nv\n \n:=\n \ni\n.(\ntype\n)\n \n{\n\n    \ncase\n \nMyStruct\n:\n\n        \nfmt\n.\nPrintf\n(\ncase MyStruct: %T %v\\n\n,\n \nv\n,\n \nv\n)\n\n    \ncase\n \ninterface\n{}:\n\n        \nfmt\n.\nPrintf\n(\ncase interface{}: %T %v\\n\n,\n \nv\n,\n \nv\n)\n\n    \ncase\n \nAdder\n:\n\n        \nfmt\n.\nPrintf\n(\ncase Adder: %T %v\\n\n,\n \nv\n,\n \nv\n)\n\n    \ndefault\n:\n\n        \nfmt\n.\nPrintf\n(\nnot case: %T %v\\n\n,\n \nv\n,\n \nv\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n\nvar i interface{} = s\n\u6216\nvar i Adder = s\n\u7528\u54ea\u4e2a\u90fd\u4e00\u6837\n\n\n\n\n\n\n\u8fd93\u4e2acase\u4e0d\u7ba1\u7528\u54ea\u4e2a\uff0c\u7b2c\u4e00\u4e2acase\u90fd\u80fd\u5339\u914d\u5230\n\n\n\n\n\n\n\n\nWarning\n\n\ncase\u53ea\u80fd\u7528\u4e8e\u7c7b\u578b\u5224\u65ad\uff08\u5305\u62ec\u5b9e\u73b0\u63a5\u53e3\uff09\uff0c\u6ca1\u6709\u529e\u6cd5\u5224\u65ad\u662f\u5426\u4e3a\u4e00\u4e2a\u63a5\u53e3\u3002\u5c31\u662f\u8bf4\u6ca1\u6709\u529e\u6cd5\u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u662f\u5426\u4e3a\u63a5\u53e3\u53d8\u91cf\uff0c\u5373\u4f7f\u7528\u53cd\u5c04\u4e5f\u662f\u65e0\u6cd5\u5224\u65ad\u7684", 
            "title": "3.12. type switch"
        }, 
        {
            "location": "/method/interface_typeswitch/#hold", 
            "text": "\u5f53i\u662f\u4e2a\u63a5\u53e3\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528i.(type)\u6765\u5bf9\u8fd9\u4e2a\u63a5\u53e3\u53d8\u91cfhold\u7684\u503c\u7c7b\u578b\u505a\u5224\u65ad  switch   v   :=   i .( type )    {  case   int : \n     ...  case   string : \n     ...  default : \n     ...  }   \u6ce8\u610f\uff1a\u4e4b\u524d\u7c7b\u578b\u65ad\u8a00\u662f\u7528i.($TYPE)\u6bd4\u5982i.(int)\u6765\u5224\u65ad\u662f\u4e0d\u662fint\u7c7b\u578b\uff0c\u4f46\u662f\u8fd9\u91cc\u7528\u5173\u952e\u5b57type\u3002\u5173\u952e\u5b57type\u53ea\u80fd\u7528\u5728switch\u8bed\u53e5\u91cc\uff0c\u5982\u679c\u7528\u5728switch\u5916\u9762\u4f1a\u62a5\u9519\uff0c\u6bd4\u5982\uff1a  a := i.(type)\nfmt.Printf( %v %T\\n , a, a)  \u62a5\u9519\uff1a  use of .(type) outside type switch  \u9664\u4e86\u80fd\u8bc6\u522b\u5185\u7f6e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u8bc6\u522b\u5176\u4ed6\u7c7b\u578b\uff0c\u6bd4\u5982\u51fd\u6570\u7c7b\u578b\uff0c\u6216\u8005\u5e26\u6307\u9488\u7684struct\uff0c\u6bd4\u5982\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5e26\u6307\u9488\u7684struct  type   Foo   interface   { \n     foo ()   int  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( a   * MyStruct )   foo ()   int   { \n     return   a . X   +   a . Y  }  func   main ()   { \n     var   f   Foo \n     s   :=   MyStruct { 3 ,   4 } \n     f   =   s \n     fmt . Printf ( %v,%T\\n ,   f ,   f ) \n     switch   v   :=   f .( type )   { \n     case   * MyStruct : \n         fmt . Printf ( 1,%v,%T\\n ,   v ,   v ) \n     default : \n         fmt . Printf ( 2,%v,%T\\n ,   v ,   v ) \n     }  }   \u8f93\u51fa  {3 4},*main.MyStruct\n1, {3 4},*main.MyStruct  \u6ce8\u610f\uff1a\u8fd9\u4e2atype\u7528%T\u663e\u793a\u51fa\u6765\u7684\u662f*main.MyStruct\uff0c\u800ccase\u91cc\u662f*MyStruct\uff0c\u6ca1\u6709main\u5594\u3002  \u8fd9\u4e2a\u4f8b\u5b50\u662f\u51fd\u6570\uff1a  func   main ()   { \n     pos   :=   func   ()   int   {   return   1   } \n     fmt . Printf ( %v,%T\\n ,   pos ,   pos ) \n\n     var   i   interface {} \n     i   =   pos \n     fmt . Printf ( %v,%T\\n ,   i ,   i ) \n\n     switch   v   :=   i .( type )   { \n     case   int : \n         fmt . Printf ( 1,%v,%T\\n ,   v ,   v ) \n     case   func ()   int : \n         fmt . Printf ( 2,%v,%T\\n ,   v ,   v ) \n     case   func ( int )   int : \n         fmt . Printf ( 3,%v,%T\\n ,   v ,   v ) \n     default : \n         fmt . Printf ( 4,%v,%T\\n ,   v ,   v ) \n     }  }   \u8f93\u51fa\uff1a  0x1088f30,func() int\n0x1088f30,func() int\n2,0x1088f30,func() int  \u53ef\u4ee5\u770b\u51fa\uff1acase\u540e\u9762\u8ddf\u7684\u5c31\u662fi\u503c\u7684\u7c7b\u578b  \u6ce8\u610f\uff1acase\u540e\u9762\u4e0d\u80fd\u8ddf\u4e0d\u5b58\u5728\u7684\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u6bd4\u5982\uff1a  func   main ()   { \n     var   i   interface {} \n     i   =   1 \n     fmt . Printf ( %v,%T\\n ,   i ,   i ) \n\n     switch   v   :=   i .( type )   { \n     case   int : \n         fmt . Printf ( 1,%v,%T\\n ,   v ,   v ) \n     case   func ()   int : \n         fmt . Printf ( 2,%v,%T\\n ,   v ,   v ) \n     case   func ( int )   int : \n         fmt . Printf ( 3,%v,%T\\n ,   v ,   v ) \n     case   * MyStruct : \n         fmt . Printf ( 4,%v,%T\\n ,   v ,   v ) \n     default : \n         fmt . Printf ( 5,%v,%T\\n ,   v ,   v ) \n     }  }   \u62a5\u9519\uff1a  undefined: MyStruct", 
            "title": "\u5bf9\u63a5\u53e3\u53d8\u91cfhold\u503c\u505a\u7c7b\u578b\u5224\u65ad"
        }, 
        {
            "location": "/method/interface_typeswitch/#_1", 
            "text": "package   main  import   fmt  type   Adder   interface   { \n     Add ()  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( this   MyStruct )   Add ()   { \n     fmt . Println ( this . X   +   this . Y )  }  func   main ()   { \n     s   :=   MyStruct { 3 ,   4 } \n     //var i interface{} = s \n     var   i   Adder   =   s \n     switch   v   :=   i .( type )   { \n     case   MyStruct : \n         fmt . Printf ( case MyStruct: %T %v\\n ,   v ,   v ) \n     case   interface {}: \n         fmt . Printf ( case interface{}: %T %v\\n ,   v ,   v ) \n     case   Adder : \n         fmt . Printf ( case Adder: %T %v\\n ,   v ,   v ) \n     default : \n         fmt . Printf ( not case: %T %v\\n ,   v ,   v ) \n     }  }     var i interface{} = s \u6216 var i Adder = s \u7528\u54ea\u4e2a\u90fd\u4e00\u6837    \u8fd93\u4e2acase\u4e0d\u7ba1\u7528\u54ea\u4e2a\uff0c\u7b2c\u4e00\u4e2acase\u90fd\u80fd\u5339\u914d\u5230     Warning  case\u53ea\u80fd\u7528\u4e8e\u7c7b\u578b\u5224\u65ad\uff08\u5305\u62ec\u5b9e\u73b0\u63a5\u53e3\uff09\uff0c\u6ca1\u6709\u529e\u6cd5\u5224\u65ad\u662f\u5426\u4e3a\u4e00\u4e2a\u63a5\u53e3\u3002\u5c31\u662f\u8bf4\u6ca1\u6709\u529e\u6cd5\u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u662f\u5426\u4e3a\u63a5\u53e3\u53d8\u91cf\uff0c\u5373\u4f7f\u7528\u53cd\u5c04\u4e5f\u662f\u65e0\u6cd5\u5224\u65ad\u7684", 
            "title": "\u53ef\u4ee5\u7528\u662f\u5426\u5b9e\u73b0\u63a5\u53e3\u505a\u5224\u65ad"
        }, 
        {
            "location": "/method/interface_stringer/", 
            "text": "\u5728fmt\u5305\u91cc\u6709\u4e00\u4e2ainterface\u53eb\u505aStringer\uff1a\n\n\ntype Stringer interface {\n    String() string\n}\n\n\n\n\n\u4f5c\u7528\uff1afmt.Println\u6216\u6253\u5370\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u7684\u65f6\u5019\uff0c\u4f1a\u5224\u65ad\u8fd9\u4e2a\u53d8\u91cf\u662f\u5426\u5b9e\u73b0\u4e86Stringer\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5219\u8c03\u7528\u8fd9\u4e2a\u53d8\u91cf\u7684String()\u65b9\u6cd5\uff0c\u5e76\u5c06\u8fd4\u56de\u503c\u6253\u5370\u5230\u5c4f\u5e55\u4e0a\n\n\n\n\nfmt.Printf\u7684%v\u4e5f\u4f1a\u8bfb\u53d6Stringer\n\n\n\n\n\u4f8b\u5b50\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nPerson\n \nstruct\n \n{\n\n    \nName\n \nstring\n\n    \nAge\n  \nint\n\n\n}\n\n\n\nfunc\n \n(\np\n \nPerson\n)\n \nString\n()\n \nstring\n \n{\n\n    \nreturn\n \nfmt\n.\nSprintf\n(\n(Name: %v) (Age: %v)\n,\n \np\n.\nName\n,\n \np\n.\nAge\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \nPerson\n{\nbenz\n,\n \n21\n}\n\n    \nfmt\n.\nPrintln\n(\na\n)\n\n    \nfmt\n.\nPrintf\n(\n%v\\n\n,\n \na\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n(Name: benz) (Age: 21)\n(Name: benz) (Age: 21)\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u7528String()\u4fee\u6539\u4e86\u8f93\u51fa\u683c\u5f0f\n\n\n\u518d\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nIPAddr\n \n[\n4\n]\nbyte\n\n\n\n/*\n\n\nfunc (ip IPAddr) String() string {\n\n\n    return fmt.Sprintf(\n%v.%v.%v.%v\n, ip[0], ip[1], ip[2], ip[3])\n\n\n}\n\n\n*/\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nhosts\n \n:=\n \nmap\n[\nstring\n]\nIPAddr\n{\n\n        \nloopback\n:\n  \n{\n127\n,\n \n0\n,\n \n0\n,\n \n1\n},\n\n        \ngoogleDNS\n:\n \n{\n8\n,\n \n8\n,\n \n8\n,\n \n8\n},\n\n    \n}\n\n    \nfor\n \nname\n,\n \nip\n \n:=\n \nrange\n \nhosts\n \n{\n\n        \nfmt\n.\nPrintf\n(\n%v: %v\\n\n,\n \nname\n,\n \nip\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nloopback: [127 0 0 1]\ngoogleDNS: [8 8 8 8]\n\n\n\n\n\u5982\u679c\u628a\u4e0a\u9762\u7684String\u7684\u6ce8\u91ca\u53bb\u6389\uff0c\u8f93\u51fa\u5219\u662f\n\n\nloopback: 127.0.0.1\ngoogleDNS: 8.8.8.8", 
            "title": "3.13. Stringer"
        }, 
        {
            "location": "/method/interface_argv_interface/", 
            "text": "\u51fd\u6570\u7684\u4f20\u5165\u53c2\u6570\u5b9e\u73b0\u63a5\u53e3\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nReader\n \ninterface\n \n{\n\n    \nRead\n()\n \nint\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nm\n \n*\nMyStruct\n)\n \nRead\n()\n \nint\n \n{\n\n    \nreturn\n \nm\n.\nX\n \n+\n \nm\n.\nY\n\n\n}\n\n\n\nfunc\n \nrun\n(\nr\n \nReader\n)\n \n{\n\n\n    \nfmt\n.\nPrintln\n(\nr\n.\nRead\n())\n\n\n}\n\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \nrun\n(\ns\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n7\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u56e0\u4e3a*MyStruct\u5b9e\u73b0\u4e86Read\u65b9\u6cd5\uff0c\u56e0\u6b64\nMyStruct\u5b9e\u73b0\u4e86Reader\u63a5\u53e3\uff0c\u6240\u4ee5\u628a*MyStruct\u4f5c\u4e3a\u53c2\u6570\u8c03\u7528run\u65f6\u5019\uff0c\nMyStruct{3, 4}\u5c31\u81ea\u52a8\u5b9e\u73b0\u4e86Reader\u63a5\u53e3\uff0c\u56e0\u6b64run\u91cc\u53ef\u4ee5\u7528r.Read()\u6765\u8c03\u7528\u63a5\u53e3\u7684\u65b9\u6cd5\n\n\n\u51fd\u6570\u7684\u4f20\u51fa\u53c2\u6570\u5b9e\u73b0\u63a5\u53e3\n\n\n\n\n\u5e38\u7528\u4e8e\u5b9e\u4f8b\u5316\uff0c\u5982New\u4e00\u4e2astruct\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nSumer\n \ninterface\n \n{\n\n    \nSum\n()\n \nint\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nMyStruct\n)\n \nSum\n()\n \nint\n \n{\n\n    \nreturn\n \nthis\n.\nX\n \n+\n \nthis\n.\nY\n\n\n}\n\n\n\nfunc\n \nNew\n(\na\n,\n \nb\n \nint\n)\n \nSumer\n \n{\n\n\n    \nreturn\n \nMyStruct\n{\na\n,\n \nb\n}\n\n\n}\n\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nm\n \n:=\n \nNew\n(\n3\n,\n \n4\n)\n\n    \ns\n \n:=\n \nm\n.\nSum\n()\n\n    \nfmt\n.\nPrintln\n(\ns\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n7\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u56e0\u4e3a*MyStruct\u5b9e\u73b0\u4e86Sum\u65b9\u6cd5\uff0c\u56e0\u6b64\nMyStruct\u5b9e\u73b0\u4e86Sumer\u63a5\u53e3\n\n\n\u7a7a\u63a5\u53e3\u4e5f\u53ef\u7528\u4e8e\u4f20\u5165\u548c\u4f20\u51fa\u53c2\u6570\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nReader\n \ninterface\n \n{\n\n    \nRead\n()\n \nint\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nm\n \n*\nMyStruct\n)\n \nRead\n()\n \nint\n \n{\n\n    \nreturn\n \nm\n.\nX\n \n+\n \nm\n.\nY\n\n\n}\n\n\n\nfunc\n \nrun\n(\nr\n \ninterface\n{})\n \n{\n\n\n    \n// \u4f1a\u62a5\u9519\n\n\n    \n//fmt.Println(r.Read())\n\n\n    \nfmt\n.\nPrintln\n(\nr\n)\n\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nr\n)\n\n\n}\n\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \nrun\n(\ns\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n{3 4}\n*main.MyStruct\n\n\n\n\n\u5982\u679c\u628a\u4e0a\u9762\u4f8b\u5b50\u4e2d\u6ce8\u91ca\u53bb\u6389\uff0c\u5219\u4f1a\u62a5\u9519\n\n\n./example.go:19: r.Read undefined (type interface {} is interface with no methods)\n\n\n\n\n\u51fd\u6570\u4f20\u51fa\u53c2\u6570\u5e38\u89c1\u76843\u79cd\u5f62\u5f0f\n\n\n\n\nfunc\n \nfoo\n(\na\n,\n \nb\n \nint\n)\n \nSumElementer\n \n{\n\n    \nreturn\n \nMyStruct\n{\na\n,\n \nb\n}\n\n\n}\n\n\n\n\n\nfunc\n \nfoo\n(\na\n,\n \nb\n \nint\n)\n \ninterface\n{}\n \n{\n\n    \nreturn\n \nMyStruct\n{\na\n,\n \nb\n}\n\n\n}\n\n\n\n\n\nfunc\n \nfoo\n(\na\n,\n \nb\n \nint\n)\n \n*\nMyStruct\n \n{\n\n    \nreturn\n \nMyStruct\n{\na\n,\n \nb\n}\n\n\n}", 
            "title": "3.14. \u51fd\u6570\u7684\u4f20\u5165\u4f20\u51fa\u53c2\u6570\u6765\u5b9e\u73b0\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_argv_interface/#_1", 
            "text": "package   main  import   fmt  type   Reader   interface   { \n     Read ()   int  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( m   * MyStruct )   Read ()   int   { \n     return   m . X   +   m . Y  }  func   run ( r   Reader )   {       fmt . Println ( r . Read ())  }   func   main ()   { \n     s   :=   MyStruct { 3 ,   4 } \n     run ( s )  }   \u8f93\u51fa  7  \u53ef\u4ee5\u770b\u51fa\uff0c\u56e0\u4e3a*MyStruct\u5b9e\u73b0\u4e86Read\u65b9\u6cd5\uff0c\u56e0\u6b64 MyStruct\u5b9e\u73b0\u4e86Reader\u63a5\u53e3\uff0c\u6240\u4ee5\u628a*MyStruct\u4f5c\u4e3a\u53c2\u6570\u8c03\u7528run\u65f6\u5019\uff0c MyStruct{3, 4}\u5c31\u81ea\u52a8\u5b9e\u73b0\u4e86Reader\u63a5\u53e3\uff0c\u56e0\u6b64run\u91cc\u53ef\u4ee5\u7528r.Read()\u6765\u8c03\u7528\u63a5\u53e3\u7684\u65b9\u6cd5", 
            "title": "\u51fd\u6570\u7684\u4f20\u5165\u53c2\u6570\u5b9e\u73b0\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_argv_interface/#_2", 
            "text": "\u5e38\u7528\u4e8e\u5b9e\u4f8b\u5316\uff0c\u5982New\u4e00\u4e2astruct  package   main  import   fmt  type   Sumer   interface   { \n     Sum ()   int  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( this   * MyStruct )   Sum ()   int   { \n     return   this . X   +   this . Y  }  func   New ( a ,   b   int )   Sumer   {       return   MyStruct { a ,   b }  }   func   main ()   { \n     m   :=   New ( 3 ,   4 ) \n     s   :=   m . Sum () \n     fmt . Println ( s )  }   \u8f93\u51fa  7  \u53ef\u4ee5\u770b\u51fa\uff0c\u56e0\u4e3a*MyStruct\u5b9e\u73b0\u4e86Sum\u65b9\u6cd5\uff0c\u56e0\u6b64 MyStruct\u5b9e\u73b0\u4e86Sumer\u63a5\u53e3", 
            "title": "\u51fd\u6570\u7684\u4f20\u51fa\u53c2\u6570\u5b9e\u73b0\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_argv_interface/#_3", 
            "text": "package   main  import   fmt  type   Reader   interface   { \n     Read ()   int  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( m   * MyStruct )   Read ()   int   { \n     return   m . X   +   m . Y  }  func   run ( r   interface {})   {       // \u4f1a\u62a5\u9519       //fmt.Println(r.Read())       fmt . Println ( r )       fmt . Printf ( %T\\n ,   r )  }   func   main ()   { \n     s   :=   MyStruct { 3 ,   4 } \n     run ( s )  }   \u8f93\u51fa  {3 4}\n*main.MyStruct  \u5982\u679c\u628a\u4e0a\u9762\u4f8b\u5b50\u4e2d\u6ce8\u91ca\u53bb\u6389\uff0c\u5219\u4f1a\u62a5\u9519  ./example.go:19: r.Read undefined (type interface {} is interface with no methods)", 
            "title": "\u7a7a\u63a5\u53e3\u4e5f\u53ef\u7528\u4e8e\u4f20\u5165\u548c\u4f20\u51fa\u53c2\u6570"
        }, 
        {
            "location": "/method/interface_argv_interface/#3", 
            "text": "func   foo ( a ,   b   int )   SumElementer   { \n     return   MyStruct { a ,   b }  }   func   foo ( a ,   b   int )   interface {}   { \n     return   MyStruct { a ,   b }  }   func   foo ( a ,   b   int )   * MyStruct   { \n     return   MyStruct { a ,   b }  }", 
            "title": "\u51fd\u6570\u4f20\u51fa\u53c2\u6570\u5e38\u89c1\u76843\u79cd\u5f62\u5f0f"
        }, 
        {
            "location": "/method/interface_implement_interface/", 
            "text": "\u8d4b\u503c\u5b9e\u73b0\u63a5\u53e3(\u4f20\u7edf)\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n()\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \nMyStruct\n)\n \nAdd\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nthis\n.\nX\n \n+\n \nthis\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni\n \nAdder\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n\n    \ni\n \n=\n \ns\n\n\n    \nfmt\n.\nPrintf\n(\ns: %T %v\\n\n,\n \ns\n,\n \ns\n)\n\n    \nfmt\n.\nPrintf\n(\ni: %T %v\\n\n,\n \ni\n,\n \ni\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\ns: main.MyStruct {3 4}\ni: main.MyStruct {3 4}\n\n\n\n\n\u51fd\u6570\u4f20\u5165\u53c2\u6570\u5b9e\u73b0\u63a5\u53e3\n\n\n\n\n\u8be6\u89c1\u51fd\u6570\u7684\u4f20\u5165\u53c2\u6570\u5b9e\u73b0\u63a5\u53e3\n\n\n\u51fd\u6570\u4f20\u51fa\u53c2\u6570\u5b9e\u73b0\u63a5\u53e3\n\n\n\n\n\u8be6\u89c1\u51fd\u6570\u7684\u4f20\u51fa\u53c2\u6570\u5b9e\u73b0\u63a5\u53e3\n\n\n\u7c7b\u578b\u8f6c\u6362\u5b9e\u73b0\u63a5\u53e3\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nSumer\n \ninterface\n \n{\n\n    \nSum\n()\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nm\n \n*\nMyStruct\n)\n \nSum\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nm\n.\nX\n \n+\n \nm\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n\n    \nvar\n \ni\n \n=\n \nSumer\n(\ns\n)\n\n\n    \ni\n.\nSum\n()\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n7\n\n\n\n\n\n\nWarning\n\n\n\u8fd4\u56de\u7c7b\u578b\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u63a5\u53e3\uff0c\u4f46\u5728\u5185\u90e8\u5e76\u4e0d\u7b49\u4e8e\u7c7b\u578b\u8f6c\u6362\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nSumer\n \ninterface\n \n{\n\n    \nSum\n()\n\n\n}\n\n\n\ntype\n \nFooer\n \ninterface\n \n{\n\n    \nFoo\n()\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nm\n \n*\nMyStruct\n)\n \nSum\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nm\n.\nX\n \n+\n \nm\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \nrun\n(\nm\n \n*\nMyStruct\n)\n \nSumer\n \n{\n\n    \nreturn\n \nm\n\n\n}\n\n\n\nfunc\n \nrun1\n(\nm\n \n*\nMyStruct\n)\n \nFooer\n \n{\n\n    \nreturn\n \nm\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \nres\n \n:=\n \nrun\n(\ns\n)\n\n    \nres\n.\nSum\n()\n\n\n    \ns1\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \nvar\n \ni1\n \nSumer\n \n=\n \ns1\n\n    \ni1\n.\nSum\n()\n\n\n    \ns2\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \nvar\n \ni2\n \n=\n \nSumer\n(\ns2\n)\n\n    \ni2\n.\nSum\n()\n\n\n    \ns3\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \nres3\n \n:=\n \nrun1\n(\ns3\n)\n\n    \nres3\n.\nSum\n()\n\n\n}\n\n\n\n\n\n\u62a5\u9519\uff1a\n\n\n./example.go:26: cannot use m (type *MyStruct) as type Fooer in return argument:\n    *MyStruct does not implement Fooer (missing Foo method)\n./example.go:44: res3.Sum undefined (type Fooer has no field or method Sum)\n\n\n\n\n\u9644\u7c7b\u578b\u8f6c\u6362\u7684\u62a5\u9519\uff1a\n\n./test.go:39: cannot convert s3 (type *MyStruct) to type Fooer:\n*MyStruct does not implement Fooer (missing Foo method)\n\n\n\n\u6bd4\u8f83\u4e0a\u97622\u4e2a\u9519\u8bef\u53ef\u4ee5\u53d1\u73b0\u62a5\u9519\u5185\u5bb9\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u867d\u7136\u7b2c\u4e8c\u884c\u7684\u63d0\u793a\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u6ca1\u6709\u5b9e\u73b0\uff0c\u5e76\u4e14\u62ec\u53f7\u91cc\u8bf4\u660e\u4e86\u6ca1\u6709\u5b9e\u73b0\u7684\u539f\u56e0\uff0c\u4f46\u7b2c\u4e00\u884c\u7684\u524d\u8005\u662f\u63d0\u793a\u7c7b\u578b\u4e0d\u5bf9\uff0c\u540e\u8005\u662f\u4e0d\u80fd\u8f6c\u6362\u3002\u8fd9\u8bf4\u660e\u4e86\u8fd4\u56de\u7c7b\u578b\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u63a5\u53e3\uff0c\u4f46\u5728\u5185\u90e8\u5e76\u4e0d\u7b49\u4e8e\u7c7b\u578b\u8f6c\u6362\n\n\n\n\n\u7c7b\u578b\u65ad\u8a00\u5b9e\u73b0\u63a5\u53e3\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n()\n\n\n}\n\n\n\ntype\n \nSuber\n \ninterface\n \n{\n\n    \nSub\n()\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \nMyStruct\n)\n \nAdd\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nthis\n.\nX\n \n+\n \nthis\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \nMyStruct\n)\n \nSub\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nthis\n.\nX\n \n-\n \nthis\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni1\n \nAdder\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \ni1\n \n=\n \ns\n\n    \nfmt\n.\nPrintf\n(\ns:\\t%T %v\\n\n,\n \ns\n,\n \ns\n)\n\n    \nfmt\n.\nPrintf\n(\ni1:\\t%T %v\\n\n,\n \ni1\n,\n \ni1\n)\n\n\n\n    \ni2\n \n:=\n \ni1\n.(\nSuber\n)\n\n\n    \nfmt\n.\nPrintf\n(\ni2:\\t%T %v\\n\n,\n \ni2\n,\n \ni2\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\ns:  main.MyStruct {3 4}\ni1: main.MyStruct {3 4}\ni2: main.MyStruct {3 4}\n\n\n\n\n\u6ce8\u610f\uff1a\u7c7b\u578b\u65ad\u8a00\u53ea\u80fd\u7528\u4e8e\u63a5\u53e3\u53d8\u91cf\uff0c\n\u975e\u63a5\u53e3\u53d8\u91cf.(interface{})\n\u662f\u4e0d\u884c\u7684\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \na\n \nint\n \n=\n \n10\n\n\n    \nb\n,\n \nok\n \n:=\n \na\n.(\ninterface\n{})\n\n\n    \nfmt\n.\nPrintln\n(\nb\n,\n \nok\n)\n\n\n}\n\n\n\n\n\n\u62a5\u9519\n\n\n./example.go:7: invalid type assertion: a.(\ninter\n) (non-interface type int on left)\n\n\n\n\n\u7c7b\u578b\u5224\u65ad\u5b9e\u73b0\u63a5\u53e3\n\n\n\n\n\u8be6\u89c1\ntype switch\u7ae0\u8282", 
            "title": "3.15. \u5b9e\u73b0\u63a5\u53e3\u7684\u591a\u79cd\u65b9\u6cd5\u6c47\u96c6"
        }, 
        {
            "location": "/method/interface_implement_interface/#_1", 
            "text": "package   main  import   fmt  type   Adder   interface   { \n     Add ()  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( this   MyStruct )   Add ()   { \n     fmt . Println ( this . X   +   this . Y )  }  func   main ()   { \n     var   i   Adder \n     s   :=   MyStruct { 3 ,   4 }       i   =   s       fmt . Printf ( s: %T %v\\n ,   s ,   s ) \n     fmt . Printf ( i: %T %v\\n ,   i ,   i )  }   \u8f93\u51fa  s: main.MyStruct {3 4}\ni: main.MyStruct {3 4}", 
            "title": "\u8d4b\u503c\u5b9e\u73b0\u63a5\u53e3(\u4f20\u7edf)"
        }, 
        {
            "location": "/method/interface_implement_interface/#_2", 
            "text": "\u8be6\u89c1\u51fd\u6570\u7684\u4f20\u5165\u53c2\u6570\u5b9e\u73b0\u63a5\u53e3", 
            "title": "\u51fd\u6570\u4f20\u5165\u53c2\u6570\u5b9e\u73b0\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_implement_interface/#_3", 
            "text": "\u8be6\u89c1\u51fd\u6570\u7684\u4f20\u51fa\u53c2\u6570\u5b9e\u73b0\u63a5\u53e3", 
            "title": "\u51fd\u6570\u4f20\u51fa\u53c2\u6570\u5b9e\u73b0\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_implement_interface/#_4", 
            "text": "package   main  import   fmt  type   Sumer   interface   { \n     Sum ()  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( m   * MyStruct )   Sum ()   { \n     fmt . Println ( m . X   +   m . Y )  }  func   main ()   { \n     s   :=   MyStruct { 3 ,   4 }       var   i   =   Sumer ( s )       i . Sum ()  }   \u8f93\u51fa  7   Warning  \u8fd4\u56de\u7c7b\u578b\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u63a5\u53e3\uff0c\u4f46\u5728\u5185\u90e8\u5e76\u4e0d\u7b49\u4e8e\u7c7b\u578b\u8f6c\u6362\uff1a  package   main  import   fmt  type   Sumer   interface   { \n     Sum ()  }  type   Fooer   interface   { \n     Foo ()  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( m   * MyStruct )   Sum ()   { \n     fmt . Println ( m . X   +   m . Y )  }  func   run ( m   * MyStruct )   Sumer   { \n     return   m  }  func   run1 ( m   * MyStruct )   Fooer   { \n     return   m  }  func   main ()   { \n     s   :=   MyStruct { 3 ,   4 } \n     res   :=   run ( s ) \n     res . Sum () \n\n     s1   :=   MyStruct { 3 ,   4 } \n     var   i1   Sumer   =   s1 \n     i1 . Sum () \n\n     s2   :=   MyStruct { 3 ,   4 } \n     var   i2   =   Sumer ( s2 ) \n     i2 . Sum () \n\n     s3   :=   MyStruct { 3 ,   4 } \n     res3   :=   run1 ( s3 ) \n     res3 . Sum ()  }   \u62a5\u9519\uff1a  ./example.go:26: cannot use m (type *MyStruct) as type Fooer in return argument:\n    *MyStruct does not implement Fooer (missing Foo method)\n./example.go:44: res3.Sum undefined (type Fooer has no field or method Sum)  \u9644\u7c7b\u578b\u8f6c\u6362\u7684\u62a5\u9519\uff1a ./test.go:39: cannot convert s3 (type *MyStruct) to type Fooer:\n*MyStruct does not implement Fooer (missing Foo method)  \u6bd4\u8f83\u4e0a\u97622\u4e2a\u9519\u8bef\u53ef\u4ee5\u53d1\u73b0\u62a5\u9519\u5185\u5bb9\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u867d\u7136\u7b2c\u4e8c\u884c\u7684\u63d0\u793a\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u6ca1\u6709\u5b9e\u73b0\uff0c\u5e76\u4e14\u62ec\u53f7\u91cc\u8bf4\u660e\u4e86\u6ca1\u6709\u5b9e\u73b0\u7684\u539f\u56e0\uff0c\u4f46\u7b2c\u4e00\u884c\u7684\u524d\u8005\u662f\u63d0\u793a\u7c7b\u578b\u4e0d\u5bf9\uff0c\u540e\u8005\u662f\u4e0d\u80fd\u8f6c\u6362\u3002\u8fd9\u8bf4\u660e\u4e86\u8fd4\u56de\u7c7b\u578b\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u63a5\u53e3\uff0c\u4f46\u5728\u5185\u90e8\u5e76\u4e0d\u7b49\u4e8e\u7c7b\u578b\u8f6c\u6362", 
            "title": "\u7c7b\u578b\u8f6c\u6362\u5b9e\u73b0\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_implement_interface/#_5", 
            "text": "package   main  import   fmt  type   Adder   interface   { \n     Add ()  }  type   Suber   interface   { \n     Sub ()  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( this   MyStruct )   Add ()   { \n     fmt . Println ( this . X   +   this . Y )  }  func   ( this   MyStruct )   Sub ()   { \n     fmt . Println ( this . X   -   this . Y )  }  func   main ()   { \n     var   i1   Adder \n     s   :=   MyStruct { 3 ,   4 } \n     i1   =   s \n     fmt . Printf ( s:\\t%T %v\\n ,   s ,   s ) \n     fmt . Printf ( i1:\\t%T %v\\n ,   i1 ,   i1 )       i2   :=   i1 .( Suber )       fmt . Printf ( i2:\\t%T %v\\n ,   i2 ,   i2 )  }   \u8f93\u51fa  s:  main.MyStruct {3 4}\ni1: main.MyStruct {3 4}\ni2: main.MyStruct {3 4}  \u6ce8\u610f\uff1a\u7c7b\u578b\u65ad\u8a00\u53ea\u80fd\u7528\u4e8e\u63a5\u53e3\u53d8\u91cf\uff0c \u975e\u63a5\u53e3\u53d8\u91cf.(interface{}) \u662f\u4e0d\u884c\u7684  package   main  import   fmt  func   main ()   { \n     var   a   int   =   10       b ,   ok   :=   a .( interface {})       fmt . Println ( b ,   ok )  }   \u62a5\u9519  ./example.go:7: invalid type assertion: a.( inter ) (non-interface type int on left)", 
            "title": "\u7c7b\u578b\u65ad\u8a00\u5b9e\u73b0\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_implement_interface/#_6", 
            "text": "\u8be6\u89c1 type switch\u7ae0\u8282", 
            "title": "\u7c7b\u578b\u5224\u65ad\u5b9e\u73b0\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_error/", 
            "text": "error\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ntime\n\n\n)\n\n\n\ntype\n \nMyError\n \nstruct\n \n{\n\n    \nWhen\n \ntime\n.\nTime\n\n    \nWhat\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\ne\n \n*\nMyError\n)\n \nError\n()\n \nstring\n \n{\n\n    \nreturn\n \nfmt\n.\nSprintf\n(\nat %v, %s\n,\n\n        \ne\n.\nWhen\n,\n \ne\n.\nWhat\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nm\n \n:=\n \nMyError\n{\ntime\n.\nNow\n(),\n \nit didn\nt work\n}\n\n\n    \nvar\n \nerr\n \nerror\n\n    \nerr\n \n=\n \nm\n\n    \nfmt\n.\nPrintln\n(\nerr\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nat 2017-07-20 23:29:25.612912934 +0800 CST, it didn\nt work\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\uff0cerror\u548cstringer\u529f\u80fd\u76f8\u4f3c\n\n\nString()\u548cError()\u8c01\u4f18\u5148\n\n\n\n\n\u5f53String()\u548cError()\u540c\u65f6\u5b58\u5728\u7684\u65f6\u5019\uff0cError()\u4f18\u5148\uff0c\u4f8b\u5982\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\ns\n \n*\nMyStruct\n)\n \nString\n()\n \nstring\n \n{\n\n    \nreturn\n \nfmt\n.\nSprintf\n(\nString-X: %v, Y: %v\n,\n \ns\n.\nX\n,\n \ns\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \n(\ns\n \n*\nMyStruct\n)\n \nError\n()\n \nstring\n \n{\n\n    \nreturn\n \nfmt\n.\nSprintf\n(\nError-X: %v, Y: %v\n,\n \ns\n.\nX\n,\n \ns\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns1\n \n:=\n \nMyStruct\n{\n1\n,\n \n2\n}\n\n    \nfmt\n.\nPrintln\n(\ns1\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nError-X: 1, Y: 2\n\n\n\n\n\u5e76\u4e0d\u662f\u56e0\u4e3aError()\u5728\u4ee3\u7801\u4e2d\u7684\u4f4d\u7f6e\u9760\u4e0b\u6240\u4ee5\u4f18\u5148\uff0c\u82e5\u628a\u4e0a\u9762String()\u548cError()\u5bf9\u8c03\uff0c\u8f93\u51fa\u4f9d\u7136\u662fError\n\n\n\u4e3a\u4ec0\u4e48\u8981\u7528error\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ntime\n\n\n)\n\n\n\ntype\n \nMyError\n \nstruct\n \n{\n\n    \nWhen\n \ntime\n.\nTime\n\n    \nWhat\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\ne\n \n*\nMyError\n)\n \nError\n()\n \nstring\n \n{\n\n    \nreturn\n \nfmt\n.\nSprintf\n(\nat %v, %s\n,\n\n        \ne\n.\nWhen\n,\n \ne\n.\nWhat\n)\n\n\n}\n\n\n\n/*\n\n\nfunc run() error {\n\n\n    return \nMyError{\n\n\n        time.Now(),\n\n\n        \nit didn\nt work\n,\n\n\n    }\n\n\n}\n\n\n*/\n\n\n\n/*\n\n\nfunc run() *MyError {\n\n\n    return \nMyError{\n\n\n        time.Now(),\n\n\n        \nit didn\nt work\n,\n\n\n    }\n\n\n}\n\n\n*/\n\n\n\n/*\n\n\nfunc run() interface{} {\n\n\n    return \nMyError{\n\n\n        time.Now(),\n\n\n        \nit didn\nt work\n,\n\n\n    }\n\n\n}\n\n\n*/\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nif\n \nerr\n \n:=\n \nrun\n();\n \nerr\n \n!=\n \nnil\n \n{\n\n        \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nerr\n)\n\n        \nfmt\n.\nPrintln\n(\nerr\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u4e0a\u97623\u4e2arun()\u4efb\u610f\u53d6\u6d88\u4e00\u4e2a\u6ce8\u91ca\uff0c\u90fd\u80fd\u8f93\u51fa\uff0c\u5e76\u4e14\u8f93\u51fa\u90fd\u662f\uff1a\n\n\n*main.MyError\nat 2017-07-25 22:45:27.476615537 +0800 CST, it didn\nt work\n\n\n\n\n\u95ee\u9898\uff1a\u65e2\u71363\u4e2arun()\u90fd\u80fd\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u7528error\uff0c\u800c\u4e0d\u662f\u53e6\u59162\u4e2a\uff1f\n\n\n\u7b54\uff1a\u7528\u54ea\u4e2a\u90fd\u53ef\u4ee5\uff0c\u4f46\u65e2\u7136\u6709error\uff0c\u5c31\u7528error\u5427\uff0c\u7b26\u5408\u4e60\u60ef\uff0c\u4e5f\u4e3a\u4e86\u8ba9\u522b\u4eba\u66f4\u5bb9\u6613\u770b\u61c2\n\n\n\u56e0\u4e3a\u8fd93\u4e2a\u7528\u54ea\u4e2a\u90fd\u662f\u4e00\u6a21\u4e00\u6837\u7684\uff0c\u4e0d\u4ec5\u6700\u7ec8\u8f93\u51fa\u4e00\u6837\uff0c\u5e95\u5c42\u5904\u7406\u903b\u8f91\u4e5f\u662f\u5b8c\u5168\u4e00\u6837\uff0c\u56e0\u4e3afmt\u91cc\u6709\u4e00\u6bb5\uff1a\n\n\nswitch\n \nverb\n \n{\n\n\ncase\n \nv\n,\n \ns\n,\n \nx\n,\n \nX\n,\n \nq\n:\n\n    \n// Is it an error or Stringer?\n\n    \n// The duplication in the bodies is necessary:\n\n    \n// setting handled and deferring catchPanic\n\n    \n// must happen before calling the method.\n\n    \nswitch\n \nv\n \n:=\n \np\n.\narg\n.(\ntype\n)\n \n{\n\n    \ncase\n \nerror\n:\n\n        \nhandled\n \n=\n \ntrue\n\n        \ndefer\n \np\n.\ncatchPanic\n(\np\n.\narg\n,\n \nverb\n)\n\n        \np\n.\nfmtString\n(\nv\n.\nError\n(),\n \nverb\n)\n\n        \nreturn\n\n\n    \ncase\n \nStringer\n:\n\n        \nhandled\n \n=\n \ntrue\n\n        \ndefer\n \np\n.\ncatchPanic\n(\np\n.\narg\n,\n \nverb\n)\n\n        \np\n.\nfmtString\n(\nv\n.\nString\n(),\n \nverb\n)\n\n        \nreturn\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8bf4\u660e\u4f1a\u5148\u5224\u65ad\u4e0b\u662f\u5426\u5b9e\u73b0\u4e86error\u63a5\u53e3\uff0c\u5373\u662f\u5426\u6709Error()\u65b9\u6cd5\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff0c\u5c31\u6253\u5370Error()\u3002\u800c\u6839\u636e\u63a5\u53e3\u7684pair\u539f\u7406\uff0c\u65e0\u8bba\u662finterface{}\u3001struct\u3001\u8fd8\u662f\u5b9e\u73b0error\u63a5\u53e3\uff0c\u6700\u7ec8\u90fd\u4f1a\u5728fmt\u91cc\u518d\u5b9e\u73b0\u4e00\u6b21error\u63a5\u53e3\uff0c\u800c\u4e0a\u9762\u4f8b\u5b50\u4e2d3\u79cd\u60c5\u51b5\u5747\u5b9e\u73b0error\u63a5\u53e3\uff0c\u6240\u4ee5\u5b8c\u5168\u4e00\u6837\uff0c\u6ca1\u6709\u4efb\u4f55\u533a\u522b", 
            "title": "3.16. error"
        }, 
        {
            "location": "/method/interface_error/#error", 
            "text": "package   main  import   ( \n     fmt \n     time  )  type   MyError   struct   { \n     When   time . Time \n     What   string  }  func   ( e   * MyError )   Error ()   string   { \n     return   fmt . Sprintf ( at %v, %s , \n         e . When ,   e . What )  }  func   main ()   { \n     m   :=   MyError { time . Now (),   it didn t work } \n\n     var   err   error \n     err   =   m \n     fmt . Println ( err )  }   \u8f93\u51fa  at 2017-07-20 23:29:25.612912934 +0800 CST, it didn t work  \u53ef\u4ee5\u770b\u51fa\uff0cerror\u548cstringer\u529f\u80fd\u76f8\u4f3c", 
            "title": "error"
        }, 
        {
            "location": "/method/interface_error/#stringerror", 
            "text": "\u5f53String()\u548cError()\u540c\u65f6\u5b58\u5728\u7684\u65f6\u5019\uff0cError()\u4f18\u5148\uff0c\u4f8b\u5982\uff1a  package   main  import   fmt  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( s   * MyStruct )   String ()   string   { \n     return   fmt . Sprintf ( String-X: %v, Y: %v ,   s . X ,   s . Y )  }  func   ( s   * MyStruct )   Error ()   string   { \n     return   fmt . Sprintf ( Error-X: %v, Y: %v ,   s . X ,   s . Y )  }  func   main ()   { \n     s1   :=   MyStruct { 1 ,   2 } \n     fmt . Println ( s1 )  }   \u8f93\u51fa  Error-X: 1, Y: 2  \u5e76\u4e0d\u662f\u56e0\u4e3aError()\u5728\u4ee3\u7801\u4e2d\u7684\u4f4d\u7f6e\u9760\u4e0b\u6240\u4ee5\u4f18\u5148\uff0c\u82e5\u628a\u4e0a\u9762String()\u548cError()\u5bf9\u8c03\uff0c\u8f93\u51fa\u4f9d\u7136\u662fError", 
            "title": "String()\u548cError()\u8c01\u4f18\u5148"
        }, 
        {
            "location": "/method/interface_error/#error_1", 
            "text": "package   main  import   ( \n     fmt \n     time  )  type   MyError   struct   { \n     When   time . Time \n     What   string  }  func   ( e   * MyError )   Error ()   string   { \n     return   fmt . Sprintf ( at %v, %s , \n         e . When ,   e . What )  }  /*  func run() error {      return  MyError{          time.Now(),           it didn t work ,      }  }  */  /*  func run() *MyError {      return  MyError{          time.Now(),           it didn t work ,      }  }  */  /*  func run() interface{} {      return  MyError{          time.Now(),           it didn t work ,      }  }  */  func   main ()   { \n     if   err   :=   run ();   err   !=   nil   { \n         fmt . Printf ( %T\\n ,   err ) \n         fmt . Println ( err ) \n     }  }   \u4e0a\u97623\u4e2arun()\u4efb\u610f\u53d6\u6d88\u4e00\u4e2a\u6ce8\u91ca\uff0c\u90fd\u80fd\u8f93\u51fa\uff0c\u5e76\u4e14\u8f93\u51fa\u90fd\u662f\uff1a  *main.MyError\nat 2017-07-25 22:45:27.476615537 +0800 CST, it didn t work  \u95ee\u9898\uff1a\u65e2\u71363\u4e2arun()\u90fd\u80fd\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u7528error\uff0c\u800c\u4e0d\u662f\u53e6\u59162\u4e2a\uff1f  \u7b54\uff1a\u7528\u54ea\u4e2a\u90fd\u53ef\u4ee5\uff0c\u4f46\u65e2\u7136\u6709error\uff0c\u5c31\u7528error\u5427\uff0c\u7b26\u5408\u4e60\u60ef\uff0c\u4e5f\u4e3a\u4e86\u8ba9\u522b\u4eba\u66f4\u5bb9\u6613\u770b\u61c2  \u56e0\u4e3a\u8fd93\u4e2a\u7528\u54ea\u4e2a\u90fd\u662f\u4e00\u6a21\u4e00\u6837\u7684\uff0c\u4e0d\u4ec5\u6700\u7ec8\u8f93\u51fa\u4e00\u6837\uff0c\u5e95\u5c42\u5904\u7406\u903b\u8f91\u4e5f\u662f\u5b8c\u5168\u4e00\u6837\uff0c\u56e0\u4e3afmt\u91cc\u6709\u4e00\u6bb5\uff1a  switch   verb   {  case   v ,   s ,   x ,   X ,   q : \n     // Is it an error or Stringer? \n     // The duplication in the bodies is necessary: \n     // setting handled and deferring catchPanic \n     // must happen before calling the method. \n     switch   v   :=   p . arg .( type )   { \n     case   error : \n         handled   =   true \n         defer   p . catchPanic ( p . arg ,   verb ) \n         p . fmtString ( v . Error (),   verb ) \n         return \n\n     case   Stringer : \n         handled   =   true \n         defer   p . catchPanic ( p . arg ,   verb ) \n         p . fmtString ( v . String (),   verb ) \n         return \n     }  }   \u8bf4\u660e\u4f1a\u5148\u5224\u65ad\u4e0b\u662f\u5426\u5b9e\u73b0\u4e86error\u63a5\u53e3\uff0c\u5373\u662f\u5426\u6709Error()\u65b9\u6cd5\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff0c\u5c31\u6253\u5370Error()\u3002\u800c\u6839\u636e\u63a5\u53e3\u7684pair\u539f\u7406\uff0c\u65e0\u8bba\u662finterface{}\u3001struct\u3001\u8fd8\u662f\u5b9e\u73b0error\u63a5\u53e3\uff0c\u6700\u7ec8\u90fd\u4f1a\u5728fmt\u91cc\u518d\u5b9e\u73b0\u4e00\u6b21error\u63a5\u53e3\uff0c\u800c\u4e0a\u9762\u4f8b\u5b50\u4e2d3\u79cd\u60c5\u51b5\u5747\u5b9e\u73b0error\u63a5\u53e3\uff0c\u6240\u4ee5\u5b8c\u5168\u4e00\u6837\uff0c\u6ca1\u6709\u4efb\u4f55\u533a\u522b", 
            "title": "\u4e3a\u4ec0\u4e48\u8981\u7528error"
        }, 
        {
            "location": "/method/interface_struct_element/", 
            "text": "struct\u91cc\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u63a5\u53e3\u7c7b\u578b\uff0c\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nReader\n \ninterface\n \n{\n\n    \nRead\n()\n \nint\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n \nReader\n\n    \nY\n \nint\n\n\n}\n\n\n\ntype\n \nFoo\n \nstruct\n \n{\n\n    \na\n,\n \nb\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nf\n \n*\nFoo\n)\n \nRead\n()\n \nint\n \n{\n\n    \nreturn\n \nf\n.\na\n \n+\n \nf\n.\nb\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nms\n \n:=\n \nMyStruct\n{}\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nms\n,\n \nms\n)\n\n\n    \nms\n.\nY\n \n=\n \n3\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nms\n,\n \nms\n)\n\n\n    \nms\n.\nX\n \n=\n \nFoo\n{\n8\n,\n \n9\n}\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nms\n,\n \nms\n)\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nms\n.\nX\n,\n \nms\n.\nX\n)\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nms\n.\nX\n.\nRead\n(),\n \nms\n.\nX\n.\nRead\n())\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n*main.MyStruct \n{\nnil\n 0}\n*main.MyStruct \n{\nnil\n 3}\n*main.MyStruct \n{0xc42000e290 3}\n*main.Foo \n{8 9}\nint 17", 
            "title": "3.17. \u63a5\u53e3\u4f5c\u4e3astruct\u7684\u5143\u7d20"
        }, 
        {
            "location": "/method/interface_deep/", 
            "text": "\u672f\u8bed\n\n\n\n\n\u4ee5\u4e0b\u662f\u5173\u4e8e\u63a5\u53e3\u8d4b\u503c\u7684\u672f\u8bed\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n()\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nMyStruct\n)\n \nAdd\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nthis\n.\nX\n \n+\n \nthis\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni\n \nAdder\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n\n    \ni\n \n=\n \ns\n\n\n    \ni\n.\nAdd\n()\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n7\n\n\n\n\n\u4e0a\u9762\ni = s\n\u53ef\u4ee5\u75283\u4e2a\u7ef4\u5ea6\u6765\u9610\u8ff0\uff1a\n\n\n\n\n\n\nassignment\uff1a\u8d4b\u503c\uff0c\u5c06s\u8d4b\u503c\u7ed9i\n\n\n\n\n\n\nhold\uff1a\u5b58\u50a8\u7684\u503c\uff0c\u53d8\u91cfi hold s\u8868\u793ai\u5b58\u50a8\u7684\u503c\u662fs\n\n\n\n\n\n\nitem inside\uff1a\u548chold\u4e00\u6837\u7684\u610f\u601d\uff08\u53ea\u4e0d\u8fc7\u4e3b\u8c13\u76f8\u53cd\u800c\u5df2\uff09\u6bd4\u5982item inside i\u4e2ditem\u8868\u793as\uff0c\u56e0\u6b64\u53ef\u4ee5\u7406\u89e3\u4e3as inside i\uff0c\u5373i\u5305\u542b\u4e86s\n\n\n\n\n\n\n\n\nNote\n\n\n\u8fd93\u4e2a\u7ef4\u5ea6\u7684\u610f\u601d\u5176\u5b9e\u662f\u4e00\u6837\u7684\uff0c\u5728\u5b98\u65b9\u6587\u6863\u4e2d\u53ef\u4ee5\u770b\u5230\u4ea4\u66ff\u51fa\u73b0\n\n\n\n\n\u53e6\u5916\u8fd8\u6709\u4e2a\u5355\u8bcdimplement\uff1a\u5b9e\u73b0\uff0c\u7531\u4e8e*MyStruct\u62e5\u6709\u65b9\u6cd5Add()\uff0c\u56e0\u6b64*MyStruct implement Adder\u63a5\u53e3\uff08*MyStruct\u5b9e\u73b0\u4e86Adder\u63a5\u53e3\uff09\n\n\n\u63a5\u53e3\u7c7b\u578b\n\n\n\n\n\u63a5\u53e3\u7c7b\u578b\u662f\u5341\u5206\u91cd\u8981\u7684\u7c7b\u578b\uff0c\u63a5\u53e3\u53d8\u91cf\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7684\u5177\u4f53\uff08\u9664\u4e86\u63a5\u53e3\uff09\u503c\uff0c\u53ea\u8981\u8be5\u503c\u5b9e\u73b0\u4e86\u63a5\u53e3\u7684\u65b9\u6cd5\n\n\n\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u63a5\u53e3\u7c7b\u578b\u53eb\u505aempty interface\uff0c\u5373\u7a7a\u63a5\u53e3\uff1ainterface{}\n\n\n\u6709\u7684\u4eba\u8ba4\u4e3ago\u63a5\u53e3\u662f\u52a8\u6001\u7c7b\u578b\uff0c\u8fd9\u662f\u9519\u8bef\u7684\uff0cgo\u63a5\u53e3\u4e5f\u662f\u9759\u6001\u7c7b\u578b\uff0cgo\u7684\u7c7b\u578b\u90fd\u662f\u9759\u6001\n\n\n\u8981\u59cb\u7ec8\u8bb0\u4f4fgo\u662f\u9759\u6001\u7c7b\u578b\u8bed\u8a00\n\n\n\u9759\u6001\n\n\n\n\n\u5207\u8bb0\uff1aGO\u8bed\u8a00\u662f\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u6240\u6709\u53d8\u91cf\u7c7b\u578b\u90fd\u662f\u9759\u6001\u7684\uff1a\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u4e00\u4e2a\u9759\u6001\u7c7b\u578b\uff0c\u6bcf\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u5728\u7f16\u8bd1\u65f6\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u5982int\uff0cfloat32, *MyType, []byte\u7b49\u7b49\u3002\u5305\u62ec\u63a5\u53e3\u53d8\u91cf\u672c\u8eab\u4e5f\u662f\u9759\u6001\u7c7b\u578b\uff0c\u63a5\u53e3\u53d8\u91cf\u7684\u7c7b\u578b\u5c31\u662f\u5176\u63a5\u53e3\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u63a5\u53e3\u53d8\u91cf\u7684\u53d8\u91cf\u540d\uff09\u3002\u6bd4\u5982\uff1a\n\n\nvar r io.Reader\nr = os.Stdin\nr = bufio.NewReader(r)\nr = new(bytes.Buffer)\n\n\n\n\n\u8fd9\u91cc\u7684r\u53d8\u91cf\u7684\u7c7b\u578b\u59cb\u7ec8\u662fio.Reader\n\n\n\u5373\u63a5\u53e3\u53d8\u91cf\u7684\u7c7b\u578b\u59cb\u7ec8\u8fd9\u4e2a\u63a5\u53e3\u7c7b\u578b \uff0c\u800c\u4e0d\u662f\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\u53d8\u91cf\u7684\u67d0type\uff0c\u65e0\u8bba\u8fd9\u4e2a\u63a5\u53e3\u53d8\u91cfhold\u54ea\u4e2atype\n\n\n\n\nWarning\n\n\n\u76ee\u524d\u8fd8\u4e0d\u627e\u5230\u529e\u6cd5\u67e5\u8be2\u5230\u8fd9\u4e2a\u63a5\u53e3\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u6bd4\u5982\u662fio.Reader\u800c\u4e0d\u662fio.Writer\n\n\n\n\n\u57fa\u7c7b\u578b\n\n\n\n\ntype MyInt int\nvar i int\nvar j MyInt\n\n\n\n\n\u8fd9\u91cci\u548cj\u662f\u4e0d\u540c\u7684\u9759\u6001\u7c7b\u578b\uff0c\u5c3d\u7ba1\u90fd\u62e5\u6709\u76f8\u540c\u7684underlying type\uff08\u57fa\u7c7b\u578b\uff09\uff0c\u4ed6\u4eec\u4e92\u76f8\u4e4b\u95f4\u5982\u679c\u4e0d\u8fdb\u884c\u8f6c\u6362\u662f\u4e0d\u80fd\u4e92\u76f8\u8d4b\u503c\u7684\n\n\npair\n\n\n\n\n\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\u5b58\u50a8\u4e86\u4e00\u5bf9\u503c\uff0c\u82f1\u6587\u53ebpair\n\n\n\n\nA variable of interface type stores a pair: the concrete value assigned to the variable, and that value's type descriptor. To be more precise, the value is the underlying concrete data item that implements the interface and the type describes the full type of that item.\n\n\n\n\n(value, type)\n\n\n\n\n\u53ef\u4ee5\u7406\u89e3\u4e3a(\u8be5\u63a5\u53e3\u53d8\u91cfhold\u7684\u53d8\u91cf\u7684\u503c,\u8be5\u63a5\u53e3\u53d8\u91cfhold\u7684\u53d8\u91cf\u7684\u7c7b\u578b)\n\n\n\n\ntype\u662fconcrete type\n\n\n\u63a5\u53e3\u53d8\u91cf\u903b\u8f91\u4e0a\u5b58\u50a8\u7684\u503c\u662f(value, concrete type)\u800c\u4e0d\u662f(value, interface type)\uff0c\u63a5\u53e3\u7c7b\u578b\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u5b58\u50a8\u63a5\u53e3\u53d8\u91cf\u7c7b\u578b\u672c\u8eab\u7684\u7c7b\u578b\u3002\n\n\n\n\n\n\n\u4e0d\u7528\u592a\u5728\u610fpair\n\n\n\u8fd9\u4e2apair\u662f\u5e95\u5c42\u7684\u5b58\u50a8\uff0c\u662f\u8ba9\u4eba\u66f4\u52a0\u4e86\u89e3\u63a5\u53e3\u53d8\u91cf\uff0c\u5b9e\u9645\u4f7f\u7528\u7684\u65f6\u5019\u662f\u4e0d\u4f1a\u770b\u5230\u7684\n\n\n\n\n\u4f8b\u5b50\n\n\nvar r io.Reader\ntty, err := os.OpenFile(\n/dev/tty\n, os.O_RDWR, 0) //tty\u7684\u7c7b\u578b\u662f*os.File\uff0c\u800c*os.File\u62e5\u6709Read()\u65b9\u6cd5\uff0cio.Reader\u7684\u65b9\u6cd5\u96c6\u5c31\u662fRead()\nif err != nil {\n    return nil, err\n}\nr = tty //tty\u5b9e\u73b0\u4e86\u63a5\u53e3r\uff0c\u6216\u8005\u53eb\u505atty\u8d4b\u503c\u7ed9\u4e86\u63a5\u53e3r\n\n\n\n\n\u8fd9\u91cc\u7684(value, type)\u662f(tty, *os.File)\n\n\n\u7c7b\u578b\u65ad\u8a00\n\n\n\n\n\u8be6\u89c1\u63a5\u53e3\u7684\u7c7b\u578b\u65ad\u8a00\u5b9e\u73b0\u63a5\u53e3\u7ae0\u8282\n\n\n\u7c7b\u578b\u65ad\u8a00\u548c\u7c7b\u578b\u8f6c\u6362\u7684\u533a\u522b\n\n\n\n\n\n\n\n\n\u7c7b\u578b\u65ad\u8a00\u662f\u63a5\u53e3\u53d8\u91cf\uff08\u5305\u62ec\u7a7a\u63a5\u53e3\uff09\u7684\u529f\u80fd\uff0c\u53ea\u6709\u63a5\u53e3\u53d8\u91cf\u624d\u80fd\u505a\u7c7b\u578b\u65ad\u8a00\uff0c\u975e\u63a5\u53e3\u53d8\u91cf\u4e0d\u80fd\u505a\u7c7b\u578b\u65ad\u8a00\uff0c\u6bd4\u5982\n\n\na\n \n:=\n \n10\n\n\nb\n \n:=\n \na\n.(\nint\n)\n\n\n\n\n\n\u62a5\u9519\n\n\ninvalid type assertion: b.(int) (non-interface type int on left)\n\n\n\n\n\n\n\n\n\u7c7b\u578b\u8f6c\u6362\u53ea\u652f\u6301\u975e\u63a5\u53e3\u53d8\u91cf\uff0c\u6bd4\u5982\n\n\nvar\n \na\n \ninterface\n{}\n \n=\n \n3.14\n\n\nfmt\n.\nPrintf\n(\n%d\\n\n,\n \nint\n(\na\n))\n\n\n\n\n\n\u62a5\u9519\n\n\ncannot convert a (type interface {}) to type int: need type assertion\n\n\n\n\n\n\n\n\n:=\n\n\n\n\n\u7528\u77ed\u58f0\u660e\uff0c\u5c06\u4e00\u4e2a\u63a5\u53e3\u8d4b\u503c\u7ed9\u4e00\u4e2a\u65b0\u53d8\u91cf\uff0c\u8fd9\u4e2a\u65b0\u53d8\u91cf\u5219\u662f\u4e00\u4e2a\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u63a5\u53e3hold\u7684\u53d8\u91cf\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n()\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \nMyStruct\n)\n \nAdd\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nthis\n.\nX\n \n+\n \nthis\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni\n \nAdder\n\n    \ni\n \n=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n\n\n    \nx\n \n:=\n \ni\n\n\n    \na\n,\n \nok1\n \n:=\n \ni\n.(\nMyStruct\n)\n\n    \nb\n,\n \nok2\n \n:=\n \nx\n.(\nMyStruct\n)\n\n\n    \nfmt\n.\nPrintf\n(\ni:\\t%T %v\\n\n,\n \ni\n,\n \ni\n)\n\n    \nfmt\n.\nPrintf\n(\na:\\t%T %v %v\\n\n,\n \na\n,\n \na\n,\n \nok1\n)\n\n    \nfmt\n.\nPrintf\n(\nb:\\t%T %v %v\\n\n,\n \nb\n,\n \nb\n,\n \nok2\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\ni:  main.MyStruct {3 4}\na:  main.MyStruct {3 4} true\nb:  main.MyStruct {3 4} true\n\n\n\n\n\u7a7a\u63a5\u53e3\n\n\n\n\n\u8be6\u89c1\u7a7a\u63a5\u53e3\u627f\u63a5\u6307\u9488\u53d8\u91cf\u7ae0\u8282\n\n\n\u503c\u4f20\u9012\n\n\n\n\n\u9700\u8981\u6ce8\u610f\uff1a\u88ab\u63a5\u53e3\u627f\u63a5\u7684\u503c\u662f\u503c\u4f20\u9012\uff0c\u63a5\u53e3\u7c7b\u578b\u5bf9\u5185\u90e8\u503c\u5f97\u5b58\u50a8\u662f\u503c\u4f20\u9012\uff0c\u5373\u4e00\u4e2a\u53d8\u91cf\u8d4b\u503c\u7ed9\u4e86\u4e00\u4e2a\u63a5\u53e3\u53d8\u91cf\uff0c\u5982\u679c\u6539\u53d8\u4e86\u539f\u59cb\u7684\u53d8\u91cf\uff0c\u5176\u7531\u63a5\u53e3\u5b58\u50a8\u7684\u503c\u4e5f\u4e0d\u4f1a\u6539\u53d8\u3002\n\n\n\u6bd4\u5982\u628a\u53d8\u91cfA\u8d4b\u503c\u7ed9\u63a5\u53e3\u53d8\u91cfi\u540e\uff0c\u53d8\u91cfA\u7684\u503c\u66f4\u6539\u4e86\uff0c\u63a5\u53e3\u53d8\u91cfi\u7684\u503c\u4e0d\u4f1a\u6539\uff0c\u56e0\u4e3a\u8fd9\u79cd\u627f\u63a5\u662f\u5c06\u53d8\u91cfA\u7684\u503c\u590d\u5236\u540e\u8d4b\u503c\u7ed9\u63a5\u53e3\u3002\u5f53\u7136\u5982\u679c\u628a\u6307\u9488\u8d4b\u503c\u7ed9\u63a5\u53e3\uff0c\u90a3\u662f\u53ef\u4ee5\u6539\u7684\n\n\n\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ne1\n \ninterface\n{}\n\n    \ns1\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \ne1\n \n=\n \ns1\n\n    \ns1\n.\nX\n \n=\n \n33\n\n    \nfmt\n.\nPrintf\n(\ns1 %T %v\\n\n,\n \ns1\n,\n \ns1\n)\n\n    \nfmt\n.\nPrintf\n(\ne1 %T %v\\n\n,\n \ne1\n,\n \ne1\n)\n\n\n    \nvar\n \ne2\n \ninterface\n{}\n\n    \ns2\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \ne2\n \n=\n \ns2\n\n    \ns2\n.\nX\n \n=\n \n33\n\n    \nfmt\n.\nPrintf\n(\ns2 %T %v\\n\n,\n \ns2\n,\n \ns2\n)\n\n    \nfmt\n.\nPrintf\n(\ne2 %T %v\\n\n,\n \ne2\n,\n \ne2\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\ns1 main.MyStruct {33 4}\ne1 main.MyStruct {3 4}\ns2 *main.MyStruct \n{33 4}\ne2 *main.MyStruct \n{33 4}\n\n\n\n\n\u8fdb\u9636\n\n\n\n\n\u8be6\u89c1: \nhttp://research.swtch.com/2009/12/go-data-structures-interfaces.html\n\n\n\n\nNote\n\n\n\u53ef\u80fd\u9700\u8981\u79d1\u5b66\u4e0a\u7f51\u624d\u80fd\u770b\u5f97\u5230", 
            "title": "3.18. \u6df1\u5165\u7406\u89e3"
        }, 
        {
            "location": "/method/interface_deep/#_1", 
            "text": "\u4ee5\u4e0b\u662f\u5173\u4e8e\u63a5\u53e3\u8d4b\u503c\u7684\u672f\u8bed  package   main  import   fmt  type   Adder   interface   { \n     Add ()  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( this   * MyStruct )   Add ()   { \n     fmt . Println ( this . X   +   this . Y )  }  func   main ()   { \n     var   i   Adder \n     s   :=   MyStruct { 3 ,   4 }       i   =   s       i . Add ()  }   \u8f93\u51fa  7  \u4e0a\u9762 i = s \u53ef\u4ee5\u75283\u4e2a\u7ef4\u5ea6\u6765\u9610\u8ff0\uff1a    assignment\uff1a\u8d4b\u503c\uff0c\u5c06s\u8d4b\u503c\u7ed9i    hold\uff1a\u5b58\u50a8\u7684\u503c\uff0c\u53d8\u91cfi hold s\u8868\u793ai\u5b58\u50a8\u7684\u503c\u662fs    item inside\uff1a\u548chold\u4e00\u6837\u7684\u610f\u601d\uff08\u53ea\u4e0d\u8fc7\u4e3b\u8c13\u76f8\u53cd\u800c\u5df2\uff09\u6bd4\u5982item inside i\u4e2ditem\u8868\u793as\uff0c\u56e0\u6b64\u53ef\u4ee5\u7406\u89e3\u4e3as inside i\uff0c\u5373i\u5305\u542b\u4e86s     Note  \u8fd93\u4e2a\u7ef4\u5ea6\u7684\u610f\u601d\u5176\u5b9e\u662f\u4e00\u6837\u7684\uff0c\u5728\u5b98\u65b9\u6587\u6863\u4e2d\u53ef\u4ee5\u770b\u5230\u4ea4\u66ff\u51fa\u73b0   \u53e6\u5916\u8fd8\u6709\u4e2a\u5355\u8bcdimplement\uff1a\u5b9e\u73b0\uff0c\u7531\u4e8e*MyStruct\u62e5\u6709\u65b9\u6cd5Add()\uff0c\u56e0\u6b64*MyStruct implement Adder\u63a5\u53e3\uff08*MyStruct\u5b9e\u73b0\u4e86Adder\u63a5\u53e3\uff09", 
            "title": "\u672f\u8bed"
        }, 
        {
            "location": "/method/interface_deep/#_2", 
            "text": "\u63a5\u53e3\u7c7b\u578b\u662f\u5341\u5206\u91cd\u8981\u7684\u7c7b\u578b\uff0c\u63a5\u53e3\u53d8\u91cf\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7684\u5177\u4f53\uff08\u9664\u4e86\u63a5\u53e3\uff09\u503c\uff0c\u53ea\u8981\u8be5\u503c\u5b9e\u73b0\u4e86\u63a5\u53e3\u7684\u65b9\u6cd5  \u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u63a5\u53e3\u7c7b\u578b\u53eb\u505aempty interface\uff0c\u5373\u7a7a\u63a5\u53e3\uff1ainterface{}  \u6709\u7684\u4eba\u8ba4\u4e3ago\u63a5\u53e3\u662f\u52a8\u6001\u7c7b\u578b\uff0c\u8fd9\u662f\u9519\u8bef\u7684\uff0cgo\u63a5\u53e3\u4e5f\u662f\u9759\u6001\u7c7b\u578b\uff0cgo\u7684\u7c7b\u578b\u90fd\u662f\u9759\u6001  \u8981\u59cb\u7ec8\u8bb0\u4f4fgo\u662f\u9759\u6001\u7c7b\u578b\u8bed\u8a00", 
            "title": "\u63a5\u53e3\u7c7b\u578b"
        }, 
        {
            "location": "/method/interface_deep/#_3", 
            "text": "\u5207\u8bb0\uff1aGO\u8bed\u8a00\u662f\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u6240\u6709\u53d8\u91cf\u7c7b\u578b\u90fd\u662f\u9759\u6001\u7684\uff1a\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u4e00\u4e2a\u9759\u6001\u7c7b\u578b\uff0c\u6bcf\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u5728\u7f16\u8bd1\u65f6\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u5982int\uff0cfloat32, *MyType, []byte\u7b49\u7b49\u3002\u5305\u62ec\u63a5\u53e3\u53d8\u91cf\u672c\u8eab\u4e5f\u662f\u9759\u6001\u7c7b\u578b\uff0c\u63a5\u53e3\u53d8\u91cf\u7684\u7c7b\u578b\u5c31\u662f\u5176\u63a5\u53e3\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u63a5\u53e3\u53d8\u91cf\u7684\u53d8\u91cf\u540d\uff09\u3002\u6bd4\u5982\uff1a  var r io.Reader\nr = os.Stdin\nr = bufio.NewReader(r)\nr = new(bytes.Buffer)  \u8fd9\u91cc\u7684r\u53d8\u91cf\u7684\u7c7b\u578b\u59cb\u7ec8\u662fio.Reader  \u5373\u63a5\u53e3\u53d8\u91cf\u7684\u7c7b\u578b\u59cb\u7ec8\u8fd9\u4e2a\u63a5\u53e3\u7c7b\u578b \uff0c\u800c\u4e0d\u662f\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\u53d8\u91cf\u7684\u67d0type\uff0c\u65e0\u8bba\u8fd9\u4e2a\u63a5\u53e3\u53d8\u91cfhold\u54ea\u4e2atype   Warning  \u76ee\u524d\u8fd8\u4e0d\u627e\u5230\u529e\u6cd5\u67e5\u8be2\u5230\u8fd9\u4e2a\u63a5\u53e3\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u6bd4\u5982\u662fio.Reader\u800c\u4e0d\u662fio.Writer", 
            "title": "\u9759\u6001"
        }, 
        {
            "location": "/method/interface_deep/#_4", 
            "text": "type MyInt int\nvar i int\nvar j MyInt  \u8fd9\u91cci\u548cj\u662f\u4e0d\u540c\u7684\u9759\u6001\u7c7b\u578b\uff0c\u5c3d\u7ba1\u90fd\u62e5\u6709\u76f8\u540c\u7684underlying type\uff08\u57fa\u7c7b\u578b\uff09\uff0c\u4ed6\u4eec\u4e92\u76f8\u4e4b\u95f4\u5982\u679c\u4e0d\u8fdb\u884c\u8f6c\u6362\u662f\u4e0d\u80fd\u4e92\u76f8\u8d4b\u503c\u7684", 
            "title": "\u57fa\u7c7b\u578b"
        }, 
        {
            "location": "/method/interface_deep/#pair", 
            "text": "\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\u5b58\u50a8\u4e86\u4e00\u5bf9\u503c\uff0c\u82f1\u6587\u53ebpair   A variable of interface type stores a pair: the concrete value assigned to the variable, and that value's type descriptor. To be more precise, the value is the underlying concrete data item that implements the interface and the type describes the full type of that item.   (value, type)  \u53ef\u4ee5\u7406\u89e3\u4e3a(\u8be5\u63a5\u53e3\u53d8\u91cfhold\u7684\u53d8\u91cf\u7684\u503c,\u8be5\u63a5\u53e3\u53d8\u91cfhold\u7684\u53d8\u91cf\u7684\u7c7b\u578b)   type\u662fconcrete type  \u63a5\u53e3\u53d8\u91cf\u903b\u8f91\u4e0a\u5b58\u50a8\u7684\u503c\u662f(value, concrete type)\u800c\u4e0d\u662f(value, interface type)\uff0c\u63a5\u53e3\u7c7b\u578b\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u5b58\u50a8\u63a5\u53e3\u53d8\u91cf\u7c7b\u578b\u672c\u8eab\u7684\u7c7b\u578b\u3002    \u4e0d\u7528\u592a\u5728\u610fpair  \u8fd9\u4e2apair\u662f\u5e95\u5c42\u7684\u5b58\u50a8\uff0c\u662f\u8ba9\u4eba\u66f4\u52a0\u4e86\u89e3\u63a5\u53e3\u53d8\u91cf\uff0c\u5b9e\u9645\u4f7f\u7528\u7684\u65f6\u5019\u662f\u4e0d\u4f1a\u770b\u5230\u7684   \u4f8b\u5b50  var r io.Reader\ntty, err := os.OpenFile( /dev/tty , os.O_RDWR, 0) //tty\u7684\u7c7b\u578b\u662f*os.File\uff0c\u800c*os.File\u62e5\u6709Read()\u65b9\u6cd5\uff0cio.Reader\u7684\u65b9\u6cd5\u96c6\u5c31\u662fRead()\nif err != nil {\n    return nil, err\n}\nr = tty //tty\u5b9e\u73b0\u4e86\u63a5\u53e3r\uff0c\u6216\u8005\u53eb\u505atty\u8d4b\u503c\u7ed9\u4e86\u63a5\u53e3r  \u8fd9\u91cc\u7684(value, type)\u662f(tty, *os.File)", 
            "title": "pair"
        }, 
        {
            "location": "/method/interface_deep/#_5", 
            "text": "\u8be6\u89c1\u63a5\u53e3\u7684\u7c7b\u578b\u65ad\u8a00\u5b9e\u73b0\u63a5\u53e3\u7ae0\u8282", 
            "title": "\u7c7b\u578b\u65ad\u8a00"
        }, 
        {
            "location": "/method/interface_deep/#_6", 
            "text": "\u7c7b\u578b\u65ad\u8a00\u662f\u63a5\u53e3\u53d8\u91cf\uff08\u5305\u62ec\u7a7a\u63a5\u53e3\uff09\u7684\u529f\u80fd\uff0c\u53ea\u6709\u63a5\u53e3\u53d8\u91cf\u624d\u80fd\u505a\u7c7b\u578b\u65ad\u8a00\uff0c\u975e\u63a5\u53e3\u53d8\u91cf\u4e0d\u80fd\u505a\u7c7b\u578b\u65ad\u8a00\uff0c\u6bd4\u5982  a   :=   10  b   :=   a .( int )   \u62a5\u9519  invalid type assertion: b.(int) (non-interface type int on left)    \u7c7b\u578b\u8f6c\u6362\u53ea\u652f\u6301\u975e\u63a5\u53e3\u53d8\u91cf\uff0c\u6bd4\u5982  var   a   interface {}   =   3.14  fmt . Printf ( %d\\n ,   int ( a ))   \u62a5\u9519  cannot convert a (type interface {}) to type int: need type assertion", 
            "title": "\u7c7b\u578b\u65ad\u8a00\u548c\u7c7b\u578b\u8f6c\u6362\u7684\u533a\u522b"
        }, 
        {
            "location": "/method/interface_deep/#_7", 
            "text": "\u7528\u77ed\u58f0\u660e\uff0c\u5c06\u4e00\u4e2a\u63a5\u53e3\u8d4b\u503c\u7ed9\u4e00\u4e2a\u65b0\u53d8\u91cf\uff0c\u8fd9\u4e2a\u65b0\u53d8\u91cf\u5219\u662f\u4e00\u4e2a\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u63a5\u53e3hold\u7684\u53d8\u91cf\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a  package   main  import   fmt  type   Adder   interface   { \n     Add ()  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( this   MyStruct )   Add ()   { \n     fmt . Println ( this . X   +   this . Y )  }  func   main ()   { \n     var   i   Adder \n     i   =   MyStruct { 3 ,   4 }       x   :=   i       a ,   ok1   :=   i .( MyStruct ) \n     b ,   ok2   :=   x .( MyStruct ) \n\n     fmt . Printf ( i:\\t%T %v\\n ,   i ,   i ) \n     fmt . Printf ( a:\\t%T %v %v\\n ,   a ,   a ,   ok1 ) \n     fmt . Printf ( b:\\t%T %v %v\\n ,   b ,   b ,   ok2 )  }   \u8f93\u51fa  i:  main.MyStruct {3 4}\na:  main.MyStruct {3 4} true\nb:  main.MyStruct {3 4} true", 
            "title": ":="
        }, 
        {
            "location": "/method/interface_deep/#_8", 
            "text": "\u8be6\u89c1\u7a7a\u63a5\u53e3\u627f\u63a5\u6307\u9488\u53d8\u91cf\u7ae0\u8282", 
            "title": "\u7a7a\u63a5\u53e3"
        }, 
        {
            "location": "/method/interface_deep/#_9", 
            "text": "\u9700\u8981\u6ce8\u610f\uff1a\u88ab\u63a5\u53e3\u627f\u63a5\u7684\u503c\u662f\u503c\u4f20\u9012\uff0c\u63a5\u53e3\u7c7b\u578b\u5bf9\u5185\u90e8\u503c\u5f97\u5b58\u50a8\u662f\u503c\u4f20\u9012\uff0c\u5373\u4e00\u4e2a\u53d8\u91cf\u8d4b\u503c\u7ed9\u4e86\u4e00\u4e2a\u63a5\u53e3\u53d8\u91cf\uff0c\u5982\u679c\u6539\u53d8\u4e86\u539f\u59cb\u7684\u53d8\u91cf\uff0c\u5176\u7531\u63a5\u53e3\u5b58\u50a8\u7684\u503c\u4e5f\u4e0d\u4f1a\u6539\u53d8\u3002  \u6bd4\u5982\u628a\u53d8\u91cfA\u8d4b\u503c\u7ed9\u63a5\u53e3\u53d8\u91cfi\u540e\uff0c\u53d8\u91cfA\u7684\u503c\u66f4\u6539\u4e86\uff0c\u63a5\u53e3\u53d8\u91cfi\u7684\u503c\u4e0d\u4f1a\u6539\uff0c\u56e0\u4e3a\u8fd9\u79cd\u627f\u63a5\u662f\u5c06\u53d8\u91cfA\u7684\u503c\u590d\u5236\u540e\u8d4b\u503c\u7ed9\u63a5\u53e3\u3002\u5f53\u7136\u5982\u679c\u628a\u6307\u9488\u8d4b\u503c\u7ed9\u63a5\u53e3\uff0c\u90a3\u662f\u53ef\u4ee5\u6539\u7684  \u4e3e\u4f8b\u5982\u4e0b\uff1a  package   main  import   fmt  type   MyStruct   struct   { \n     X ,   Y   int  }  func   main ()   { \n     var   e1   interface {} \n     s1   :=   MyStruct { 3 ,   4 } \n     e1   =   s1 \n     s1 . X   =   33 \n     fmt . Printf ( s1 %T %v\\n ,   s1 ,   s1 ) \n     fmt . Printf ( e1 %T %v\\n ,   e1 ,   e1 ) \n\n     var   e2   interface {} \n     s2   :=   MyStruct { 3 ,   4 } \n     e2   =   s2 \n     s2 . X   =   33 \n     fmt . Printf ( s2 %T %v\\n ,   s2 ,   s2 ) \n     fmt . Printf ( e2 %T %v\\n ,   e2 ,   e2 )  }   \u8f93\u51fa  s1 main.MyStruct {33 4}\ne1 main.MyStruct {3 4}\ns2 *main.MyStruct  {33 4}\ne2 *main.MyStruct  {33 4}", 
            "title": "\u503c\u4f20\u9012"
        }, 
        {
            "location": "/method/interface_deep/#_10", 
            "text": "\u8be6\u89c1:  http://research.swtch.com/2009/12/go-data-structures-interfaces.html   Note  \u53ef\u80fd\u9700\u8981\u79d1\u5b66\u4e0a\u7f51\u624d\u80fd\u770b\u5f97\u5230", 
            "title": "\u8fdb\u9636"
        }, 
        {
            "location": "/method/interface_01/", 
            "text": "\u4e0b\u9762\u662f\u4eceshell\u5230python\u518d\u5230golang\uff0c\u4ece\u9762\u5411\u5bf9\u8c61\u90fd\u4e0d\u61c2\u5230\u4e86\u89e3\u9762\u5411\u5bf9\u8c61\u3001\u4e86\u89e3interface\u7684\u6574\u4e2a\u601d\u8003\u8fc7\u7a0b\u3002\n\n\n\u6ce8\u610f\uff1a\u672c\u9875\u53ea\u9002\u5408\u7f16\u7a0b\u5c0f\u767d\u770b\uff0c\u5e76\u4e14\u8981\u4e0d\u7136\u522b\u770b\uff0c\u8981\u770b\u5c31\u8981\u770b\u5230\u5e95\uff0c\u56e0\u4e3a\u4e2d\u95f4\u7ecf\u5386\u4e86\u591a\u6b21\u7684\u9519\u8bef\u4f8b\u5b50\u548c\u603b\u7ed3\uff0c\u76f4\u5230\u6700\u540e\u624d\u6293\u5230\u9762\u5411\u5bf9\u8c61\u548c\u63a5\u53e3\u7684\u5c3e\u5df4\n\n\n\n\n\u672c\u9875\u5927\u91cf\u4f7f\u7528\u4e86\u4f2a\u4ee3\u7801\uff0c\u6240\u4ee5\u4e0d\u4fdd\u8bc1\u4f8b\u5b50\u90fd\u662f\u53ef\u6267\u884c\u7684\n\n\n\n\n\u521b\u5efanetns\uff0cnetns\u540d\u7ec4\u6210\uff1aVRouter-${name}\n\n\ncreate_vrouter\n()\n \n{\n\n    \nname\n=\n$1\n\n    ip netns add VRouter-\n${\nname\n}\n\n\n}\n\n\ncreate_vrouter \nvrtest\n\n\n\n\n\n\u8fd9\u4e32\u4ee3\u7801\u67092\u5904\u8026\u5408\uff1a\n\n\n\n\n\n\n\u521b\u5efanetns\u4e0e\u521b\u5efavrouter\u8026\u5408\n\n\n\n\n\n\nnetns\u540d\u4e0e\u521b\u5efavrouter\u8026\u5408\n\n\n\n\n\n\n\u7b2c\u4e00\u4e2a\u8026\u5408\u7684\u89e3\u51b3\uff1a\u5c06netns\u7684\u521b\u5efa\u5c01\u88c5\u4e3a\u4e00\u4e2a\u51fd\u6570\n\n\ncreate_netns\n()\n \n{\n\n    \nname\n=\n$1\n\n    ip netns add \n${\nname\n}\n\n\n}\n\n\ncreate_vrouter\n()\n \n{\n\n    \nname\n=\n$1\n\n    \nvrname\n=\nVRouter-\n${\nname\n}\n\n    create_netns \n${\nvrname\n}\n\n\n}\n\n\ncreate_vrouter \nvrtest\n\n\n\n\n\n\u7b2c\u4e8c\u4e2a\u8026\u5408\u7684\u89e3\u51b3\uff1a\u5c06netns\u5c01\u88c5\u4e3a\u4e00\u4e2a\u51fd\u6570\n\n\nget_ns_name\n()\n \n{\n\n    \nname\n=\n$1\n\n    \necho\n \nVRouter-\n${\nname\n}\n\n\n}\n\n\ncreate_netns\n()\n \n{\n\n    \nname\n=\n$1\n\n    \nns_name\n=\n`\nget_ns_name \n${\nname\n}\n`\n\n    ip netns add \n${\nns_name\n}\n\n\n}\n\n\ncreate_vrouter\n()\n \n{\n\n    \nname\n=\n$1\n\n    create_netns \n${\nname\n}\n\n\n}\n\n\ncreate_vrouter \nvrtest\n\n\n\n\n\n\u4e0a\u9762\u8fd9\u79cd\u65b9\u6cd5\u662fcreate_netns\u51fd\u6570\u91cc\u8c03\u7528get_ns_name\uff0c\u4e0b\u9762\u8fd9\u79cd\u65b9\u6cd5\u662f\u5728create_vrouter\u91cc\u8c03\u7528get_ns_name\n\n\nget_ns_name\n()\n \n{\n\n    \nname\n=\n$1\n\n    \necho\n \nVRouter-\n${\nname\n}\n\n\n}\n\n\ncreate_netns\n()\n \n{\n\n    \nname\n=\n$1\n\n    ip netns add \n${\nname\n}\n\n\n}\n\n\ncreate_vrouter\n()\n \n{\n\n    \nname\n=\n$1\n\n    \nns_name\n=\n`\nget_ns_name \n${\nname\n}\n`\n\n    create_netns \n${\nns_name\n}\n\n\n}\n\n\n\n\n\n\u8fd92\u79cd\u65b9\u6cd5\u770b\u8fc7\u53bb\u597d\u50cf\u90fd\u884c\uff0c\u4e8e\u662f\u63a5\u4e0b\u6765\u505a\u4e2a\u6269\u5c55\uff0cnetns\u540d\u52a0ext\u3001int\uff0c\u770b\u4e0b\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a\n\n\nget_ns_name\n()\n \n{\n\n    \nname\n=\n$1\n\n    \ntype\n=\n$2\n\n    \nif\n \n[\n \n${\ntype\n}\n \n=\n \next\n \n]\n;\n \nthen\n\n        \necho\n \nE-VRouter-\n${\nname\n}\n\n    \nelif\n \n[\n \n${\ntype\n}\n \n=\n \nint\n \n]\n;\n \nthen\n\n        \necho\n \nI-VRouter-\n${\nname\n}\n\n    \nelse\n\n        \necho\n \nVRouter-\n${\nname\n}\n\n    \nfi\n\n\n}\n\n\ncreate_netns\n()\n \n{\n\n    \nname\n=\n$1\n\n    \ntype\n=\n$2\n\n    \nns_name\n=\n`\nget_ns_name \n${\nname\n}\n \n${\ntype\n}\n`\n\n    ip netns add \n${\nns_name\n}\n\n\n}\n\n\ncreate_vrouter\n()\n \n{\n\n    \nname\n=\n$1\n\n    \ntype\n=\n$2\n\n    create_netns \n${\nname\n}\n \n${\ntype\n}\n\n\n}\n\n\ncreate_vrouter \nvrtest\n \next\n\n\n\n\n\n\u51cf\u5c11\u4ee3\u7801\u91cd\u590d\u662f\u672c\u8d28\uff0c\u4f46\u662f\u5b9e\u73b0\u8d77\u6765\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u4ee5\u524d\u6211\u90fd\u662f\u505c\u7559\u5728\u6ca1\u6709\u4efb\u4f55\u601d\u8003\uff0c\u80fd\u591a\u51cf\u5c11\u4e00\u884c\u662f\u4e00\u884c\u7684\u60f3\u6cd5\u6765\u7f16\u5199\u4ee3\u7801\uff0c\u5bfc\u81f4\u4e86\u5404\u79cd\u8026\u5408\uff0c\u4ee5\u81f4\u4e8e\u4ee3\u7801\u6269\u5c55\u53d8\u5f97\u5f88\u96be\u3002\u63a5\u4e0b\u6765\u8981\u627e\u5230\u4e00\u79cd\u6bd4\u8f83\u597d\u7684\u65b9\u5f0f\u3002\n\n\n\u76f8\u4f3c\u4f46\u4e0d\u76f8\u5173\u7684\u4e1c\u897f\u4e0d\u8981\u8026\u5408\u5728\u4e00\u8d77\uff0c\u6bd4\u5982dhcp\u9700\u8981netns\u3001vrouter\u4e5f\u9700\u8981netns\uff0c\u4f46\u521b\u5efanetns\u8981\u5206\u62102\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u662fdhcp\u7684netns\u548cvrouter\u7684netns\uff0c\u5426\u5219\u540e\u671f\u56e0\u4e3avrouter\u7684netns\u53d8\u5316\uff0c\u5c31\u6709\u53ef\u80fd\u8fde\u7d2fdhcp\u7684netns\uff08\u5f80\u5f80\u5230\u4e86\u8fd9\u4e2a\u65f6\u5019\u4e3a\u4e86\u4e0d\u8fde\u7d2f\uff0c\u53c8\u4f1a\u65b0\u641e\u4e00\u4e2a\u51fd\u6570\u53eb\u505adhcp_netns\uff0c\u8fd9\u6837\u5c31\u4f1a\u9020\u6210netns\u548cdhcp_netns\u540c\u65f6\u5b58\u5728\u7684\u5c40\u9762\uff0c\u7ef4\u62a4\u5c31\u56f0\u96be\u4e86\uff09\u3002\n\n\n\u7a81\u7136\u60f3\u5230\uff0c\u6709\u4e00\u79cd\u60c5\u51b5\uff0c\u53ef\u80fd\u9700\u8981\u72ec\u7acb\u641e\u4e2anetns\u51fd\u6570\uff0c\u5c31\u662f\u5f53\u8fd9\u4e2a\u51fd\u6570\u91cc\u505a\u7684\u4e1c\u897f\u6709\u4e0d\u540c\u73af\u5883\u7684\u7c7b\u578b\u5224\u65ad\uff0c\u6bd4\u5982\u542f\u52a8host\uff0c\u5728libvirt\u73af\u5883\u662fvirsh start\uff0c\u800c\u5728\u7269\u7406\u673a\u662fipmitool power on\uff0c\u5728docker\u73af\u5883\u662fdocker start\u3002\u8fd9\u79cd\u65f6\u5019\u5c01\u88c5\u4e00\u4e2astart_host\u51fd\u6570\uff0c\u6839\u636e\u4f20\u5165\u53c2\u6570\u6216\u5176\u4ed6\u9014\u5f84\u5224\u65ad\u7c7b\u578b\uff0c\u600e\u4e48\u542f\u52a8host\u3002\n\n\n\u4f46\u95ee\u9898\u6765\u4e86\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u8bdd\uff0c\u5c82\u4e0d\u662f\u53c8\u56de\u5230\u6700\u521d\u95ee\u9898\u4e86\uff0c\u5c31\u662f\u4ec0\u4e48\u65f6\u5019\u8981\u72ec\u7acb\u51fa\u6765\u6210\u4e3a\u4e00\u4e2a\u72ec\u7acb\u51fd\u6570\u6216\u72ec\u7acb\u6a21\u5757\uff0c\u4ec0\u4e48\u65f6\u5019\u4e0d\u8981\u72ec\u7acb\n\n\n\u4e8e\u662f\u60f3\u5230\u7b54\u6848\uff1a\u5f53\u6ee1\u8db32\u4e2a\u6761\u4ef6\u65f6\u5019\u72ec\u7acb\u51fa\u6765\n\n\n\n\n\n\n\u4e0d\u548c\u8c03\u7528\u8005\u4ee3\u7801\u903b\u8f91\u8026\u5408\u3002\u6bd4\u5982create_netns\u51fd\u6570\u91cc\u5c31\u63a5\u6536name\uff0c\u800c\u4e0d\u8981\u548cI-VRouter\u3001E-VRouter\u8fd9\u79cd\u4ee3\u7801\u903b\u8f91\u8026\u5408\u4e00\u8d77\uff0c\u5230\u5e95\u662fI-VRouter\u8fd8\u662fE-VRouter\u8fd8\u662fI-dhcp\uff0c\u7531\u8c03\u7528\u8005(\u4e3b\u51fd\u6570)\u81ea\u5df1\u6765\u5904\u7406\n\n\n\n\n\n\n\u8981\u5904\u7406\u7684\u4e8b\u60c5\u8f83\u591a\u65f6\u5019\uff0c\u6bd4\u5982\u73b0\u5728create_netns\u53ea\u6709\u4e00\u79cd\u65b9\u5f0fip netns add\uff0c\u4f46\u4e5f\u8bb8\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u547d\u4ee4\u4e0d\u4e00\u6837\uff08\u6bd4\u5982\u67d0\u4e9b\u7cfb\u7edf\u662f\u7528net\u547d\u4ee4\u66ff\u4ee3ip\u547d\u4ee4\uff0c\u6216\u8005\u4eca\u540e\u64cd\u4f5c\u7cfb\u7edf\u66f4\u65b0\u540e\u5e9f\u6389\u4e86ip\u547d\u4ee4\uff0c\u800c\u662f\u76f4\u63a5netns add\u547d\u4ee4\u7b49\u7b49\uff09\n\n\n\n\n\n\n\u6240\u4ee5\u4e0a\u9762\u7684shell\u5e94\u8be5\u8fd9\u4e48\u6539\uff1a\n\n\n\u7b2c\u4e00\u7248\uff08\u6ca1\u6709\u7c7b\u578b\uff09\uff1a\n\n\ncreate_netns\n()\n \n{\n\n    \nname\n=\n$1\n\n    ip netns add \n${\nname\n}\n\n\n}\n\n\ncreate_vrouter\n()\n \n{\n\n    \nname\n=\n$1\n\n    create_netns \n${\nname\n}\n\n\n}\n\n\ncreate_vrouter \nvrtest\n\n\n\n\n\n\u7b2c\u4e8c\u7248\uff08\u589e\u52a0\u7c7b\u578b\uff09\uff1a\n\n\ncreate_netns\n()\n \n{\n\n    \nname\n=\n$1\n\n    ip netns add \n${\nname\n}\n\n\n}\n\n\ncreate_vrouter\n()\n \n{\n\n    \nname\n=\n$1\n\n    \ntype\n=\n$2\n\n    \nif\n \n[\n \n${\ntype\n}\n \n=\n \next\n \n]\n;\n \nthen\n\n        \nns_name\n=\nE-VRouter-\n${\nname\n}\n\n    \nelif\n \n[\n \n${\ntype\n}\n \n=\n \nint\n \n]\n;\n \nthen\n\n        \nns_name\n=\nI-VRouter-\n${\nname\n}\n\n    \nelse\n\n        \nns_name\n=\nVRouter-\n${\nname\n}\n\n    \nfi\n\n    create_netns \n${\nns_name\n}\n\n\n}\n\n\ncreate_vrouter \nvrtest\n \next\n\n\n\n\n\n\u5982\u679c\u8981\u628ans_name\u5c01\u88c5\u8d77\u6765\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u53ea\u7528\u4e8evrouter\u7684netns\uff0c\u51fd\u6570\u540d\u53ef\u4ee5\u53eb\u505aget_vrouter_netns_name()\n\n\n\u4e0a\u9762\u867d\u7136\u7528\u5230\u4e86\u5c01\u88c5\uff0c\u4f46\u4e5f\u53ea\u662f\u9762\u5411\u8fc7\u7a0b\u7684\u601d\u8def\uff0c\u5982\u679c\u7528python\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\uff1a\n\n\n\u5b9a\u4e492\u4e2a\u7c7b\uff1avrouter\u7c7b\u3001netns\u7c7b\n\n\nclass\n \nnetns\n:\n\n    \ndef\n \n__init__\n(\nself\n,\n \nname\n):\n\n        \nself\n.\nname\n \n=\n \nname\n\n    \ndef\n \ncreate\n(\nself\n):\n\n        \nip\n.\nnetns\n.\nadd\n(\nself\n.\nname\n)\n\n\n\nclass\n \nVrouter\n:\n\n    \ndef\n \n__init__\n(\nself\n,\n \nname\n,\n \nstype\n):\n\n        \nself\n.\nname\n \n=\n \nname\n\n        \nself\n.\nstype\n \n=\n \nstype\n\n    \ndef\n \ncreate\n(\nself\n):\n\n        \nif\n \nself\n.\nstype\n \n==\n \nint\n:\n\n            \nnsname\n \n=\n \nI-VRouter-\n+\nself\n.\nname\n\n        \nelif\n \nself\n.\nstype\n \n==\n \next\n:\n\n            \nnsname\n \n=\n \nE-VRouter-\n+\nself\n.\nname\n\n        \nelse\n:\n\n            \nnsname\n \n=\n \nVRouter-\n+\nself\n.\nname\n\n        \nns\n \n=\n \nnetns\n(\nnsname\n)\n\n        \nns\n.\ncreate\n()\n\n\n\nvr\n \n=\n \nVrouter\n(\nvabcdefg\n,\n \nint\n)\n\n\nvr\n.\ncreate\n()\n\n\n\n\n\n\u63a5\u4e0b\u6765\u7528go\uff0c\u4f46\u5148\u4e0d\u7528\u63a5\u53e3\uff08\u5c312\u4e2a\u51fd\u6570\uff0c\u4e5f\u6ca1\u5fc5\u8981\u7528\u63a5\u53e3\uff09\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nnetns\n \nstruct\n \n{\n\n    \nname\n \nstring\n\n\n}\n\n\nfunc\n \n(\nn\n \n*\nnetns\n)\n \ncreate\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nn\n.\nname\n)\n\n\n}\n\n\n\ntype\n \nvrouter\n \nstruct\n \n{\n\n    \nname\n \nstring\n\n    \nstype\n \nstring\n\n\n}\n\n\nfunc\n \n(\nv\n \n*\nvrouter\n)\n \ncreate\n()\n \n{\n\n    \nvar\n \nnsname\n \nstring\n\n    \nswitch\n \nv\n.\nstype\n \n{\n\n    \ncase\n \next\n:\n\n        \nnsname\n \n=\n \nE-VRouter-\n+\nv\n.\nname\n\n    \ncase\n \nint\n:\n\n        \nnsname\n \n=\n \nI-VRouter-\n+\nv\n.\nname\n\n    \ndefault\n:\n\n        \nnsname\n \n=\n \nVRouter-\n+\nv\n.\nname\n\n    \n}\n\n\n    \nns\n \n:=\n \nnetns\n{\nname\n:\n \nnsname\n}\n\n    \nns\n.\ncreate\n()\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvr\n \n:=\n \nvrouter\n{\nname\n:\n \nvrtest\n,\n \nstype\n:\n \nint\n}\n\n    \nvr\n.\ncreate\n()\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nI-VRouter-vrtest\n\n\n\n\n\u63a5\u4e0b\u6765\u7ee7\u7eed\u589e\u52a0\u529f\u80fd\u70b9\uff0c\u589e\u52a0p2p\uff08veth\uff09\u53caip\uff1a\n\n\nshell\uff1a\n\n\ncreate_netns\n()\n \n{\n\n    \nname\n=\n$1\n\n    ip netns add \n${\nname\n}\n\n\n}\n\n\ncreate_veth\n()\n \n{\n\n    \nname\n=\n$1\n\n    \npeername\n=\n$2\n\n    ip link add \n${\nname\n}\n \ntype\n veth peer name \n${\npeername\n}\n\n\n}\n\n\nup_nic\n()\n \n{\n\n    \nname\n=\n$1\n\n    ip link \nset\n \n${\nname\n}\n up\n\n}\n\n\nset_nic_ns\n()\n \n{\n\n    \nnic\n=\n$1\n\n    \nns\n=\n$2\n\n    ip link \nset\n \n${\nnic\n}\n netns \n${\nns\n}\n\n\n}\n\n\nset_nic_ipv4\n()\n \n{\n\n    \nnic\n=\n$1\n\n    \nipmask\n=\n$2\n\n    \nns\n=\n$3\n\n    \nif\n \n[\n -n \n${\nns\n}\n \n]\n;\n \nthen\n\n        ip netns \nexec\n \n${\nns\n}\n ip address add \n${\nipmask\n}\n dev \n${\nnic\n}\n\n    \nelse\n\n        ip address add \n${\nipmask\n}\n dev \n${\nnic\n}\n\n    \nfi\n\n\n}\n\n\nset_nic_br\n()\n \n{\n\n    \nnic\n=\n$1\n\n    \nbr\n=\n$2\n\n    \nns\n=\n$3\n\n    \nif\n \n[\n -n \n${\nns\n}\n \n]\n;\n \nthen\n\n        ip netns \nexec\n \n${\nns\n}\n ip link \nset\n \n${\nnic\n}\n master \n${\nbr\n}\n\n    \nelse\n\n        ip link \nset\n \n${\nnic\n}\n master \n${\nbr\n}\n\n    \nfi\n\n\n}\n\n\nset_route\n()\n \n{\n\n    \nroute\n=\n$1\n\n    \nvia\n=\n$2\n\n    \ndev\n=\n$3\n\n    \nns\n=\n$4\n\n    \nif\n \n[\n -n \n${\nns\n}\n \n]\n;\n \nthen\n\n        \nif\n \n[\n -n \n${\ndev\n}\n \n]\n;\n \nthen\n\n            ip netns \nexec\n \n${\nns\n}\n ip route add \n${\nroute\n}\n via \n${\nvia\n}\n dev \n${\ndev\n}\n\n        \nelse\n\n            ip netns \nexec\n \n${\nns\n}\n ip route add \n${\nroute\n}\n via \n${\nvia\n}\n\n        \nfi\n\n    \nelse\n\n        \nif\n \n[\n -n \n${\ndev\n}\n \n]\n;\n \nthen\n\n            ip route add \n${\nroute\n}\n via \n${\nvia\n}\n dev \n${\ndev\n}\n\n        \nelse\n\n            ip route add \n${\nroute\n}\n via \n${\nvia\n}\n\n        \nfi\n\n    \nfi\n\n\n}\n\n\ncreate_vrouter\n()\n \n{\n\n    \nname\n=\n$1\n\n    \ntype\n=\n$2\n\n    \nipmask\n=\n$3\n\n    \ngw\n=\n$4\n\n    \nif\n \n[\n \n${\ntype\n}\n \n=\n \next\n \n]\n;\n \nthen\n\n        \nns_name\n=\nE-VRouter-\n${\nname\n}\n\n        \np2p_name\n=\npie-\n${\nname\n}\n\n        \np2p_peername\n=\npoe-\n${\nname\n}\n\n    \nelif\n \n[\n \n${\ntype\n}\n \n=\n \nint\n \n]\n;\n \nthen\n\n        \nns_name\n=\nI-VRouter-\n${\nname\n}\n\n        \np2p_name\n=\npii-\n${\nname\n}\n\n        \np2p_peername\n=\npoi-\n${\nname\n}\n\n    \nelse\n\n        \nns_name\n=\nVRouter-\n${\nname\n}\n\n        \np2p_name\n=\npi-\n${\nname\n}\n\n        \np2p_peername\n=\npo-\n${\nname\n}\n\n    \nfi\n\n    create_netns \n${\nns_name\n}\n\n    create_veth \n${\np2p_name\n}\n \n${\np2p_peername\n}\n\n    up_nic \n${\np2p_name\n}\n\n    up_nic \n${\np2p_peername\n}\n\n    set_nic_ns \n${\np2p_peername\n}\n \n${\nns_name\n}\n\n    set_nic_ipv4 \n${\np2p_peername\n}\n \n${\nipmask\n}\n \n${\nns_name\n}\n\n    set_route \n0.0.0.0/0\n \n${\ngw\n}\n \n${\np2p_peername\n}\n \n${\nns_name\n}\n\n    set_nic_br \n${\np2p_name\n}\n \nbr-int-legacy\n\n\n}\n\n\ncreate_vrouter \nvrtest\n \next\n \n192.168.100.1/24\n \n192.168.100.254\n\n\n\n\n\npython\uff1a\n\n\nclass\n \nnetns\n:\n\n    \ndef\n \n__init__\n(\nself\n):\n\n        \npass\n\n    \ndef\n \ncreate\n(\nself\n,\n \nname\n):\n\n        \nip\n.\nnetns\n.\nadd\n(\nname\n)\n\n\n\nclass\n \niproute\n:\n\n    \ndef\n \n__init__\n(\nself\n):\n\n        \npass\n\n    \ndef\n \ncreate_veth\n(\nself\n,\n \nname\n,\n \npeername\n):\n\n        \nip\n.\nlink\n.\nadd\n.\nname\n.\ntype\n.\nveth\n.\npeer\n.\npeername\n\n    \ndef\n \nup_nic\n(\nself\n,\n \nnic\n):\n\n        \nip\n.\nlink\n.\nset\n.\nnic\n.\nup\n\n    \ndef\n \nset_nic_ns\n(\nself\n,\n \nnic\n,\n \nns\n):\n\n        \nip\n.\nlink\n.\nset\n.\nnic\n.\nnetns\n.\nns\n\n    \ndef\n \nset_nic_ipv4\n(\nself\n,\n \nnic\n,\n \nipmask\n,\n \nns\n=\nNone\n):\n\n        \nif\n \nns\n \n==\n \nNone\n:\n\n            \nip\n.\nnetns\n.\nexec\n.\nns\n.\nip\n.\naddress\n.\nadd\n.\nipmask\n.\ndev\n.\nnic\n\n        \nelse\n:\n\n            \nip\n.\naddress\n.\nadd\n.\nipmask\n.\ndev\n.\nnic\n\n    \ndef\n \nset_route\n(\nself\n,\n \nroute\n,\n \nvia\n,\n \ndev\n=\nNone\n,\n \nns\n=\nNone\n):\n\n        \nif\n \nns\n \n==\n \nNone\n:\n\n            \nif\n \ndev\n \n==\n \nNone\n:\n\n                \nip\n.\nnetns\n.\nexec\n.\nns\n.\nip\n.\nroute\n.\nadd\n.\nroute\n.\nvia\n.\nvia\n.\ndev\n.\ndev\n\n            \nelse\n:\n\n                \nip\n.\nnetns\n.\nexec\n.\nns\n.\nip\n.\nroute\n.\nadd\n.\nroute\n.\nvia\n.\nvia\n\n        \nelse\n:\n\n            \nif\n \ndev\n \n==\n \nNone\n:\n\n                \nip\n.\nroute\n.\nadd\n.\nroute\n.\nvia\n.\nvia\n.\ndev\n.\ndev\n\n            \nelse\n:\n\n                \nip\n.\nroute\n.\nadd\n.\nroute\n.\nvia\n.\nvia\n\n    \ndef\n \nset_nic_br\n(\nself\n,\n \nnic\n,\n \nbr\n,\n \nns\n):\n\n        \nif\n \nns\n \n==\n \nNone\n:\n\n            \nip\n.\nnetns\n.\nexec\n.\nns\n.\nip\n.\nlink\n.\nset\n.\nnic\n.\nmaster\n.\nbr\n\n        \nelse\n:\n\n            \nip\n.\nlink\n.\nset\n.\nnic\n.\nmaster\n.\nbr\n\n\n\nclass\n \nVrouter\n:\n\n    \ndef\n \n__init__\n(\nself\n,\n \nname\n,\n \nstype\n,\n \nipmask\n,\n \ngw\n):\n\n        \npass\n\n    \ndef\n \ncreate\n(\nself\n,\n \nname\n,\n \nstype\n,\n \nipmask\n,\n \ngw\n):\n\n        \nif\n \nself\n.\nstype\n \n==\n \nint\n:\n\n            \nnsname\n \n=\n \nI-VRouter-\n+\nname\n\n            \np2p_name\n \n=\n \npii-\n+\nname\n\n            \np2p_peername\n \n=\n \npoi-\n+\nname\n\n        \nelif\n \nself\n.\nstype\n \n==\n \next\n:\n\n            \nnsname\n \n=\n \nE-VRouter-\n+\nname\n\n            \np2p_name\n \n=\n \npie-\n+\nname\n\n            \np2p_peername\n \n=\n \npoe-\n+\nname\n\n        \nelse\n:\n\n            \nnsname\n \n=\n \nVRouter-\n+\nname\n\n            \np2p_name\n \n=\n \npi-\n+\nname\n\n            \np2p_peername\n \n=\n \npo-\n+\nname\n\n\n        \nns\n \n=\n \nnetns\n()\n\n        \nns\n.\ncreate\n(\nnsname\n)\n\n        \nip\n \n=\n \niproute\n()\n\n        \nip\n.\ncreate_veth\n(\np2p_name\n,\n \np2p_peername\n)\n\n        \nip\n.\nup_nic\n(\np2p_name\n)\n\n        \nip\n.\nup_nic\n(\np2p_peername\n)\n\n        \nip\n.\nset_nic_ns\n(\np2p_peername\n,\n \nnsname\n)\n\n        \nip\n.\nset_nic_ipv4\n(\np2p_peername\n,\n \nipmask\n,\n \nnsname\n)\n\n        \nip\n.\nset_route\n(\n0.0.0.0/0\n,\n \ngw\n,\n \np2p_peername\n,\n \nnsname\n)\n\n        \nip\n.\nset_nic_br\n(\np2p_name\n,\n \nbr-int-legacy\n)\n\n\n\nvr\n \n=\n \nVrouter\n()\n\n\nvr\n.\ncreate\n(\nvrtest\n,\n \next\n,\n \n192.168.100.1/24\n,\n \n192.168.100.254\n)\n\n\n\n\n\n\u7136\u540e\uff0c\u795e\u5947\u51fa\u73b0\u4e86\uff0c\u5f53\u6211\u60f3\u628a\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u76f4\u63a5\u7ffb\u8bd1\u6210golang\u65f6\u5019\uff0c\u53d1\u73b0\u5199\u4e0d\u4e0b\u53bb\uff0c\u56e0\u4e3agolang\u91cc\u6a21\u62df\u9762\u5411\u5bf9\u8c61\u901a\u5e38\u7528\u7684\u662fstruct\u6765\u6a21\u62df\u5c5e\u6027\uff0c\u7528\u7b7e\u540d\u51fd\u6570\u6a21\u62df\u65b9\u6cd5\uff0c\u90a3\u4e48\u95ee\u9898\u6765\u4e86\u3002\u4e0a\u9762py\u4ee3\u7801\u91cc\u7684iproute\u7c7b\u6ca1\u6709\u8bbe\u5b9a\u5c5e\u6027\uff0c\u53ea\u8bbe\u5b9a\u65b9\u6cd5\uff0c\u800cgo\u7684struct\u6ca1\u6709\u8bbe\u7f6e\u5143\u7d20\u5c31\u89c9\u5f97\u602a\u602a\u7684\uff08\u5176\u5b9ego\u91ccstruct\u6ca1\u6709\u5143\u7d20\u4e5f\u5f88\u5e38\u89c1\uff09\u3002\n\n\n\u5230\u6b64\uff0c\u5f00\u59cb\u610f\u8bc6\u5230\uff0c\u6211\u5e76\u6ca1\u6709\u771f\u6b63\u7406\u89e3\u9762\u5411\u5bf9\u8c61\u7684\u6982\u5ff5\uff0c\u6211\u5c06python\u7684class\u5f53\u5c01\u88c5\u62ff\u6765\u7528\uff08\u6bd4\u5982\u4e0a\u9762\u7684iproute\u7c7b\uff09\uff0c\u800c\u4e0d\u662f\u5f53\u4f5c\u771f\u6b63\u7684\u9762\u5411\u5bf9\u8c61\u3002\u90a3\u4e48\u63a5\u4e0b\u6765\uff0c\u5148\u5bf9python\u505a\u6539\u9020\uff0c\u505a\u6210\u771f\u6b63\u7684\u9762\u5411\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u8bd5\u7740\u7528go\u6765\u5199\n\n\npython\uff1a\n\n\n# _*_ coding: utf-8 _*_\n\n\n\nclass\n \nNetns\n(\nobject\n):\n\n    \ndef\n \n__init__\n(\nself\n,\n \nname\n):\n\n        \nself\n.\nname\n \n=\n \nname\n\n\n    \ndef\n \nadd\n(\nself\n):\n\n        \nprint\n \nip netns add {}\n.\nformat\n(\nself\n.\nname\n)\n\n\n    \ndef\n \ndelete\n(\nself\n):\n\n        \nprint\n \nip netns del {}\n.\nformat\n(\nself\n.\nname\n)\n\n\n\nclass\n \nNic\n(\nobject\n):\n\n    \ndef\n \n__init__\n(\nself\n,\n \nname\n,\n \nnetns\n=\nNone\n):\n\n        \nself\n.\nname\n \n=\n \nname\n        \n# \u7f51\u5361\u540d\n\n        \nself\n.\nnetns\n \n=\n \nnetns\n      \n# \u7f51\u5361\u5f53\u524d\u6240\u5728netns\n\n\n    \ndef\n \nadd\n(\nself\n):\n\n        \nprint\n \nNeed to override or overload!\n\n\n    \ndef\n \ndelete\n(\nself\n):\n\n        \nif\n \nself\n.\nnetns\n \n==\n \nNone\n:\n\n            \nprint\n \nip link delete {}\n.\nformat\n(\nself\n.\nname\n)\n\n        \nelse\n:\n\n            \nprint\n \nip netns exec {} ip link delete {}\n.\nformat\n(\nself\n.\nnetns\n,\n \nself\n.\nname\n)\n\n\n    \ndef\n \nup\n(\nself\n):\n\n        \nif\n \nself\n.\nnetns\n \n==\n \nNone\n:\n\n            \nprint\n \nip link set {} up\n.\nformat\n(\nself\n.\nname\n)\n\n        \nelse\n:\n\n            \nprint\n \nip netns exec {} ip link set {} up\n.\nformat\n(\nself\n.\nnetns\n,\n \nself\n.\nname\n)\n\n\n    \ndef\n \ndown\n(\nself\n):\n\n        \nif\n \nself\n.\nnetns\n \n==\n \nNone\n:\n\n            \nprint\n \nip link set {} down\n.\nformat\n(\nself\n.\nname\n)\n\n        \nelse\n:\n\n            \nprint\n \nip netns exec {} ip link set {} down\n.\nformat\n(\nself\n.\nnetns\n,\n \nself\n.\nname\n)\n\n\n    \ndef\n \nsetMaster\n(\nself\n,\n \nmaster\n):\n\n        \nif\n \nself\n.\nnetns\n \n==\n \nNone\n:\n\n            \nprint\n \nip link set {} master {}\n.\nformat\n(\nself\n.\nname\n,\n \nmaster\n)\n\n        \nelse\n:\n\n            \nprint\n \nip netns exec {} ip link set {} master {}\n.\nformat\n(\nself\n.\nnetns\n,\n \nself\n.\nname\n,\n \nmaster\n)\n\n\n    \ndef\n \nsetNetns\n(\nself\n,\n \nnetns\n):\n\n        \n\n\n        \u5c06\u5f53\u524d\u7f51\u7edc\u547d\u540d\u7a7a\u95f4(self.netns)\u4e2d\u7684\u7f51\u5361\u653e\u7f6e\u5230\u65b0\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\n\n\n        \n\n        \nif\n \nself\n.\nnetns\n \n==\n \nNone\n:\n\n            \nprint\n \nip link set {} netns {}\n.\nformat\n(\nself\n.\nname\n,\n \nnetns\n)\n\n        \nelse\n:\n\n            \nprint\n \nip netns exec {} ip link set {} netns {}\n.\nformat\n(\nself\n.\nnetns\n,\n \nself\n.\nname\n,\n \nnetns\n)\n\n        \nself\n.\nnetns\n \n=\n \nnetns\n\n\n    \ndef\n \naddIPAddr\n(\nself\n,\n \nip\n):\n\n        \nif\n \nself\n.\nnetns\n \n==\n \nNone\n:\n\n            \nprint\n \nip address add {} dev {}\n.\nformat\n(\nip\n,\n \nself\n.\nname\n)\n\n        \nelse\n:\n\n            \nprint\n \nip netns exec {} ip address add {} dev {}\n.\nformat\n(\nself\n.\nnetns\n,\n \nip\n,\n \nself\n.\nname\n)\n\n\n    \ndef\n \nisExists\n(\nself\n):\n\n        \nif\n \nself\n.\nnetns\n \n==\n \nNone\n:\n\n            \nprint\n \nip link show dev {} \n/dev/null 2\n1\n.\nformat\n(\nself\n.\nname\n)\n\n        \nelse\n:\n\n            \nprint\n \nip netns exec {} ip link show dev {} \n/dev/null 2\n1\n.\nformat\n(\nself\n.\nnetns\n,\n \nself\n.\nname\n)\n\n\n\nclass\n \nVtep\n(\nNic\n):\n\n    \ndef\n \n__init__\n(\nself\n,\n \nname\n,\n \nvni\n,\n \ndev\n,\n \nport\n,\n \nnetns\n=\nNone\n,\n \ngroup\n=\nNone\n):\n\n        \nNic\n.\n__init__\n(\nself\n,\n \nname\n,\n \nnetns\n)\n\n        \nself\n.\nvni\n \n=\n \nvni\n\n        \nself\n.\ngroup\n \n=\n \ngroup\n\n        \nself\n.\ndev\n \n=\n \ndev\n\n        \nself\n.\nport\n \n=\n \nport\n\n\n    \ndef\n \nadd\n(\nself\n):\n\n        \nif\n \nself\n.\ngroup\n \n==\n \nNone\n:\n\n            \nif\n \nself\n.\nnetns\n \n==\n \nNone\n:\n\n                \nprint\n \nip link add {} mtu 1500 type vxlan id {} ttl 64 dev {} dstport {}\n.\nformat\n(\n\n                    \nself\n.\nname\n,\n\n                    \nself\n.\nvni\n,\n\n                    \nself\n.\ndev\n,\n\n                    \nself\n.\nport\n\n                \n)\n\n            \nelse\n:\n\n                \nprint\n \nip netns exec {} ip link add {} mtu 1500 type vxlan id {} ttl 64 dev {} dstport {}\n.\nformat\n(\n\n                    \nself\n.\nnetns\n,\n\n                    \nself\n.\nname\n,\n\n                    \nself\n.\nvni\n,\n\n                    \nself\n.\ndev\n,\n\n                    \nself\n.\nport\n\n                \n)\n\n        \nelse\n:\n\n            \nif\n \nself\n.\nnetns\n \n==\n \nNone\n:\n\n                \nprint\n \nip link add {} mtu 1500 type vxlan id {} group {} ttl 64 dev {} dstport {}\n.\nformat\n(\n\n                    \nself\n.\nname\n,\n\n                    \nself\n.\nvni\n,\n\n                    \nself\n.\ngroup\n,\n\n                    \nself\n.\ndev\n,\n\n                    \nself\n.\nport\n,\n\n                \n)\n\n            \nelse\n:\n\n                \nprint\n \nip netns exec {} ip link add {} mtu 1500 type vxlan id {} group {} ttl 64 dev {} dstport {}\n.\nformat\n(\n\n                    \nself\n.\nnetns\n,\n\n                    \nself\n.\nname\n,\n\n                    \nself\n.\nvni\n,\n\n                    \nself\n.\ngroup\n,\n\n                    \nself\n.\ndev\n,\n\n                    \nself\n.\nport\n\n                \n)\n\n\n\nclass\n \nBridge\n(\nNic\n):\n\n    \ndef\n \n__init__\n(\nself\n,\n \nname\n,\n \nnetns\n=\nNone\n):\n\n        \nNic\n.\n__init__\n(\nself\n,\n \nname\n,\n \nnetns\n)\n\n\n    \ndef\n \nadd\n(\nself\n):\n\n        \nif\n \nself\n.\nnetns\n \n==\n \nNone\n:\n\n            \nprint\n \nip link add {} type bridge\n.\nformat\n(\nself\n.\nname\n)\n\n        \nelse\n:\n\n            \nprint\n \nip netns exec {} ip link add {} type bridge\n.\nformat\n(\nself\n.\nnetns\n,\n \nself\n.\nname\n)\n\n\n\nclass\n \nVeth\n(\nNic\n):\n\n    \ndef\n \n__init__\n(\nself\n,\n \nname\n,\n \npeer\n=\nNone\n,\n \nnetns\n=\nNone\n):\n\n        \nNic\n.\n__init__\n(\nself\n,\n \nname\n,\n \nnetns\n)\n\n        \nself\n.\npeer\n \n=\n \npeer\n\n\n    \ndef\n \nadd\n(\nself\n):\n\n        \nif\n \nself\n.\npeer\n \n==\n \nNone\n:\n\n            \nif\n \nself\n.\nnetns\n \n==\n \nNone\n:\n\n                \nprint\n \nip link add {} type veth peer\n.\nformat\n(\nself\n.\nname\n)\n\n            \nelse\n:\n\n                \nprint\n \nip netns exec {} ip link add {} type veth peer\n.\nformat\n(\nself\n.\nnetns\n,\n \nself\n.\nname\n)\n\n            \n# \u5047\u8bbe\u83b7\u5f97\u7684peer\u662fvethX\n\n            \nself\n.\npeer\n \n=\n \nvethX\n\n            \nreturn\n \nself\n.\npeer\n\n        \nelse\n:\n\n            \nif\n \nself\n.\nnetns\n \n==\n \nNone\n:\n\n                \nprint\n \nip link add {} type veth peer name {}\n.\nformat\n(\nself\n.\nname\n,\n \nself\n.\npeer\n)\n\n            \nelse\n:\n\n                \nprint\n \nip netns exec {} ip link add {} type veth peer name {}\n.\nformat\n(\nself\n.\nnetns\n,\n \nself\n.\nname\n,\n \nself\n.\npeer\n)\n\n\n\nprint\n \n=====class Netns test=====\n\n\nns\n \n=\n \nNetns\n(\nname\n=\nns1\n)\n\n\nns\n.\nadd\n()\n\n\nns\n.\ndelete\n()\n\n\nprint\n\n\n\nprint\n \n=====class Bridge test=====\n\n\nprint\n \n---no netns---\n\n\nbr1\n \n=\n \nBridge\n(\nname\n=\nbr1\n)\n\n\nbr1\n.\nisExists\n()\n\n\nbr1\n.\nadd\n()\n\n\nbr1\n.\nup\n()\n\n\nbr1\n.\ndown\n()\n\n\nbr1\n.\ndelete\n()\n\n\nprint\n \n---netns=ns1---\n\n\nbr2\n \n=\n \nBridge\n(\nname\n=\nbr1\n,\n \nnetns\n=\nns1\n)\n\n\nbr2\n.\nisExists\n()\n\n\nbr2\n.\nadd\n()\n\n\nbr2\n.\nup\n()\n\n\nbr2\n.\ndown\n()\n\n\nbr2\n.\ndelete\n()\n\n\nprint\n\n\n\nprint\n \n=====class Vtep test=====\n\n\nprint\n \n---multi vtep---\n\n\nprint\n \n-no netns-\n\n\nmvtep1\n \n=\n \nVtep\n(\n\n    \nname\n=\nint-v1111111\n,\n\n    \nvni\n=\n1111111\n,\n\n    \ngroup\n=\n239.1.111.111\n,\n\n    \ndev\n=\nem1\n,\n\n    \nport\n=\n4789\n\n\n)\n\n\nmvtep1\n.\nisExists\n()\n\n\nmvtep1\n.\nadd\n()\n\n\nmvtep1\n.\nsetMaster\n(\nmaster\n=\nbr1\n)\n\n\nmvtep1\n.\nup\n()\n\n\nmvtep1\n.\ndown\n()\n\n\nmvtep1\n.\ndelete\n()\n\n\nprint\n \n---multi vtep---\n\n\nprint\n \n-netns=ns1-\n\n\nmvtep2\n \n=\n \nVtep\n(\n\n    \nname\n=\nint-v1111111\n,\n\n    \nvni\n=\n1111111\n,\n\n    \ngroup\n=\n239.1.111.111\n,\n\n    \ndev\n=\nem1\n,\n\n    \nport\n=\n4789\n,\n\n    \nnetns\n=\nns1\n\n\n)\n\n\nmvtep2\n.\nisExists\n()\n\n\nmvtep2\n.\nadd\n()\n\n\nmvtep2\n.\nsetMaster\n(\nmaster\n=\nbr1\n)\n\n\nmvtep2\n.\nup\n()\n\n\nmvtep2\n.\ndown\n()\n\n\nmvtep2\n.\ndelete\n()\n\n\n\nprint\n \n---uni vtep---\n\n\nprint\n \n-no netns-\n\n\nuvtep1\n \n=\n \nVtep\n(\n\n    \nname\n=\nint-v100\n,\n\n    \nvni\n=\n100\n,\n\n    \ndev\n=\nem1\n,\n\n    \nport\n=\n4789\n\n\n)\n\n\nuvtep1\n.\nisExists\n()\n\n\nuvtep1\n.\nadd\n()\n\n\nuvtep1\n.\nsetMaster\n(\nmaster\n=\nbr1\n)\n\n\nuvtep1\n.\nup\n()\n\n\nuvtep1\n.\ndown\n()\n\n\nuvtep1\n.\ndelete\n()\n\n\nprint\n \n-netns=ns1-\n\n\nuvtep2\n \n=\n \nVtep\n(\n\n    \nname\n=\nint-v100\n,\n\n    \nvni\n=\n100\n,\n\n    \ndev\n=\nem1\n,\n\n    \nport\n=\n4789\n,\n\n    \nnetns\n=\nns1\n\n\n)\n\n\nuvtep2\n.\nisExists\n()\n\n\nuvtep2\n.\nadd\n()\n\n\nuvtep2\n.\nsetMaster\n(\nmaster\n=\nbr1\n)\n\n\nuvtep2\n.\nup\n()\n\n\nuvtep2\n.\ndown\n()\n\n\nuvtep2\n.\ndelete\n()\n\n\nprint\n\n\n\nprint\n \n=====class Veth test=====\n\n\nprint\n \n---no peer---\n\n\nprint\n \n--no netns--\n\n\nveth1a\n \n=\n \nVeth\n(\nname\n=\npii-xxx\n)\n\n\nveth1a\n.\nadd\n()\n\n\nveth1a\n.\nup\n()\n\n\nveth1a\n.\nsetNetns\n(\nnetns\n=\nns1\n)\n\n\nprint\n\n\n\nprint\n \n--netns=ns1--\n\n\nveth2a\n \n=\n \nVeth\n(\nname\n=\npii-xxx\n,\n \nnetns\n=\nns1\n)\n\n\nveth2a\n.\nadd\n()\n\n\nveth2a\n.\nup\n()\n\n\nveth2a\n.\nsetNetns\n(\nnetns\n=\nns2\n)\n\n\nprint\n\n\n\nprint\n \n---peer=poi-xxx---\n\n\nprint\n \n--no netns--\n\n\nveth3a\n \n=\n \nVeth\n(\nname\n=\npii-xxx\n,\n \npeer\n=\npoi-xxx\n)\n\n\nveth3a\n.\nadd\n()\n\n\nveth3a\n.\nup\n()\n\n\nveth3a\n.\nsetNetns\n(\nnetns\n=\nns1\n)\n\n\nprint\n\n\n\nprint\n \n--netns=ns1--\n\n\nveth4a\n \n=\n \nVeth\n(\nname\n=\npii-xxx\n,\n \npeer\n=\npoi-xxx\n,\n \nnetns\n=\nns1\n)\n\n\nveth4a\n.\nadd\n()\n\n\nveth4a\n.\nup\n()\n\n\nveth4a\n.\nsetNetns\n(\nnetns\n=\nns2\n)\n\n\n\n\n\n\u8f93\u51fa\n\n\n=====class Netns test=====\nip netns add ns1\nip netns del ns1\n\n=====class Bridge test=====\n---no netns---\nip link show dev br1 \n/dev/null 2\n1\nip link add br1 type bridge\nip link set br1 up\nip link set br1 down\nip link delete br1\n---netns=ns1---\nip netns exec ns1 ip link show dev br1 \n/dev/null 2\n1\nip netns exec ns1 ip link add br1 type bridge\nip netns exec ns1 ip link set br1 up\nip netns exec ns1 ip link set br1 down\nip netns exec ns1 ip link delete br1\n\n=====class Vtep test=====\n---multi vtep---\n-no netns-\nip link show dev int-v1111111 \n/dev/null 2\n1\nip link add int-v1111111 mtu 1500 type vxlan id 1111111 group 239.1.111.111 ttl 64 dev em1 dstport 4789\nip link set int-v1111111 master br1\nip link set int-v1111111 up\nip link set int-v1111111 down\nip link delete int-v1111111\n---multi vtep---\n-netns=ns1-\nip netns exec ns1 ip link show dev int-v1111111 \n/dev/null 2\n1\nip netns exec ns1 ip link add int-v1111111 mtu 1500 type vxlan id 1111111 group 239.1.111.111 ttl 64 dev em1 dstport 4789\nip netns exec ns1 ip link set int-v1111111 master br1\nip netns exec ns1 ip link set int-v1111111 up\nip netns exec ns1 ip link set int-v1111111 down\nip netns exec ns1 ip link delete int-v1111111\n---uni vtep---\n-no netns-\nip link show dev int-v100 \n/dev/null 2\n1\nip link add int-v100 mtu 1500 type vxlan id 100 ttl 64 dev em1 dstport 4789\nip link set int-v100 master br1\nip link set int-v100 up\nip link set int-v100 down\nip link delete int-v100\n-netns=ns1-\nip netns exec ns1 ip link show dev int-v100 \n/dev/null 2\n1\nip netns exec ns1 ip link add int-v100 mtu 1500 type vxlan id 100 ttl 64 dev em1 dstport 4789\nip netns exec ns1 ip link set int-v100 master br1\nip netns exec ns1 ip link set int-v100 up\nip netns exec ns1 ip link set int-v100 down\nip netns exec ns1 ip link delete int-v100\n\n=====class Veth test=====\n---no peer---\n--no netns--\nip link add pii-xxx type veth peer\nip link set pii-xxx up\nip link set pii-xxx netns ns1\n\n--netns=ns1--\nip netns exec ns1 ip link add pii-xxx type veth peer\nip netns exec ns1 ip link set pii-xxx up\nip netns exec ns1 ip link set pii-xxx netns ns2\n\n---peer=poi-xxx---\n--no netns--\nip link add pii-xxx type veth peer name poi-xxx\nip link set pii-xxx up\nip link set pii-xxx netns ns1\n\n--netns=ns1--\nip netns exec ns1 ip link add pii-xxx type veth peer name poi-xxx\nip netns exec ns1 ip link set pii-xxx up\nip netns exec ns1 ip link set pii-xxx netns ns2\n\n\n\n\n\u4e0a\u9762\u4ee3\u7801\u7528go\u5b9e\u73b0\uff1a\n\n\n\u5efa\u4e00\u4e2aiproute\u76ee\u5f55\uff0c\u6709bridge\u3001netns\u3001nic\u3001veth\u3001vtep\u8fd9\u51e0\u4e2a\u5b50\u76ee\u5f55\uff0c\u5b58\u653e\u57fa\u7840\u5e93\uff1a\n\n\nnetns/netns.go\n\n\npackage\n \nnetns\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nnetns\n \nstruct\n \n{\n\n    \nname\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nnetns\n)\n \nAdd\n()\n \n{\n\n    \nfmt\n.\nPrintf\n(\nip netns add %s\\n\n,\n \nthis\n.\nname\n)\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nnetns\n)\n \nDel\n()\n \n{\n\n    \nfmt\n.\nPrintf\n(\nip netns del %s\\n\n,\n \nthis\n.\nname\n)\n\n\n}\n\n\n\nfunc\n \nNewNetns\n(\nname\n \nstring\n)\n \n*\nnetns\n \n{\n \nreturn\n \nnetns\n{\nname\n:\n \nname\n}\n \n}\n\n\n\n\n\nnic/nic.go\n\n\npackage\n \nnic\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nNic\n \nstruct\n \n{\n\n    \nName\n  \nstring\n\n    \nNetns\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nNic\n)\n \nAdd\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nNeed to override or overload!\n)\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nNic\n)\n \nDel\n()\n \n{\n\n    \nif\n \nthis\n.\nNetns\n \n==\n \n \n{\n\n        \nfmt\n.\nPrintf\n(\nip link delete %s\\n\n,\n \nthis\n.\nName\n)\n\n    \n}\n \nelse\n \n{\n\n        \nfmt\n.\nPrintf\n(\nip netns exec %s ip link delete %s\\n\n,\n\n            \nthis\n.\nNetns\n,\n\n            \nthis\n.\nName\n,\n\n        \n)\n\n    \n}\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nNic\n)\n \nUp\n()\n \n{\n\n    \nif\n \nthis\n.\nNetns\n \n==\n \n \n{\n\n        \nfmt\n.\nPrintf\n(\nip link set %s up\\n\n,\n \nthis\n.\nName\n)\n\n    \n}\n \nelse\n \n{\n\n        \nfmt\n.\nPrintf\n(\nip netns exec %s ip link set %s up\\n\n,\n\n            \nthis\n.\nNetns\n,\n\n            \nthis\n.\nName\n,\n\n        \n)\n\n    \n}\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nNic\n)\n \nDown\n()\n \n{\n\n    \nif\n \nthis\n.\nNetns\n \n==\n \n \n{\n\n        \nfmt\n.\nPrintf\n(\nip link set %s down\\n\n,\n \nthis\n.\nName\n)\n\n    \n}\n \nelse\n \n{\n\n        \nfmt\n.\nPrintf\n(\nip netns exec %s ip link set %s down\\n\n,\n\n            \nthis\n.\nNetns\n,\n\n            \nthis\n.\nName\n,\n\n        \n)\n\n    \n}\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nNic\n)\n \nSetMaster\n(\nmaster\n \nstring\n)\n \n{\n\n    \nif\n \nthis\n.\nNetns\n \n==\n \n \n{\n\n        \nfmt\n.\nPrintf\n(\nip link set %s master %s\\n\n,\n\n            \nthis\n.\nName\n,\n\n            \nmaster\n,\n\n        \n)\n\n    \n}\n \nelse\n \n{\n\n        \nfmt\n.\nPrintf\n(\nip netns exec %s ip link set %s master %s\\n\n,\n\n            \nthis\n.\nNetns\n,\n\n            \nthis\n.\nName\n,\n\n            \nmaster\n,\n\n        \n)\n\n    \n}\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nNic\n)\n \nSetNetns\n(\nnetns\n \nstring\n)\n \n{\n\n    \nif\n \nthis\n.\nNetns\n \n==\n \n \n{\n\n        \nfmt\n.\nPrintf\n(\nip link set %s netns %s\\n\n,\n\n            \nthis\n.\nName\n,\n\n            \nnetns\n,\n\n        \n)\n\n    \n}\n \nelse\n \n{\n\n        \nfmt\n.\nPrintf\n(\nip netns exec %s ip link set %s netns %s\\n\n,\n\n            \nthis\n.\nNetns\n,\n\n            \nthis\n.\nName\n,\n\n            \nnetns\n,\n\n        \n)\n\n    \n}\n\n    \nthis\n.\nNetns\n \n=\n \nnetns\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nNic\n)\n \nAddIPAddr\n(\nip\n \nstring\n)\n \n{\n\n    \nif\n \nthis\n.\nNetns\n \n==\n \n \n{\n\n        \nfmt\n.\nPrintf\n(\nip address add %s dev %s\\n\n,\n\n            \nip\n,\n\n            \nthis\n.\nName\n,\n\n        \n)\n\n    \n}\n \nelse\n \n{\n\n        \nfmt\n.\nPrintf\n(\nip netns exec %s ip address add %s dev %s\\n\n,\n\n            \nthis\n.\nNetns\n,\n\n            \nip\n,\n\n            \nthis\n.\nName\n,\n\n        \n)\n\n    \n}\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nNic\n)\n \nIsExists\n()\n \n{\n\n    \nif\n \nthis\n.\nNetns\n \n==\n \n \n{\n\n        \nfmt\n.\nPrintf\n(\nip link show dev %s \n/dev/null 2\n1\\n\n,\n \nthis\n.\nName\n)\n\n    \n}\n \nelse\n \n{\n\n        \nfmt\n.\nPrintf\n(\nip netns exec %s ip link show dev %s \n/dev/null 2\n1\\n\n,\n \nthis\n.\nNetns\n,\n \nthis\n.\nName\n)\n\n    \n}\n\n\n}\n\n\n\n\n\nbridge/bridge.go\n\n\npackage\n \nbridge\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ngithub.com/cyent/repo1/iproute/nic\n\n\n)\n\n\n\ntype\n \nbridge\n \nstruct\n \n{\n\n    \nnic\n.\nNic\n\n    \nname\n  \nstring\n\n    \nnetns\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nbridge\n)\n \nAdd\n()\n \n{\n\n    \nif\n \nthis\n.\nnetns\n \n==\n \n \n{\n\n        \nfmt\n.\nPrintf\n(\nip link add %s type bridge\\n\n,\n \nthis\n.\nname\n)\n\n    \n}\n \nelse\n \n{\n\n        \nfmt\n.\nPrintf\n(\nip netns exec %s ip link add %s type bridge\\n\n,\n \nthis\n.\nnetns\n,\n \nthis\n.\nname\n)\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nNewBridge\n(\nname\n \nstring\n,\n \nnetns\n \nstring\n)\n \n*\nbridge\n \n{\n\n    \nb\n \n:=\n \nnew\n(\nbridge\n)\n\n    \nb\n.\nNic\n.\nName\n \n=\n \nname\n\n    \nb\n.\nNic\n.\nNetns\n \n=\n \nnetns\n\n    \nb\n.\nname\n \n=\n \nname\n\n    \nb\n.\nnetns\n \n=\n \nnetns\n\n    \nreturn\n \nb\n\n\n}\n\n\n\n\n\nveth/veth.go\n\n\npackage\n \nveth\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ngithub.com/cyent/repo1/iproute/nic\n\n\n)\n\n\n\ntype\n \nveth\n \nstruct\n \n{\n\n    \nnic\n.\nNic\n\n    \nname\n  \nstring\n\n    \npeer\n  \nstring\n\n    \nnetns\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nveth\n)\n \nAdd\n()\n \n{\n\n    \nif\n \nthis\n.\npeer\n \n==\n \n \n{\n\n        \nif\n \nthis\n.\nnetns\n \n==\n \n \n{\n\n            \nfmt\n.\nPrintf\n(\nip link add %s type veth peer\\n\n,\n \nthis\n.\nname\n)\n\n        \n}\n \nelse\n \n{\n\n            \nfmt\n.\nPrintf\n(\nip netns exec %s ip link add %s type veth peer\\n\n,\n \nthis\n.\nnetns\n,\n \nthis\n.\nname\n)\n\n        \n}\n\n        \n// \u5047\u8bbe\u83b7\u5f97\u7684peer\u662fvethX\n\n        \nthis\n.\npeer\n \n=\n \nvethX\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nthis\n.\nnetns\n \n==\n \n \n{\n\n            \nfmt\n.\nPrintf\n(\nip link add %s type veth peer name %s\\n\n,\n \nthis\n.\nname\n,\n \nthis\n.\npeer\n)\n\n        \n}\n \nelse\n \n{\n\n            \nfmt\n.\nPrintf\n(\nip netns exec %s ip link add %s type veth peer name %s\\n\n,\n \nthis\n.\nnetns\n,\n \nthis\n.\nname\n,\n \nthis\n.\npeer\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nNew\n(\nname\n \nstring\n,\n \npeer\n \nstring\n,\n \nnetns\n \nstring\n)\n \n*\nveth\n \n{\n\n    \nv\n \n:=\n \nnew\n(\nveth\n)\n\n    \nv\n.\nNic\n.\nName\n \n=\n \nname\n\n    \nv\n.\nNic\n.\nNetns\n \n=\n \nnetns\n\n    \nv\n.\nname\n \n=\n \nname\n\n    \nv\n.\npeer\n \n=\n \npeer\n\n    \nv\n.\nnetns\n \n=\n \nnetns\n\n    \nreturn\n \nv\n\n\n}\n\n\n\n\n\nvtep/vtep.go\n\n\npackage\n \nvtep\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ngithub.com/cyent/repo1/iproute/nic\n\n\n)\n\n\n\ntype\n \nvtep\n \nstruct\n \n{\n\n    \nnic\n.\nNic\n\n    \nname\n  \nstring\n\n    \nvni\n   \nint\n\n    \ndev\n   \nstring\n\n    \nport\n  \nint\n\n    \nnetns\n \nstring\n\n    \ngroup\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nvtep\n)\n \nAdd\n()\n \n{\n\n    \nif\n \nthis\n.\ngroup\n \n==\n \n \n{\n\n        \nif\n \nthis\n.\nnetns\n \n==\n \n \n{\n\n            \nfmt\n.\nPrintf\n(\nip link add %s mtu 1500 type vxlan id %d ttl 64 dev %s dstport %d\\n\n,\n\n                \nthis\n.\nname\n,\n\n                \nthis\n.\nvni\n,\n\n                \nthis\n.\ndev\n,\n\n                \nthis\n.\nport\n,\n\n            \n)\n\n        \n}\n \nelse\n \n{\n\n            \nfmt\n.\nPrintf\n(\nip netns exec %s ip link add %s mtu 1500 type vxlan id %d ttl 64 dev %s dstport %d\\n\n,\n\n                \nthis\n.\nnetns\n,\n\n                \nthis\n.\nname\n,\n\n                \nthis\n.\nvni\n,\n\n                \nthis\n.\ndev\n,\n\n                \nthis\n.\nport\n,\n\n            \n)\n\n        \n}\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nthis\n.\nnetns\n \n==\n \n \n{\n\n            \nfmt\n.\nPrintf\n(\nip link add %s mtu 1500 type vxlan id %d group %s ttl 64 dev %s dstport %d\\n\n,\n\n                \nthis\n.\nname\n,\n\n                \nthis\n.\nvni\n,\n\n                \nthis\n.\ngroup\n,\n\n                \nthis\n.\ndev\n,\n\n                \nthis\n.\nport\n,\n\n            \n)\n\n        \n}\n \nelse\n \n{\n\n            \nfmt\n.\nPrintf\n(\nip netns exec %s ip link add %s mtu 1500 type vxlan id %d group %s ttl 64 dev %s dstport %d\\n\n,\n\n                \nthis\n.\nnetns\n,\n\n                \nthis\n.\nname\n,\n\n                \nthis\n.\nvni\n,\n\n                \nthis\n.\ngroup\n,\n\n                \nthis\n.\ndev\n,\n\n                \nthis\n.\nport\n,\n\n            \n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nNewVtep\n(\nname\n \nstring\n,\n \nvni\n \nint\n,\n \ndev\n \nstring\n,\n \nport\n \nint\n,\n \nnetns\n \nstring\n,\n \ngroup\n \nstring\n)\n \n*\nvtep\n \n{\n\n    \nv\n \n:=\n \nnew\n(\nvtep\n)\n\n    \nv\n.\nNic\n.\nName\n \n=\n \nname\n\n    \nv\n.\nNic\n.\nNetns\n \n=\n \nnetns\n\n    \nv\n.\nname\n \n=\n \nname\n\n    \nv\n.\nnetns\n \n=\n \nnetns\n\n    \nv\n.\nvni\n \n=\n \nvni\n\n    \nv\n.\ndev\n \n=\n \ndev\n\n    \nv\n.\nport\n \n=\n \nport\n\n    \nv\n.\ngroup\n \n=\n \ngroup\n\n    \nreturn\n \nv\n\n\n}\n\n\n\n\n\n\u8c03\u7528\u8005\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ngithub.com/cyent/repo1/iproute/bridge\n\n    \ngithub.com/cyent/repo1/iproute/netns\n\n    \ngithub.com/cyent/repo1/iproute/veth\n\n    \ngithub.com/cyent/repo1/iproute/vtep\n\n\n)\n\n\n\ntype\n \nvnic\n \ninterface\n \n{\n\n    \nAdd\n()\n\n    \nDel\n()\n\n    \nUp\n()\n\n    \nDown\n()\n\n    \nSetMaster\n(\nstring\n)\n\n    \nSetNetns\n(\nstring\n)\n\n    \nAddIPAddr\n(\nstring\n)\n\n    \nIsExists\n()\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\n=====class Netns test=====\n)\n\n    \nns\n \n:=\n \nnetns\n.\nNew\n(\nns1\n)\n\n    \nns\n.\nAdd\n()\n\n    \nns\n.\nDel\n()\n\n    \nfmt\n.\nPrintln\n()\n\n\n    \nvar\n \ni\n \nvnic\n\n\n    \nfmt\n.\nPrintln\n(\n=====class Bridge test=====\n)\n\n    \nfmt\n.\nPrintln\n(\n---no netns---\n)\n\n    \ni\n \n=\n \nbridge\n.\nNew\n(\nbr1\n,\n \n)\n\n    \ni\n.\nIsExists\n()\n\n    \ni\n.\nAdd\n()\n\n    \ni\n.\nUp\n()\n\n    \ni\n.\nDown\n()\n\n    \ni\n.\nDel\n()\n\n    \nfmt\n.\nPrintln\n(\n---netns=ns1---\n)\n\n    \ni\n \n=\n \nbridge\n.\nNew\n(\nbr1\n,\n \nns1\n)\n\n    \ni\n.\nIsExists\n()\n\n    \ni\n.\nAdd\n()\n\n    \ni\n.\nUp\n()\n\n    \ni\n.\nDown\n()\n\n    \ni\n.\nDel\n()\n\n    \nfmt\n.\nPrintln\n()\n\n\n    \nfmt\n.\nPrintln\n(\n=====class Vtep test=====\n)\n\n    \nfmt\n.\nPrintln\n(\n---multi vtep---\n)\n\n    \nfmt\n.\nPrintln\n(\n-no netns-\n)\n\n    \ni\n \n=\n \nvtep\n.\nNew\n(\nint-v1111111\n,\n \n1111111\n,\n \nem1\n,\n \n4789\n,\n \n,\n \n239.1.111.111\n)\n\n    \ni\n.\nIsExists\n()\n\n    \ni\n.\nAdd\n()\n\n    \ni\n.\nSetMaster\n(\nbr1\n)\n\n    \ni\n.\nUp\n()\n\n    \ni\n.\nDown\n()\n\n    \ni\n.\nDel\n()\n\n    \nfmt\n.\nPrintln\n(\n---multi vtep---\n)\n\n    \nfmt\n.\nPrintln\n(\n-netns=ns1-\n)\n\n    \ni\n \n=\n \nvtep\n.\nNew\n(\nint-v1111111\n,\n \n1111111\n,\n \nem1\n,\n \n4789\n,\n \nns1\n,\n \n239.1.111.111\n)\n\n    \ni\n.\nIsExists\n()\n\n    \ni\n.\nAdd\n()\n\n    \ni\n.\nSetMaster\n(\nbr1\n)\n\n    \ni\n.\nUp\n()\n\n    \ni\n.\nDown\n()\n\n    \ni\n.\nDel\n()\n\n\n    \nfmt\n.\nPrintln\n(\n---uni vtep---\n)\n\n    \nfmt\n.\nPrintln\n(\n-no netns-\n)\n\n    \ni\n \n=\n \nvtep\n.\nNew\n(\nint-v100\n,\n \n100\n,\n \nem1\n,\n \n4789\n,\n \n,\n \n)\n\n    \ni\n.\nIsExists\n()\n\n    \ni\n.\nAdd\n()\n\n    \ni\n.\nSetMaster\n(\nbr1\n)\n\n    \ni\n.\nUp\n()\n\n    \ni\n.\nDown\n()\n\n    \ni\n.\nDel\n()\n\n    \nfmt\n.\nPrintln\n(\n-netns=ns1-\n)\n\n    \ni\n \n=\n \nvtep\n.\nNew\n(\nint-v100\n,\n \n100\n,\n \nem1\n,\n \n4789\n,\n \nns1\n,\n \n)\n\n    \ni\n.\nIsExists\n()\n\n    \ni\n.\nAdd\n()\n\n    \ni\n.\nSetMaster\n(\nbr1\n)\n\n    \ni\n.\nUp\n()\n\n    \ni\n.\nDown\n()\n\n    \ni\n.\nDel\n()\n\n    \nfmt\n.\nPrintln\n()\n\n\n    \nfmt\n.\nPrintln\n(\n=====class Veth test=====\n)\n\n    \nfmt\n.\nPrintln\n(\n---no peer---\n)\n\n    \nfmt\n.\nPrintln\n(\n--no netns--\n)\n\n    \ni\n \n=\n \nveth\n.\nNew\n(\npii-xxx\n,\n \n,\n \n)\n\n    \ni\n.\nAdd\n()\n\n    \ni\n.\nUp\n()\n\n    \ni\n.\nSetNetns\n(\nns1\n)\n\n    \nfmt\n.\nPrintln\n()\n\n\n    \nfmt\n.\nPrintln\n(\n--netns=ns1--\n)\n\n    \ni\n \n=\n \nveth\n.\nNew\n(\npii-xxx\n,\n \n,\n \nns1\n)\n\n    \ni\n.\nAdd\n()\n\n    \ni\n.\nUp\n()\n\n    \ni\n.\nSetNetns\n(\nns2\n)\n\n    \nfmt\n.\nPrintln\n()\n\n\n    \nfmt\n.\nPrintln\n(\n---peer=poi-xxx---\n)\n\n    \nfmt\n.\nPrintln\n(\n--no netns--\n)\n\n    \ni\n \n=\n \nveth\n.\nNew\n(\npii-xxx\n,\n \npoi-xxx\n,\n \n)\n\n    \ni\n.\nAdd\n()\n\n    \ni\n.\nUp\n()\n\n    \ni\n.\nSetNetns\n(\nns1\n)\n\n    \nfmt\n.\nPrintln\n()\n\n\n    \nfmt\n.\nPrintln\n(\n--netns=ns1--\n)\n\n    \ni\n \n=\n \nveth\n.\nNew\n(\npii-xxx\n,\n \npoi-xxx\n,\n \nns1\n)\n\n    \ni\n.\nAdd\n()\n\n    \ni\n.\nUp\n()\n\n    \ni\n.\nSetNetns\n(\nns2\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\u548c\u521a\u624dpython\u7684\u8f93\u51fa\u5185\u5bb9\u5b8c\u5168\u4e00\u6837\n\n\n\u4e0a\u9762\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6709\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u4e00\u70b9\uff0c\u5c31\u662finterface\u8ba9\u6211\u771f\u6b63\u770b\u6e05\u4e86\u4e8b\u7269\u7684\u672c\u8d28\uff1a\n\n\n\u4e00\u5f00\u59cb\u5728iproute.py\u4ee3\u7801\u91cc\uff0c\u6709\u8fd9\u4e48\u4e00\u6bb5\uff1a\n\n\n\u5728class Veth\u91cc\u6709\u91cd\u8f7d\u4e86SetNetns\u65b9\u6cd5\uff1a\n\n\nclass\n \nVeth\n:\n\n    \n...\n\n    \ndef\n \nsetNetns\n(\nself\n,\n \nisPeer\n=\nFalse\n)\n\n\n\n\n\n\u5373\u5f53\u8c03\u7528\u8be5\u65b9\u6cd5\u65f6\u5019\u5982\u679c\u6ca1\u6709\u5e26isPeer\u53c2\u6570\u6216\u8005isPeer\u4e3aFalse\u65f6\u5019\uff0c\u5c06self.name\u52a0\u5165\u5230netns\u4e2d\uff0c\u800c\u5f53isPeer=True\u65f6\u5019\uff0c\u5219\u5c06self.peer\u52a0\u5165\u5230netns\u4e2d\u3002\n\n\n\u8fd9\u4e2a\u903b\u8f91\u548b\u4e00\u770b\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u7136\u540e\u7528go\u6765\u5199\uff08\u6b64\u65f6\u8fd8\u6ca1\u7528interface\uff09\uff1a\n\n\n\u5728veth.go\u91cc\uff1a\n\n\nfunc\n \n(\nthis\n \n*\nveth\n)\n \nSetNetns\n(\nisPeer\n \nbool\n):\n\n\n\n\n\n\u548b\u4e00\u770b\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u8c03\u7528\u8be5\u65b9\u6cd5\u65f6\u5019\u5982\u679cisPeer\u4e3afalse\uff0c\u5c06this.name\u52a0\u5165\u5230netns\u4e2d\uff0c\u800c\u5f53isPeer=true\u65f6\u5019\uff0c\u5219\u5c06this.peer\u52a0\u5165\u5230netns\u4e2d\u3002\n\n\n\u4f46\u6709\u610f\u601d\u7684\u6765\u4e86\uff0c\u5728\u8c03\u7528\u8005\u8fd9\u91cc\u5199\u4e00\u4e2a\u63a5\u53e3\uff1a\n\n\ntype\n \nvnic\n \ninterface\n \n{\n\n    \nAdd\n()\n\n    \nDel\n()\n\n    \nUp\n()\n\n    \nDown\n()\n\n    \nSetMaster\n(\nstring\n)\n\n    \nSetNetns\n(\nstring\n)\n\n    \nAddIPAddr\n(\nstring\n)\n\n    \nIsExists\n()\n\n\n}\n\n\n\n\n\n\u8fd9\u6837\u5c31\u6709\u95ee\u9898\u4e86\uff0c\u56e0\u4e3abridge\u3001vtep\u7684SetNetns\u6ca1\u6709\u53c2\u6570\uff0c\u800cveth\u7684SetNetns\u6709\u53c2\u6570\uff0c\u8fd9\u6837\u5c31\u9020\u6210\u4e86veth struct\u6ca1\u6709\u5b9e\u73b0vnic\u63a5\u53e3\u3002\n\n\n\u7136\u540e\u53c8\u60f3\u7740\uff0c\u90a3\u80fd\u5426vnic\u63a5\u53e3\u91cc\u628aSetNetns\u7ed9\u53bb\u6389\uff0c\u4f46\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\uff1a\n\n\nvar\n \ni\n \nvnic\n\n\ni\n \n=\n \nbridge\n.\nNew\n(\nxx\n)\n\n\ni\n.\nAdd\n()\n    \n//\u4e0d\u62a5\u9519\n\n\ni\n.\nDel\n()\n    \n//\u4e0d\u62a5\u9519\n\n\ni\n.\nSetNetns\n()\n    \n//\u62a5\u9519\n\n\n\n\n\n\u989d\uff0c\u4e8e\u662f\u5b9a\u4e0b\u5fc3\u4ed4\u7ec6\u601d\u8003\u4e86\u4e0b\uff1a\n\n\nveth\u867d\u7136\u5c5e\u4e8enic\u7c7b\uff0c\u4f46\u662fnic\u9762\u5411\u7684\u662f\u4e00\u5f20\u7f51\u5361\uff0c\u800c\u4e0d\u662f\u591a\u5f20\u7f51\u5361\uff0c\u56e0\u6b64veth\u521b\u5efa\u51fa\u6765\u67092\u5f20\u7f51\u5361\uff0c\u81ea\u8eab\u540d\u7f51\u5361\u5c5e\u4e8enic\uff0cpeer\u7f51\u5361\u53ea\u662f\u4e2a\u9644\u5c5e\u54c1\u3002\n\n\n\u56e0\u6b64\u8981\u64cd\u4f5cpeer\u7f51\u5361\u65f6\u5019\uff0c\u6bd4\u5982\u5c06peer\u7f51\u5361\u653e\u5165netns\u65f6\u5019\uff0c\u6709\u51e0\u79cd\u65b9\u6cd5\uff1a\n\n\n\n\n\n\n\u7528nic.Nic\u6765\u521d\u59cb\u5316\u8fd9\u4e2apeer\uff1a\n\n\npeername\n \n:=\n \npoi-xxx\n\n\npeer\n \n:=\n \nnic\n.\nNic\n{\n\n    \nName\n:\n \npeername\n,\n\n    \nNetns\n:\n \n\n\n}\n\n\npeer\n.\nSetNetns\n(\nns1\n)\n\n\n\n\n\n\n\n\n\n\u548c\u4e0a\u9762\u7c7b\u4f3c\uff0c\u4f46\u662f\u5728nic.go\u91cc\u518d\u641e\u4e00\u4e2aNew()\u65b9\u6cd5\u7528\u4e8e\u5904\u7406\u8fd9\u79cd\u65e2\u4e0d\u5c5e\u4e8eveth\u3001\u4e5f\u4e0d\u5c5e\u4e8ebridge\u3001\u4e5f\u4e0d\u5c5e\u4e8evtep\u7684\u72ec\u7acb\u666e\u901a\u7f51\u5361\n\n\n\n\n\n\n\u81ea\u5df1\u65b0\u641e\u4e00\u4e2astruct\uff0c\u6bd4\u5982\u53ebnormalNic\u6765\u5904\u7406\u8fd9\u79cd\u72ec\u7acb\u7f51\u5361\n\n\n\n\n\n\n\u5728veth.go\u91cc\u65b0\u589e\nfunc (this *veth) SetPeerNetns(ns string)\n\n\n\n\n\n\n\u5728veth.go\u91cc\u65b0\u589e\nfunc SetPeerNetns(peer string, ns string)\n\n\n\n\n\n\n\u5728veth.go\u91cc\u65b0\u589e\nfunc SetPeerNetns(v *veth) { ip link set v.peer netns }\n\n\n\n\n\n\n\u4e2a\u4eba\u63a8\u8350\u75284\u6700\u597d\uff0c\u65e2\u4e0d\u4f1a\u4e3a\u6b64\u628anic\u57fa\u7c7b\u641e\u81c3\u80bf\uff0c\u540c\u65f6\u53c8\u4f5c\u4e3aveth\u7684\u65b9\u6cd5\u5b58\u5728\uff08\u4e0d\u7ba1\u600e\u4e48\u8bf4peer\u4e5f\u662f\u81ea\u5bb6\u4eba\uff0c\u6ca1\u6709\u5f53\u4f5c\u5916\u4e61\u4eba\uff09\n\n\n\u63a5\u4e0b\u6765\u60f3\u505a\u4e00\u4e2a\u51fd\u6570\uff0c\u4f20\u9012\u53c2\u6570\u7ed9\u8fd9\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u8fd9\u4e2a\u51fd\u6570\u5e2e\u6211\u8c03\u7528bridge\u3001 veth\u3001vtep\uff0c\u7136\u540e\u8fd4\u56de\u6307\u9488struct\uff08\u8fd4\u56de\u53c2\u6570\u662f\u5b9e\u73b0\u4e86vnic interface\uff09\uff0c\u4f46\u662f\u53d1\u73b0\u4e0d\u5bf9\uff1a\n\n\ninterface\u7684\u4f7f\u7528\u8981\u6ee1\u8db32\u4e2a\u6761\u4ef6\u624d\u6709\u610f\u4e49\uff1a\n\n\n\n\n\n\n\u5b9e\u73b0\u4e86interface\u7684\u51e0\u4e2astruct\u662f\u5e73\u7ea7\u7684\uff0c\u5e76\u4e14\u8f93\u5165\u8f93\u51fa\u53c2\u6570\u5b8c\u5168\u4e00\u81f4\u3002\uff08\u8fd9\u70b9\u662finterface\u7684\u672c\u8d28\uff0c\u80fd\u5b9e\u73b0interface\u7684\u80af\u5b9a\u662f\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff09\n\n\n\n\n\n\n\u5728\u4e1a\u52a1\u903b\u8f91\u4e0a\uff0c\u8c03\u7528\u5b9e\u73b0interface\u7684struct\u662f\u4e0d\u5b9a\u7684\uff0c\u800c\u4e0d\u662f\u987a\u5e8f\u903b\u8f91\uff0c\u6bd4\u5982\u8fd9\u6837\u662f\u4e0d\u5bf9\u7684\uff0c\u56e0\u4e3anetns_struct\u3001bridge_struct\u3001veth_struct\u662f\u6709\u987a\u5e8f\u7684\uff1a\n\n\n\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni\n \nvnic\n\n    \ni\n \n=\n \nnetns_struct\n{\n...\n}\n\n    \ni\n.\nAdd\n()\n\n    \ni\n \n=\n \nbridge_struct\n{\n...\n}\n\n    \ni\n.\nAdd\n()\n\n    \ni\n \n=\n \nveth_struct\n{\n...\n}\n\n    \ni\n.\nAdd\n()\n\n\n}\n\n\n\n\n\n\u8fd9\u6837\u903b\u8f91\u662f\u6b63\u786e\u7684\uff1a\n\n\nvar\n \ni\n \nvnic\n\n\nswitch\n \nopt\n \n{\n\n\ncase\n \nnetns\n:\n\n    \ni\n \n=\n \nnetns\n.\nstruct\n{}\n\n\ncase\n \nbridge\n:\n\n    \ni\n \n=\n \nbridge\n.\nstruct\n{}\n\n\ncase\n \nveth\n:\n\n    \ni\n \n=\n \nveth\n.\nstruct\n{}\n\n\n}\n\n\ni\n.\nAdd\n()\n\n\ni\n.\nDel\n()\n\n\n\n\n\n\u5c31\u662f\u8bf4\u8c03\u7528\u8005\u8fd9\u65b9\u5bf9\u4e8e\u5b9e\u73b0interface\u7684struct\u662f\u6839\u636e\u67d0\u4e2a\u53c2\u6570\uff08\u901a\u8fc7API\u4f20\u9012\u8fc7\u6765\uff0c\u6216\u8005\u914d\u7f6e\u6587\u4ef6\u4f20\u9012\u8fc7\u6765\uff0c\u6216\u8005etcd\u4f20\u9012\u8fc7\u6765\uff09\u6765\u9009\u62e9\u67d0\u4e2astruct\uff0c\u8fd9\u79cd\u903b\u8f91\u624d\u9002\u7528interface\u3002\u800c\u5728vrouter\u7a0b\u5e8f\u903b\u8f91\u91cc\uff0cnetns\u3001bridge\u3001veth\u662f\u88ab\u8c03\u7528\u8005\u4f9d\u6b21\u6267\u884c\uff0c\u56e0\u6b64\u4e0d\u9002\u7528interface\u3002\n\n\ntype\n \nvnic\n \ninterface\n \n{\n\n    \nAdd\n()\n\n    \nDel\n()\n\n    \nUp\n()\n\n    \nDown\n()\n\n    \nSetMaster\n(\nstring\n)\n\n    \nSetNetns\n(\nstring\n)\n\n    \nAddIPAddr\n(\nstring\n)\n\n    \nIsExists\n()\n\n\n}\n\n\n\n\n\n\u6240\u4ee5\u4e0a\u9762\u8fd9\u79cd\u5b9a\u4e49\u63a5\u53e3\u7684\u601d\u8def\u5c31\u662f\u9519\u8bef\u7684\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6682\u65f6\u7528\u4e0d\u5230\u63a5\u53e3", 
            "title": "3.19. \u4ece\u65e0\u5230\u6709\u9010\u6b65\u7406\u89e3\u9762\u5411\u5bf9\u8c61\u548c\u63a5\u53e3"
        }, 
        {
            "location": "/reflect/main/", 
            "text": "\u5b66\u4e60\u53cd\u5c04\u524d\u5fc5\u987b\u8981\u638c\u63e1\u7684\u77e5\u8bc6\uff0c\u8be6\u89c1\n\u63a5\u53e3-\u6df1\u5165\u7406\u89e3\n\n\n\u5b98\u7f51\u6587\u6863\u5730\u5740\n\n\n\n\n\u5b98\u7f51: \nhttps://blog.golang.org/laws-of-reflection\n\n\n\u4e2d\u6587\u7ffb\u8bd1: \nhttp://m.blog.csdn.net/xiaohu50/article/details/49496819\n\n\n\u4ec0\u4e48\u662f\u53cd\u5c04\n\n\n\n\n\u53cd\u5c04\u7528\u4e8e\u68c0\u67e5\u81ea\u8eab\u7684\u7ed3\u6784\uff0c\u5c5e\u4e8e\u5143\u7a0b\u5e8f\u7f16\u7a0b\n\n\n\u6bcf\u4e2a\u8bed\u8a00\u7684\u53cd\u5c04\u673a\u5236\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u6709\u7684\u8bed\u8a00\u6ca1\u6709\u53cd\u5c04\n\n\ngo\u8bed\u8a00\u7684\u53cd\u5c04\u673a\u5236\u5efa\u7acb\u5728\u7c7b\u578b\u7cfb\u7edf\u4e4b\u4e0a", 
            "title": "1. \u4ecb\u7ecd"
        }, 
        {
            "location": "/reflect/main/#_1", 
            "text": "\u5b98\u7f51:  https://blog.golang.org/laws-of-reflection  \u4e2d\u6587\u7ffb\u8bd1:  http://m.blog.csdn.net/xiaohu50/article/details/49496819", 
            "title": "\u5b98\u7f51\u6587\u6863\u5730\u5740"
        }, 
        {
            "location": "/reflect/main/#_2", 
            "text": "\u53cd\u5c04\u7528\u4e8e\u68c0\u67e5\u81ea\u8eab\u7684\u7ed3\u6784\uff0c\u5c5e\u4e8e\u5143\u7a0b\u5e8f\u7f16\u7a0b  \u6bcf\u4e2a\u8bed\u8a00\u7684\u53cd\u5c04\u673a\u5236\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u6709\u7684\u8bed\u8a00\u6ca1\u6709\u53cd\u5c04  go\u8bed\u8a00\u7684\u53cd\u5c04\u673a\u5236\u5efa\u7acb\u5728\u7c7b\u578b\u7cfb\u7edf\u4e4b\u4e0a", 
            "title": "\u4ec0\u4e48\u662f\u53cd\u5c04"
        }, 
        {
            "location": "/reflect/pkg_type_value/", 
            "text": "reflect.Type\u548creflect.Value\u90fd\u6709\u8bb8\u591a\u65b9\u6cd5\u7528\u6765\u68c0\u9a8c\u548c\u64cd\u4f5c\u5b83\u4eec\n\n\nreflect.Type\n\n\n\n\nreflect.Type\uff1a\u662f\u4e00\u4e2ainterface\uff0c\u5bf9\u5e94\u7684struct\u662freflect.*rtype\uff0c\u5728go\u6e90\u7801/src/reflect/type.go\u91cc\u5b9a\u4e49\uff1a\n\n\n// Type is the representation of a Go type.\n\n\n\n\n\n\nNote\n\n\n\u672c\u6587\u63d0\u5230\u7684reflect.Type\u5b9e\u9645\u5747\u662freflect.*rtype\n\n\n\n\n\n\nWarning\n\n\n\u8fd9\u4e2areflect.Type\u662f\u63a5\u53e3hold\u7684\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u8ffd\u6839\u6eaf\u6e90\u7684\u6700\u5e95\u5c42\u7c7b\u578b\u3002\u6bd4\u5982\u8bf4\n\n\ntype MyStruct struct {}\n\n\n\n\n\u8fd9\u91ccreflect.Type\u5c31\u662f\"MyStruct\"\uff0c\u800c\u975e\"struct\"\u3002\u5982\u679c\u60f3\u83b7\u5f97struct\u53ea\u80fd\u4f7f\u7528Kind()\n\n\n\n\nString()\n\n\nreflect.Type(\u5b9e\u9645\u662freflect.*rtype)\u7684String()\u65b9\u6cd5\uff1a\u5c06\u63a5\u53e3\u53d8\u91cfhold\u7684\u53d8\u91cf\u7684\u7c7b\u578b\u540d\u8f6c\u4e3a\u5b57\u7b26\u4e32\u8f93\u51fa\uff0c\u5373\u8f93\u51fa\u7684\u53d8\u91cf\u662f\u7c7b\u578b\u4e3astring\uff0c\u503c\u4e3ahold\u7684\u7c7b\u578b\u540d\n\n\nKind()\n\n\nType\u548cValue\u90fd\u6709Kind()\u65b9\u6cd5\u7528\u6765\u8fd4\u56de\u4e00\u4e2a\u5e38\u91cf\uff08Type\u548cValue\u8fd4\u56de\u7684\u662f\u76f8\u540c\u7684\uff09\n\n\n\u8fd9\u4e2a\u5e38\u91cf\u6307\u793a\u4e86\u6240hold\u7684\u503c\u662f\u4ec0\u4e48\u7c7b\u578b \n\uff08\u8fd9\u4e2a\u7c7b\u578b\u662f\u6700\u7ec8\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u4e2d\u95f4\u7c7b\u578b\uff09\n\n\n\u4f8b\u5982\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nreflect\n\n\n)\n\n\n\ntype\n \nAInt\n \nint\n\n\ntype\n \nBInt\n \nAInt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ne\n \ninterface\n{}\n \n=\n \nBInt\n(\n10\n)\n\n    \nfmt\n.\nPrintln\n(\nreflect\n.\nTypeOf\n(\ne\n).\nKind\n())\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nint\n\n\n\n\n\n\nNote\n\n\n\u76ee\u524d\u6682\u65f6\u6ca1\u6709\u627e\u5230\u529e\u6cd5\u83b7\u5f97\u4e2d\u95f4\u7c7b\u578b\n\n\n\n\nKind()\u65b9\u6cd5\u8fd4\u56de\u7684\u53d8\u91cf\u7c7b\u578b\u662freflect.Kind\uff0c\u5176\u503c\u662fuint\u7c7b\u578b\u7684\u6570\u5b57\uff0c\u6bcf\u4e2a\u6570\u5b57\u8868\u793a\u4e00\u79cdgo\u5185\u7f6e\u7c7b\u578b\n\n\nKind\u5e95\u5c42\u7814\u7a76\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nreflect\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nx\n \nfloat64\n \n=\n \n3.4\n\n    \nv\n \n:=\n \nreflect\n.\nValueOf\n(\nx\n)\n\n    \nfmt\n.\nPrintf\n(\nv.Kind(): %T %v\\n\n,\n \nv\n.\nKind\n(),\n \nv\n.\nKind\n())\n\n    \nfmt\n.\nPrintf\n(\nreflect.Float64: %T %v\\n\n,\n \nreflect\n.\nFloat64\n,\n \nreflect\n.\nFloat64\n)\n\n\n    \nfmt\n.\nPrintln\n(\nv\n.\nKind\n()\n \n==\n \nreflect\n.\nFloat64\n)\n\n\n    \nfmt\n.\nPrintln\n(\nv\n.\nKind\n().\nString\n()\n \n==\n \nfloat64\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nv.Kind(): reflect.Kind float64\nreflect.Float64: reflect.Kind float64\ntrue\ntrue\n\n\n\n\n\u4e3a\u4ec0\u4e48Kind()\u53ef\u4ee5\u7b49\u4e8ereflect.Float64\uff0c\u662f\u56e0\u4e3a\u540c\u65f6\u6ee1\u8db3\u4e862\u70b9\uff1a\n\n\n\n\n\n\nKind()\u8fd4\u56de\u7684\u7c7b\u578b\u4e0ereflect.Float64\u7c7b\u578b\u4e00\u81f4\n\n\n\n\n\n\nKind()\u8fd4\u56de\u7684\u503c\u4e0ereflect.Float64\u503c\u4e00\u81f4\n\n\n\n\n\n\n\u4e0b\u9762\u4e00\u4e00\u89e3\u7b54\uff1a\n\n\n\n\n\n\nKind()\u8fd4\u56de\u7684\u662fKind\u7c7b\u578b\uff0c\u8fd9\u4e2aKind\u7c7b\u578b\u662freflect\u5305\u91cc\u5b9a\u4e49\u7684\u4e00\u4e2auint\u7684type\n\n\n\u9644Kind\u5b9a\u4e49\ntype Kind\u662f\u5728Type\u548cValue\u7684Kind()\u65b9\u6cd5\u4e2d\u90fd\u6709\u63d0\u53ca\u7684\u6838\u5fc3\u90e8\u5206\n// A Kind represents the specific kind of type that a Type represents.\n\n\n// The zero Kind is not a valid kind.\n\n\ntype\n \nKind\n \nuint\n\n\n\nconst\n \n(\n\n    \nInvalid\n \nKind\n \n=\n \niota\n\n    \nBool\n\n    \nInt\n\n    \nInt8\n\n    \nInt16\n\n    \nInt32\n\n    \nInt64\n\n    \nUint\n\n    \nUint8\n\n    \nUint16\n\n    \nUint32\n\n    \nUint64\n\n    \nUintptr\n\n    \nFloat32\n\n    \nFloat64\n\n    \nComplex64\n\n    \nComplex128\n\n    \nArray\n\n    \nChan\n\n    \nFunc\n\n    \nInterface\n\n    \nMap\n\n    \nPtr\n\n    \nSlice\n\n    \nString\n\n    \nStruct\n\n    \nUnsafePointer\n\n\n)\n\n\n\nfunc\n \n(\nk\n \nKind\n)\n \nString\n()\n \nstring\n \n{\n\n    \nif\n \nint\n(\nk\n)\n \n \nlen\n(\nkindNames\n)\n \n{\n\n        \nreturn\n \nkindNames\n[\nk\n]\n\n    \n}\n\n    \nreturn\n \nkind\n \n+\n \nstrconv\n.\nItoa\n(\nint\n(\nk\n))\n\n\n}\n\n\n\nvar\n \nkindNames\n \n=\n \n[]\nstring\n{\n\n    \nInvalid\n:\n       \ninvalid\n,\n\n    \nBool\n:\n          \nbool\n,\n\n    \nInt\n:\n           \nint\n,\n\n    \nInt8\n:\n          \nint8\n,\n\n    \nInt16\n:\n         \nint16\n,\n\n    \nInt32\n:\n         \nint32\n,\n\n    \nInt64\n:\n         \nint64\n,\n\n    \nUint\n:\n          \nuint\n,\n\n    \nUint8\n:\n         \nuint8\n,\n\n    \nUint16\n:\n        \nuint16\n,\n\n    \nUint32\n:\n        \nuint32\n,\n\n    \nUint64\n:\n        \nuint64\n,\n\n    \nUintptr\n:\n       \nuintptr\n,\n\n    \nFloat32\n:\n       \nfloat32\n,\n\n    \nFloat64\n:\n       \nfloat64\n,\n\n    \nComplex64\n:\n     \ncomplex64\n,\n\n    \nComplex128\n:\n    \ncomplex128\n,\n\n    \nArray\n:\n         \narray\n,\n\n    \nChan\n:\n          \nchan\n,\n\n    \nFunc\n:\n          \nfunc\n,\n\n    \nInterface\n:\n     \ninterface\n,\n\n    \nMap\n:\n           \nmap\n,\n\n    \nPtr\n:\n           \nptr\n,\n\n    \nSlice\n:\n         \nslice\n,\n\n    \nString\n:\n        \nstring\n,\n\n    \nStruct\n:\n        \nstruct\n,\n\n    \nUnsafePointer\n:\n \nunsafe.Pointer\n,\n\n\n}\n\n\n\n\n\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50const\u90e8\u5206\u7528\u5230\u4e86\u7c7b\u4f3c\u679a\u4e3e\u529f\u80fd\uff0c\u8be6\u89c1\n\u679a\u4e3e\u7ae0\u8282\n\u6ce8\u610f\uff1a\u4e0a\u9762reflect.Uint\u3001reflect.Struct\u8fd9\u79cd\u7684\u7c7b\u578b\u662freflect.Kind\uff0c\u800c\u503c\u5c31\u662fuint\u3001struct\uff08\u4e0d\u662f\u5b57\u7b26\u4e32\"uint\"\u3001\"struct\"\uff0c\u800c\u662fgo\u7684\u7c7b\u578buint\u3001struct\uff09\n\u5176\u6b21\uff0c\u70b9\u51fb\u6253\u5f00\u4e0a\u9762\u7684\"\u9644Kind\u5b9a\u4e49\"\u53ef\u4ee5\u770b\u5230\uff1areflect.Float64\u7684\u7c7b\u578b\u662freflect.Kind\uff0c\u5176\u503c\u662f14(uint\u768414\uff0c\u4eceInvalid\u5f80\u4e0b\u6570\u7b2c14\u4e2a)\u3002\n\n\n\u6240\u4ee5Kind()\u8fd4\u56de\u7684\u7c7b\u578b\u4e0ereflect.Float64\u7c7b\u578b\u4e00\u81f4\n\n\n\n\n\n\nKind()\u8fd4\u56de\u7684\u503c\u5b9e\u9645\u662fuint\u6570\u5b57\uff0c\u4f8b\u5b50\u4e2d\u4e3a14\uff08reflect.Float64\uff09\uff0creflect.Float64\u8fd4\u56de\u7684\u503c\u4e5f\u662fuint\u6570\u5b57\uff0c\u4e5f\u4e3a14\uff0c\u6240\u4ee5\u662f\u76f8\u7b49\u7684\uff0c\u4e3atrue\n\n\n\n\nNote\n\n\nfmt\u6253\u5370Kind\u503c\u7684\u65f6\u5019\uff0c\u8c03\u7528\u4e86Kind\u7684String()\u65b9\u6cd5\uff0c\u56e0\u6b64\u6253\u5370\u51fa\"float64\"\u800c\u4e0d\u662f\u6570\u5b5714\n\n\n\u56e0\u6b64\nv.Kind().String() == \nfloat64\n\u4e5f\u4e3atrue\n\n\n\u56e0\u6b64\u4eca\u540e\u5982\u679c\u8981\u67e5\u8be2\u4e00\u4e2a\u53d8\u91cf\u7684\u6700\u7ec8\u7c7b\u578b\uff0c\u53ef\u4ee5v.Kind()\uff0c\u5982\u679c\u60f3\u83b7\u5f97\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u5c31v.Kind().String\n\n\n\n\n\n\n\n\nField().Name\n\n\n\u67e5\u8be2struct\u5143\u7d20\u503c\uff0c\u6bd4\u5982.Field(0)\u8868\u793a\u67e5\u8be2struct\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\uff0c.FieldByName(\"X\")\u8868\u793a\u67e5\u8be2struct\u4e2d\u5143\u7d20\u540d\u4e3aX\u7684\u503c\n\n\n\u4f46\u7531\u4e8eType\u548cValue\u90fd\u6709Field()\u548cFieldByName()\uff0c\u4f46\u6709\u6240\u4e0d\u540c\uff0c\u5e76\u4e14\u6709\u7684\u652f\u6301.Name\uff0c\u6709\u7684\u4e0d\u652f\u6301\uff0c\u8fd9\u91cc\u505a\u4e86\u4e2a\u6d4b\u8bd5\uff0c\u8d34\u51fa\u7ed3\u679c\n\n\nfmt\n.\nPrintln\n(\nv\n.\nField\n(\ni\n))\n\n\nfmt\n.\nPrintln\n(\nv\n.\nField\n(\ni\n).\nName\n)\n \n// panic\n\n\nfmt\n.\nPrintln\n(\nv\n.\nFieldByName\n(\nA\n))\n\n\nfmt\n.\nPrintln\n(\nv\n.\nFieldByName\n(\nA\n).\nName\n)\n \n// panic\n\n\n\nfmt\n.\nPrintln\n(\nt\n.\nField\n(\ni\n))\n\n\nfmt\n.\nPrintln\n(\nt\n.\nField\n(\ni\n).\nName\n)\n\n\nfmt\n.\nPrintln\n(\nt\n.\nFieldByName\n(\nA\n))\n\n\nfmt\n.\nPrintln\n(\nt\n.\nFieldByName\n(\nA\n).\nName\n)\n \n// panic\n\n\n\n\n\n\n\n\n\ni\u662f\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u7b2c\u51e0\u4e2a\u5143\u7d20\uff0c\"A\"\u8868\u793a\u7ed3\u6784\u4f53\u4e2d\u6709\u4e00\u4e2a\u5143\u7d20\u4e3a\"A\"\n\n\n\n\n\n\nv\u8868\u793aValue\u7c7b\u578b\n\n\n\n\n\n\nt\u8868\u793aType\u7c7b\u578b(\u5373*rtype)\n\n\n\n\n\n\n\u6ce8\u91ca\u6389\u7684\u8868\u793a\u4f1a\u62a5\u9519\uff0c\u56e0\u6b64\u53ef\u4ee5\u770b\u51fa\uff0cType\u548cValue\u90fd\u652f\u6301Field()\u548cFieldByName()\uff0c\u4f46\u53ea\u6709Type\u7684Field()\u652f\u6301.Name\n\n\nFieldByName()\n\n\n\u901a\u8fc7\u7ed3\u6784\u4f53\u7684\u5143\u7d20\u540d\u67e5\u8be2\u5bf9\u5e94\u7684\u5143\u7d20\u503c\uff0c\u4e0d\u652f\u6301.Name\u3001.Type()\u3001.Interface()\n\n\n\u548cValue\u7684FieldByName\u652f\u6301\u7684\u6709\u6240\u4e0d\u540c\uff0c\u8be6\u89c1\nValue\u7684FieldByName\n\n\nreflect.Value\n\n\n\n\nreflect.Value\uff1a\u662f\u4e00\u4e2astruct\uff0c\u5728go\u6e90\u7801/src/reflect/value.go\u91cc\u5b9a\u4e49\uff1a\n\n\n// Value is the reflection interface to a Go value.\n\n\n\n\nKind()\n\n\n\u540creflec.Type.Kind()\n\n\nType()\n\n\nreflect.Value\u6709Type()\u65b9\u6cd5\uff0c\u7528\u4e8e\u5f97\u5230reflect.Type\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nreflect\n\n\n)\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ne\n \ninterface\n{}\n \n=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \nt\n \n:=\n \nreflect\n.\nValueOf\n(\ne\n).\nType\n()\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nt\n,\n \nt\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n*reflect.rtype main.MyStruct\n\n\n\n\n\u83b7\u5f97\u503c\n\n\nString()\n\n\nreflect.Value\u7684String()\u65b9\u6cd5:\n\n\n\n\n\n\n\u82e5hold\u7684\u53d8\u91cf\u7c7b\u578b\u662fstring\u5219\u8f93\u51fa\u503c\n\n\n\n\n\n\n\u82e5hold\u7684\u53d8\u91cf\u7c7b\u578b\u4e0d\u662fstring\u5219\u8f93\u51fa\n\u63a5\u53e3hold\u7684\u53d8\u91cf\u7684\u7c7b\u578b\u540d Value\n\n\n\u4f8b\u5b50\nvar x float64 = 3.4\nfmt.Println(\nvalue:\n, reflect.ValueOf(x).String())\n\n\n\n\u8f93\u51fa\nvalue: \nfloat64 Value\n\n\n\n\n\u9644String()\u5b9a\u4e49\n// String returns the string v\ns underlying value, as a string.\n\n\n// String is a special case because of Go\ns String method convention.\n\n\n// Unlike the other getters, it does not panic if v\ns Kind is not String.\n\n\n// Instead, it returns a string of the form \nT value\n where T is v\ns type.\n\n\n// The fmt package treats Values specially. It does not call their String\n\n\n// method implicitly but instead prints the concrete values they hold.\n\n\nfunc\n \n(\nv\n \nValue\n)\n \nString\n()\n \nstring\n \n{\n\n    \nswitch\n \nk\n \n:=\n \nv\n.\nkind\n();\n \nk\n \n{\n\n    \ncase\n \nInvalid\n:\n\n        \nreturn\n \ninvalid Value\n\n    \ncase\n \nString\n:\n\n        \nreturn\n \n*\n(\n*\nstring\n)(\nv\n.\nptr\n)\n\n    \n}\n\n    \n// If you call String on a reflect.Value of other type, it\ns better to\n\n    \n// print something than to panic. Useful in debugging.\n\n    \nreturn\n \n \n+\n \nv\n.\nType\n().\nString\n()\n \n+\n \n Value\n\n\n}\n\n\n\n\n\u4e3a\u4ec0\u4e48\u8981\u8f93\u51fa\n\u63a5\u53e3hold\u7684\u53d8\u91cf\u7684\u7c7b\u578b\u540d Value\n\uff0c\u662f\u56e0\u4e3a\u5728go\u91cc\u975estring\u7c7b\u578b\u65e0\u6cd5\u8f6c\u5316\u4e3astring\uff0c\u82e5\u76f4\u63a5panic\u53c8\u4e0d\u592a\u53cb\u597d\uff0c\u540c\u65f6\u4e3a\u4e86\u4fbf\u4e8e\u8c03\u8bd5\uff0c\u5e72\u8106\u5c31\u6253\u5370\u7c7b\u578b\u597d\u4e86\uff08\u5373\u8c03\u7528\n.Type()\n\uff09\n\n\n\n\n\n\nString()\u4f8b\u5b50\uff0c\u5305\u542breflect.Type.String()\u548creflect.Value.String()\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nreflect\n\n\n)\n\n\n\ntype\n \nAdder\n \ninterface\n \n{\n\n    \nAdd\n()\n\n\n}\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \nMyStruct\n)\n \nAdd\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nthis\n.\nX\n \n+\n \nthis\n.\nY\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \ni\n \nAdder\n \n=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n    \nt1\n \n:=\n \nreflect\n.\nTypeOf\n(\ni\n)\n\n    \nv1\n \n:=\n \nreflect\n.\nValueOf\n(\ni\n)\n\n    \nst1\n \n:=\n \nt1\n.\nString\n()\n\n    \nsv1\n \n:=\n \nv1\n.\nString\n()\n\n\n    \nfmt\n.\nPrintf\n(\ni:\\t%T\\t%v\\n\n,\n \ni\n,\n \ni\n)\n\n    \nfmt\n.\nPrintf\n(\nt1:\\t%T\\t%v\\n\n,\n \nt1\n,\n \nt1\n)\n\n    \nfmt\n.\nPrintf\n(\nv1:\\t%T\\t%v\\n\n,\n \nv1\n,\n \nv1\n)\n\n    \nfmt\n.\nPrintf\n(\nst1:\\t%T\\t\\t%v\\n\n,\n \nst1\n,\n \nst1\n)\n\n    \nfmt\n.\nPrintf\n(\nsv1:\\t%T\\t\\t%v\\n\n,\n \nsv1\n,\n \nsv1\n)\n\n\n    \nfmt\n.\nPrintln\n(\n-----\n)\n\n\n    \nvar\n \ne\n \ninterface\n{}\n \n=\n \nhello, world\n\n    \nv2\n \n:=\n \nreflect\n.\nValueOf\n(\ne\n)\n\n    \nsv2\n \n:=\n \nv2\n.\nString\n()\n\n    \nfmt\n.\nPrintf\n(\ne:\\t%T\\t\\t%v\\n\n,\n \ne\n,\n \ne\n)\n\n    \nfmt\n.\nPrintf\n(\nv2:\\t%T\\t%v\\n\n,\n \nv2\n,\n \nv2\n)\n\n    \nfmt\n.\nPrintf\n(\nsv2:\\t%T\\t\\t%v\\n\n,\n \nsv2\n,\n \nsv2\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\ni:      main.MyStruct   {3 4}\nt1:     *reflect.rtype  main.MyStruct\nv1:     reflect.Value   {3 4}\nst1:    string          main.MyStruct\nsv1:    string          \nmain.MyStruct Value\n\n-----\ne:      string          hello, world\nv2:     reflect.Value   hello, world\nsv2:    string          hello, world\n\n\n\n\nInt()\u3001Float()\n\n\nValue\u7c7b\u578b\u53d8\u91cf\u8fd8\u62e5\u6709\u4e00\u4e9b\u540d\u5982Int\u548cFloat\u7684\u65b9\u6cd5\u7528\u6765\u83b7\u53d6\u5185\u90e8\u5b58\u50a8\u7684\u503c\n\n\n\n\nWarning\n\n\n\u8fd4\u56de\u7684\u662fint64\u7c7b\u578b\u4ee5\u53cafloat64\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u800c\u4e0d\u662fint8\u3001float32\n\n\n\n\n\u6709\u7b26\u53f7\u6574\u578b\u4e3a\u4f55\u53ea\u6709Int()\uff0c\u800c\u6ca1\u6709Int8()\u3001Int32()\uff0c\u662f\u4e3a\u4e86\u4fdd\u6301API\u7684\u7b80\u6d01\u6027\uff0c\u83b7\u5f97\u503c\u548c\u8bbe\u7f6e\u503c\u7684\u65b9\u6cd5\u6709\u4e00\u5b9a\u7684\u7b80\u5316\u8003\u8651\uff0c\u7528\u6700\u5927\u7684\u7c7b\u578b\u6765\u5305\u542b\u76f8\u5173\u7c7b\u578b\uff0c\u4ee5\u4fbf\u5b58\u50a8\u503c\u3002\u4f8b\u5982\u4f7f\u7528int64\u6765\u8868\u793a\u6240\u6709\u6709\u7b26\u53f7\u6574\u578b\uff08int64\u6700\u5927\uff0c\u5b58\u50a8\u7684\u503c\u80fd\u6db5\u76d6int8\u3001int16\u3001int32\uff09\uff0c\u800cInt()\u662fValue\u83b7\u5f97\u6709\u7b26\u53f7\u6574\u578b\u65b9\u6cd5\uff0c\u8fd4\u56de\u7684\u4e5f\u662fint64\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nreflect\n\n    \nfmt\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nf32\n \nfloat32\n \n=\n \n3.4\n\n    \nfmt\n.\nPrintln\n(\nf32\n)\n\n    \nvf32\n \n:=\n \nreflect\n.\nValueOf\n(\nf32\n)\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nvf32\n.\nFloat\n(),\n \nvf32\n.\nFloat\n())\n\n\n    \nfmt\n.\nPrintln\n(\n-----\n)\n\n\n    \nvar\n \nf64\n \nfloat64\n \n=\n \n3.4\n\n    \nfmt\n.\nPrintln\n(\nf64\n)\n\n    \nvf64\n \n:=\n \nreflect\n.\nValueOf\n(\nf64\n)\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nvf64\n.\nFloat\n(),\n \nvf64\n.\nFloat\n())\n\n\n    \nfmt\n.\nPrintln\n(\n=====\n)\n\n\n    \nvar\n \ni8\n \nint8\n \n=\n \n10\n\n    \nfmt\n.\nPrintln\n(\ni8\n)\n\n    \nvi8\n \n:=\n \nreflect\n.\nValueOf\n(\ni8\n)\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nvi8\n.\nInt\n(),\n \nvi8\n.\nInt\n())\n\n\n    \nfmt\n.\nPrintln\n(\n-----\n)\n\n\n    \nvar\n \ni64\n \nint64\n \n=\n \n10\n\n    \nfmt\n.\nPrintln\n(\ni64\n)\n\n    \nvi64\n \n:=\n \nreflect\n.\nValueOf\n(\ni64\n)\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nvi64\n.\nInt\n(),\n \nvi64\n.\nInt\n())\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n3.4\nfloat64 3.4000000953674316\n-----\n3.4\nfloat64 3.4\n=====\n10\nint64 10\n-----\n10\nint64 10\n\n\n\n\n\u82e5\u5c06int64\u7c7b\u578b\u7528Float()\u65b9\u6cd5\u6253\u5370\u4f1a\u62a5\u9519\uff0c\u540c\u6837\uff0cfloat64\u7528Int()\u6253\u5370\u4e5f\u4f1a\u62a5\u9519\uff0c\u4e0d\u8fc7\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\uff0c\u5c31\u662f\u4e0a\u9762\u63d0\u5230\u7684String()\uff0c\u6309\u7406\u6765\u8bf4\u5e94\u8be5\u4e5f\u4f1a\u62a5\u9519\uff0c\u4f46\u8fd9\u6837\u610f\u4e49\u4e0d\u5927\uff0c\u8fd8\u4e0d\u5982\u8f93\u51fa\u70b9\u4ec0\u4e48\u6709\u610f\u4e49\u7684\uff0c\u4fbf\u4e8e\u8c03\u8bd5\uff0c\u4e8e\u662f\u5c31\u8f93\u51fa\nfloat64 Value\n\u597d\u4e86\n\n\n\u8bbe\u7f6e\u503c\n\n\nSetInt()\u3001SetFloat()\n\n\nValue\u7c7b\u578b\u53d8\u91cf\u8fd8\u62e5\u6709\u4e00\u4e9b\u540d\u5982SetInt\u548cSetFloat\u7684\u65b9\u6cd5\u7528\u6765\u6539\u53d8\u5185\u90e8\u5b58\u50a8\u7684\u503c\uff0c\u4f46\u8981\u6ce8\u610f\u4ec5\u5bf9\u6307\u9488\u8fd9\u79cd\u5730\u5740\u4f20\u9012\u7684\u624d\u6709\u6548\uff0c\u5e76\u4e14\u8981\u7528\u4e0a\nElem()\n\u624d\u884c\n\n\nSetInt()\u4f8b\u5b50\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nreflect\n\n    \nfmt\n\n\n)\n\n\n\ntype\n \nMyInt\n \nint\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nm\n \n:=\n \nMyInt\n(\n10\n)\n\n    \nv\n \n:=\n \nreflect\n.\nValueOf\n(\nm\n)\n\n    \ne\n \n:=\n \nv\n.\nElem\n()\n\n    \ne\n.\nSetInt\n(\n20\n)\n\n    \nfmt\n.\nPrintf\n(\nm: %T %v\\n\n,\n \nm\n,\n \nm\n)\n\n    \nfmt\n.\nPrintf\n(\ne: %T %v\\n\n,\n \ne\n,\n \ne\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nm: main.MyInt 20\ne: reflect.Value 20\n\n\n\n\nSetFloat()\u4f8b\u5b50\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nreflect\n\n    \nfmt\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nf\n \nfloat64\n \n=\n \n3.4\n\n    \nv\n \n:=\n \nreflect\n.\nValueOf\n(\nf\n)\n\n    \ne\n \n:=\n \nv\n.\nElem\n()\n\n    \ne\n.\nSetFloat\n(\n7.1\n)\n\n    \nfmt\n.\nPrintf\n(\nf: %T %v\\n\n,\n \nf\n,\n \nf\n)\n\n    \nfmt\n.\nPrintf\n(\ne: %T %v\\n\n,\n \ne\n,\n \ne\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nf: float64 7.1\ne: reflect.Value 7.1\n\n\n\n\nInterface()\n\n\n\u7ed9\u5b9a\u4e00\u4e2areflect.Value\u7c7b\u578b\u7684\u5bf9\u8c61\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Interface\u65b9\u6cd5\u6765\u5c06\u5176\u53cd\u8f6c\u56de\u63a5\u53e3\u53d8\u91cf\u3002\u5c06\u5176\u7c7b\u578b\u548c\u503c\u91cd\u65b0\u6253\u5305\u56de\u4e00\u4e2a\u63a5\u53e3\u53d8\u91cf\u4e2d\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u53d8\u91cf\u662f\u4e2a\u7a7a\u63a5\u53e3\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nreflect\n\n    \nfmt\n\n\n)\n\n\n\ntype\n \nMyInt\n \nint\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nm\n \n:=\n \nMyInt\n(\n10\n)\n\n    \nv\n \n:=\n \nreflect\n.\nValueOf\n(\nm\n)\n\n    \ni\n \n:=\n \nv\n.\nInterface\n()\n\n    \nfmt\n.\nPrintf\n(\nm: %T %v\\n\n,\n \nm\n,\n \nm\n)\n\n    \nfmt\n.\nPrintf\n(\nv: %T %v\\n\n,\n \nv\n,\n \nv\n)\n\n    \nfmt\n.\nPrintf\n(\ni: %T %v\\n\n,\n \ni\n,\n \ni\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nm: main.MyInt 10\nv: reflect.Value 10\ni: main.MyInt 10\n\n\n\n\n\u7531\u4e8e\u662f\u7a7a\u63a5\u53e3\uff0c\u56e0\u6b64\u5982\u679c\u7c7b\u578b\uff08\u6bd4\u5982\u4e0a\u9762\u7684MyInt\uff09\u6709\u65b9\u6cd5\u7684\u8bdd\u662f\u65e0\u6cd5\u6267\u884c\u7684\uff0c\u82e5\u60f3\u53ef\u4ee5\u6267\u884c\u65b9\u6cd5\uff0c\u53ef\u4ee5\u7528\u7c7b\u578b\u65ad\u8a00\uff0c\u8be6\u89c1\n\u7c7b\u578b\u65ad\u8a00\u5b9e\u73b0\u63a5\u53e3\n\uff0c\u4f8b\u5982\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nreflect\n\n    \nfmt\n\n\n)\n\n\n\ntype\n \nMyInt\n \nint\n\n\n\nfunc\n \n(\nthis\n \nMyInt\n)\n \nAdd\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nthis\n \n+\n \n3\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nm\n \n:=\n \nMyInt\n(\n10\n)\n\n    \nv\n \n:=\n \nreflect\n.\nValueOf\n(\nm\n)\n\n    \ni\n \n:=\n \nv\n.\nInterface\n()\n\n    \nfmt\n.\nPrintf\n(\nm: %T %v\\n\n,\n \nm\n,\n \nm\n)\n\n    \nfmt\n.\nPrintf\n(\nv: %T %v\\n\n,\n \nv\n,\n \nv\n)\n\n    \nfmt\n.\nPrintf\n(\ni: %T %v\\n\n,\n \ni\n,\n \ni\n)\n\n\n\n    \ne\n \n:=\n \ni\n.(\nMyInt\n)\n\n\n    \ne\n.\nAdd\n()\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nm: main.MyInt 10\nv: reflect.Value 10\ni: main.MyInt 10\n13\n\n\n\n\n\u7b80\u5355\u6765\u8bf4\uff0cInterface()\u662fValueOf()\u7684\u53cd\u51fd\u6570\n\n\nCanSet()\n\n\nreflect.Value\u6709\u4e00\u4e2aCanSet()\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u68c0\u6d4bValue\u7c7b\u578b\u7684\u53ef\u8bbe\u7f6e\u6027\uff08\u8fd4\u56de\u4e00\u4e2abool\u7c7b\u578b\u7684true\u6216false\uff09\n\n\n\u4f8b\uff1a\u975e\u6307\u9488\u4e0d\u5177\u5907\u53ef\u8bbe\u7f6e\u6027\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nreflect\n\n    \nfmt\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nx\n \nfloat64\n \n=\n \n3.4\n\n    \nv\n \n:=\n \nreflect\n.\nValueOf\n(\nx\n)\n\n    \nc\n \n:=\n \nv\n.\nCanSet\n()\n\n    \nfmt\n.\nPrintln\n(\nc\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\nfalse\n\n\n\n\u4f8b\uff1a\u6307\u9488\u5177\u5907\u53ef\u8bbe\u7f6e\u6027\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nreflect\n\n    \nfmt\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nx\n \nfloat64\n \n=\n \n3.4\n\n    \nv\n \n:=\n \nreflect\n.\nValueOf\n(\nx\n)\n\n    \nc\n \n:=\n \nv\n.\nCanSet\n()\n\n    \nfmt\n.\nPrintln\n(\nc\n)\n\n\n}\n\n\n\n\n\u8f93\u51fa\nfalse\n\n\n\n\b\u867d\u7136\u7528\u4e86\u6307\u9488\uff0c\u4f46\u8fd8\u662f\u4e0d\u53ef\u8bbe\u7f6e\u6027\uff0c\u56e0\u4e3a\u8981\u53d6\u5b83\u7684\u6307\u5411\u7684\u503c\u624d\u53ef\u4ee5\uff0c\u8be6\u89c1\nElem()\u7ae0\u8282\n\u9644: CanSet()\u5b9a\u4e49\nfunc\n \n(\nv\n \nValue\n)\n \nCanSet\n()\n \nbool\n \n{\n\n    \nreturn\n \nv\n.\nflag\n(\nflagAddr\n|\nflagRO\n)\n \n==\n \nflagAddr\n\n\n}\n\n\n\n\nElem()\n\n\n\u7528\u4e8e\u83b7\u5f97Value\u53d8\u91cf\u5185\u90e8\u5b58\u50a8\u7684\u503c\uff0c\u6ce8\u610f\u4ec5\u9488\u5bf9\u6307\u9488\u8fd9\u79cd\u4f20\u9012\u5730\u5740\u7684\u624d\u6709\u6548\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nreflect\n\n    \nfmt\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nx\n \nfloat64\n \n=\n \n3.4\n\n    \nv\n \n:=\n \nreflect\n.\nValueOf\n(\nx\n)\n\n    \ne\n \n:=\n \nv\n.\nElem\n()\n\n    \nc\n \n:=\n \ne\n.\nCanSet\n()\n\n    \nfmt\n.\nPrintln\n(\nc\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\ntrue\n\n\n\n\n\u6ce8\u610f\uff1a\u4e0d\u80fd\u5bf9\u975e\u6307\u9488\u4f7f\u7528Elem()\uff0c\u4f1a\u62a5\u9519\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nreflect\n\n    \nfmt\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nx\n \nfloat64\n \n=\n \n3.4\n\n    \nv\n \n:=\n \nreflect\n.\nValueOf\n(\nx\n)\n\n    \ne\n \n:=\n \nv\n.\nElem\n()\n\n    \nc\n \n:=\n \ne\n.\nCanSet\n()\n\n    \nfmt\n.\nPrintln\n(\nc\n)\n\n\n}\n\n\n\n\n\n\u62a5\u9519\n\n\npanic: reflect: call of reflect.Value.Elem on float64 Value\n\n\n\n\n\u9644: Elem()\u5b9a\u4e49\n// Elem returns the value that the interface v contains\n\n\n// or that the pointer v points to.\n\n\n// It panics if v\ns Kind is not Interface or Ptr.\n\n\n// It returns the zero Value if v is nil.\n\n\nfunc\n \n(\nv\n \nValue\n)\n \nElem\n()\n \nValue\n \n{\n\n    \nk\n \n:=\n \nv\n.\nkind\n()\n\n    \nswitch\n \nk\n \n{\n\n    \ncase\n \nInterface\n:\n\n        \nvar\n \neface\n \ninterface\n{}\n\n        \nif\n \nv\n.\ntyp\n.\nNumMethod\n()\n \n==\n \n0\n \n{\n\n            \neface\n \n=\n \n*\n(\n*\ninterface\n{})(\nv\n.\nptr\n)\n\n        \n}\n \nelse\n \n{\n\n            \neface\n \n=\n \n(\ninterface\n{})(\n*\n(\n*\ninterface\n \n{\n\n                \nM\n()\n\n            \n})(\nv\n.\nptr\n))\n\n        \n}\n\n        \nx\n \n:=\n \nunpackEface\n(\neface\n)\n\n        \nif\n \nx\n.\nflag\n \n!=\n \n0\n \n{\n\n            \nx\n.\nflag\n \n|=\n \nv\n.\nflag\n \n \nflagRO\n\n        \n}\n\n        \nreturn\n \nx\n\n    \ncase\n \nPtr\n:\n\n        \nptr\n \n:=\n \nv\n.\nptr\n\n        \nif\n \nv\n.\nflag\nflagIndir\n \n!=\n \n0\n \n{\n\n            \nptr\n \n=\n \n*\n(\n*\nunsafe\n.\nPointer\n)(\nptr\n)\n\n        \n}\n\n        \n// The returned value\ns address is v\ns value.\n\n        \nif\n \nptr\n \n==\n \nnil\n \n{\n\n            \nreturn\n \nValue\n{}\n\n        \n}\n\n        \ntt\n \n:=\n \n(\n*\nptrType\n)(\nunsafe\n.\nPointer\n(\nv\n.\ntyp\n))\n\n        \ntyp\n \n:=\n \ntt\n.\nelem\n\n        \nfl\n \n:=\n \nv\n.\nflag\nflagRO\n \n|\n \nflagIndir\n \n|\n \nflagAddr\n\n        \nfl\n \n|=\n \nflag\n(\ntyp\n.\nKind\n())\n\n        \nreturn\n \nValue\n{\ntyp\n,\n \nptr\n,\n \nfl\n}\n\n    \n}\n\n    \npanic\n(\nValueError\n{\nreflect.Value.Elem\n,\n \nv\n.\nkind\n()})\n\n\n}\n\n\n\n\nNumField()\n\n\n\u67e5\u8be2struct\u7ed3\u6784\u7684\u5143\u7d20\u4e2a\u6570\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nreflect\n\n\n)\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n\n    \nv\n \n:=\n \nreflect\n.\nValueOf\n(\ns\n)\n\n    \ne\n \n:=\n \nv\n.\nElem\n()\n\n    \nn\n \n:=\n \ne\n.\nNumField\n()\n\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nn\n,\n \nn\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nint 2\n\n\n\n\nField()\n\n\n\u6253\u5370\u6307\u5b9a\u4e0b\u6807\u7684\u5143\u7d20\uff08\u4e0b\u6807\u4ece0\u5f00\u59cb\uff09\uff0c\u6bd4\u5982\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nreflect\n\n\n)\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n \n4\n}\n\n\n    \nv\n \n:=\n \nreflect\n.\nValueOf\n(\ns\n)\n\n    \ne\n \n:=\n \nv\n.\nElem\n()\n\n\n    \nf0\n \n:=\n \ne\n.\nField\n(\n0\n)\n\n\n    \nf1\n \n:=\n \ne\n.\nField\n(\n1\n)\n\n\n\n    \nfmt\n.\nPrintf\n(\nf0: %T %v\\n\n,\n \nf0\n,\n \nf0\n)\n\n    \nfmt\n.\nPrintf\n(\nf1: %T %v\\n\n,\n \nf1\n,\n \nf1\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nf0: reflect.Value 3\nf1: reflect.Value 4\n\n\n\n\nField().Type()\u548cField().Interface()\n\n\nField()\u662f\u67e5\u8be2\u7b2c\u51e0\u4e2a\u5143\u7d20\uff0c\u6bd4\u5982.Field(0)\u8868\u793a\u67e5\u8be2\u7b2c1\u4e2a\u5143\u7d20\n\n\n\u4f46\u7531\u4e8eType\u548cValue\u90fd\u6709Field()\uff0c\u4f46\u6709\u6240\u4e0d\u540c\uff0c\u5e76\u4e14\u6709\u7684\u652f\u6301.Type()\u548c.Interface()\uff0c\u6709\u7684\u4e0d\u652f\u6301\uff0c\u8fd9\u91cc\u505a\u4e86\u4e2a\u6d4b\u8bd5\uff0c\u8d34\u51fa\u7ed3\u679c\n\n\nfmt\n.\nPrintln\n(\nv\n.\nField\n(\ni\n))\n\n\nfmt\n.\nPrintln\n(\nv\n.\nField\n(\ni\n).\nType\n())\n\n\nfmt\n.\nPrintln\n(\nv\n.\nField\n(\ni\n).\nInterface\n())\n\n\n\nfmt\n.\nPrintln\n(\nt\n.\nField\n(\ni\n))\n\n\nfmt\n.\nPrintln\n(\nt\n.\nField\n(\ni\n).\nType\n())\n \n// panic\n\n\nfmt\n.\nPrintln\n(\nt\n.\nField\n(\ni\n).\nInterface\n())\n \n// panic\n\n\n\n\n\n\n\n\n\ni\u662f\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u7b2c\u51e0\u4e2a\u5143\u7d20\n\n\n\n\n\n\nv\u8868\u793aValue\u7c7b\u578b\n\n\n\n\n\n\nt\u8868\u793aType\u7c7b\u578b(\u5373*rtype)\n\n\n\n\n\n\n\u6ce8\u91ca\u6389\u7684\u8868\u793a\u4f1a\u62a5\u9519\uff0c\u56e0\u6b64\u53ef\u4ee5\u770b\u51fa\uff0cType\u548cValue\u90fd\u652f\u6301Field()\uff0c\u4f46\u53ea\u6709Value\u7684Field()\u652f\u6301.Type()\u548c.Interface()\n\n\n\u5b8c\u6574\u4f8b\u5b50\n\uff0c\u5305\u542bType\u7684Field()\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nreflect\n\n\n)\n\n\n\ntype\n \nT\n \nstruct\n \n{\n\n    \nA\n \nint\n\n    \nB\n \nstring\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nt\n \n:=\n \nT\n{\n23\n,\n \nskidoo\n}\n\n    \ns\n \n:=\n \nreflect\n.\nValueOf\n(\nt\n).\nElem\n()\n\n    \ntypeOfT\n \n:=\n \ns\n.\nType\n()\n\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \ns\n.\nNumField\n();\n \ni\n++\n \n{\n\n        \nf\n \n:=\n \ns\n.\nField\n(\ni\n)\n\n        \nfmt\n.\nPrintf\n(\n%d: %s %s = %v\\n\n,\n \ni\n,\n \ntypeOfT\n.\nField\n(\ni\n).\nName\n,\n \nf\n.\nType\n(),\n \nf\n.\nInterface\n())\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n0: A int = 23\n1: B string = skidoo\n\n\n\n\nFieldByName()\n\n\n\u901a\u8fc7\u7ed3\u6784\u4f53\u7684\u5143\u7d20\u540d\u67e5\u8be2\u5bf9\u5e94\u7684\u5143\u7d20\u503c\uff0c\u4e0d\u652f\u6301.Name\uff0c\u4f46\u652f\u6301.Type()\u3001.Interface()\u3002\n\n\n\u548cType\u7684FieldByName\u652f\u6301\u7684\u6709\u6240\u4e0d\u540c\uff0c\u8be6\u89c1\nType\u7684FieldByName", 
            "title": "2.1. Type\u548cValue"
        }, 
        {
            "location": "/reflect/pkg_type_value/#reflecttype", 
            "text": "reflect.Type\uff1a\u662f\u4e00\u4e2ainterface\uff0c\u5bf9\u5e94\u7684struct\u662freflect.*rtype\uff0c\u5728go\u6e90\u7801/src/reflect/type.go\u91cc\u5b9a\u4e49\uff1a  // Type is the representation of a Go type.   Note  \u672c\u6587\u63d0\u5230\u7684reflect.Type\u5b9e\u9645\u5747\u662freflect.*rtype    Warning  \u8fd9\u4e2areflect.Type\u662f\u63a5\u53e3hold\u7684\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u8ffd\u6839\u6eaf\u6e90\u7684\u6700\u5e95\u5c42\u7c7b\u578b\u3002\u6bd4\u5982\u8bf4  type MyStruct struct {}  \u8fd9\u91ccreflect.Type\u5c31\u662f\"MyStruct\"\uff0c\u800c\u975e\"struct\"\u3002\u5982\u679c\u60f3\u83b7\u5f97struct\u53ea\u80fd\u4f7f\u7528Kind()", 
            "title": "reflect.Type"
        }, 
        {
            "location": "/reflect/pkg_type_value/#string", 
            "text": "reflect.Type(\u5b9e\u9645\u662freflect.*rtype)\u7684String()\u65b9\u6cd5\uff1a\u5c06\u63a5\u53e3\u53d8\u91cfhold\u7684\u53d8\u91cf\u7684\u7c7b\u578b\u540d\u8f6c\u4e3a\u5b57\u7b26\u4e32\u8f93\u51fa\uff0c\u5373\u8f93\u51fa\u7684\u53d8\u91cf\u662f\u7c7b\u578b\u4e3astring\uff0c\u503c\u4e3ahold\u7684\u7c7b\u578b\u540d", 
            "title": "String()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#kind", 
            "text": "Type\u548cValue\u90fd\u6709Kind()\u65b9\u6cd5\u7528\u6765\u8fd4\u56de\u4e00\u4e2a\u5e38\u91cf\uff08Type\u548cValue\u8fd4\u56de\u7684\u662f\u76f8\u540c\u7684\uff09  \u8fd9\u4e2a\u5e38\u91cf\u6307\u793a\u4e86\u6240hold\u7684\u503c\u662f\u4ec0\u4e48\u7c7b\u578b  \uff08\u8fd9\u4e2a\u7c7b\u578b\u662f\u6700\u7ec8\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u4e2d\u95f4\u7c7b\u578b\uff09  \u4f8b\u5982  package   main  import   ( \n     fmt \n     reflect  )  type   AInt   int  type   BInt   AInt  func   main ()   { \n     var   e   interface {}   =   BInt ( 10 ) \n     fmt . Println ( reflect . TypeOf ( e ). Kind ())  }   \u8f93\u51fa  int   Note  \u76ee\u524d\u6682\u65f6\u6ca1\u6709\u627e\u5230\u529e\u6cd5\u83b7\u5f97\u4e2d\u95f4\u7c7b\u578b   Kind()\u65b9\u6cd5\u8fd4\u56de\u7684\u53d8\u91cf\u7c7b\u578b\u662freflect.Kind\uff0c\u5176\u503c\u662fuint\u7c7b\u578b\u7684\u6570\u5b57\uff0c\u6bcf\u4e2a\u6570\u5b57\u8868\u793a\u4e00\u79cdgo\u5185\u7f6e\u7c7b\u578b  Kind\u5e95\u5c42\u7814\u7a76  package   main  import   ( \n     fmt \n     reflect  )  func   main ()   { \n     var   x   float64   =   3.4 \n     v   :=   reflect . ValueOf ( x ) \n     fmt . Printf ( v.Kind(): %T %v\\n ,   v . Kind (),   v . Kind ()) \n     fmt . Printf ( reflect.Float64: %T %v\\n ,   reflect . Float64 ,   reflect . Float64 )       fmt . Println ( v . Kind ()   ==   reflect . Float64 )       fmt . Println ( v . Kind (). String ()   ==   float64 )  }   \u8f93\u51fa  v.Kind(): reflect.Kind float64\nreflect.Float64: reflect.Kind float64\ntrue\ntrue  \u4e3a\u4ec0\u4e48Kind()\u53ef\u4ee5\u7b49\u4e8ereflect.Float64\uff0c\u662f\u56e0\u4e3a\u540c\u65f6\u6ee1\u8db3\u4e862\u70b9\uff1a    Kind()\u8fd4\u56de\u7684\u7c7b\u578b\u4e0ereflect.Float64\u7c7b\u578b\u4e00\u81f4    Kind()\u8fd4\u56de\u7684\u503c\u4e0ereflect.Float64\u503c\u4e00\u81f4    \u4e0b\u9762\u4e00\u4e00\u89e3\u7b54\uff1a    Kind()\u8fd4\u56de\u7684\u662fKind\u7c7b\u578b\uff0c\u8fd9\u4e2aKind\u7c7b\u578b\u662freflect\u5305\u91cc\u5b9a\u4e49\u7684\u4e00\u4e2auint\u7684type  \u9644Kind\u5b9a\u4e49 type Kind\u662f\u5728Type\u548cValue\u7684Kind()\u65b9\u6cd5\u4e2d\u90fd\u6709\u63d0\u53ca\u7684\u6838\u5fc3\u90e8\u5206 // A Kind represents the specific kind of type that a Type represents.  // The zero Kind is not a valid kind.  type   Kind   uint  const   ( \n     Invalid   Kind   =   iota \n     Bool \n     Int \n     Int8 \n     Int16 \n     Int32 \n     Int64 \n     Uint \n     Uint8 \n     Uint16 \n     Uint32 \n     Uint64 \n     Uintptr \n     Float32 \n     Float64 \n     Complex64 \n     Complex128 \n     Array \n     Chan \n     Func \n     Interface \n     Map \n     Ptr \n     Slice \n     String \n     Struct \n     UnsafePointer  )  func   ( k   Kind )   String ()   string   { \n     if   int ( k )     len ( kindNames )   { \n         return   kindNames [ k ] \n     } \n     return   kind   +   strconv . Itoa ( int ( k ))  }  var   kindNames   =   [] string { \n     Invalid :         invalid , \n     Bool :            bool , \n     Int :             int , \n     Int8 :            int8 , \n     Int16 :           int16 , \n     Int32 :           int32 , \n     Int64 :           int64 , \n     Uint :            uint , \n     Uint8 :           uint8 , \n     Uint16 :          uint16 , \n     Uint32 :          uint32 , \n     Uint64 :          uint64 , \n     Uintptr :         uintptr , \n     Float32 :         float32 , \n     Float64 :         float64 , \n     Complex64 :       complex64 , \n     Complex128 :      complex128 , \n     Array :           array , \n     Chan :            chan , \n     Func :            func , \n     Interface :       interface , \n     Map :             map , \n     Ptr :             ptr , \n     Slice :           slice , \n     String :          string , \n     Struct :          struct , \n     UnsafePointer :   unsafe.Pointer ,  }   \u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50const\u90e8\u5206\u7528\u5230\u4e86\u7c7b\u4f3c\u679a\u4e3e\u529f\u80fd\uff0c\u8be6\u89c1 \u679a\u4e3e\u7ae0\u8282 \u6ce8\u610f\uff1a\u4e0a\u9762reflect.Uint\u3001reflect.Struct\u8fd9\u79cd\u7684\u7c7b\u578b\u662freflect.Kind\uff0c\u800c\u503c\u5c31\u662fuint\u3001struct\uff08\u4e0d\u662f\u5b57\u7b26\u4e32\"uint\"\u3001\"struct\"\uff0c\u800c\u662fgo\u7684\u7c7b\u578buint\u3001struct\uff09 \u5176\u6b21\uff0c\u70b9\u51fb\u6253\u5f00\u4e0a\u9762\u7684\"\u9644Kind\u5b9a\u4e49\"\u53ef\u4ee5\u770b\u5230\uff1areflect.Float64\u7684\u7c7b\u578b\u662freflect.Kind\uff0c\u5176\u503c\u662f14(uint\u768414\uff0c\u4eceInvalid\u5f80\u4e0b\u6570\u7b2c14\u4e2a)\u3002  \u6240\u4ee5Kind()\u8fd4\u56de\u7684\u7c7b\u578b\u4e0ereflect.Float64\u7c7b\u578b\u4e00\u81f4    Kind()\u8fd4\u56de\u7684\u503c\u5b9e\u9645\u662fuint\u6570\u5b57\uff0c\u4f8b\u5b50\u4e2d\u4e3a14\uff08reflect.Float64\uff09\uff0creflect.Float64\u8fd4\u56de\u7684\u503c\u4e5f\u662fuint\u6570\u5b57\uff0c\u4e5f\u4e3a14\uff0c\u6240\u4ee5\u662f\u76f8\u7b49\u7684\uff0c\u4e3atrue   Note  fmt\u6253\u5370Kind\u503c\u7684\u65f6\u5019\uff0c\u8c03\u7528\u4e86Kind\u7684String()\u65b9\u6cd5\uff0c\u56e0\u6b64\u6253\u5370\u51fa\"float64\"\u800c\u4e0d\u662f\u6570\u5b5714  \u56e0\u6b64 v.Kind().String() ==  float64 \u4e5f\u4e3atrue  \u56e0\u6b64\u4eca\u540e\u5982\u679c\u8981\u67e5\u8be2\u4e00\u4e2a\u53d8\u91cf\u7684\u6700\u7ec8\u7c7b\u578b\uff0c\u53ef\u4ee5v.Kind()\uff0c\u5982\u679c\u60f3\u83b7\u5f97\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u5c31v.Kind().String", 
            "title": "Kind()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#fieldname", 
            "text": "\u67e5\u8be2struct\u5143\u7d20\u503c\uff0c\u6bd4\u5982.Field(0)\u8868\u793a\u67e5\u8be2struct\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\uff0c.FieldByName(\"X\")\u8868\u793a\u67e5\u8be2struct\u4e2d\u5143\u7d20\u540d\u4e3aX\u7684\u503c  \u4f46\u7531\u4e8eType\u548cValue\u90fd\u6709Field()\u548cFieldByName()\uff0c\u4f46\u6709\u6240\u4e0d\u540c\uff0c\u5e76\u4e14\u6709\u7684\u652f\u6301.Name\uff0c\u6709\u7684\u4e0d\u652f\u6301\uff0c\u8fd9\u91cc\u505a\u4e86\u4e2a\u6d4b\u8bd5\uff0c\u8d34\u51fa\u7ed3\u679c  fmt . Println ( v . Field ( i ))  fmt . Println ( v . Field ( i ). Name )   // panic  fmt . Println ( v . FieldByName ( A ))  fmt . Println ( v . FieldByName ( A ). Name )   // panic  fmt . Println ( t . Field ( i ))  fmt . Println ( t . Field ( i ). Name )  fmt . Println ( t . FieldByName ( A ))  fmt . Println ( t . FieldByName ( A ). Name )   // panic     i\u662f\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u7b2c\u51e0\u4e2a\u5143\u7d20\uff0c\"A\"\u8868\u793a\u7ed3\u6784\u4f53\u4e2d\u6709\u4e00\u4e2a\u5143\u7d20\u4e3a\"A\"    v\u8868\u793aValue\u7c7b\u578b    t\u8868\u793aType\u7c7b\u578b(\u5373*rtype)    \u6ce8\u91ca\u6389\u7684\u8868\u793a\u4f1a\u62a5\u9519\uff0c\u56e0\u6b64\u53ef\u4ee5\u770b\u51fa\uff0cType\u548cValue\u90fd\u652f\u6301Field()\u548cFieldByName()\uff0c\u4f46\u53ea\u6709Type\u7684Field()\u652f\u6301.Name", 
            "title": "Field().Name"
        }, 
        {
            "location": "/reflect/pkg_type_value/#fieldbyname", 
            "text": "\u901a\u8fc7\u7ed3\u6784\u4f53\u7684\u5143\u7d20\u540d\u67e5\u8be2\u5bf9\u5e94\u7684\u5143\u7d20\u503c\uff0c\u4e0d\u652f\u6301.Name\u3001.Type()\u3001.Interface()  \u548cValue\u7684FieldByName\u652f\u6301\u7684\u6709\u6240\u4e0d\u540c\uff0c\u8be6\u89c1 Value\u7684FieldByName", 
            "title": "FieldByName()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#reflectvalue", 
            "text": "reflect.Value\uff1a\u662f\u4e00\u4e2astruct\uff0c\u5728go\u6e90\u7801/src/reflect/value.go\u91cc\u5b9a\u4e49\uff1a  // Value is the reflection interface to a Go value.", 
            "title": "reflect.Value"
        }, 
        {
            "location": "/reflect/pkg_type_value/#kind_1", 
            "text": "\u540creflec.Type.Kind()", 
            "title": "Kind()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#type", 
            "text": "reflect.Value\u6709Type()\u65b9\u6cd5\uff0c\u7528\u4e8e\u5f97\u5230reflect.Type  package   main  import   ( \n     fmt \n     reflect  )  type   MyStruct   struct   { \n     X ,   Y   int  }  func   main ()   { \n     var   e   interface {}   =   MyStruct { 3 ,   4 } \n     t   :=   reflect . ValueOf ( e ). Type () \n     fmt . Printf ( %T %v\\n ,   t ,   t )  }   \u8f93\u51fa  *reflect.rtype main.MyStruct", 
            "title": "Type()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#_1", 
            "text": "", 
            "title": "\u83b7\u5f97\u503c"
        }, 
        {
            "location": "/reflect/pkg_type_value/#string_1", 
            "text": "reflect.Value\u7684String()\u65b9\u6cd5:    \u82e5hold\u7684\u53d8\u91cf\u7c7b\u578b\u662fstring\u5219\u8f93\u51fa\u503c    \u82e5hold\u7684\u53d8\u91cf\u7c7b\u578b\u4e0d\u662fstring\u5219\u8f93\u51fa \u63a5\u53e3hold\u7684\u53d8\u91cf\u7684\u7c7b\u578b\u540d Value  \u4f8b\u5b50 var x float64 = 3.4\nfmt.Println( value: , reflect.ValueOf(x).String())  \u8f93\u51fa value:  float64 Value   \u9644String()\u5b9a\u4e49 // String returns the string v s underlying value, as a string.  // String is a special case because of Go s String method convention.  // Unlike the other getters, it does not panic if v s Kind is not String.  // Instead, it returns a string of the form  T value  where T is v s type.  // The fmt package treats Values specially. It does not call their String  // method implicitly but instead prints the concrete values they hold.  func   ( v   Value )   String ()   string   { \n     switch   k   :=   v . kind ();   k   { \n     case   Invalid : \n         return   invalid Value \n     case   String : \n         return   * ( * string )( v . ptr ) \n     } \n     // If you call String on a reflect.Value of other type, it s better to \n     // print something than to panic. Useful in debugging. \n     return     +   v . Type (). String ()   +    Value  }   \u4e3a\u4ec0\u4e48\u8981\u8f93\u51fa \u63a5\u53e3hold\u7684\u53d8\u91cf\u7684\u7c7b\u578b\u540d Value \uff0c\u662f\u56e0\u4e3a\u5728go\u91cc\u975estring\u7c7b\u578b\u65e0\u6cd5\u8f6c\u5316\u4e3astring\uff0c\u82e5\u76f4\u63a5panic\u53c8\u4e0d\u592a\u53cb\u597d\uff0c\u540c\u65f6\u4e3a\u4e86\u4fbf\u4e8e\u8c03\u8bd5\uff0c\u5e72\u8106\u5c31\u6253\u5370\u7c7b\u578b\u597d\u4e86\uff08\u5373\u8c03\u7528 .Type() \uff09    String()\u4f8b\u5b50\uff0c\u5305\u542breflect.Type.String()\u548creflect.Value.String()  package   main  import   ( \n     fmt \n     reflect  )  type   Adder   interface   { \n     Add ()  }  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( this   MyStruct )   Add ()   { \n     fmt . Println ( this . X   +   this . Y )  }  func   main ()   { \n     var   i   Adder   =   MyStruct { 3 ,   4 } \n     t1   :=   reflect . TypeOf ( i ) \n     v1   :=   reflect . ValueOf ( i ) \n     st1   :=   t1 . String () \n     sv1   :=   v1 . String () \n\n     fmt . Printf ( i:\\t%T\\t%v\\n ,   i ,   i ) \n     fmt . Printf ( t1:\\t%T\\t%v\\n ,   t1 ,   t1 ) \n     fmt . Printf ( v1:\\t%T\\t%v\\n ,   v1 ,   v1 ) \n     fmt . Printf ( st1:\\t%T\\t\\t%v\\n ,   st1 ,   st1 ) \n     fmt . Printf ( sv1:\\t%T\\t\\t%v\\n ,   sv1 ,   sv1 ) \n\n     fmt . Println ( ----- ) \n\n     var   e   interface {}   =   hello, world \n     v2   :=   reflect . ValueOf ( e ) \n     sv2   :=   v2 . String () \n     fmt . Printf ( e:\\t%T\\t\\t%v\\n ,   e ,   e ) \n     fmt . Printf ( v2:\\t%T\\t%v\\n ,   v2 ,   v2 ) \n     fmt . Printf ( sv2:\\t%T\\t\\t%v\\n ,   sv2 ,   sv2 )  }   \u8f93\u51fa  i:      main.MyStruct   {3 4}\nt1:     *reflect.rtype  main.MyStruct\nv1:     reflect.Value   {3 4}\nst1:    string          main.MyStruct\nsv1:    string           main.MyStruct Value \n-----\ne:      string          hello, world\nv2:     reflect.Value   hello, world\nsv2:    string          hello, world", 
            "title": "String()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#intfloat", 
            "text": "Value\u7c7b\u578b\u53d8\u91cf\u8fd8\u62e5\u6709\u4e00\u4e9b\u540d\u5982Int\u548cFloat\u7684\u65b9\u6cd5\u7528\u6765\u83b7\u53d6\u5185\u90e8\u5b58\u50a8\u7684\u503c   Warning  \u8fd4\u56de\u7684\u662fint64\u7c7b\u578b\u4ee5\u53cafloat64\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u800c\u4e0d\u662fint8\u3001float32   \u6709\u7b26\u53f7\u6574\u578b\u4e3a\u4f55\u53ea\u6709Int()\uff0c\u800c\u6ca1\u6709Int8()\u3001Int32()\uff0c\u662f\u4e3a\u4e86\u4fdd\u6301API\u7684\u7b80\u6d01\u6027\uff0c\u83b7\u5f97\u503c\u548c\u8bbe\u7f6e\u503c\u7684\u65b9\u6cd5\u6709\u4e00\u5b9a\u7684\u7b80\u5316\u8003\u8651\uff0c\u7528\u6700\u5927\u7684\u7c7b\u578b\u6765\u5305\u542b\u76f8\u5173\u7c7b\u578b\uff0c\u4ee5\u4fbf\u5b58\u50a8\u503c\u3002\u4f8b\u5982\u4f7f\u7528int64\u6765\u8868\u793a\u6240\u6709\u6709\u7b26\u53f7\u6574\u578b\uff08int64\u6700\u5927\uff0c\u5b58\u50a8\u7684\u503c\u80fd\u6db5\u76d6int8\u3001int16\u3001int32\uff09\uff0c\u800cInt()\u662fValue\u83b7\u5f97\u6709\u7b26\u53f7\u6574\u578b\u65b9\u6cd5\uff0c\u8fd4\u56de\u7684\u4e5f\u662fint64  package   main  import   ( \n     reflect \n     fmt  )  func   main ()   { \n     var   f32   float32   =   3.4 \n     fmt . Println ( f32 ) \n     vf32   :=   reflect . ValueOf ( f32 ) \n     fmt . Printf ( %T %v\\n ,   vf32 . Float (),   vf32 . Float ()) \n\n     fmt . Println ( ----- ) \n\n     var   f64   float64   =   3.4 \n     fmt . Println ( f64 ) \n     vf64   :=   reflect . ValueOf ( f64 ) \n     fmt . Printf ( %T %v\\n ,   vf64 . Float (),   vf64 . Float ()) \n\n     fmt . Println ( ===== ) \n\n     var   i8   int8   =   10 \n     fmt . Println ( i8 ) \n     vi8   :=   reflect . ValueOf ( i8 ) \n     fmt . Printf ( %T %v\\n ,   vi8 . Int (),   vi8 . Int ()) \n\n     fmt . Println ( ----- ) \n\n     var   i64   int64   =   10 \n     fmt . Println ( i64 ) \n     vi64   :=   reflect . ValueOf ( i64 ) \n     fmt . Printf ( %T %v\\n ,   vi64 . Int (),   vi64 . Int ())  }   \u8f93\u51fa  3.4\nfloat64 3.4000000953674316\n-----\n3.4\nfloat64 3.4\n=====\n10\nint64 10\n-----\n10\nint64 10  \u82e5\u5c06int64\u7c7b\u578b\u7528Float()\u65b9\u6cd5\u6253\u5370\u4f1a\u62a5\u9519\uff0c\u540c\u6837\uff0cfloat64\u7528Int()\u6253\u5370\u4e5f\u4f1a\u62a5\u9519\uff0c\u4e0d\u8fc7\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\uff0c\u5c31\u662f\u4e0a\u9762\u63d0\u5230\u7684String()\uff0c\u6309\u7406\u6765\u8bf4\u5e94\u8be5\u4e5f\u4f1a\u62a5\u9519\uff0c\u4f46\u8fd9\u6837\u610f\u4e49\u4e0d\u5927\uff0c\u8fd8\u4e0d\u5982\u8f93\u51fa\u70b9\u4ec0\u4e48\u6709\u610f\u4e49\u7684\uff0c\u4fbf\u4e8e\u8c03\u8bd5\uff0c\u4e8e\u662f\u5c31\u8f93\u51fa float64 Value \u597d\u4e86", 
            "title": "Int()\u3001Float()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#_2", 
            "text": "", 
            "title": "\u8bbe\u7f6e\u503c"
        }, 
        {
            "location": "/reflect/pkg_type_value/#setintsetfloat", 
            "text": "Value\u7c7b\u578b\u53d8\u91cf\u8fd8\u62e5\u6709\u4e00\u4e9b\u540d\u5982SetInt\u548cSetFloat\u7684\u65b9\u6cd5\u7528\u6765\u6539\u53d8\u5185\u90e8\u5b58\u50a8\u7684\u503c\uff0c\u4f46\u8981\u6ce8\u610f\u4ec5\u5bf9\u6307\u9488\u8fd9\u79cd\u5730\u5740\u4f20\u9012\u7684\u624d\u6709\u6548\uff0c\u5e76\u4e14\u8981\u7528\u4e0a Elem() \u624d\u884c  SetInt()\u4f8b\u5b50  package   main  import   ( \n     reflect \n     fmt  )  type   MyInt   int  func   main ()   { \n     m   :=   MyInt ( 10 ) \n     v   :=   reflect . ValueOf ( m ) \n     e   :=   v . Elem () \n     e . SetInt ( 20 ) \n     fmt . Printf ( m: %T %v\\n ,   m ,   m ) \n     fmt . Printf ( e: %T %v\\n ,   e ,   e )  }   \u8f93\u51fa  m: main.MyInt 20\ne: reflect.Value 20  SetFloat()\u4f8b\u5b50  package   main  import   ( \n     reflect \n     fmt  )  func   main ()   { \n     var   f   float64   =   3.4 \n     v   :=   reflect . ValueOf ( f ) \n     e   :=   v . Elem () \n     e . SetFloat ( 7.1 ) \n     fmt . Printf ( f: %T %v\\n ,   f ,   f ) \n     fmt . Printf ( e: %T %v\\n ,   e ,   e )  }   \u8f93\u51fa  f: float64 7.1\ne: reflect.Value 7.1", 
            "title": "SetInt()\u3001SetFloat()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#interface", 
            "text": "\u7ed9\u5b9a\u4e00\u4e2areflect.Value\u7c7b\u578b\u7684\u5bf9\u8c61\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Interface\u65b9\u6cd5\u6765\u5c06\u5176\u53cd\u8f6c\u56de\u63a5\u53e3\u53d8\u91cf\u3002\u5c06\u5176\u7c7b\u578b\u548c\u503c\u91cd\u65b0\u6253\u5305\u56de\u4e00\u4e2a\u63a5\u53e3\u53d8\u91cf\u4e2d\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u53d8\u91cf\u662f\u4e2a\u7a7a\u63a5\u53e3  package   main  import   ( \n     reflect \n     fmt  )  type   MyInt   int  func   main ()   { \n     m   :=   MyInt ( 10 ) \n     v   :=   reflect . ValueOf ( m ) \n     i   :=   v . Interface () \n     fmt . Printf ( m: %T %v\\n ,   m ,   m ) \n     fmt . Printf ( v: %T %v\\n ,   v ,   v ) \n     fmt . Printf ( i: %T %v\\n ,   i ,   i )  }   \u8f93\u51fa  m: main.MyInt 10\nv: reflect.Value 10\ni: main.MyInt 10  \u7531\u4e8e\u662f\u7a7a\u63a5\u53e3\uff0c\u56e0\u6b64\u5982\u679c\u7c7b\u578b\uff08\u6bd4\u5982\u4e0a\u9762\u7684MyInt\uff09\u6709\u65b9\u6cd5\u7684\u8bdd\u662f\u65e0\u6cd5\u6267\u884c\u7684\uff0c\u82e5\u60f3\u53ef\u4ee5\u6267\u884c\u65b9\u6cd5\uff0c\u53ef\u4ee5\u7528\u7c7b\u578b\u65ad\u8a00\uff0c\u8be6\u89c1 \u7c7b\u578b\u65ad\u8a00\u5b9e\u73b0\u63a5\u53e3 \uff0c\u4f8b\u5982\uff1a  package   main  import   ( \n     reflect \n     fmt  )  type   MyInt   int  func   ( this   MyInt )   Add ()   { \n     fmt . Println ( this   +   3 )  }  func   main ()   { \n     m   :=   MyInt ( 10 ) \n     v   :=   reflect . ValueOf ( m ) \n     i   :=   v . Interface () \n     fmt . Printf ( m: %T %v\\n ,   m ,   m ) \n     fmt . Printf ( v: %T %v\\n ,   v ,   v ) \n     fmt . Printf ( i: %T %v\\n ,   i ,   i )       e   :=   i .( MyInt )       e . Add ()  }   \u8f93\u51fa  m: main.MyInt 10\nv: reflect.Value 10\ni: main.MyInt 10\n13  \u7b80\u5355\u6765\u8bf4\uff0cInterface()\u662fValueOf()\u7684\u53cd\u51fd\u6570", 
            "title": "Interface()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#canset", 
            "text": "reflect.Value\u6709\u4e00\u4e2aCanSet()\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u68c0\u6d4bValue\u7c7b\u578b\u7684\u53ef\u8bbe\u7f6e\u6027\uff08\u8fd4\u56de\u4e00\u4e2abool\u7c7b\u578b\u7684true\u6216false\uff09  \u4f8b\uff1a\u975e\u6307\u9488\u4e0d\u5177\u5907\u53ef\u8bbe\u7f6e\u6027 package   main  import   ( \n     reflect \n     fmt  )  func   main ()   { \n     var   x   float64   =   3.4 \n     v   :=   reflect . ValueOf ( x ) \n     c   :=   v . CanSet () \n     fmt . Println ( c )  }   \u8f93\u51fa false  \u4f8b\uff1a\u6307\u9488\u5177\u5907\u53ef\u8bbe\u7f6e\u6027 package   main  import   ( \n     reflect \n     fmt  )  func   main ()   { \n     var   x   float64   =   3.4 \n     v   :=   reflect . ValueOf ( x ) \n     c   :=   v . CanSet () \n     fmt . Println ( c )  }   \u8f93\u51fa false  \b\u867d\u7136\u7528\u4e86\u6307\u9488\uff0c\u4f46\u8fd8\u662f\u4e0d\u53ef\u8bbe\u7f6e\u6027\uff0c\u56e0\u4e3a\u8981\u53d6\u5b83\u7684\u6307\u5411\u7684\u503c\u624d\u53ef\u4ee5\uff0c\u8be6\u89c1 Elem()\u7ae0\u8282 \u9644: CanSet()\u5b9a\u4e49 func   ( v   Value )   CanSet ()   bool   { \n     return   v . flag ( flagAddr | flagRO )   ==   flagAddr  }", 
            "title": "CanSet()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#elem", 
            "text": "\u7528\u4e8e\u83b7\u5f97Value\u53d8\u91cf\u5185\u90e8\u5b58\u50a8\u7684\u503c\uff0c\u6ce8\u610f\u4ec5\u9488\u5bf9\u6307\u9488\u8fd9\u79cd\u4f20\u9012\u5730\u5740\u7684\u624d\u6709\u6548  package   main  import   ( \n     reflect \n     fmt  )  func   main ()   { \n     var   x   float64   =   3.4 \n     v   :=   reflect . ValueOf ( x ) \n     e   :=   v . Elem () \n     c   :=   e . CanSet () \n     fmt . Println ( c )  }   \u8f93\u51fa  true  \u6ce8\u610f\uff1a\u4e0d\u80fd\u5bf9\u975e\u6307\u9488\u4f7f\u7528Elem()\uff0c\u4f1a\u62a5\u9519  package   main  import   ( \n     reflect \n     fmt  )  func   main ()   { \n     var   x   float64   =   3.4 \n     v   :=   reflect . ValueOf ( x ) \n     e   :=   v . Elem () \n     c   :=   e . CanSet () \n     fmt . Println ( c )  }   \u62a5\u9519  panic: reflect: call of reflect.Value.Elem on float64 Value  \u9644: Elem()\u5b9a\u4e49 // Elem returns the value that the interface v contains  // or that the pointer v points to.  // It panics if v s Kind is not Interface or Ptr.  // It returns the zero Value if v is nil.  func   ( v   Value )   Elem ()   Value   { \n     k   :=   v . kind () \n     switch   k   { \n     case   Interface : \n         var   eface   interface {} \n         if   v . typ . NumMethod ()   ==   0   { \n             eface   =   * ( * interface {})( v . ptr ) \n         }   else   { \n             eface   =   ( interface {})( * ( * interface   { \n                 M () \n             })( v . ptr )) \n         } \n         x   :=   unpackEface ( eface ) \n         if   x . flag   !=   0   { \n             x . flag   |=   v . flag     flagRO \n         } \n         return   x \n     case   Ptr : \n         ptr   :=   v . ptr \n         if   v . flag flagIndir   !=   0   { \n             ptr   =   * ( * unsafe . Pointer )( ptr ) \n         } \n         // The returned value s address is v s value. \n         if   ptr   ==   nil   { \n             return   Value {} \n         } \n         tt   :=   ( * ptrType )( unsafe . Pointer ( v . typ )) \n         typ   :=   tt . elem \n         fl   :=   v . flag flagRO   |   flagIndir   |   flagAddr \n         fl   |=   flag ( typ . Kind ()) \n         return   Value { typ ,   ptr ,   fl } \n     } \n     panic ( ValueError { reflect.Value.Elem ,   v . kind ()})  }", 
            "title": "Elem()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#numfield", 
            "text": "\u67e5\u8be2struct\u7ed3\u6784\u7684\u5143\u7d20\u4e2a\u6570  package   main  import   ( \n     fmt \n     reflect  )  type   MyStruct   struct   { \n     X ,   Y   int  }  func   main ()   { \n     s   :=   MyStruct { 3 ,   4 } \n\n     v   :=   reflect . ValueOf ( s ) \n     e   :=   v . Elem () \n     n   :=   e . NumField () \n\n     fmt . Printf ( %T %v\\n ,   n ,   n )  }   \u8f93\u51fa  int 2", 
            "title": "NumField()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#field", 
            "text": "\u6253\u5370\u6307\u5b9a\u4e0b\u6807\u7684\u5143\u7d20\uff08\u4e0b\u6807\u4ece0\u5f00\u59cb\uff09\uff0c\u6bd4\u5982  package   main  import   ( \n     fmt \n     reflect  )  type   MyStruct   struct   { \n     X ,   Y   int  }  func   main ()   { \n     s   :=   MyStruct { 3 ,   4 } \n\n     v   :=   reflect . ValueOf ( s ) \n     e   :=   v . Elem ()       f0   :=   e . Field ( 0 )       f1   :=   e . Field ( 1 )  \n     fmt . Printf ( f0: %T %v\\n ,   f0 ,   f0 ) \n     fmt . Printf ( f1: %T %v\\n ,   f1 ,   f1 )  }   \u8f93\u51fa  f0: reflect.Value 3\nf1: reflect.Value 4", 
            "title": "Field()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#fieldtypefieldinterface", 
            "text": "Field()\u662f\u67e5\u8be2\u7b2c\u51e0\u4e2a\u5143\u7d20\uff0c\u6bd4\u5982.Field(0)\u8868\u793a\u67e5\u8be2\u7b2c1\u4e2a\u5143\u7d20  \u4f46\u7531\u4e8eType\u548cValue\u90fd\u6709Field()\uff0c\u4f46\u6709\u6240\u4e0d\u540c\uff0c\u5e76\u4e14\u6709\u7684\u652f\u6301.Type()\u548c.Interface()\uff0c\u6709\u7684\u4e0d\u652f\u6301\uff0c\u8fd9\u91cc\u505a\u4e86\u4e2a\u6d4b\u8bd5\uff0c\u8d34\u51fa\u7ed3\u679c  fmt . Println ( v . Field ( i ))  fmt . Println ( v . Field ( i ). Type ())  fmt . Println ( v . Field ( i ). Interface ())  fmt . Println ( t . Field ( i ))  fmt . Println ( t . Field ( i ). Type ())   // panic  fmt . Println ( t . Field ( i ). Interface ())   // panic     i\u662f\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u7b2c\u51e0\u4e2a\u5143\u7d20    v\u8868\u793aValue\u7c7b\u578b    t\u8868\u793aType\u7c7b\u578b(\u5373*rtype)    \u6ce8\u91ca\u6389\u7684\u8868\u793a\u4f1a\u62a5\u9519\uff0c\u56e0\u6b64\u53ef\u4ee5\u770b\u51fa\uff0cType\u548cValue\u90fd\u652f\u6301Field()\uff0c\u4f46\u53ea\u6709Value\u7684Field()\u652f\u6301.Type()\u548c.Interface()  \u5b8c\u6574\u4f8b\u5b50 \uff0c\u5305\u542bType\u7684Field()  package   main  import   ( \n     fmt \n     reflect  )  type   T   struct   { \n     A   int \n     B   string  }  func   main ()   { \n     t   :=   T { 23 ,   skidoo } \n     s   :=   reflect . ValueOf ( t ). Elem () \n     typeOfT   :=   s . Type () \n\n     for   i   :=   0 ;   i     s . NumField ();   i ++   { \n         f   :=   s . Field ( i ) \n         fmt . Printf ( %d: %s %s = %v\\n ,   i ,   typeOfT . Field ( i ). Name ,   f . Type (),   f . Interface ()) \n     }  }   \u8f93\u51fa  0: A int = 23\n1: B string = skidoo", 
            "title": "Field().Type()\u548cField().Interface()"
        }, 
        {
            "location": "/reflect/pkg_type_value/#fieldbyname_1", 
            "text": "\u901a\u8fc7\u7ed3\u6784\u4f53\u7684\u5143\u7d20\u540d\u67e5\u8be2\u5bf9\u5e94\u7684\u5143\u7d20\u503c\uff0c\u4e0d\u652f\u6301.Name\uff0c\u4f46\u652f\u6301.Type()\u3001.Interface()\u3002  \u548cType\u7684FieldByName\u652f\u6301\u7684\u6709\u6240\u4e0d\u540c\uff0c\u8be6\u89c1 Type\u7684FieldByName", 
            "title": "FieldByName()"
        }, 
        {
            "location": "/reflect/pkg_typeof_valueof/", 
            "text": "reflect.TypeOf()\n\n\n\n\n\u7528\u4e8e\u4ece\u63a5\u53e3\u503c\u4e2d\u68c0\u7d22reflect.Type\uff0c\u51fd\u6570\u8fd4\u56dereflect.*rtype\uff08\u5b9e\u73b0\u4e86reflect.Type\uff09\n\n\nreflect.TypeOf\u5728go/src/reflect/type.go\u91cc\u7684\u5b9a\u4e49\n// TypeOf returns the reflection Type that represents the dynamic type of i.\n\n\n// If i is a nil interface value, TypeOf returns nil.\n\n\nfunc\n \nTypeOf\n(\ni\n \ninterface\n{})\n \nType\n \n{\n\n    \neface\n \n:=\n \n*\n(\n*\nemptyInterface\n)(\nunsafe\n.\nPointer\n(\ni\n))\n\n    \nreturn\n \ntoType\n(\neface\n.\ntyp\n)\n\n\n}\n\n\n\n\nreflect.ValueOf()\n\n\n\n\n\u7528\u4e8e\u4ece\u63a5\u53e3\u503c\u4e2d\u68c0\u7d22reflect.Value\uff0c\u51fd\u6570\u8fd4\u56dereflect.Value\n\n\nreflect.ValueOf\u5728go/src/reflect/value.go\u91cc\u7684\u5b9a\u4e49\n// ValueOf returns a new Value initialized to the concrete value\n\n\n// stored in the interface i. ValueOf(nil) returns the zero Value.\n\n\nfunc\n \nValueOf\n(\ni\n \ninterface\n{})\n \nValue\n \n{\n\n    \nif\n \ni\n \n==\n \nnil\n \n{\n\n        \nreturn\n \nValue\n{}\n\n    \n}\n\n\n    \n// TODO: Maybe allow contents of a Value to live on the stack.\n\n    \n// For now we make the contents always escape to the heap. It\n\n    \n// makes life easier in a few places (see chanrecv/mapassign\n\n    \n// comment below).\n\n    \nescapes\n(\ni\n)\n\n\n    \nreturn\n \nunpackEface\n(\ni\n)\n\n\n}", 
            "title": "2.2. TypeOf()\u4e0eValueOf()"
        }, 
        {
            "location": "/reflect/pkg_typeof_valueof/#reflecttypeof", 
            "text": "\u7528\u4e8e\u4ece\u63a5\u53e3\u503c\u4e2d\u68c0\u7d22reflect.Type\uff0c\u51fd\u6570\u8fd4\u56dereflect.*rtype\uff08\u5b9e\u73b0\u4e86reflect.Type\uff09  reflect.TypeOf\u5728go/src/reflect/type.go\u91cc\u7684\u5b9a\u4e49 // TypeOf returns the reflection Type that represents the dynamic type of i.  // If i is a nil interface value, TypeOf returns nil.  func   TypeOf ( i   interface {})   Type   { \n     eface   :=   * ( * emptyInterface )( unsafe . Pointer ( i )) \n     return   toType ( eface . typ )  }", 
            "title": "reflect.TypeOf()"
        }, 
        {
            "location": "/reflect/pkg_typeof_valueof/#reflectvalueof", 
            "text": "\u7528\u4e8e\u4ece\u63a5\u53e3\u503c\u4e2d\u68c0\u7d22reflect.Value\uff0c\u51fd\u6570\u8fd4\u56dereflect.Value  reflect.ValueOf\u5728go/src/reflect/value.go\u91cc\u7684\u5b9a\u4e49 // ValueOf returns a new Value initialized to the concrete value  // stored in the interface i. ValueOf(nil) returns the zero Value.  func   ValueOf ( i   interface {})   Value   { \n     if   i   ==   nil   { \n         return   Value {} \n     } \n\n     // TODO: Maybe allow contents of a Value to live on the stack. \n     // For now we make the contents always escape to the heap. It \n     // makes life easier in a few places (see chanrecv/mapassign \n     // comment below). \n     escapes ( i ) \n\n     return   unpackEface ( i )  }", 
            "title": "reflect.ValueOf()"
        }, 
        {
            "location": "/reflect/fmt/", 
            "text": "fmt\u5728\u6253\u5370\u53d8\u91cf\u503c\u7684\u65f6\u5019\uff08\u4f8b\u5982fmt.Println\u6216\u8005fmt.Printf\u7684%v\uff09\u662f\u8c03\u7528reflect.Value\u6765\u6253\u5370\u5185\u90e8\u7684\u503c\uff08\u5982\u679c\u662f\u63a5\u53e3\u53d8\u91cf\uff0c\u5219\u662fhold\u7684\u53d8\u91cf\u7684\u503c\uff09\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\nfmt.Println(reflect.ValueOf(x))\n\n\n\n\n\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u67092\u6b21\u8c03\u7528reflect\uff1a\n\n\n\n\n\n\nreflect.ValueOf(x)\u83b7\u5f97reflect.Value\u53d8\u91cf\n\n\n\n\n\n\nPrintln\u8c03\u7528reflect.ValueOf()\n\n\n\n\n\n\n\n\nNote\n\n\n\u7b2c\u4e8c\u6b21\u8c03\u7528reflect.ValueOf()\u662f\u56e0\u4e3afmt\u5bf9\u5f85reflect.Value\u548c\u5bf9\u5f85\u5176\u4ed6\u7c7b\u578b\u7684\u53d8\u91cf\u662f\u4e0d\u4e00\u6837\u7684\uff1a\n\n\n\n\n\n\n\u82e5\u662freflect.Value\u5219\u6ca1\u6709\u8c03\u7528\u8981\u6253\u5370\u53d8\u91cf\u7684String()\u65b9\u6cd5\uff0c\u800c\u662f\u6253\u5370\u5176hold\u7684\u51c6\u786e\u503c\n\n\n\n\n\n\n\u82e5\u975ereflect.Value\uff0c\u5219\u5148\u67e5\u627e\u53d8\u91cf\u662f\u5426\u6709Error()\uff0c\u5982\u679c\u6ca1\u6709\u518d\u67e5\u627eString()", 
            "title": "3. fmt"
        }, 
        {
            "location": "/reflect/law1/", 
            "text": "Reflection goes from interface value to reflection object.\n\n\n\u53cd\u5c04\u53ef\u4ee5\u4ece\u63a5\u53e3\u503c\u5230\u53cd\u5c04\u5bf9\u8c61\n\n\n\n\nNote\n\n\n\u8fd9\u91cc\u53cd\u5c04\u7c7b\u578b\u5bf9\u8c61\u5c31\u662f\u6307\u901a\u8fc7TypeOf()\u6216\u8005ValueOf()\u5f97\u5230\u7684\u53cd\u5c04\u7c7b\u578b\u7684\u53d8\u91cf\uff08\u5373reflect.*rtype\u6216reflect.Value\uff09\n\n\n\n\n\n\nAt the basic level, reflection is just a mechanism to examine the type and value pair stored inside an interface variable.\n\n\n\n\n\u57fa\u672c\u6765\u8bf4\uff0c\u53cd\u5c04\u4ec5\u4ec5\u662f\u4e00\u79cd\u6821\u9a8c\u63a5\u53e3\u53d8\u91cfhold\u7684\u53d8\u91cf\u7684\u7c7b\u578b\u548c\u503c(pair)\u7684\u673a\u5236\n\n\n\n\n\u5173\u4e8epair\u7684\u7406\u89e3\n\n\n\u8be6\u89c1\n\u63a5\u53e3-\u6df1\u5165\u7406\u89e3-pair\n\n\n\n\n\u6211\u7684\u7406\u89e3\uff0c\u5c31\u662f\u53ef\u4ee5\u901a\u8fc7TypeOf()\u3001ValueOf()\u5f97\u5230\u53cd\u5c04\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u8fd9\u4e2a\u53d8\u91cf\u7684\u65b9\u6cd5\u6765\u5f97\u5230\u76f8\u5e94\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u901a\u8fc7Kind()\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230\u57fa\u7c7b\u578b\uff0c\u901a\u8fc7Int()\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u5f97\u5230int*\u7c7b\u578b\u7684\u503c(int64)\n\n\n\n\nWarning\n\n\n\u65e0\u6cd5\u901a\u8fc7\u53cd\u5c04\u77e5\u9053\u4e00\u4e2a\u53d8\u91cf\u662f\u5426\u4e3a\u63a5\u53e3\u53d8\u91cf\uff0c\u7528\nswitch i.(type); case\n\u8fd9\u79cd\u7c7b\u578b\u5224\u65ad\u4e5f\u662f\u65e0\u6cd5\u77e5\u9053\u7684\uff0c\u8be6\u89c1\ntype switch\u7ae0\u8282", 
            "title": "4. \u6cd5\u52191"
        }, 
        {
            "location": "/reflect/law2/", 
            "text": "Reflection goes from reflection object to interface value.\n\n\n\u53cd\u5c04\u53ef\u4ee5\u4ece\u53cd\u5c04\u7c7b\u578b\u5bf9\u8c61\u5230\u63a5\u53e3\u7c7b\u578b\n\n\n\u6211\u7684\u7406\u89e3\uff0c\u5c31\u662f\u901a\u8fc7reflect.Value\u7684Interface()\u65b9\u6cd5\u53cd\u8f6c\u5f97\u5230\u6700\u539f\u59cb\u7684\u53d8\u91cf\uff0c\u53ea\u4e0d\u8fc7\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\n\n\n\n\nWarning\n\n\n\u8fd9\u4e2a\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\u662f\u4e00\u4e2a\u7a7a\u63a5\u53e3\uff0c\u8fd9\u91cc\u9644\u4e0aInterface()\u7684\u5b9a\u4e49\n\n\n// Interface returns v\ns current value as an interface{}.\n\n\n// It is equivalent to:\n\n\n//  var i interface{} = (v\ns underlying value)\n\n\n// It panics if the Value was obtained by accessing\n\n\n// unexported struct fields.\n\n\nfunc\n \n(\nv\n \nValue\n)\n \nInterface\n()\n \n(\ni\n \ninterface\n{})\n \n{\n\n    \nreturn\n \nvalueInterface\n(\nv\n,\n \ntrue\n)\n\n\n}\n\n\n\n\n\n\n\n\u70b9\u51fb\u67e5\u770bInterface()\u8be6\u60c5\n\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u6cd5\u52192\u548c\u6cd5\u52191\u662f\b\u76f8\u53cd\u7684\uff0c\u5b98\u65b9\u89e3\u91ca\u5982\u4e0b\uff1a\n\n\n\n\nReflection goes from interface values to reflection objects and back again", 
            "title": "5. \u6cd5\u52192"
        }, 
        {
            "location": "/reflect/law3/", 
            "text": "To modify a reflection object, the value must be settable.\n\n\n\u4fee\u6539\u53cd\u5c04\u7c7b\u578b\u53d8\u91cf\u7684\u5185\u90e8\u503c\u9700\u8981\u4fdd\u8bc1\u5176\u53ef\u8bbe\u7f6e\u6027\n\n\n\u53cd\u5c04\u5bf9\u8c61\u53ef\u4ee5\u4fee\u6539\u5b9e\u9645\u5b58\u50a8\u7684\u88ab\u53cd\u5c04\u5bf9\u8c61\u7684\u80fd\u529b\u3002\n\n\n\u53ef\u8bbe\u7f6e\u6027\u7531\u53cd\u5c04\u5bf9\u8c61\u662f\u5426\u80fd\u5bfb\u5740\u539f\u59cb\u5bf9\u8c61\u6765\u51b3\u5b9a\n\n\n\n\n\u7b80\u5355\u7406\u89e3\u5c31\u662f\u53cd\u5c04\u5bf9\u8c61\u5982\u679c\u5b58\u5728\u7684\u662f\u5730\u5740\uff08\u6bd4\u5982\u539f\u59cb\u5bf9\u8c61\u662f\u6307\u9488\uff09\u5c31\u662f\u53ef\u8bbe\u7f6e\u7684\n\n\n\u65e0\u6cd5\u8bbe\u7f6e\u7684\u4f8b\u5b50\n\n\nvar\n \nx\n \nfloat64\n \n=\n \n3.4\n\n\nv\n \n:=\n \nreflect\n.\nValueOf\n(\nx\n)\n\n\nv\n.\nSetFloat\n(\n7.1\n)\n\n\n\n\n\n\u62a5\u9519\n\n\npanic: reflect.Value.SetFloat using unaddressable value\n\n\n\n\n\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u5c06x\u503c\u505a\u4e86\u4e00\u4efd\u62f7\u8d1d\u4f20\u7ed9reflect.ValueOf\u65b9\u6cd5\uff0c\u6240\u4ee5\u4f20\u5165\u7684\u53c2\u6570\u4ec5\u4ec5\u662f\u62f7\u8d1d\uff0c\u800c\u4e0d\u662fx\u672c\u8eab\u3002\u5373\u4f7f\u6211\u4eec\u5141\u8bb8v.SetFloat(7.1)\u80fd\u64cd\u4f5c\u6210\u529f\uff0c\u8fd9\u5e76\u4e0d\u4f1a\u66f4\u65b0x\u3002\u56e0\u6b64\u6ca1\u6709\u5565\u610f\u4e49\uff08\u8bbe\u8ba1\u8005\u8fd9\u6837\u8ba4\u4e3a\uff09\u3002\u6240\u4ee5\u5e72\u8106\u5b9a\u4e49\u5b83\u975e\u6cd5\u597d\u4e86\n\n\n\u67e5\u8be2\u662f\u5426\u53ef\u8bbe\u7f6e\n\n\n\n\nreflect.Value\u6709\u4e00\u4e2a\nCanSet()\n\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u68c0\u6d4bValue\u7c7b\u578b\u7684\u53ef\u8bbe\u7f6e\u6027\uff08\u8fd4\u56de\u4e00\u4e2abool\u7c7b\u578b\u7684true\u6216false\uff09\n\n\n\u8bbe\u7f6e\u503c\n\n\n\n\n\u82e5\u5177\u5907\u53ef\u8bbe\u7f6e\u6027\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u8bbe\u7f6e\u503c\uff0c\u5206\u4e3a2\u6b65\uff1a\n\n\n\n\n\n\n\u4f7f\u7528Value\u7684\nElem()\n\u65b9\u6cd5\u6765\u6307\u5411\u5185\u90e8\u5b58\u50a8\u7684\u503c\uff08Elem()\u65b9\u6cd5\u8fd4\u56de\u7684\u4e5f\u662fValue\uff09\n\n\n\n\n\n\n\u4f7f\u7528Value\u7684\nSetInt()\n\u7b49\u65b9\u6cd5\u6765\u8bbe\u7f6e\u503c\n\n\n\n\n\n\n\n\nJust keep in mind that reflection Values need the address of something in order to modify what they represent\n\n\n\n\nstruct\u7ed3\u6784\u4f53\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nreflect\n\n\n)\n\n\n\ntype\n \nT\n \nstruct\n \n{\n\n    \nA\n \nint\n\n    \nB\n \nstring\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nt\n \n:=\n \nT\n{\n23\n,\n \nskidoo\n}\n\n    \ns\n \n:=\n \nreflect\n.\nValueOf\n(\nt\n).\nElem\n()\n\n    \ntypeOfT\n \n:=\n \ns\n.\nType\n()\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \ns\n.\nNumField\n();\n \ni\n++\n \n{\n\n        \nf\n \n:=\n \ns\n.\nField\n(\ni\n)\n\n        \nfmt\n.\nPrintf\n(\n%d: %s %s = %v\\n\n,\n \ni\n,\n\n            \ntypeOfT\n.\nField\n(\ni\n).\nName\n,\n \nf\n.\nType\n(),\n \nf\n.\nInterface\n())\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n0: A int = 23\n1: B string = skidoo\n\n\n\n\n\u4e0a\u9762\u4f8b\u5b50\u4e2d\u6d89\u53ca\u5230\u7684\u6709\uff1a\n\n\n\n\n\n\nValue.Elem()\n\n\n\n\n\n\nValue.NumField()\n\n\n\n\n\n\nValue.Field()\n\n\n\n\n\n\nValue.Field(x).Type()\u548cValue.Field(x).Interface()\n\n\n\n\n\n\nType.Field(x).Name\n\n\n\n\n\n\n\n\nWarning\n\n\n\u7ed3\u6784\u4f53\u4e2d\u7684\u5143\u7d20\u7684\u540d\u53ea\u6709\u4ee5\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u624d\u662f\u53ef\u8bbe\u7f6e\u7684", 
            "title": "6. \u6cd5\u52193"
        }, 
        {
            "location": "/reflect/law3/#_1", 
            "text": "\u7b80\u5355\u7406\u89e3\u5c31\u662f\u53cd\u5c04\u5bf9\u8c61\u5982\u679c\u5b58\u5728\u7684\u662f\u5730\u5740\uff08\u6bd4\u5982\u539f\u59cb\u5bf9\u8c61\u662f\u6307\u9488\uff09\u5c31\u662f\u53ef\u8bbe\u7f6e\u7684  \u65e0\u6cd5\u8bbe\u7f6e\u7684\u4f8b\u5b50  var   x   float64   =   3.4  v   :=   reflect . ValueOf ( x )  v . SetFloat ( 7.1 )   \u62a5\u9519  panic: reflect.Value.SetFloat using unaddressable value  \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u5c06x\u503c\u505a\u4e86\u4e00\u4efd\u62f7\u8d1d\u4f20\u7ed9reflect.ValueOf\u65b9\u6cd5\uff0c\u6240\u4ee5\u4f20\u5165\u7684\u53c2\u6570\u4ec5\u4ec5\u662f\u62f7\u8d1d\uff0c\u800c\u4e0d\u662fx\u672c\u8eab\u3002\u5373\u4f7f\u6211\u4eec\u5141\u8bb8v.SetFloat(7.1)\u80fd\u64cd\u4f5c\u6210\u529f\uff0c\u8fd9\u5e76\u4e0d\u4f1a\u66f4\u65b0x\u3002\u56e0\u6b64\u6ca1\u6709\u5565\u610f\u4e49\uff08\u8bbe\u8ba1\u8005\u8fd9\u6837\u8ba4\u4e3a\uff09\u3002\u6240\u4ee5\u5e72\u8106\u5b9a\u4e49\u5b83\u975e\u6cd5\u597d\u4e86", 
            "title": "\u53ef\u8bbe\u7f6e\u6027\u7531\u53cd\u5c04\u5bf9\u8c61\u662f\u5426\u80fd\u5bfb\u5740\u539f\u59cb\u5bf9\u8c61\u6765\u51b3\u5b9a"
        }, 
        {
            "location": "/reflect/law3/#_2", 
            "text": "reflect.Value\u6709\u4e00\u4e2a CanSet() \u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u68c0\u6d4bValue\u7c7b\u578b\u7684\u53ef\u8bbe\u7f6e\u6027\uff08\u8fd4\u56de\u4e00\u4e2abool\u7c7b\u578b\u7684true\u6216false\uff09", 
            "title": "\u67e5\u8be2\u662f\u5426\u53ef\u8bbe\u7f6e"
        }, 
        {
            "location": "/reflect/law3/#_3", 
            "text": "\u82e5\u5177\u5907\u53ef\u8bbe\u7f6e\u6027\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u8bbe\u7f6e\u503c\uff0c\u5206\u4e3a2\u6b65\uff1a    \u4f7f\u7528Value\u7684 Elem() \u65b9\u6cd5\u6765\u6307\u5411\u5185\u90e8\u5b58\u50a8\u7684\u503c\uff08Elem()\u65b9\u6cd5\u8fd4\u56de\u7684\u4e5f\u662fValue\uff09    \u4f7f\u7528Value\u7684 SetInt() \u7b49\u65b9\u6cd5\u6765\u8bbe\u7f6e\u503c     Just keep in mind that reflection Values need the address of something in order to modify what they represent", 
            "title": "\u8bbe\u7f6e\u503c"
        }, 
        {
            "location": "/reflect/law3/#struct", 
            "text": "package   main  import   ( \n     fmt \n     reflect  )  type   T   struct   { \n     A   int \n     B   string  }  func   main ()   { \n     t   :=   T { 23 ,   skidoo } \n     s   :=   reflect . ValueOf ( t ). Elem () \n     typeOfT   :=   s . Type () \n     for   i   :=   0 ;   i     s . NumField ();   i ++   { \n         f   :=   s . Field ( i ) \n         fmt . Printf ( %d: %s %s = %v\\n ,   i , \n             typeOfT . Field ( i ). Name ,   f . Type (),   f . Interface ()) \n     }  }   \u8f93\u51fa  0: A int = 23\n1: B string = skidoo  \u4e0a\u9762\u4f8b\u5b50\u4e2d\u6d89\u53ca\u5230\u7684\u6709\uff1a    Value.Elem()    Value.NumField()    Value.Field()    Value.Field(x).Type()\u548cValue.Field(x).Interface()    Type.Field(x).Name     Warning  \u7ed3\u6784\u4f53\u4e2d\u7684\u5143\u7d20\u7684\u540d\u53ea\u6709\u4ee5\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u624d\u662f\u53ef\u8bbe\u7f6e\u7684", 
            "title": "struct\u7ed3\u6784\u4f53"
        }, 
        {
            "location": "/goroutine/main/", 
            "text": "\u4ec0\u4e48\u662f\u534f\u7a0b\n\n\n\n\n\u5173\u4e8e\u534f\u7a0b\u672c\u8eab\u7684\u6982\u5ff5\uff0c\u8be6\u89c1\n\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3001\u534f\u7a0b\n\n\nGO\u534f\u7a0b\n\n\n\n\n\n\ngoroutine\uff08go\u534f\u7a0b\uff09\u662f\u7531Go runtime\u7ba1\u7406\u7684\u8f7b\u91cf\u7ea7\u7ebf\u7a0b\u3002\n\n\n\n\n\u8fd9\u53e5\u8bdd\u8868\u660e\u4e86\u534f\u7a0b\u662f\u7528\u6237\u6001\uff0c\u56e0\u4e3a\u662f\u7531Go runtime\u7ba1\u7406\uff0c\u800c\u975eOS\u5185\u6838\u7ba1\u7406\n\n\n\u542f\u52a8GO\u534f\u7a0b\n\n\n\n\n\u542f\u52a8go\u534f\u7a0b\u65b9\u6cd5\uff1a\u53ea\u9700\u8981\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5019\u5728\u524d\u9762\u52a0\u4e0ago\u5373\u53ef\uff0c\u5982\n\n\ngo say(\nhello\n)\n\n\n\n\n\u5355\u6838\u548c\u591a\u6838\u4e0b\uff0cgo\u534f\u7a0b\u7684\u533a\u522b\n\n\n\n\n\u5355\u6838\u548c\u591a\u6838\u60c5\u51b5\u4e0b\uff0cgo\u534f\u7a0b\u7684\u6267\u884c\u7ed3\u679c\u662f\u6709\u5dee\u5f02\u7684\uff0c\u770b\u4f8b\u5b50\n\n\n\u540c\u6837\u7684\u4ee3\u7801\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ntime\n\n\n)\n\n\n\nfunc\n \nsay\n(\ns\n \nstring\n)\n \n{\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n5\n;\n \ni\n++\n \n{\n\n        \ntime\n.\nSleep\n(\n100\n \n*\n \ntime\n.\nMillisecond\n)\n\n        \nfmt\n.\nPrintln\n(\ns\n)\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ngo\n \nsay\n(\nworld\n)\n\n    \nsay\n(\nhello\n)\n\n\n}\n\n\n\n\n\n\u540c\u6837\u7684\u6267\u884c\n\n\nfor i in {1..10}; do\n    go run goroutines.go | md5sum\ndone\n\n\n\n\n\u5728\u5355\u6838\u4e0a\u7684\u7ed3\u679c\u6bcf\u6b21\u90fd\u4e00\u6837\n\n\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n\n\n\n\n\u5728\u591a\u6838\u4e0a\u7684\u7ed3\u679c\u6bcf\u6b21\u90fd\u4e0d\u4e00\u6837\uff0c\u8fd9\u91cc\u4ec5\u8d34\u51fa2\u6b21\n\n\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n1b8ac04b5e950c4c30682a92a5dbd50e  -\nf3b59387aa582b783ce750226e024610  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n1b8ac04b5e950c4c30682a92a5dbd50e  -\n52eda0b32ac5579adf4cdb8fdcaaf9f7  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n77f2faf014eb84e230dad3d4c60e2380  -\n\n\n\n\na5be9ea34f6d9aabf1bdb3ce106dc95d  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\na5be9ea34f6d9aabf1bdb3ce106dc95d  -\n286dc19dc0c36ff4838e1e7492502b5d  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\nf3b59387aa582b783ce750226e024610  -\na5be9ea34f6d9aabf1bdb3ce106dc95d  -\n851344244bbb9b7e636252215dd88b1b  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n851344244bbb9b7e636252215dd88b1b  -\n\n\n\n\n\u534f\u7a0b\u76f8\u5173\u5185\u7f6e\u65b9\u6cd5\n\n\n\n\n\u8be6\u89c1\nruntime\u7ae0\u8282", 
            "title": "1. \u521b\u5efa\u534f\u7a0b(go\u5173\u952e\u5b57)"
        }, 
        {
            "location": "/goroutine/main/#_1", 
            "text": "\u5173\u4e8e\u534f\u7a0b\u672c\u8eab\u7684\u6982\u5ff5\uff0c\u8be6\u89c1 \u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3001\u534f\u7a0b", 
            "title": "\u4ec0\u4e48\u662f\u534f\u7a0b"
        }, 
        {
            "location": "/goroutine/main/#go", 
            "text": "goroutine\uff08go\u534f\u7a0b\uff09\u662f\u7531Go runtime\u7ba1\u7406\u7684\u8f7b\u91cf\u7ea7\u7ebf\u7a0b\u3002   \u8fd9\u53e5\u8bdd\u8868\u660e\u4e86\u534f\u7a0b\u662f\u7528\u6237\u6001\uff0c\u56e0\u4e3a\u662f\u7531Go runtime\u7ba1\u7406\uff0c\u800c\u975eOS\u5185\u6838\u7ba1\u7406", 
            "title": "GO\u534f\u7a0b"
        }, 
        {
            "location": "/goroutine/main/#go_1", 
            "text": "\u542f\u52a8go\u534f\u7a0b\u65b9\u6cd5\uff1a\u53ea\u9700\u8981\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5019\u5728\u524d\u9762\u52a0\u4e0ago\u5373\u53ef\uff0c\u5982  go say( hello )", 
            "title": "\u542f\u52a8GO\u534f\u7a0b"
        }, 
        {
            "location": "/goroutine/main/#go_2", 
            "text": "\u5355\u6838\u548c\u591a\u6838\u60c5\u51b5\u4e0b\uff0cgo\u534f\u7a0b\u7684\u6267\u884c\u7ed3\u679c\u662f\u6709\u5dee\u5f02\u7684\uff0c\u770b\u4f8b\u5b50  \u540c\u6837\u7684\u4ee3\u7801  package   main  import   ( \n     fmt \n     time  )  func   say ( s   string )   { \n     for   i   :=   0 ;   i     5 ;   i ++   { \n         time . Sleep ( 100   *   time . Millisecond ) \n         fmt . Println ( s ) \n     }  }  func   main ()   { \n     go   say ( world ) \n     say ( hello )  }   \u540c\u6837\u7684\u6267\u884c  for i in {1..10}; do\n    go run goroutines.go | md5sum\ndone  \u5728\u5355\u6838\u4e0a\u7684\u7ed3\u679c\u6bcf\u6b21\u90fd\u4e00\u6837  0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -  \u5728\u591a\u6838\u4e0a\u7684\u7ed3\u679c\u6bcf\u6b21\u90fd\u4e0d\u4e00\u6837\uff0c\u8fd9\u91cc\u4ec5\u8d34\u51fa2\u6b21  0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n1b8ac04b5e950c4c30682a92a5dbd50e  -\nf3b59387aa582b783ce750226e024610  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n1b8ac04b5e950c4c30682a92a5dbd50e  -\n52eda0b32ac5579adf4cdb8fdcaaf9f7  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n77f2faf014eb84e230dad3d4c60e2380  -  a5be9ea34f6d9aabf1bdb3ce106dc95d  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\na5be9ea34f6d9aabf1bdb3ce106dc95d  -\n286dc19dc0c36ff4838e1e7492502b5d  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\nf3b59387aa582b783ce750226e024610  -\na5be9ea34f6d9aabf1bdb3ce106dc95d  -\n851344244bbb9b7e636252215dd88b1b  -\n0c2c59a85ba901ca20b4ff0935244b1c  -\n851344244bbb9b7e636252215dd88b1b  -", 
            "title": "\u5355\u6838\u548c\u591a\u6838\u4e0b\uff0cgo\u534f\u7a0b\u7684\u533a\u522b"
        }, 
        {
            "location": "/goroutine/main/#_2", 
            "text": "\u8be6\u89c1 runtime\u7ae0\u8282", 
            "title": "\u534f\u7a0b\u76f8\u5173\u5185\u7f6e\u65b9\u6cd5"
        }, 
        {
            "location": "/goroutine/channel_main/", 
            "text": "channel\n\n\n\n\nchannel\u662f\u6709\u7c7b\u578b\u7684\u7ba1\u9053\uff0c\u53ef\u4ee5\u7528channel\u64cd\u4f5c\u7b26 \n-\n \u5bf9\u5176\u53d1\u9001\u6216\u8005\u63a5\u6536\u503c\u3002\n\n\n\u521b\u5efachannel\n\n\n\n\nc := make(chan int)\n\n\n\n\n\u6ce8\u610f\uff1a\u7ba1\u9053\u5fc5\u987b\u6307\u5b9a\u7c7b\u578b\uff0c\u6bd4\u5982\u8fd9\u91cc\u662fint\uff0c\u5373\u5f80\u7ba1\u9053\u91cc\u4f20\u9001\u7684\u6570\u636e\u53ea\u80fd\u662fint\u7c7b\u578b\u3002\u5f53\u7136\u53ef\u4ee5\u662finterface{}\u8fd9\u79cd\u7a7a\u63a5\u53e3\u65b9\u5f0f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f20\u9001\u5404\u79cd\u6570\u636e\u7c7b\u578b\u4e86\n\n\n\u4e5f\u53ef\u4ee5\u7528var\u6765\u58f0\u660e\u7ba1\u9053\uff0c\u4f46\u662f\u597d\u50cf\u6ca1\u5565\u610f\u4e49\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nc\n \nchan\n \nint\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nc\n,\n \nc\n)\n\n    \nd\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n    \nfmt\n.\nPrintf\n(\n%T %v\\n\n,\n \nd\n,\n \nd\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nchan int \nnil\n\nchan int 0xc42006e060\n\n\n\n\n\u7ba1\u9053\u65b9\u5411\n\n\n\n\nch \n- v // Send v to channel ch.\nv := \n-ch // Receive from ch, and\n           // assign value to v.\n\n\n\n\n\u201c\u7bad\u5934\u201d\u5c31\u662f\u6570\u636e\u6d41\u7684\u65b9\u5411\n\n\n\u6ce8\u610f\u63a5\u53d7\u65f6\u5019\n-\u548cchan\u53d8\u91cf\u4e4b\u95f4\u6ca1\u6709\u7a7a\u683c\uff0c\u867d\u7136\u6709\u7a7a\u683c\u4e5f\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f46\u662fide\u4f1a\u63d0\u793a\uff0c\u56e0\u6b64\u8fd8\u662f\u4f9d\u7167\u89c4\u8303\u4e0d\u7a7a\u683c\u6bd4\u8f83\u597d\n\n\n\u57fa\u672c\u4f7f\u7528\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nfoo\n(\ni\n \nint\n,\n \nc\n \nchan\n \nint\n)\n \n{\n\n    \nc\n \n-\n \ni\n\n    \nfmt\n.\nPrintln\n(\nsend:\n,\n \ni\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nc\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n    \ngo\n \nfoo\n(\n0\n,\n \nc\n)\n\n    \nres\n \n:=\n \n-\nc\n\n    \nfmt\n.\nPrintln\n(\nreceive:\n,\n \nres\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nsend: 0\nreceive: 0\n\n\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u53e6\u4e00\u7aef\u51c6\u5907\u597d\u4e4b\u524d\uff0c\u53d1\u9001\u548c\u63a5\u6536\u90fd\u4f1a\u963b\u585e\u3002\u8fd9\u4f7f\u5f97 goroutine \u53ef\u4ee5\u5728\u6ca1\u6709\u660e\u786e\u7684\u9501\u6216\u7ade\u6001\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u540c\u6b65\u3002\n\n\n\u53d1\u52a8\u548c\u63a5\u6536\u6570\u636e\u5e94\u5f53\u5728\u5e76\u884c\u7ebf\u4e0a\uff0c\u800c\u4e0d\u80fd\u662f\u4e32\u884c\u7684\uff0c\u56e0\u4e3a\u53d1\u9001\u548c\u63a5\u6536\u90fd\u4f1a\u963b\u585e\uff0c\u5982\u679c\u4e32\u884c\uff0c\u5c31\u4f1a\u6b7b\u9501\uff08\u5c31\u662f\u4e00\u4e2a\u4e00\u76f4\u963b\u585e\u5728\u90a3\u7b49\u5bf9\u7aef\uff09\uff0c\u4f46\u4e0d\u7528\u4e3a\u6b64\u64cd\u5fc3\uff0c\u56e0\u4e3ago\u5728\u6267\u884c\u65f6\u5019\uff08\u7f16\u8bd1\u4f1a\u901a\u8fc7\uff09\u4f1a\u62a5\u9519\uff0c\u6bd4\u5982\uff1a\n\n\npackage\n \nmain\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nc\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n    \nc\n \n-\n \n0\n\n    \n-\nc\n\n\n}\n\n\n\n\n\n\u62a5\u9519\uff1a\n\n\nfatal error: all goroutines are asleep - deadlock!", 
            "title": "2.1. \u57fa\u672c\u4f7f\u7528"
        }, 
        {
            "location": "/goroutine/channel_main/#channel", 
            "text": "channel\u662f\u6709\u7c7b\u578b\u7684\u7ba1\u9053\uff0c\u53ef\u4ee5\u7528channel\u64cd\u4f5c\u7b26  -  \u5bf9\u5176\u53d1\u9001\u6216\u8005\u63a5\u6536\u503c\u3002", 
            "title": "channel"
        }, 
        {
            "location": "/goroutine/channel_main/#channel_1", 
            "text": "c := make(chan int)  \u6ce8\u610f\uff1a\u7ba1\u9053\u5fc5\u987b\u6307\u5b9a\u7c7b\u578b\uff0c\u6bd4\u5982\u8fd9\u91cc\u662fint\uff0c\u5373\u5f80\u7ba1\u9053\u91cc\u4f20\u9001\u7684\u6570\u636e\u53ea\u80fd\u662fint\u7c7b\u578b\u3002\u5f53\u7136\u53ef\u4ee5\u662finterface{}\u8fd9\u79cd\u7a7a\u63a5\u53e3\u65b9\u5f0f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f20\u9001\u5404\u79cd\u6570\u636e\u7c7b\u578b\u4e86  \u4e5f\u53ef\u4ee5\u7528var\u6765\u58f0\u660e\u7ba1\u9053\uff0c\u4f46\u662f\u597d\u50cf\u6ca1\u5565\u610f\u4e49  package   main  import   fmt  func   main ()   { \n     var   c   chan   int \n     fmt . Printf ( %T %v\\n ,   c ,   c ) \n     d   :=   make ( chan   int ) \n     fmt . Printf ( %T %v\\n ,   d ,   d )  }   \u8f93\u51fa  chan int  nil \nchan int 0xc42006e060", 
            "title": "\u521b\u5efachannel"
        }, 
        {
            "location": "/goroutine/channel_main/#_1", 
            "text": "ch  - v // Send v to channel ch.\nv :=  -ch // Receive from ch, and\n           // assign value to v.  \u201c\u7bad\u5934\u201d\u5c31\u662f\u6570\u636e\u6d41\u7684\u65b9\u5411  \u6ce8\u610f\u63a5\u53d7\u65f6\u5019 -\u548cchan\u53d8\u91cf\u4e4b\u95f4\u6ca1\u6709\u7a7a\u683c\uff0c\u867d\u7136\u6709\u7a7a\u683c\u4e5f\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f46\u662fide\u4f1a\u63d0\u793a\uff0c\u56e0\u6b64\u8fd8\u662f\u4f9d\u7167\u89c4\u8303\u4e0d\u7a7a\u683c\u6bd4\u8f83\u597d", 
            "title": "\u7ba1\u9053\u65b9\u5411"
        }, 
        {
            "location": "/goroutine/channel_main/#_2", 
            "text": "package   main  import   fmt  func   foo ( i   int ,   c   chan   int )   { \n     c   -   i \n     fmt . Println ( send: ,   i )  }  func   main ()   { \n     c   :=   make ( chan   int ) \n     go   foo ( 0 ,   c ) \n     res   :=   - c \n     fmt . Println ( receive: ,   res )  }   \u8f93\u51fa  send: 0\nreceive: 0  \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u53e6\u4e00\u7aef\u51c6\u5907\u597d\u4e4b\u524d\uff0c\u53d1\u9001\u548c\u63a5\u6536\u90fd\u4f1a\u963b\u585e\u3002\u8fd9\u4f7f\u5f97 goroutine \u53ef\u4ee5\u5728\u6ca1\u6709\u660e\u786e\u7684\u9501\u6216\u7ade\u6001\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u540c\u6b65\u3002  \u53d1\u52a8\u548c\u63a5\u6536\u6570\u636e\u5e94\u5f53\u5728\u5e76\u884c\u7ebf\u4e0a\uff0c\u800c\u4e0d\u80fd\u662f\u4e32\u884c\u7684\uff0c\u56e0\u4e3a\u53d1\u9001\u548c\u63a5\u6536\u90fd\u4f1a\u963b\u585e\uff0c\u5982\u679c\u4e32\u884c\uff0c\u5c31\u4f1a\u6b7b\u9501\uff08\u5c31\u662f\u4e00\u4e2a\u4e00\u76f4\u963b\u585e\u5728\u90a3\u7b49\u5bf9\u7aef\uff09\uff0c\u4f46\u4e0d\u7528\u4e3a\u6b64\u64cd\u5fc3\uff0c\u56e0\u4e3ago\u5728\u6267\u884c\u65f6\u5019\uff08\u7f16\u8bd1\u4f1a\u901a\u8fc7\uff09\u4f1a\u62a5\u9519\uff0c\u6bd4\u5982\uff1a  package   main  func   main ()   { \n     c   :=   make ( chan   int ) \n     c   -   0 \n     - c  }   \u62a5\u9519\uff1a  fatal error: all goroutines are asleep - deadlock!", 
            "title": "\u57fa\u672c\u4f7f\u7528"
        }, 
        {
            "location": "/goroutine/channel_buffer/", 
            "text": "Buffered Channels\n\n\nchannel\u53ef\u4ee5\u5e26buffer\uff1a\n\n\nmake(chan int, 2)\n\n\n\n\n\u8868\u793a\u521b\u5efa\u4e00\u4e2alength\u4e3a2\u7684\u7ba1\u9053\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684length\u8868\u793a\u6570\u91cf\uff0c\u800c\u975e\u5177\u4f53\u7684\u5185\u5b58\u5bb9\u79ef\uff0c\u6bd4\u5982\n\n\nmake(chan string, 2)\n\n\n\n\n\n\n\n\n\u8868\u793a\u53ef\u4ee5\u5bb9\u7eb32\u4e2astring\u7684\u5185\u5bb9\uff0c\u6bd4\u5982\"abcdefg\"\u548c\"h\"\u8fd9\u68372\u4e2astring\uff0c\u800c\u4e0d\u662f\u6307\u53ea\u80fd\u5b58\"a\"\u548c\"b\"\u3002\n\n\n\n\n\n\n\u5f53\u4e0d\u8bbe\u7f6elength\u65f6\u5019\u5373\u4e3abuffer=0\n\n\n\n\n\n\n\u8bf4\u660e\uff1a\n\n\n\n\n\n\n\u5f80chan\u53d1\u9001\u6570\u636e\u65f6\u5019\uff0c\u82e5buffer\u6ca1\u6ee1\u7684\u65f6\u5019\uff0c\u5219\u53d1\u9001\u6570\u636e\u5373\u523b\u6210\u529f\uff0c\u4e0d\u4f1a\u88ab\u963b\u585e\u3002\u5f53buffer\u6ee1\u4e86\u5c31\u4f1a\u88ab\u963b\u585e\n\n\n\n\n\n\n\u4ecechan\u63a5\u53d7\u6570\u636e\u65f6\u5019\uff0c\u82e5buffer\u662f\u7a7a\u7684\u5219\u4f1a\u88ab\u963b\u585e\uff0c\u5f53buffer\u4e0d\u662f\u7a7a\u7684\u65f6\u5019\u5219\u5373\u523b\u5b8c\u6210\uff0c\u4e0d\u4f1a\u88ab\u963b\u585e", 
            "title": "2.2. buffer"
        }, 
        {
            "location": "/goroutine/channel_close/", 
            "text": "close\n\n\n\n\nclose(ch)\n\n\n\n\n\u6709\u4e14\u53ea\u6709\u53d1\u9001\u8005\u53ef\u4ee5\u5173\u95ed\u7ba1\u9053\uff0c\u63a5\u6536\u8005\u4e0d\u80fd\u5173\u95ed\u7ba1\u9053\n\n\n\u63a5\u6536\u8005\u53ef\u4ee5\u901a\u8fc7\nv, ok := \n-ch\n\u8fd9\u79cd\u65b9\u5f0f\u6765\u6d4b\u8bd5\u7ba1\u9053\u662f\u5426\u5173\u95ed\uff0c\u82e5ok\u4e3afalse\u5219\u8868\u793a\u7ba1\u9053\u5df2\u5173\u95ed\n\n\n\u7ed3\u5408range\n\n\n\n\n\u53ef\u4ee5\u7528for range\u6765\u5faa\u73af\u53d6\u51fa\u7ba1\u9053\u91cc\u7684\u6570\u636e\uff0crange\u5f53\u9047\u5230\u7ba1\u9053\u5173\u95ed\u65f6\u5019\u5c31\u4f1a\u81ea\u52a8\u7ed3\u675f\u5faa\u73af\uff0c\u4f8b\u5b50\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n\n)\n\n\n\nfunc\n \nfoo\n(\nc\n \nchan\n \nstring\n)\n \n{\n\n    \nc\n \n-\n \na\n\n    \nc\n \n-\n \nb\n\n    \nclose\n(\nc\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nc\n \n:=\n \nmake\n(\nchan\n \nstring\n)\n\n    \ngo\n \nfoo\n(\nc\n)\n\n    \nfor\n \ni\n \n:=\n \nrange\n \nc\n \n{\n\n        \nfmt\n.\nPrintln\n(\ni\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\na\nb\n\n\n\n\n\n\nClosing is only necessary when the receiver must be told there are no more values coming, such as to terminate a range loop.\n\n\n\n\n\u53ea\u6709\u5fc5\u987b\u544a\u77e5\u63a5\u6536\u8005\u6ca1\u6709\u6570\u636e\u8981\u63a5\u6536\u4e86\u624d\u9700\u8981\u5173\u95ed\u7ba1\u9053\uff0c\u4f8b\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\u9700\u8981\u544a\u77e5range\u5faa\u73af\u8be5\u7ed3\u675f\u4e86\u3002\u5982\u679c\u4e0d\u544a\u77e5\u5c31\u4f1a\u9020\u6210\u6b7b\u9501\n\n\n\u751f\u4ea7\u8005close()\u7ed3\u5408\u6d88\u8d39\u8005\n- \u5c31\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u7684wait\u3001join\u8fd9\u79cd\u7b49\u5f85\u6548\u679c", 
            "title": "2.3. close"
        }, 
        {
            "location": "/goroutine/channel_close/#close", 
            "text": "close(ch)  \u6709\u4e14\u53ea\u6709\u53d1\u9001\u8005\u53ef\u4ee5\u5173\u95ed\u7ba1\u9053\uff0c\u63a5\u6536\u8005\u4e0d\u80fd\u5173\u95ed\u7ba1\u9053  \u63a5\u6536\u8005\u53ef\u4ee5\u901a\u8fc7 v, ok :=  -ch \u8fd9\u79cd\u65b9\u5f0f\u6765\u6d4b\u8bd5\u7ba1\u9053\u662f\u5426\u5173\u95ed\uff0c\u82e5ok\u4e3afalse\u5219\u8868\u793a\u7ba1\u9053\u5df2\u5173\u95ed", 
            "title": "close"
        }, 
        {
            "location": "/goroutine/channel_close/#range", 
            "text": "\u53ef\u4ee5\u7528for range\u6765\u5faa\u73af\u53d6\u51fa\u7ba1\u9053\u91cc\u7684\u6570\u636e\uff0crange\u5f53\u9047\u5230\u7ba1\u9053\u5173\u95ed\u65f6\u5019\u5c31\u4f1a\u81ea\u52a8\u7ed3\u675f\u5faa\u73af\uff0c\u4f8b\u5b50\uff1a  package   main  import   ( \n     fmt  )  func   foo ( c   chan   string )   { \n     c   -   a \n     c   -   b \n     close ( c )  }  func   main ()   { \n     c   :=   make ( chan   string ) \n     go   foo ( c ) \n     for   i   :=   range   c   { \n         fmt . Println ( i ) \n     }  }   \u8f93\u51fa  a\nb   Closing is only necessary when the receiver must be told there are no more values coming, such as to terminate a range loop.   \u53ea\u6709\u5fc5\u987b\u544a\u77e5\u63a5\u6536\u8005\u6ca1\u6709\u6570\u636e\u8981\u63a5\u6536\u4e86\u624d\u9700\u8981\u5173\u95ed\u7ba1\u9053\uff0c\u4f8b\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\u9700\u8981\u544a\u77e5range\u5faa\u73af\u8be5\u7ed3\u675f\u4e86\u3002\u5982\u679c\u4e0d\u544a\u77e5\u5c31\u4f1a\u9020\u6210\u6b7b\u9501  \u751f\u4ea7\u8005close()\u7ed3\u5408\u6d88\u8d39\u8005 - \u5c31\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u7684wait\u3001join\u8fd9\u79cd\u7b49\u5f85\u6548\u679c", 
            "title": "\u7ed3\u5408range"
        }, 
        {
            "location": "/goroutine/channel_select/", 
            "text": "channel\u7ed3\u5408select\u548ccase\n\n\n\n\nselect\u548ccase\u7684\u7ec4\u5408\u53ef\u4ee5\u4f7f\u54ea\u4e2a\u7ba1\u9053\u5c31\u7eea\uff08\u5bf9\u7aef\u5df2\u963b\u585e\uff09\uff0c\u5c31\u8bfb\u53d6\u8be5\u7ba1\u9053\u6570\u636e\u5e76\u6267\u884c\u76f8\u5e94case\u7684\u4ee3\u7801\u5757\u3002\n\n\n\u5b98\u7f51\u8bd1: select \u4f1a\u963b\u585e\uff0c\u76f4\u5230\u6761\u4ef6\u5206\u652f\u4e2d\u7684\u67d0\u4e2a\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u8fd9\u65f6\u5c31\u4f1a\u6267\u884c\u90a3\u4e2a\u6761\u4ef6\u5206\u652f\u3002\u5f53\u591a\u4e2a\u90fd\u51c6\u5907\u597d\u7684\u65f6\u5019\uff0c\u4f1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u3002\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n\n)\n\n\n\nfunc\n \nreceive\n(\nch1\n,\n \nch2\n,\n \nch3\n,\n \nquit\n \nchan\n \nint\n)\n \n{\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n2\n;\n \ni\n++\n \n{\n\n        \nfmt\n.\nPrintf\n(\nreceive %d from ch1\\n\n,\n \n-\nch1\n)\n\n        \nfmt\n.\nPrintf\n(\nreceive %d from ch2\\n\n,\n \n-\nch2\n)\n\n        \nfmt\n.\nPrintf\n(\nreceive %d from ch3\\n\n,\n \n-\nch3\n)\n\n    \n}\n\n    \nquit\n \n-\n \n0\n\n\n}\n\n\n\nfunc\n \nsend\n(\nch1\n,\n \nch2\n,\n \nch3\n,\n \nquit\n \nchan\n \nint\n)\n \n{\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n++\n \n{\n\n        \nselect\n \n{\n\n        \ncase\n \nch1\n \n-\n \ni\n:\n\n            \nfmt\n.\nPrintf\n(\nsend %d to ch1\\n\n,\n \ni\n)\n\n        \ncase\n \nch2\n \n-\n \ni\n:\n\n            \nfmt\n.\nPrintf\n(\nsend %d to ch2\\n\n,\n \ni\n)\n\n        \ncase\n \nch3\n \n-\n \ni\n:\n\n            \nfmt\n.\nPrintf\n(\nsend %d to ch3\\n\n,\n \ni\n)\n\n        \ncase\n \n-\nquit\n:\n\n            \nfmt\n.\nPrintln\n(\nquit\n)\n\n            \nreturn\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nch1\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n    \nch2\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n    \nch3\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n    \nquit\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n    \ngo\n \nreceive\n(\nch1\n,\n \nch2\n,\n \nch3\n,\n \nquit\n)\n\n    \nsend\n(\nch1\n,\n \nch2\n,\n \nch3\n,\n \nquit\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\uff1a\u8f93\u51fa\u4e0d\u56fa\u5b9a\uff0c\u56e0\u4e3a\u662f\u5e76\u884c\u7684\uff0c\u5927\u6982100\u6b21\u6267\u884c\u7ed3\u679c\u4e2d\u67093-7\u6b21\u548c\u5176\u4ed6\u4e0d\u4e00\u6837\uff0c\u5927\u90e8\u5206\u7ed3\u679c\u662f\n\n\nsend 0 to ch1\nreceive 0 from ch1\nreceive 1 from ch2\nsend 1 to ch2\nsend 2 to ch3\nreceive 2 from ch3\nreceive 3 from ch1\nsend 3 to ch1\nsend 4 to ch2\nreceive 4 from ch2\nreceive 5 from ch3\nsend 5 to ch3\nquit\n\n\n\n\nselect\u7684\u968f\u673a\u6027\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ntime\n\n\n)\n\n\n\nfunc\n \nreceive\n(\nch\n \nchan\n \nint\n)\n \n{\n\n    \nfor\n \n{\n\n        \n-\nch\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nsend\n(\nch1\n,\n \nch2\n,\n \nch3\n \nchan\n \nint\n)\n \n{\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n++\n \n{\n\n        \n// sleep\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6240\u6709\u7684\u7ba1\u9053receiver\u90fd\u5df2\u963b\u585e\u7b49\u5f85\u6570\u636e\n\n        \ntime\n.\nSleep\n(\n1000\n \n*\n \ntime\n.\nMillisecond\n)\n\n        \nselect\n \n{\n\n        \ncase\n \nch1\n \n-\n \ni\n:\n\n            \nfmt\n.\nPrintf\n(\nsend %d to ch1\\n\n,\n \ni\n)\n\n        \ncase\n \nch2\n \n-\n \ni\n:\n\n            \nfmt\n.\nPrintf\n(\nsend %d to ch2\\n\n,\n \ni\n)\n\n        \ncase\n \nch3\n \n-\n \ni\n:\n\n            \nfmt\n.\nPrintf\n(\nsend %d to ch3\\n\n,\n \ni\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nch1\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n    \nch2\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n    \nch3\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n    \ngo\n \nreceive\n(\nch1\n)\n\n    \ngo\n \nreceive\n(\nch2\n)\n\n    \ngo\n \nreceive\n(\nch3\n)\n\n    \nsend\n(\nch1\n,\n \nch2\n,\n \nch3\n)\n\n\n}\n\n\n\n\n\n\u6bcf\u6b21\u8f93\u51fa\u90fd\u4e0d\u4e00\u6837\uff0c\u4e14\u627e\u4e0d\u5230\u89c4\u5f8b\uff0c\u8bf4\u660e\u662f\u968f\u673a\u6027\u7684\n\n\n\u7b2c\u4e00\u6b21\n\n\nsend 0 to ch2\nsend 1 to ch2\nsend 2 to ch1\nsend 3 to ch3\nsend 4 to ch2\nsend 5 to ch2\nsend 6 to ch1\nsend 7 to ch2\nsend 8 to ch3\nsend 9 to ch1\n\n\n\n\n\u7b2c\u4e8c\u6b21\n\n\nsend 0 to ch3\nsend 1 to ch1\nsend 2 to ch1\nsend 3 to ch1\nsend 4 to ch2\nsend 5 to ch2\nsend 6 to ch2\nsend 7 to ch1\nsend 8 to ch1\nsend 9 to ch3\n\n\n\n\n\u7b2c\u4e09\u6b21\n\n\nsend 0 to ch1\nsend 1 to ch1\nsend 2 to ch1\nsend 3 to ch3\nsend 4 to ch1\nsend 5 to ch2\nsend 6 to ch2\nsend 7 to ch2\nsend 8 to ch2\nsend 9 to ch1\n\n\n\n\nselect\u652f\u6301default\n\n\n\n\n\u5f53\u6240\u6709case\u90fd\u963b\u585e\u7684\u65f6\u5019\uff0c\u6267\u884cdefault\n\n\nselect\n \n{\n\n\ncase\n \nch1\n \n-\n \ni\n:\n\n    \nfmt\n.\nPrintf\n(\nsend %d to ch1\\n\n,\n \ni\n)\n\n\ncase\n \nch2\n \n-\n \ni\n:\n\n    \nfmt\n.\nPrintf\n(\nsend %d to ch2\\n\n,\n \ni\n)\n\n\ncase\n \nch3\n \n-\n \ni\n:\n\n    \nfmt\n.\nPrintf\n(\nsend %d to ch3\\n\n,\n \ni\n)\n\n\ndefault\n:\n\n    \nfmt\n.\nPrintln\n(\ndefault\n)\n\n\n}\n\n\n\n\n\n\u53ef\u4ee5\u5728channel\u91cc\u4f7f\u7528select\u7684default\u6765\u544a\u77e5channe\u5df2\u6ee1", 
            "title": "2.4. \u7ed3\u5408select-case"
        }, 
        {
            "location": "/goroutine/channel_select/#channelselectcase", 
            "text": "select\u548ccase\u7684\u7ec4\u5408\u53ef\u4ee5\u4f7f\u54ea\u4e2a\u7ba1\u9053\u5c31\u7eea\uff08\u5bf9\u7aef\u5df2\u963b\u585e\uff09\uff0c\u5c31\u8bfb\u53d6\u8be5\u7ba1\u9053\u6570\u636e\u5e76\u6267\u884c\u76f8\u5e94case\u7684\u4ee3\u7801\u5757\u3002  \u5b98\u7f51\u8bd1: select \u4f1a\u963b\u585e\uff0c\u76f4\u5230\u6761\u4ef6\u5206\u652f\u4e2d\u7684\u67d0\u4e2a\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u8fd9\u65f6\u5c31\u4f1a\u6267\u884c\u90a3\u4e2a\u6761\u4ef6\u5206\u652f\u3002\u5f53\u591a\u4e2a\u90fd\u51c6\u5907\u597d\u7684\u65f6\u5019\uff0c\u4f1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u3002  package   main  import   ( \n     fmt  )  func   receive ( ch1 ,   ch2 ,   ch3 ,   quit   chan   int )   { \n     for   i   :=   0 ;   i     2 ;   i ++   { \n         fmt . Printf ( receive %d from ch1\\n ,   - ch1 ) \n         fmt . Printf ( receive %d from ch2\\n ,   - ch2 ) \n         fmt . Printf ( receive %d from ch3\\n ,   - ch3 ) \n     } \n     quit   -   0  }  func   send ( ch1 ,   ch2 ,   ch3 ,   quit   chan   int )   { \n     for   i   :=   0 ;   i     10 ;   i ++   { \n         select   { \n         case   ch1   -   i : \n             fmt . Printf ( send %d to ch1\\n ,   i ) \n         case   ch2   -   i : \n             fmt . Printf ( send %d to ch2\\n ,   i ) \n         case   ch3   -   i : \n             fmt . Printf ( send %d to ch3\\n ,   i ) \n         case   - quit : \n             fmt . Println ( quit ) \n             return \n         } \n     }  }  func   main ()   { \n     ch1   :=   make ( chan   int ) \n     ch2   :=   make ( chan   int ) \n     ch3   :=   make ( chan   int ) \n     quit   :=   make ( chan   int ) \n     go   receive ( ch1 ,   ch2 ,   ch3 ,   quit ) \n     send ( ch1 ,   ch2 ,   ch3 ,   quit )  }   \u8f93\u51fa\uff1a\u8f93\u51fa\u4e0d\u56fa\u5b9a\uff0c\u56e0\u4e3a\u662f\u5e76\u884c\u7684\uff0c\u5927\u6982100\u6b21\u6267\u884c\u7ed3\u679c\u4e2d\u67093-7\u6b21\u548c\u5176\u4ed6\u4e0d\u4e00\u6837\uff0c\u5927\u90e8\u5206\u7ed3\u679c\u662f  send 0 to ch1\nreceive 0 from ch1\nreceive 1 from ch2\nsend 1 to ch2\nsend 2 to ch3\nreceive 2 from ch3\nreceive 3 from ch1\nsend 3 to ch1\nsend 4 to ch2\nreceive 4 from ch2\nreceive 5 from ch3\nsend 5 to ch3\nquit", 
            "title": "channel\u7ed3\u5408select\u548ccase"
        }, 
        {
            "location": "/goroutine/channel_select/#select", 
            "text": "package   main  import   ( \n     fmt \n     time  )  func   receive ( ch   chan   int )   { \n     for   { \n         - ch \n     }  }  func   send ( ch1 ,   ch2 ,   ch3   chan   int )   { \n     for   i   :=   0 ;   i     10 ;   i ++   { \n         // sleep\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6240\u6709\u7684\u7ba1\u9053receiver\u90fd\u5df2\u963b\u585e\u7b49\u5f85\u6570\u636e \n         time . Sleep ( 1000   *   time . Millisecond ) \n         select   { \n         case   ch1   -   i : \n             fmt . Printf ( send %d to ch1\\n ,   i ) \n         case   ch2   -   i : \n             fmt . Printf ( send %d to ch2\\n ,   i ) \n         case   ch3   -   i : \n             fmt . Printf ( send %d to ch3\\n ,   i ) \n         } \n     }  }  func   main ()   { \n     ch1   :=   make ( chan   int ) \n     ch2   :=   make ( chan   int ) \n     ch3   :=   make ( chan   int ) \n     go   receive ( ch1 ) \n     go   receive ( ch2 ) \n     go   receive ( ch3 ) \n     send ( ch1 ,   ch2 ,   ch3 )  }   \u6bcf\u6b21\u8f93\u51fa\u90fd\u4e0d\u4e00\u6837\uff0c\u4e14\u627e\u4e0d\u5230\u89c4\u5f8b\uff0c\u8bf4\u660e\u662f\u968f\u673a\u6027\u7684  \u7b2c\u4e00\u6b21  send 0 to ch2\nsend 1 to ch2\nsend 2 to ch1\nsend 3 to ch3\nsend 4 to ch2\nsend 5 to ch2\nsend 6 to ch1\nsend 7 to ch2\nsend 8 to ch3\nsend 9 to ch1  \u7b2c\u4e8c\u6b21  send 0 to ch3\nsend 1 to ch1\nsend 2 to ch1\nsend 3 to ch1\nsend 4 to ch2\nsend 5 to ch2\nsend 6 to ch2\nsend 7 to ch1\nsend 8 to ch1\nsend 9 to ch3  \u7b2c\u4e09\u6b21  send 0 to ch1\nsend 1 to ch1\nsend 2 to ch1\nsend 3 to ch3\nsend 4 to ch1\nsend 5 to ch2\nsend 6 to ch2\nsend 7 to ch2\nsend 8 to ch2\nsend 9 to ch1", 
            "title": "select\u7684\u968f\u673a\u6027"
        }, 
        {
            "location": "/goroutine/channel_select/#selectdefault", 
            "text": "\u5f53\u6240\u6709case\u90fd\u963b\u585e\u7684\u65f6\u5019\uff0c\u6267\u884cdefault  select   {  case   ch1   -   i : \n     fmt . Printf ( send %d to ch1\\n ,   i )  case   ch2   -   i : \n     fmt . Printf ( send %d to ch2\\n ,   i )  case   ch3   -   i : \n     fmt . Printf ( send %d to ch3\\n ,   i )  default : \n     fmt . Println ( default )  }   \u53ef\u4ee5\u5728channel\u91cc\u4f7f\u7528select\u7684default\u6765\u544a\u77e5channe\u5df2\u6ee1", 
            "title": "select\u652f\u6301default"
        }, 
        {
            "location": "/goroutine/channel_rw/", 
            "text": "channel\u652f\u63013\u79cd\u7c7b\u578b\uff08\u901a\u8fc7%T\u770b\u5230\u7684\uff09\uff1a\n\n\n\n\n\n\n\u8bfb\u5199\u7c7b\u578b\uff1a\nchan int\n\n\n\n\n\n\n\u53ea\u8bfb\u7c7b\u578b\uff1a\n-chan int\n\uff0c\u53eb\u505areceive-only\n\n\n\n\n\n\n\u53ea\u5199\u7c7b\u578b\uff1a\nchan\n- int\n\uff0c\u53eb\u505asend-only\n\n\n\n\n\n\n\u901a\u8fc7\u51fd\u6570\u53c2\u6570\u4f20\u9012\u65f6\u5019\uff0c\u82e5\u539f\u6765\u662f\u8bfb\u5199\uff0c\u5219\u53ef\u4ee5\u8f6c\u6210\u53ea\u8bfb\u6216\u53ea\u5199\uff0c\u4f46\u5982\u679c\u5df2\u7ecf\u662f\u53ea\u8bfb\u6216\u53ea\u5199\uff0c\u5219\u53ea\u80fd\u4fdd\u6301\u7c7b\u578b\uff0c\u65e0\u6cd5\u8f6c\u4e3a\u5176\u4ed6\u7c7b\u578b\uff08\u6bd4\u5982\u539f\u6765\u662f\u53ea\u8bfb\uff0c\u5219\u53ea\u80fd\u662f\u53ea\u8bfb\uff0c\u65e0\u6cd5\u8f6c\u6210\u53ea\u5199\uff0c\u4e5f\u65e0\u6cd5\u8f6c\u4e3a\u8bfb\u5199\uff09\uff0c\u4f8b\u5b50\u5982\u4e0b\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ntime\n\n\n)\n\n\n\nfunc\n \nsend\n(\nc\n \nchan\n-\n \nint\n)\n \n{\n\n    \nfmt\n.\nPrintf\n(\nsend: %T\\n\n,\n \nc\n)\n\n    \nc\n \n-\n \n1\n\n\n}\n\n\n\nfunc\n \nrecv\n(\nc\n \n-\nchan\n \nint\n)\n \n{\n\n    \nfmt\n.\nPrintf\n(\nrecv: %T\\n\n,\n \nc\n)\n\n    \nfmt\n.\nPrintln\n(\n-\nc\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nc\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nc\n)\n\n    \ngo\n \nsend\n(\nc\n)\n\n    \ngo\n \nrecv\n(\nc\n)\n\n    \ntime\n.\nSleep\n(\n1\n \n*\n \ntime\n.\nSecond\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nchan int\nsend: chan\n- int\nrecv: \n-chan int\n1", 
            "title": "2.5. \u8bfb\u5199\u7c7b\u578b"
        }, 
        {
            "location": "/goroutine/sync_mutex/", 
            "text": "\u4e92\u65a5\u9501: sync.Mutex\n\n\n\u4ecb\u7ecd\n\n\n\n\n\u7528\u4e8e\u4e3b\u52a8\u63a7\u5236Mutex\u7c7b\u578b\u7684\u53d8\u91cf\u6216\u8005\u5c06Mutex\u7c7b\u578b\u4f5c\u4e3astruct\u7684\u5143\u7d20\u7684\u53d8\u91cf\u5728\u540c\u4e00\u65f6\u95f4\u53ea\u88ab\u4e00\u4e2aroutine\u8bbf\u95ee\uff08\u5373\u6267\u884cLock()\u65b9\u6cd5\u7684\u4ee3\u7801\u5757\uff09\uff0c\u8fd9\u4e2aMutex\u5e26\u67092\u4e2a\u65b9\u6cd5\uff1aLock()\u548cUnlock()\u3002\u4e92\u65a5\u9501\u4e0d\u533a\u5206\u8bfb\u548c\u5199\uff0c\u5373\u65e0\u8bba\u662fprint\u6253\u5370\u8fd8\u662f\u5199\u64cd\u4f5c\u90fd\u662f\u4e92\u65a5\u7684\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nmutex\n \nsync\n.\nMutex\n\n    \nfmt\n.\nPrintf\n(\n%+v\\n\n,\n \nmutex\n)\n\n\n    \nmutex\n.\nLock\n()\n\n    \nfmt\n.\nPrintf\n(\n%+v\\n\n,\n \nmutex\n)\n\n\n    \nmutex\n.\nUnlock\n()\n\n    \nfmt\n.\nPrintf\n(\n%+v\\n\n,\n \nmutex\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n{state:0 sema:0}\n{state:1 sema:0}\n{state:0 sema:0}\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\u5f53Lock()\u65f6\uff0cstate\u4e3a1\uff0cUnlock()\u65f6\uff0cstate\u4e3a0\u3002\n\n\n\u8fd9\u6bb5\u4ee3\u7801\u5176\u5b9e\u662f\u4e3a\u540e\u9762Lock()\u4f7f\u7528\u505a\u4e86\u4e00\u4e2a\u5de5\u4f5c\u539f\u7406\u94fa\u57ab\uff08\u4e2a\u4eba\u731c\u6d4b\uff09\uff1aLock()\u65f6\u5019\u4f1a\u5224\u65adstate\uff0c\u82e5\u4e3a0\uff0c\u5219\u5c06state\u6539\u4e3a1\uff1b\u82e5\u4e3a1\uff0c\u5219\u963b\u585e\u7b49\u5f85\uff0c\u76f4\u5230state\u53d8\u4e3a0\uff0c\u7136\u540e\u518d\u5c06state\u6539\u4e3a1\u3002sync.Mutex\u662f\u5e76\u53d1\u5b89\u5168\u7684\u3002\n\n\n\u4f7f\u7528\n\n\n\n\n\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5728\u5b98\u7f51\u4f8b\u5b50\u4e0a\u505a\u4e86\u4e00\u70b9\u4fee\u6539\uff0c\u66f4\u5bb9\u6613\u770b\u51fa\u4e92\u65a5\u6548\u679c\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n    \ntime\n\n\n)\n\n\n\n// SafeCounter is safe to use concurrently.\n\n\ntype\n \nSafeCounter\n \nstruct\n \n{\n\n    \nv\n   \nmap\n[\nstring\n]\nint\n\n    \nmux\n \nsync\n.\nMutex\n\n\n}\n\n\n\n// Inc increments the counter for the given key.\n\n\nfunc\n \n(\nc\n \n*\nSafeCounter\n)\n \nInc\n(\nkey\n \nstring\n,\n \nid\n \nint\n)\n \n{\n\n    \nc\n.\nmux\n.\nLock\n()\n\n    \nfmt\n.\nPrintf\n(\n%d. Inc lock.\\n\n,\n \nid\n)\n\n    \n// Lock so only one goroutine at a time can access the map c.v.\n\n    \nc\n.\nv\n[\nkey\n]\n++\n\n    \nc\n.\nmux\n.\nUnlock\n()\n\n    \nfmt\n.\nPrintf\n(\n%d. Inc unlock.\\n\n,\n \nid\n)\n\n\n}\n\n\n\n// Value returns the current value of the counter for the given key.\n\n\nfunc\n \n(\nc\n \n*\nSafeCounter\n)\n \nValue\n(\nkey\n \nstring\n)\n \nint\n \n{\n\n    \nc\n.\nmux\n.\nLock\n()\n\n    \nfmt\n.\nPrintln\n(\nValue lock.\n)\n\n    \n// Lock so only one goroutine at a time can access the map c.v.\n\n    \ndefer\n \nfmt\n.\nPrintln\n(\nValue unlock.\n)\n\n    \ndefer\n \nc\n.\nmux\n.\nUnlock\n()\n\n    \nreturn\n \nc\n.\nv\n[\nkey\n]\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nc\n \n:=\n \nSafeCounter\n{\nv\n:\n \nmake\n(\nmap\n[\nstring\n]\nint\n)}\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10\n;\n \ni\n++\n \n{\n\n        \ngo\n \nc\n.\nInc\n(\nsomekey\n,\n \ni\n)\n\n    \n}\n\n\n    \ntime\n.\nSleep\n(\ntime\n.\nSecond\n)\n\n    \nfmt\n.\nPrintln\n(\nc\n.\nValue\n(\nsomekey\n))\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n1. Inc lock.\n1. Inc unlock.\n0. Inc lock.\n0. Inc unlock.\n7. Inc lock.\n7. Inc unlock.\n8. Inc lock.\n8. Inc unlock.\n6. Inc lock.\n6. Inc unlock.\n3. Inc lock.\n3. Inc unlock.\n9. Inc lock.\n9. Inc unlock.\n2. Inc lock.\n2. Inc unlock.\n4. Inc lock.\n4. Inc unlock.\n5. Inc lock.\n5. Inc unlock.\nValue lock.\nValue unlock.\n10\n\n\n\n\n\n\n\n\n\u6bcf\u6b21\u8f93\u51fa\u7ed3\u679c\u4e5f\u4e0d\u592a\u4e00\u6837\uff1a0-9\u7684\u987a\u5e8f\u4e0d\u4e00\u81f4\n\n\n\n\n\n\n\u6211\u4eec\u4e00\u822c\u4f1a\u5728\u9501\u5b9a\u4e92\u65a5\u9501\u4e4b\u540e\u7d27\u63a5\u7740\u5c31\u7528defer\u8bed\u53e5\u6765\u4fdd\u8bc1\u8be5\u4e92\u65a5\u9501\u7684\u53ca\u65f6\u89e3\u9501\uff0c\u56e0\u4e3adefer\u662f\u5148\u8fdb\u540e\u51fa\n\n\n\n\n\n\nInc\u548cValue\u65b9\u6cd5\u7684receiver\u662f\u6307\u9488\uff0c\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3aMutex\u9501\u5bf9\u5e94\u7684\u5c31\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u53d8\u91cf\uff08\u53ef\u4ee5\u662fstruct\uff0c\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u666e\u901a\u7c7b\u578b\uff09\n\n\n\n\n\n\n\u4e00\u4e2a\u613f\u6253\u4e00\u4e2a\u613f\u6328\n\n\n\n\n\u4e92\u65a5\u9501\u7684\u4f7f\u7528\u662f\u4e3b\u52a8\u63a7\u5236\u4e92\u65a5\u9501\uff0c\u5373\u4e00\u4e2a\u613f\u6253\u4e00\u4e2a\u613f\u6328\u3002\u6bd4\u5982\u5373\u4f7f\u4e00\u4e2aroutine\u91cc\u7528\u4e86Lock()\uff0c\u4f46\u5728\u53e6\u4e00\u4e2aroutine\u53ef\u4ee5\u4e0d\u7406\u4f1a\u8fd9\u4e2a\u9501\u5c31\u80fd\u8bbf\u95ee\u8fd9\u4e2astruct\uff0c\u53ea\u9700\u8981\u4e0d\u8c03\u7528Lock()\u5c31\u884c\u3002\u4f8b\u5b50\u5982\u4e0b\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n    \ntime\n\n\n)\n\n\n\ntype\n \nSafeCounter\n \nstruct\n \n{\n\n    \nv\n   \nmap\n[\nstring\n]\nint\n\n    \nmux\n \nsync\n.\nMutex\n\n\n}\n\n\n\nfunc\n \n(\nc\n \n*\nSafeCounter\n)\n \nInc\n(\nkey\n \nstring\n)\n \n{\n\n    \nc\n.\nmux\n.\nLock\n()\n\n    \ntime\n.\nSleep\n(\n3\n \n*\n \ntime\n.\nSecond\n)\n\n    \nc\n.\nv\n[\nkey\n]\n++\n\n    \nc\n.\nmux\n.\nUnlock\n()\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nc\n \n:=\n \nSafeCounter\n{\nv\n:\n \nmake\n(\nmap\n[\nstring\n]\nint\n)}\n\n    \ngo\n \nc\n.\nInc\n(\nsomekey\n)\n\n\n    \ntime\n.\nSleep\n(\n1\n \n*\n \ntime\n.\nSecond\n)\n\n    \nc\n.\nv\n[\nsomekey\n]\n++\n\n    \nfmt\n.\nPrintln\n(\nc\n.\nv\n[\nsomekey\n])\n\n\n    \ntime\n.\nSleep\n(\n3\n \n*\n \ntime\n.\nSecond\n)\n\n    \nfmt\n.\nPrintln\n(\nc\n.\nv\n[\nsomekey\n])\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n1\n2\n\n\n\n\nc.v[\nsomekey\n]++\n\u4e4b\u524d\uff0c\u662f\u5df2\u7ecf\u9501\u4e86\uff0c\u672c\u5e94\u8be5\u7b492-3\u79d2\uff0c\u624d\u80fd\u8f93\u51fa\uff0c\u4f46\u662f\u4ece\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\uff0c\u53ea\u8fc7\u4e861\u79d2\u5c31\u8f93\u51fa\u4e86\uff0c\u8bf4\u660eLock\u53ea\u662f\u4e00\u79cd\u4eba\u4e3a\u7684\u4e92\u65a5\uff0c\u662f\u4e00\u79cd\u534f\u8bae\uff0c\u5e76\u4e0d\u662f\u5f3a\u5236\u3002\n\n\n\u63a5\u4e0b\u6765\u770b\u4e0b\u4e0d\u52a0\u9501\u7684\u6548\u679c\uff0c\u5373\u662f\u5426\u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u4f8b\u5b50\u5982\u4e0b\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n    \ntime\n\n\n)\n\n\n\n// SafeCounter is safe to use concurrently.\n\n\ntype\n \nSafeCounter\n \nstruct\n \n{\n\n    \nv\n   \nmap\n[\nstring\n]\nint\n\n    \nmux\n \nsync\n.\nMutex\n\n\n}\n\n\n\n// Inc increments the counter for the given key.\n\n\nfunc\n \n(\nc\n \n*\nSafeCounter\n)\n \nInc\n(\nkey\n \nstring\n,\n \nid\n \nint\n)\n \n{\n\n\n//  c.mux.Lock()\n\n    \nfmt\n.\nPrintf\n(\n%d. Inc lock.\\n\n,\n \nid\n)\n\n    \n// Lock so only one goroutine at a time can access the map c.v.\n\n    \nc\n.\nv\n[\nkey\n]\n++\n\n\n//  c.mux.Unlock()\n\n    \nfmt\n.\nPrintf\n(\n%d. Inc unlock.\\n\n,\n \nid\n)\n\n\n}\n\n\n\n// Value returns the current value of the counter for the given key.\n\n\nfunc\n \n(\nc\n \n*\nSafeCounter\n)\n \nValue\n(\nkey\n \nstring\n)\n \nint\n \n{\n\n    \nc\n.\nmux\n.\nLock\n()\n\n    \nfmt\n.\nPrintln\n(\nValue lock.\n)\n\n    \n// Lock so only one goroutine at a time can access the map c.v.\n\n    \ndefer\n \nfmt\n.\nPrintln\n(\nValue unlock.\n)\n\n    \ndefer\n \nc\n.\nmux\n.\nUnlock\n()\n\n    \nreturn\n \nc\n.\nv\n[\nkey\n]\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nc\n \n:=\n \nSafeCounter\n{\nv\n:\n \nmake\n(\nmap\n[\nstring\n]\nint\n)}\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n2\n;\n \ni\n++\n \n{\n\n        \ngo\n \nc\n.\nInc\n(\nsomekey\n,\n \ni\n)\n\n    \n}\n\n\n    \ntime\n.\nSleep\n(\ntime\n.\nSecond\n)\n\n    \nfmt\n.\nPrintln\n(\nc\n.\nValue\n(\nsomekey\n))\n\n\n}\n\n\n\n\n\n\u6709\u65f6\u5019\u8f93\u51fa\n\n\n0. Inc lock.\n1. Inc lock.\n0. Inc unlock.\n1. Inc unlock.\nValue lock.\nValue unlock.\n2\n\n\n\n\n\u6709\u65f6\u5019\u8f93\u51fa\n\n\n1. Inc lock.\n0. Inc lock.\nfatal error: 1. Inc unlock.\nconcurrent map writes\n\ngoroutine 5 [running]:\nruntime.throw(0x10b65f1, 0x15)\n    /usr/local/go/src/runtime/panic.go:596 +0x95 fp=0xc420098e80 sp=0xc420098e60\nruntime.mapassign(0x109d7a0, 0xc4200180f0, 0xc420098f90, 0x7)\n    /usr/local/go/src/runtime/hashmap.go:499 +0x667 fp=0xc420098f20 sp=0xc420098e80\nmain.(*SafeCounter).Inc(0xc42000e270, 0x10b49f8, 0x7, 0x0)\n    /Users/foo/test/b.go:20 +0x144 fp=0xc420098fc0 sp=0xc420098f20\nruntime.goexit()\n    /usr/local/go/src/runtime/asm_amd64.s:2197 +0x1 fp=0xc420098fc8 sp=0xc420098fc0\ncreated by main.main\n    /Users/foo/test/b.go:38 +0xcd\n\ngoroutine 1 [sleep]:\ntime.Sleep(0x3b9aca00)\n    /usr/local/go/src/runtime/time.go:59 +0xf9\nmain.main()\n    /Users/foo/test/b.go:41 +0xf2\n\n\n\n\n\u8fd9\u91cc\u62a5\u9519\u662f\u56e0\u4e3ago\u8bed\u8a00\u7684map\u4e0d\u662f\u5e76\u53d1\u5b89\u5168\uff0c\u6240\u4ee5\u5f53\u5e76\u53d1\u4e0d\u52a0\u9501\u65f6\u5019\u5c31\u4f1a\u5b58\u5728\u51b2\u7a81\u7684\u53ef\u80fd\u3002\u6700\u65b0\u7684go\u8bed\u8a00\u7684sync\u5305\u91cc\u65b0\u589e\u4e86sync.Map\uff0c\u5e94\u8be5\u53ef\u4ee5\u89e3\u51b3\u7c7b\u4f3c\u95ee\u9898\uff08\u8fd8\u6ca1\u7814\u7a76\u8fc7\uff09\n\n\n\u5df2\u7ecf\u9501\u5b9a\u7684Mutex\u4e0e\u7279\u5b9a\u7684goroutine\u65e0\u5173\u8054\n\n\n\n\n\u5df2\u7ecf\u9501\u5b9a\u7684Mutex\u5e76\u4e0d\u4e0e\u7279\u5b9a\u7684goroutine\u76f8\u5173\u8054\uff0c\u8fd9\u6837\u53ef\u4ee5\u5229\u7528\u4e00\u4e2agoroutine\u5bf9\u5176\u52a0\u9501\uff0c\u518d\u5229\u7528\u5176\u4ed6goroutine\u5bf9\u5176\u89e3\u9501\uff0c\u4f8b\u5b50\u5982\u4e0b\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n    \ntime\n\n\n)\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nv\n   \nint\n\n    \nmux\n \nsync\n.\nMutex\n\n\n}\n\n\n\nfunc\n \n(\ns\n \n*\nMyStruct\n)\n \nLock\n()\n \n{\n\n    \ns\n.\nmux\n.\nLock\n()\n\n\n}\n\n\n\nfunc\n \n(\ns\n \n*\nMyStruct\n)\n \nUnlock\n()\n \n{\n\n    \ns\n.\nmux\n.\nUnlock\n()\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nMyStruct\n{\nv\n:\n \n0\n}\n\n    \ns\n.\nv\n \n=\n \n1\n\n    \nfmt\n.\nPrintf\n(\n%+v\\n\n,\n \ns\n)\n\n\n    \ngo\n \ns\n.\nLock\n()\n\n    \ntime\n.\nSleep\n(\n1\n \n*\n \ntime\n.\nSecond\n)\n\n    \nfmt\n.\nPrintf\n(\n%+v\\n\n,\n \ns\n)\n\n\n    \ngo\n \ns\n.\nUnlock\n()\n\n    \ntime\n.\nSleep\n(\n1\n \n*\n \ntime\n.\nSecond\n)\n\n    \nfmt\n.\nPrintf\n(\n%+v\\n\n,\n \ns\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n{v:1 mux:{state:0 sema:0}}\n{v:1 mux:{state:1 sema:0}}\n{v:1 mux:{state:0 sema:0}}\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u53ef\u4ee5\u4e00\u4e2aroutine\u91cc\u9501\u5b9a\uff0c\u53e6\u4e00\u4e2aroutine\u91cc\u89e3\u9501\u3002\u56e0\u4e3a\u9501\u53ea\u548c\u5177\u4f53\u53d8\u91cf\u5173\u8054\uff0c\u548croutine\u65e0\u5173\uff0c\u53ea\u8981\u8fd9\u4e2a\u53d8\u91cf\u662f\u5171\u4eab\u7684\uff0c\u6bd4\u5982\u901a\u8fc7\u6307\u9488\u4f20\u9012\uff0c\u6216\u8005\u5168\u5c40\u53d8\u91cf\u90fd\u53ef\u4ee5\u3002\n\n\n\u867d\u7136\u4e92\u65a5\u9501\u53ef\u4ee5\u88ab\u76f4\u63a5\u7684\u5728\u591a\u4e2aGoroutine\u4e4b\u95f4\u5171\u4eab\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u5f3a\u70c8\u5efa\u8bae\u628a\u5bf9\u540c\u4e00\u4e2a\u4e92\u65a5\u9501\u7684\u6210\u5bf9\u7684\u9501\u5b9a\u548c\u89e3\u9501\u64cd\u4f5c\u653e\u5728\u540c\u4e00\u4e2a\u5c42\u6b21\u7684\u4ee3\u7801\u5757\u4e2d\u3002\u4f8b\u5982\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u6216\u65b9\u6cd5\u4e2d\u5bf9\u67d0\u4e2a\u4e92\u65a5\u9501\u7684\u8fdb\u884c\u9501\u5b9a\u548c\u89e3\u9501\u3002", 
            "title": "3.1. \u4e92\u65a5\u9501(Mutex)"
        }, 
        {
            "location": "/goroutine/sync_mutex/#_1", 
            "text": "\u7528\u4e8e\u4e3b\u52a8\u63a7\u5236Mutex\u7c7b\u578b\u7684\u53d8\u91cf\u6216\u8005\u5c06Mutex\u7c7b\u578b\u4f5c\u4e3astruct\u7684\u5143\u7d20\u7684\u53d8\u91cf\u5728\u540c\u4e00\u65f6\u95f4\u53ea\u88ab\u4e00\u4e2aroutine\u8bbf\u95ee\uff08\u5373\u6267\u884cLock()\u65b9\u6cd5\u7684\u4ee3\u7801\u5757\uff09\uff0c\u8fd9\u4e2aMutex\u5e26\u67092\u4e2a\u65b9\u6cd5\uff1aLock()\u548cUnlock()\u3002\u4e92\u65a5\u9501\u4e0d\u533a\u5206\u8bfb\u548c\u5199\uff0c\u5373\u65e0\u8bba\u662fprint\u6253\u5370\u8fd8\u662f\u5199\u64cd\u4f5c\u90fd\u662f\u4e92\u65a5\u7684  package   main  import   ( \n     fmt \n     sync  )  func   main ()   { \n     var   mutex   sync . Mutex \n     fmt . Printf ( %+v\\n ,   mutex ) \n\n     mutex . Lock () \n     fmt . Printf ( %+v\\n ,   mutex ) \n\n     mutex . Unlock () \n     fmt . Printf ( %+v\\n ,   mutex )  }   \u8f93\u51fa  {state:0 sema:0}\n{state:1 sema:0}\n{state:0 sema:0}  \u53ef\u4ee5\u770b\u51fa\u5f53Lock()\u65f6\uff0cstate\u4e3a1\uff0cUnlock()\u65f6\uff0cstate\u4e3a0\u3002  \u8fd9\u6bb5\u4ee3\u7801\u5176\u5b9e\u662f\u4e3a\u540e\u9762Lock()\u4f7f\u7528\u505a\u4e86\u4e00\u4e2a\u5de5\u4f5c\u539f\u7406\u94fa\u57ab\uff08\u4e2a\u4eba\u731c\u6d4b\uff09\uff1aLock()\u65f6\u5019\u4f1a\u5224\u65adstate\uff0c\u82e5\u4e3a0\uff0c\u5219\u5c06state\u6539\u4e3a1\uff1b\u82e5\u4e3a1\uff0c\u5219\u963b\u585e\u7b49\u5f85\uff0c\u76f4\u5230state\u53d8\u4e3a0\uff0c\u7136\u540e\u518d\u5c06state\u6539\u4e3a1\u3002sync.Mutex\u662f\u5e76\u53d1\u5b89\u5168\u7684\u3002", 
            "title": "\u4ecb\u7ecd"
        }, 
        {
            "location": "/goroutine/sync_mutex/#_2", 
            "text": "\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5728\u5b98\u7f51\u4f8b\u5b50\u4e0a\u505a\u4e86\u4e00\u70b9\u4fee\u6539\uff0c\u66f4\u5bb9\u6613\u770b\u51fa\u4e92\u65a5\u6548\u679c  package   main  import   ( \n     fmt \n     sync \n     time  )  // SafeCounter is safe to use concurrently.  type   SafeCounter   struct   { \n     v     map [ string ] int \n     mux   sync . Mutex  }  // Inc increments the counter for the given key.  func   ( c   * SafeCounter )   Inc ( key   string ,   id   int )   { \n     c . mux . Lock () \n     fmt . Printf ( %d. Inc lock.\\n ,   id ) \n     // Lock so only one goroutine at a time can access the map c.v. \n     c . v [ key ] ++ \n     c . mux . Unlock () \n     fmt . Printf ( %d. Inc unlock.\\n ,   id )  }  // Value returns the current value of the counter for the given key.  func   ( c   * SafeCounter )   Value ( key   string )   int   { \n     c . mux . Lock () \n     fmt . Println ( Value lock. ) \n     // Lock so only one goroutine at a time can access the map c.v. \n     defer   fmt . Println ( Value unlock. ) \n     defer   c . mux . Unlock () \n     return   c . v [ key ]  }  func   main ()   { \n     c   :=   SafeCounter { v :   make ( map [ string ] int )} \n     for   i   :=   0 ;   i     10 ;   i ++   { \n         go   c . Inc ( somekey ,   i ) \n     } \n\n     time . Sleep ( time . Second ) \n     fmt . Println ( c . Value ( somekey ))  }   \u8f93\u51fa  1. Inc lock.\n1. Inc unlock.\n0. Inc lock.\n0. Inc unlock.\n7. Inc lock.\n7. Inc unlock.\n8. Inc lock.\n8. Inc unlock.\n6. Inc lock.\n6. Inc unlock.\n3. Inc lock.\n3. Inc unlock.\n9. Inc lock.\n9. Inc unlock.\n2. Inc lock.\n2. Inc unlock.\n4. Inc lock.\n4. Inc unlock.\n5. Inc lock.\n5. Inc unlock.\nValue lock.\nValue unlock.\n10    \u6bcf\u6b21\u8f93\u51fa\u7ed3\u679c\u4e5f\u4e0d\u592a\u4e00\u6837\uff1a0-9\u7684\u987a\u5e8f\u4e0d\u4e00\u81f4    \u6211\u4eec\u4e00\u822c\u4f1a\u5728\u9501\u5b9a\u4e92\u65a5\u9501\u4e4b\u540e\u7d27\u63a5\u7740\u5c31\u7528defer\u8bed\u53e5\u6765\u4fdd\u8bc1\u8be5\u4e92\u65a5\u9501\u7684\u53ca\u65f6\u89e3\u9501\uff0c\u56e0\u4e3adefer\u662f\u5148\u8fdb\u540e\u51fa    Inc\u548cValue\u65b9\u6cd5\u7684receiver\u662f\u6307\u9488\uff0c\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3aMutex\u9501\u5bf9\u5e94\u7684\u5c31\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u53d8\u91cf\uff08\u53ef\u4ee5\u662fstruct\uff0c\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u666e\u901a\u7c7b\u578b\uff09", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/goroutine/sync_mutex/#_3", 
            "text": "\u4e92\u65a5\u9501\u7684\u4f7f\u7528\u662f\u4e3b\u52a8\u63a7\u5236\u4e92\u65a5\u9501\uff0c\u5373\u4e00\u4e2a\u613f\u6253\u4e00\u4e2a\u613f\u6328\u3002\u6bd4\u5982\u5373\u4f7f\u4e00\u4e2aroutine\u91cc\u7528\u4e86Lock()\uff0c\u4f46\u5728\u53e6\u4e00\u4e2aroutine\u53ef\u4ee5\u4e0d\u7406\u4f1a\u8fd9\u4e2a\u9501\u5c31\u80fd\u8bbf\u95ee\u8fd9\u4e2astruct\uff0c\u53ea\u9700\u8981\u4e0d\u8c03\u7528Lock()\u5c31\u884c\u3002\u4f8b\u5b50\u5982\u4e0b  package   main  import   ( \n     fmt \n     sync \n     time  )  type   SafeCounter   struct   { \n     v     map [ string ] int \n     mux   sync . Mutex  }  func   ( c   * SafeCounter )   Inc ( key   string )   { \n     c . mux . Lock () \n     time . Sleep ( 3   *   time . Second ) \n     c . v [ key ] ++ \n     c . mux . Unlock ()  }  func   main ()   { \n     c   :=   SafeCounter { v :   make ( map [ string ] int )} \n     go   c . Inc ( somekey ) \n\n     time . Sleep ( 1   *   time . Second ) \n     c . v [ somekey ] ++ \n     fmt . Println ( c . v [ somekey ]) \n\n     time . Sleep ( 3   *   time . Second ) \n     fmt . Println ( c . v [ somekey ])  }   \u8f93\u51fa  1\n2  c.v[ somekey ]++ \u4e4b\u524d\uff0c\u662f\u5df2\u7ecf\u9501\u4e86\uff0c\u672c\u5e94\u8be5\u7b492-3\u79d2\uff0c\u624d\u80fd\u8f93\u51fa\uff0c\u4f46\u662f\u4ece\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\uff0c\u53ea\u8fc7\u4e861\u79d2\u5c31\u8f93\u51fa\u4e86\uff0c\u8bf4\u660eLock\u53ea\u662f\u4e00\u79cd\u4eba\u4e3a\u7684\u4e92\u65a5\uff0c\u662f\u4e00\u79cd\u534f\u8bae\uff0c\u5e76\u4e0d\u662f\u5f3a\u5236\u3002  \u63a5\u4e0b\u6765\u770b\u4e0b\u4e0d\u52a0\u9501\u7684\u6548\u679c\uff0c\u5373\u662f\u5426\u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u4f8b\u5b50\u5982\u4e0b  package   main  import   ( \n     fmt \n     sync \n     time  )  // SafeCounter is safe to use concurrently.  type   SafeCounter   struct   { \n     v     map [ string ] int \n     mux   sync . Mutex  }  // Inc increments the counter for the given key.  func   ( c   * SafeCounter )   Inc ( key   string ,   id   int )   {  //  c.mux.Lock() \n     fmt . Printf ( %d. Inc lock.\\n ,   id ) \n     // Lock so only one goroutine at a time can access the map c.v. \n     c . v [ key ] ++  //  c.mux.Unlock() \n     fmt . Printf ( %d. Inc unlock.\\n ,   id )  }  // Value returns the current value of the counter for the given key.  func   ( c   * SafeCounter )   Value ( key   string )   int   { \n     c . mux . Lock () \n     fmt . Println ( Value lock. ) \n     // Lock so only one goroutine at a time can access the map c.v. \n     defer   fmt . Println ( Value unlock. ) \n     defer   c . mux . Unlock () \n     return   c . v [ key ]  }  func   main ()   { \n     c   :=   SafeCounter { v :   make ( map [ string ] int )} \n     for   i   :=   0 ;   i     2 ;   i ++   { \n         go   c . Inc ( somekey ,   i ) \n     } \n\n     time . Sleep ( time . Second ) \n     fmt . Println ( c . Value ( somekey ))  }   \u6709\u65f6\u5019\u8f93\u51fa  0. Inc lock.\n1. Inc lock.\n0. Inc unlock.\n1. Inc unlock.\nValue lock.\nValue unlock.\n2  \u6709\u65f6\u5019\u8f93\u51fa  1. Inc lock.\n0. Inc lock.\nfatal error: 1. Inc unlock.\nconcurrent map writes\n\ngoroutine 5 [running]:\nruntime.throw(0x10b65f1, 0x15)\n    /usr/local/go/src/runtime/panic.go:596 +0x95 fp=0xc420098e80 sp=0xc420098e60\nruntime.mapassign(0x109d7a0, 0xc4200180f0, 0xc420098f90, 0x7)\n    /usr/local/go/src/runtime/hashmap.go:499 +0x667 fp=0xc420098f20 sp=0xc420098e80\nmain.(*SafeCounter).Inc(0xc42000e270, 0x10b49f8, 0x7, 0x0)\n    /Users/foo/test/b.go:20 +0x144 fp=0xc420098fc0 sp=0xc420098f20\nruntime.goexit()\n    /usr/local/go/src/runtime/asm_amd64.s:2197 +0x1 fp=0xc420098fc8 sp=0xc420098fc0\ncreated by main.main\n    /Users/foo/test/b.go:38 +0xcd\n\ngoroutine 1 [sleep]:\ntime.Sleep(0x3b9aca00)\n    /usr/local/go/src/runtime/time.go:59 +0xf9\nmain.main()\n    /Users/foo/test/b.go:41 +0xf2  \u8fd9\u91cc\u62a5\u9519\u662f\u56e0\u4e3ago\u8bed\u8a00\u7684map\u4e0d\u662f\u5e76\u53d1\u5b89\u5168\uff0c\u6240\u4ee5\u5f53\u5e76\u53d1\u4e0d\u52a0\u9501\u65f6\u5019\u5c31\u4f1a\u5b58\u5728\u51b2\u7a81\u7684\u53ef\u80fd\u3002\u6700\u65b0\u7684go\u8bed\u8a00\u7684sync\u5305\u91cc\u65b0\u589e\u4e86sync.Map\uff0c\u5e94\u8be5\u53ef\u4ee5\u89e3\u51b3\u7c7b\u4f3c\u95ee\u9898\uff08\u8fd8\u6ca1\u7814\u7a76\u8fc7\uff09", 
            "title": "\u4e00\u4e2a\u613f\u6253\u4e00\u4e2a\u613f\u6328"
        }, 
        {
            "location": "/goroutine/sync_mutex/#mutexgoroutine", 
            "text": "\u5df2\u7ecf\u9501\u5b9a\u7684Mutex\u5e76\u4e0d\u4e0e\u7279\u5b9a\u7684goroutine\u76f8\u5173\u8054\uff0c\u8fd9\u6837\u53ef\u4ee5\u5229\u7528\u4e00\u4e2agoroutine\u5bf9\u5176\u52a0\u9501\uff0c\u518d\u5229\u7528\u5176\u4ed6goroutine\u5bf9\u5176\u89e3\u9501\uff0c\u4f8b\u5b50\u5982\u4e0b  package   main  import   ( \n     fmt \n     sync \n     time  )  type   MyStruct   struct   { \n     v     int \n     mux   sync . Mutex  }  func   ( s   * MyStruct )   Lock ()   { \n     s . mux . Lock ()  }  func   ( s   * MyStruct )   Unlock ()   { \n     s . mux . Unlock ()  }  func   main ()   { \n     s   :=   MyStruct { v :   0 } \n     s . v   =   1 \n     fmt . Printf ( %+v\\n ,   s ) \n\n     go   s . Lock () \n     time . Sleep ( 1   *   time . Second ) \n     fmt . Printf ( %+v\\n ,   s ) \n\n     go   s . Unlock () \n     time . Sleep ( 1   *   time . Second ) \n     fmt . Printf ( %+v\\n ,   s )  }   \u8f93\u51fa  {v:1 mux:{state:0 sema:0}}\n{v:1 mux:{state:1 sema:0}}\n{v:1 mux:{state:0 sema:0}}  \u53ef\u4ee5\u770b\u51fa\uff0c\u53ef\u4ee5\u4e00\u4e2aroutine\u91cc\u9501\u5b9a\uff0c\u53e6\u4e00\u4e2aroutine\u91cc\u89e3\u9501\u3002\u56e0\u4e3a\u9501\u53ea\u548c\u5177\u4f53\u53d8\u91cf\u5173\u8054\uff0c\u548croutine\u65e0\u5173\uff0c\u53ea\u8981\u8fd9\u4e2a\u53d8\u91cf\u662f\u5171\u4eab\u7684\uff0c\u6bd4\u5982\u901a\u8fc7\u6307\u9488\u4f20\u9012\uff0c\u6216\u8005\u5168\u5c40\u53d8\u91cf\u90fd\u53ef\u4ee5\u3002  \u867d\u7136\u4e92\u65a5\u9501\u53ef\u4ee5\u88ab\u76f4\u63a5\u7684\u5728\u591a\u4e2aGoroutine\u4e4b\u95f4\u5171\u4eab\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u5f3a\u70c8\u5efa\u8bae\u628a\u5bf9\u540c\u4e00\u4e2a\u4e92\u65a5\u9501\u7684\u6210\u5bf9\u7684\u9501\u5b9a\u548c\u89e3\u9501\u64cd\u4f5c\u653e\u5728\u540c\u4e00\u4e2a\u5c42\u6b21\u7684\u4ee3\u7801\u5757\u4e2d\u3002\u4f8b\u5982\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u6216\u65b9\u6cd5\u4e2d\u5bf9\u67d0\u4e2a\u4e92\u65a5\u9501\u7684\u8fdb\u884c\u9501\u5b9a\u548c\u89e3\u9501\u3002", 
            "title": "\u5df2\u7ecf\u9501\u5b9a\u7684Mutex\u4e0e\u7279\u5b9a\u7684goroutine\u65e0\u5173\u8054"
        }, 
        {
            "location": "/goroutine/sync_rwmutex/", 
            "text": "\u8bfb\u5199\u9501: sync.RWMutex\n\n\n\u4ecb\u7ecd\n\n\n\n\n\u8bfb\u5199\u9501\u662f\u9488\u5bf9\u4e8e\u8bfb\u5199\u64cd\u4f5c\u7684\u4e92\u65a5\u9501\u3002\u5b83\u4e0e\u666e\u901a\u7684\u4e92\u65a5\u9501\u6700\u5927\u7684\u4e0d\u540c\u5c31\u662f\uff0c\u5b83\u53ef\u4ee5\u5206\u522b\u9488\u5bf9\u8bfb\u64cd\u4f5c\u548c\u5199\u64cd\u4f5c\u8fdb\u884c\u9501\u5b9a\u548c\u89e3\u9501\u64cd\u4f5c\u3002\u8bfb\u5199\u9501\u9075\u5faa\u7684\u8bbf\u95ee\u63a7\u5236\u89c4\u5219\u4e0e\u4e92\u65a5\u9501\u6709\u6240\u4e0d\u540c\u3002\u5728\u8bfb\u5199\u9501\u7ba1\u8f96\u7684\u8303\u56f4\u5185\uff0c\u5b83\u5141\u8bb8\u4efb\u610f\u4e2a\u8bfb\u64cd\u4f5c\u7684\u540c\u65f6\u8fdb\u884c\u3002\u4f46\u662f\uff0c\u5728\u540c\u4e00\u65f6\u523b\uff0c\u5b83\u53ea\u5141\u8bb8\u6709\u4e00\u4e2a\u5199\u64cd\u4f5c\u5728\u8fdb\u884c\u3002\u5e76\u4e14\uff0c\u5728\u67d0\u4e00\u4e2a\u5199\u64cd\u4f5c\u88ab\u8fdb\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bfb\u64cd\u4f5c\u7684\u8fdb\u884c\u4e5f\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8bfb\u5199\u9501\u63a7\u5236\u4e0b\u7684\u591a\u4e2a\u5199\u64cd\u4f5c\u4e4b\u95f4\u90fd\u662f\u4e92\u65a5\u7684\uff0c\u5e76\u4e14\u5199\u64cd\u4f5c\u4e0e\u8bfb\u64cd\u4f5c\u4e4b\u95f4\u4e5f\u90fd\u662f\u4e92\u65a5\u7684\u3002\u4f46\u662f\uff0c\u591a\u4e2a\u8bfb\u64cd\u4f5c\u4e4b\u95f4\u5374\u4e0d\u5b58\u5728\u4e92\u65a5\u5173\u7cfb\u3002\n\n\n\u6362\u53e5\u8bdd\u8bf4:\n\n\n\n\n\n\n\u540c\u65f6\u53ea\u80fd\u6709\u4e00\u4e2a goroutine \u80fd\u591f\u83b7\u5f97\u5199\u9501\u5b9a\u3002\n\n\n\n\n\n\n\u540c\u65f6\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u4e2a gorouinte \u83b7\u5f97\u8bfb\u9501\u5b9a\u3002\n\n\n\n\n\n\n\u540c\u65f6\u53ea\u80fd\u5b58\u5728\u5199\u9501\u5b9a\u6216\u8bfb\u9501\u5b9a\uff08\u8bfb\u548c\u5199\u4e92\u65a5\uff09\u3002\n\n\n\n\n\n\n\u65b9\u6cd5\n\n\n\n\nfunc\n \n(\nrw\n \n*\nRWMutex\n)\n \nLock\n       \n//\u5199\u9501\u5b9a\n\n\nfunc\n \n(\nrw\n \n*\nRWMutex\n)\n \nUnlock\n     \n//\u5199\u89e3\u9501\n\n\nfunc\n \n(\nrw\n \n*\nRWMutex\n)\n \nRLock\n      \n//\u8bfb\u9501\u5b9a\n\n\nfunc\n \n(\nrw\n \n*\nRWMutex\n)\n \nRUnlock\n    \n//\u8bfb\u89e3\u9501\n\n\n\n\n\nMutex\u548cRWMutex\u90fd\u5b9e\u73b0\u4e86Locker\u63a5\u53e3\u3002\u8be5\u63a5\u53e3\u5982\u4e0b\uff1a\n\n\ntype\n \nLocker\n \ninterface\n \n{\n\n    \nLock\n()\n\n    \nUnlock\n()\n\n\n}\n\n\n\n\n\n\u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u5185\u7f6e\u65b9\u6cd5\n\n\nfunc\n \n(\nrw\n \n*\nRWMutex\n)\n \nRLocker\n()\n \nLocker\n    \n//\u8fd4\u56de\u5b9e\u73b0\u4e86sync.Locker\u63a5\u53e3\u7684\u503c\n\n\n\n\n\n\u8fd9\u4e2aRLocker()\u4f5c\u7528\u662f\uff0c\u4f7f\u7528Lock()\u548cUnlock()\u6765\u8fdb\u884c\u8bfb\u9501\u5b9a\u548c\u8bfb\u89e3\u9501\uff0c\u800c\u65e0\u9700RLock()\u548cRUnlock()\u6765\u8fdb\u884c\u8bfb\u9501\u5b9a\u548c\u8bfb\u89e3\u9501", 
            "title": "3.2. \u8bfb\u5199\u9501(RWMutex)"
        }, 
        {
            "location": "/goroutine/sync_rwmutex/#_1", 
            "text": "\u8bfb\u5199\u9501\u662f\u9488\u5bf9\u4e8e\u8bfb\u5199\u64cd\u4f5c\u7684\u4e92\u65a5\u9501\u3002\u5b83\u4e0e\u666e\u901a\u7684\u4e92\u65a5\u9501\u6700\u5927\u7684\u4e0d\u540c\u5c31\u662f\uff0c\u5b83\u53ef\u4ee5\u5206\u522b\u9488\u5bf9\u8bfb\u64cd\u4f5c\u548c\u5199\u64cd\u4f5c\u8fdb\u884c\u9501\u5b9a\u548c\u89e3\u9501\u64cd\u4f5c\u3002\u8bfb\u5199\u9501\u9075\u5faa\u7684\u8bbf\u95ee\u63a7\u5236\u89c4\u5219\u4e0e\u4e92\u65a5\u9501\u6709\u6240\u4e0d\u540c\u3002\u5728\u8bfb\u5199\u9501\u7ba1\u8f96\u7684\u8303\u56f4\u5185\uff0c\u5b83\u5141\u8bb8\u4efb\u610f\u4e2a\u8bfb\u64cd\u4f5c\u7684\u540c\u65f6\u8fdb\u884c\u3002\u4f46\u662f\uff0c\u5728\u540c\u4e00\u65f6\u523b\uff0c\u5b83\u53ea\u5141\u8bb8\u6709\u4e00\u4e2a\u5199\u64cd\u4f5c\u5728\u8fdb\u884c\u3002\u5e76\u4e14\uff0c\u5728\u67d0\u4e00\u4e2a\u5199\u64cd\u4f5c\u88ab\u8fdb\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bfb\u64cd\u4f5c\u7684\u8fdb\u884c\u4e5f\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8bfb\u5199\u9501\u63a7\u5236\u4e0b\u7684\u591a\u4e2a\u5199\u64cd\u4f5c\u4e4b\u95f4\u90fd\u662f\u4e92\u65a5\u7684\uff0c\u5e76\u4e14\u5199\u64cd\u4f5c\u4e0e\u8bfb\u64cd\u4f5c\u4e4b\u95f4\u4e5f\u90fd\u662f\u4e92\u65a5\u7684\u3002\u4f46\u662f\uff0c\u591a\u4e2a\u8bfb\u64cd\u4f5c\u4e4b\u95f4\u5374\u4e0d\u5b58\u5728\u4e92\u65a5\u5173\u7cfb\u3002  \u6362\u53e5\u8bdd\u8bf4:    \u540c\u65f6\u53ea\u80fd\u6709\u4e00\u4e2a goroutine \u80fd\u591f\u83b7\u5f97\u5199\u9501\u5b9a\u3002    \u540c\u65f6\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u4e2a gorouinte \u83b7\u5f97\u8bfb\u9501\u5b9a\u3002    \u540c\u65f6\u53ea\u80fd\u5b58\u5728\u5199\u9501\u5b9a\u6216\u8bfb\u9501\u5b9a\uff08\u8bfb\u548c\u5199\u4e92\u65a5\uff09\u3002", 
            "title": "\u4ecb\u7ecd"
        }, 
        {
            "location": "/goroutine/sync_rwmutex/#_2", 
            "text": "func   ( rw   * RWMutex )   Lock         //\u5199\u9501\u5b9a  func   ( rw   * RWMutex )   Unlock       //\u5199\u89e3\u9501  func   ( rw   * RWMutex )   RLock        //\u8bfb\u9501\u5b9a  func   ( rw   * RWMutex )   RUnlock      //\u8bfb\u89e3\u9501   Mutex\u548cRWMutex\u90fd\u5b9e\u73b0\u4e86Locker\u63a5\u53e3\u3002\u8be5\u63a5\u53e3\u5982\u4e0b\uff1a  type   Locker   interface   { \n     Lock () \n     Unlock ()  }   \u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u5185\u7f6e\u65b9\u6cd5  func   ( rw   * RWMutex )   RLocker ()   Locker      //\u8fd4\u56de\u5b9e\u73b0\u4e86sync.Locker\u63a5\u53e3\u7684\u503c   \u8fd9\u4e2aRLocker()\u4f5c\u7528\u662f\uff0c\u4f7f\u7528Lock()\u548cUnlock()\u6765\u8fdb\u884c\u8bfb\u9501\u5b9a\u548c\u8bfb\u89e3\u9501\uff0c\u800c\u65e0\u9700RLock()\u548cRUnlock()\u6765\u8fdb\u884c\u8bfb\u9501\u5b9a\u548c\u8bfb\u89e3\u9501", 
            "title": "\u65b9\u6cd5"
        }, 
        {
            "location": "/goroutine/sync_waitgroup/", 
            "text": "WaitGroup \u7528\u4e8e\u7b49\u5f85\u4e00\u7ec4 goroutine \u7ed3\u675f\uff0c\u7528\u6cd5\u5f88\u7b80\u5355\u3002\u5b83\u6709\u4e09\u4e2a\u65b9\u6cd5\uff1a\n\n\nfunc (wg *WaitGroup) Add(delta int)\nfunc (wg *WaitGroup) Done()\nfunc (wg *WaitGroup) Wait()\n\n\n\n\n\n\n\n\nAdd \u7528\u6765\u6dfb\u52a0 goroutine \u7684\u4e2a\u6570\n\n\n\n\n\n\nDone \u6267\u884c\u4e00\u6b21\u6570\u91cf\u51cf 1\n\n\n\n\n\n\nWait \u7528\u6765\u7b49\u5f85\u7ed3\u675f\n\n\n\n\n\n\n\u4f8b\u5b50\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n    \ntime\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \nwg\n \nsync\n.\nWaitGroup\n\n    \nfmt\n.\nPrintf\n(\ninit:             %+v\\n\n,\n \nwg\n)\n\n\n    \nfor\n \ni\n \n:=\n \n1\n;\n \ni\n \n \n10\n;\n \ni\n++\n \n{\n\n        \n// \u8ba1\u6570\u52a0 1\n\n        \nwg\n.\nAdd\n(\n1\n)\n\n        \ngo\n \nfunc\n(\ni\n \nint\n)\n \n{\n\n            \nfmt\n.\nPrintf\n(\ngoroutine%d start: %+v\\n\n,\n \ni\n,\n \nwg\n)\n\n            \ntime\n.\nSleep\n(\n11\n \n*\n \ntime\n.\nSecond\n)\n\n            \n// \u8ba1\u6570\u51cf 1\n\n            \nwg\n.\nDone\n()\n\n            \nfmt\n.\nPrintf\n(\ngoroutine%d end:   %+v\\n\n,\n \ni\n,\n \nwg\n)\n\n        \n}(\ni\n)\n\n        \ntime\n.\nSleep\n(\ntime\n.\nSecond\n)\n\n    \n}\n\n\n    \n// \u7b49\u5f85\u6267\u884c\u7ed3\u675f\n\n    \nwg\n.\nWait\n()\n\n    \nfmt\n.\nPrintf\n(\nover:             %+v\\n\n,\n \nwg\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\ninit:             {noCopy:{} state1:[0 0 0 0 0 0 0 0 0 0 0 0] sema:0}\ngoroutine1 start: {noCopy:{} state1:[0 0 0 0 1 0 0 0 0 0 0 0] sema:0}\ngoroutine2 start: {noCopy:{} state1:[0 0 0 0 2 0 0 0 0 0 0 0] sema:0}\ngoroutine3 start: {noCopy:{} state1:[0 0 0 0 3 0 0 0 0 0 0 0] sema:0}\ngoroutine4 start: {noCopy:{} state1:[0 0 0 0 4 0 0 0 0 0 0 0] sema:0}\ngoroutine5 start: {noCopy:{} state1:[0 0 0 0 5 0 0 0 0 0 0 0] sema:0}\ngoroutine6 start: {noCopy:{} state1:[0 0 0 0 6 0 0 0 0 0 0 0] sema:0}\ngoroutine7 start: {noCopy:{} state1:[0 0 0 0 7 0 0 0 0 0 0 0] sema:0}\ngoroutine8 start: {noCopy:{} state1:[0 0 0 0 8 0 0 0 0 0 0 0] sema:0}\ngoroutine9 start: {noCopy:{} state1:[0 0 0 0 9 0 0 0 0 0 0 0] sema:0}\ngoroutine1 end:   {noCopy:{} state1:[1 0 0 0 8 0 0 0 0 0 0 0] sema:0}\ngoroutine2 end:   {noCopy:{} state1:[1 0 0 0 7 0 0 0 0 0 0 0] sema:0}\ngoroutine3 end:   {noCopy:{} state1:[1 0 0 0 6 0 0 0 0 0 0 0] sema:0}\ngoroutine4 end:   {noCopy:{} state1:[1 0 0 0 5 0 0 0 0 0 0 0] sema:0}\ngoroutine5 end:   {noCopy:{} state1:[1 0 0 0 4 0 0 0 0 0 0 0] sema:0}\ngoroutine6 end:   {noCopy:{} state1:[1 0 0 0 3 0 0 0 0 0 0 0] sema:0}\ngoroutine7 end:   {noCopy:{} state1:[1 0 0 0 2 0 0 0 0 0 0 0] sema:0}\ngoroutine8 end:   {noCopy:{} state1:[1 0 0 0 1 0 0 0 0 0 0 0] sema:0}\ngoroutine9 end:   {noCopy:{} state1:[0 0 0 0 0 0 0 0 0 0 0 0] sema:1}\nover:             {noCopy:{} state1:[0 0 0 0 0 0 0 0 0 0 0 0] sema:0}\n\n\n\n\n\n\nWarning\n\n\nwg.Add() \u65b9\u6cd5\u4e00\u5b9a\u8981\u5728 goroutine \u5f00\u59cb\u524d\u6267\u884c", 
            "title": "3.3. WaitGroup"
        }, 
        {
            "location": "/goroutine/sync_cond/", 
            "text": "\u7528\u9014\n\n\n\n\n\u4e0e\u4e92\u65a5\u91cf\u4e0d\u540c\uff0c\u6761\u4ef6\u53d8\u91cf\u7684\u4f5c\u7528\u5e76\u4e0d\u662f\u4fdd\u8bc1\u5728\u540c\u4e00\u65f6\u523b\u4ec5\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u67d0\u4e00\u4e2a\u5171\u4eab\u6570\u636e\uff0c\u800c\u662f\u5728\u5bf9\u5e94\u7684\u5171\u4eab\u6570\u636e\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u901a\u77e5\u5176\u4ed6\u56e0\u6b64\u800c\u88ab\u963b\u585e\u7684\u7ebf\u7a0b\u3002\u6761\u4ef6\u53d8\u91cf\u603b\u662f\u4e0e\u4e92\u65a5\u91cf\u7ec4\u5408\u4f7f\u7528\u3002\u4e92\u65a5\u91cf\u4e3a\u5171\u4eab\u6570\u636e\u7684\u8bbf\u95ee\u63d0\u4f9b\u4e92\u65a5\u652f\u6301\uff0c\u800c\u6761\u4ef6\u53d8\u91cf\u53ef\u4ee5\u5c31\u5171\u4eab\u6570\u636e\u7684\u72b6\u6001\u7684\u53d8\u5316\u5411\u76f8\u5173\u7ebf\u7a0b\u53d1\u51fa\u901a\u77e5\u3002\n\n\n\u58f0\u660e\n\n\n\n\nlock := new(sync.Mutex)\ncond := sync.NewCond(lock)\n\n\n\n\n\u4e5f\u53ef\u4ee5\u5199\u6210\u4e00\u884c\n\n\ncond := sync.NewCond(new(sync.Mutex))\n\n\n\n\n\u65b9\u6cd5\n\n\n\n\ncond.L.Lock()\ncond.L.Unlock()\ncond.Wait()\ncond.Signal()\ncond.Broadcast()\n\n\n\n\n\n\nNote\n\n\n\n\n\n\ncond.L.Lock()\n\u548c\ncond.L.Unlock()\n\uff1a\u4e5f\u53ef\u4ee5\u4f7f\u7528\nlock.Lock()\n\u548c\nlock.Unlock()\n\uff0c\u5b8c\u5168\u4e00\u6837\uff0c\u56e0\u4e3a\u662f\u6307\u9488\u8f6c\u9012\n\n\n\n\n\n\ncond.Wait()\n\uff1aUnlock()-\n\u963b\u585e\u7b49\u5f85\u901a\u77e5(\u5373\u7b49\u5f85Signal()\u6216Broadcast()\u7684\u901a\u77e5)-\n\u6536\u5230\u901a\u77e5\n-\nLock()\n\n\n\n\n\n\ncond.Signal()\n\uff1a\u901a\u77e5\u4e00\u4e2aWait()\u4e86\u7684\uff0c\u82e5\u6ca1\u6709Wait()\uff0c\u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002\nSignal()\u901a\u77e5\u7684\u987a\u5e8f\u662f\u6839\u636e\u539f\u6765\u52a0\u5165\u901a\u77e5\u5217\u8868(Wait())\u7684\u5148\u5165\u5148\u51fa\n\n\n\n\n\n\ncond.Broadcast()\n: \u901a\u77e5\u6240\u6709Wait()\u4e86\u7684\uff0c\u82e5\u6ca1\u6709Wait()\uff0c\u4e5f\u4e0d\u4f1a\u62a5\u9519\n\n\n\n\n\n\n\n\n\u5de5\u4f5c\u539f\u7406(\u6458\u53d6)\n\n\n\n\n\b\u4e0b\u9762\u56fe1-\u56fe3\u6765\u81ea\"\u90dd\u6797\"\u7684go\u8bed\u8a00\u4e66\u7c4d\n\n\n\u6ca1\u7528\u6761\u4ef6\u53d8\u91cf\u65f6\u5019:\n\n\n\n\n\u56fe1\uff1a\u751f\u4ea7\u8005\u7ebf\u7a0b\u6dfb\u52a0\u6570\u636e\u5e93\u7684\u6d41\u7a0b\n\n\n\u56fe1\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a\u5f53\u961f\u5217\u603b\u662f\u6ee1\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u4e0d\u505c\u7684\u5faa\u73af\u83b7\u53d6\u961f\u5217\u72b6\u6001\uff0c\u56e0\u6b64\u4e5f\u4e0d\u4f1a\u91ca\u653e\u9501\uff0c\u800c\u6d88\u8d39\u8005\u5c31\u65e0\u6cd5\u83b7\u5f97\u9501\u6765\u53d6\u8d70\u961f\u5217\u4e2d\u7684\u6570\u636e\u3002\u5982\u679c\u961f\u5217\u4e2d\u7684\u6570\u636e\u65e0\u6cd5\u53d6\u8d70\uff0c\u90a3\u4e48\u961f\u5217\u5c31\u6c38\u8fdc\u90fd\u662f\u6ee1\u7684\uff0c\u5bfc\u81f4\u4e86\u6b7b\u9501\u3002\n\n\n\u4f7f\u7528\u6761\u4ef6\u53d8\u91cf\u540e\uff0c\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1a\n\n\n\n\n\u56fe2\uff1a\u751f\u4ea7\u8005\u7ebf\u7a0b\u6dfb\u52a0\u6570\u636e\u5e93\u7684\u6d41\u7a0b\n\n\n\u56fe2\u89e3\u51b3\u4e86\u56fe1\u7684\u95ee\u9898\uff1a\u5f53\u961f\u5217\u6ee1\u7684\u65f6\u5019\uff0c\u5219\u5148\u89e3\u9501\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6b7b\u9501\uff08\u91ca\u653e\u9501\u7ed9\u5176\u4ed6\u4eba\u7528\uff09\n\n\n\u9644\uff1a\u548c\u56fe2\u5339\u914d\u7684\u6d88\u8d39\u8005\u7ebf\u7a0b\n\n\n\n\n\u56fe3\uff1a\u6d88\u8d39\u8005\u7ebf\u7a0b\n\n\n\u5de5\u4f5c\u539f\u7406(\u539f\u521b)\n\n\n\n\n\n\n\u62a2\u5360\u9501\u540e\uff0c\u5224\u65ad\u81ea\u5df1\u662f\u5426\u6ee1\u8db3\u5904\u7406 \n\u6761\u4ef6\n\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u5219\u5148 \n\u91ca\u653e\u9501\u7ed9\u522b\u4eba\u7528\n\uff0c\u7136\u540e\u81ea\u5df1 \n\u963b\u585e\n\uff0c\u7b49\u522b\u4eba\u4e3b\u52a8 \n\u901a\u77e5\u81ea\u5df1\n(\u80af\u5b9a\u662f\u522b\u4eba\u7684\u4e8b\u60c5\u505a\u5b8c\u4e86\u624d\u4f1a\u901a\u77e5\u81ea\u5df1)\uff0c\u5c31\u89e3\u9664\u963b\u585e\uff0c\u7136\u540e\u518d\u53bb \n\u83b7\u5f97\u9501\n\n\n\n\nError\n\n\n\u8be5\u56fe\u903b\u8f91\u4e5f\u8bb8\u4e00\u5f00\u59cb\u770b\u8fc7\u53bb\u6ca1\u5565\u95ee\u9898\uff0c\u4f46\u662f\u5b9e\u9645\u6267\u884c\u8d77\u6765\uff0c\u5c31\u4f1a\u6709\u4e00\u4e9b\u5f02\u5e38\u60c5\u51b5\uff0c\u56e0\u6b64\u5efa\u8bae\u80fd\u7528CSP\u6a21\u578b\u5c31\u7528\uff08\u5373channel\uff09\uff0c\u5c3d\u91cf\u4e0d\u4f7f\u7528\u9501\n\n\n\n\n\u793a\u4f8b\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n    \ntime\n\n\n)\n\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ncond\n \n:=\n \nsync\n.\nNewCond\n(\nnew\n(\nsync\n.\nMutex\n))\n\n    \ncondition\n \n:=\n \n0\n\n\n    \n// Consumer\n\n    \ngo\n \nfunc\n()\n \n{\n\n        \nfor\n \n{\n\n            \ncond\n.\nL\n.\nLock\n()\n\n            \nfor\n \ncondition\n \n==\n \n0\n \n{\n\n                \ncond\n.\nWait\n()\n\n            \n}\n\n            \ncondition\n--\n\n            \nfmt\n.\nPrintf\n(\nConsumer: %d\\n\n,\n \ncondition\n)\n\n            \ncond\n.\nSignal\n()\n\n            \ncond\n.\nL\n.\nUnlock\n()\n\n        \n}\n\n    \n}()\n\n\n    \n// Producer\n\n    \nfor\n \n{\n\n        \ntime\n.\nSleep\n(\ntime\n.\nSecond\n)\n\n        \ncond\n.\nL\n.\nLock\n()\n\n        \nfor\n \ncondition\n \n==\n \n3\n \n{\n\n            \ncond\n.\nWait\n()\n\n        \n}\n\n        \ncondition\n++\n\n        \nfmt\n.\nPrintf\n(\nProducer: %d\\n\n,\n \ncondition\n)\n\n        \ncond\n.\nSignal\n()\n\n        \ncond\n.\nL\n.\nUnlock\n()\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nProducer: 1\nConsumer: 0\nProducer: 1\nConsumer: 0\nProducer: 1\nConsumer: 0\nProducer: 1\nConsumer: 0\nProducer: 1\nConsumer: 0\n...\n\n\n\n\n\u6ce8\u610f\uff1a\n\u8fd9\u4e2a\u4f8b\u5b50\u770b\u8fc7\u53bb\u633a\u597d\uff0c\u4f46\u53ea\u80fd\u7528\u4e8e\u5355\u751f\u4ea7\u8005+\u5355\u6d88\u8d39\u8005\uff0c\u540c\u65f6\u5bf9condition\u7684\u5224\u65ad\u53ea\u67090\u548c1\u8fd9\u79cd\u5e03\u5c14\u503c\u72b6\u6001\n\n\n\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5e94\u5f53\u9075\u5faa\u5148channel\u540e\u9501\u7684\u987a\u5e8f\uff0c\u5373channel\u5982\u679c\u80fd\u6ee1\u8db3\u9700\u6c42\uff0c\u5219\u4e0d\u8981\u7528\u9501\uff0c\u5982\u679c\u573a\u666f\u6bd4\u8f83\u590d\u6742\uff0cchannel\u65e0\u6cd5\u6ee1\u8db3\uff0c\u518d\u52a0\u4e0a\u9501\u6765\u63a7\u5236\u3002\u56e0\u4e3achannel\u672c\u8eab\u5c31\u662f\u5148\u8fdb\u5148\u51fa\uff0c\u7b49\u540c\u4e8e\u6d88\u606f\u961f\u5217\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \ntime\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nch\n \n:=\n \nmake\n(\nchan\n \nint\n,\n \n3\n)\n\n    \nv\n \n:=\n \n0\n\n\n    \n// Consumer\n\n    \ngo\n \nfunc\n()\n \n{\n\n        \nfor\n \n{\n\n            \nfmt\n.\nPrintf\n(\nConsumer: %d\\n\n,\n \n-\nch\n)\n\n        \n}\n\n    \n}()\n\n\n    \n// Producer\n\n    \nfor\n \n{\n\n        \nv\n++\n\n        \nfmt\n.\nPrintf\n(\nProducer: %d\\n\n,\n \nv\n)\n\n        \nch\n \n-\n \nv\n\n        \ntime\n.\nSleep\n(\ntime\n.\nSecond\n)\n\n    \n}\n\n\n}\n\n\n\n\n\nProducer: 1\nConsumer: 1\nProducer: 2\nConsumer: 2\nProducer: 3\nConsumer: 3\nProducer: 4\nConsumer: 4\nProducer: 5\nConsumer: 5\n...\n\n\n\n\n\u6761\u4ef6\u53d8\u91cf\u548csync.Cond\u5173\u7cfb\n\n\n\n\n\u4ee5\u4e0b\u5747\u4e3a\u4e2a\u4eba\u7406\u89e3\uff08\u4e0d\u4e00\u5b9a\u51c6\u786e\uff09\n\n\n\u6761\u4ef6\u53d8\u91cf\u662f\u4e00\u79cd\u5e94\u7528\u573a\u666f\uff0c\u4e0d\u662f\u53ea\u6709golang\u624d\u6709\u6761\u4ef6\u53d8\u91cf\uff0c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u3001\u8bed\u8a00\u4e5f\u90fd\u6709\u6761\u4ef6\u53d8\u91cf\n\n\nsync.Cond\u662fgolang\u4e3a\u4e86\u9002\u914d\u8fd9\u79cd\u5e94\u7528\u573a\u666f\u800c\u5f00\u53d1\u51fa\u6765\u7684\u914d\u5957\u7ec4\u4ef6\u3002\u51c6\u786e\u8bf4\u662f\u901a\u8fc7sync.Cond\u914d\u5408sync.Mutex\u6765\u5b9e\u73b0\u6761\u4ef6\u53d8\u91cf\u7684\u5e94\u7528\u573a\u666f\u3002\n\n\n\u56e0\u6b64\uff0csync.Cond\u672c\u8eab\u5e76\u4e0d\u662f\u4ec0\u4e48\u6761\u4ef6\u53d8\u91cf\uff0c\u53ea\u662f\u5b83\u7684\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u4f60\u5b9e\u73b0\u6761\u4ef6\u53d8\u91cf\u7684\u5e94\u7528\uff0c\u6240\u4ee5\u5e72\u8106\u540d\u5b57\u5c31\u53eb\u6761\u4ef6\u53d8\u91cf\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b8c\u5168\u53ef\u4ee5\u4e0d\u7528\u4e8e\u6761\u4ef6\u53d8\u91cf\u800c\u7528\u4e8e\u5176\u4ed6\u73af\u5883\uff0c\u53ea\u662f\u6ca1\u4eba\u8fd9\u4e48\u5e72\u800c\u5df2\uff0c\u800c\u4e14\u4e5f\u4e0d\u662f\u521d\u8877\u3002\n\n\n\u5e76\u53d1\u4e0d\u5bb9\u6613\n\n\n\n\n\u6761\u4ef6\u53d8\u91cf\u53ea\u662f\u89e3\u51b3\u4e86\u4e92\u65a5\u91cf\u7684\u95ee\u9898\uff0c\u6216\u8005\u8bf4\u914d\u5408\u4e92\u65a5\u91cf\u89e3\u51b3\u4e86\u9501\u7684\u95ee\u9898\uff0c\u4f46\u662f\u5e76\u4e0d\u80fd\u5b9e\u73b0\u5e76\u53d1\uff0c\u6216\u8005\u8bf4\u5b9e\u73b0\u5e76\u53d1\u8981\u5bf9\u9501\u6709\u5f88\u597d\u7684\u8bbe\u8ba1\u548c\u63a7\u5236\uff0c\u5426\u5219\u5bb9\u6613\u6b7b\u9501\u6216\u975e\u9884\u671f\u7684\u60c5\u51b5\u51fa\u73b0\u3002\n\n\n\u56e0\u4e3a\u4e0d\u77e5\u9053\u9501\u4ec0\u4e48\u65f6\u5019\u88ab\u975e\u9884\u671f\u7684\u534f\u7a0b\u7ed9\u62a2\u5360\u4e86\uff0c\u5bfc\u81f4\u6b7b\u9501\u6216\u975e\u9884\u671f\u7684\u60c5\u51b5\u53d1\u751f\u3002\n\n\n\u5373\u5982\u679c\u628a\u4e0a\u9762\u539f\u521b\u7684\u5de5\u4f5c\u539f\u7406\u56fe\u91cc\u518d\u52a0\u4e0a\u4e00\u4e2a\u751f\u4ea7\u8005\u6216\u6d88\u8d39\u8005\uff0c\u5c31\u6709\u53ef\u80fd\u5bfc\u81f4\u975e\u9884\u671f\u60c5\u51b5\u53d1\u751f\uff0c\u6bd4\u5982Signal\u65f6\u5019\u9501\u4f1a\u88abWait\u7684\u534f\u7a0b\u7ed9\u83b7\u5f97(\u5047\u8bbeSignal\u540e\u662fUnlock)\uff0c\u4f46\u56e0\u4e3a\u4e0d\u6b621\u4e2a\u5e76\u53d1\uff0c\u7ed3\u679c\u88ab\u53e6\u4e00\u4e2a\u5e76\u53d1\u7684\u534f\u7a0b\u7ed9\u62a2\u5360\u4e86\u9501\uff0c\u800c\u4e14\u662f\u5728\u975e\u540c\u4e00\u4ee3\u7801\u72b6\u6001\u4e0b\uff08\u6bd4\u5982\u88ab\u53e6\u4e00\u4e2a\u534f\u7a0b\u7684\u7b2c\u4e00\u4e2aLock\uff09\n\n\n\u6761\u4ef6\u53d8\u91cf\u56e0\u4e3a\u5728\u4e2d\u95f4\u53c8\u52a0\u4e86\u4e00\u4e2a\u91ca\u653e\u9501\u3001\u83b7\u53d6\u9501\uff0c\u56e0\u6b64\u4f1a\u628a\u60c5\u51b5\u641e\u5f97\u590d\u6742\uff0c\u4e00\u4e2a\u751f\u4ea7\u4e00\u4e2a\u6d88\u8d39\u5c31\u4e0d\u5bb9\u6613\u4e86\uff0c\u5f53\u5927\u4e8e2\u4e2a\u534f\u7a0b\u65f6\u5019\u5c31\u5bb9\u6613\u51fa\u73b0\u5f02\u5e38\u60c5\u51b5\u3002\u4e5f\u5c31\u662f\u8bf4\u80fd\u4e0d\u7528\u6761\u4ef6\u53d8\u91cf\u5c3d\u91cf\u4e0d\u7528\uff0c\u514d\u5f97\u641e\u7684\u592a\u590d\u6742\u4e0d\u5bb9\u6613\u6392\u67e5\u3002\n\n\nchannel\u548csync\u533a\u522b\n\n\n\n\n\u4e00\u822c\u5e76\u53d1\u5c31\u662f\u6307\u591a\u4e2a\u7a0b\u5e8f\u903b\u8f91\u4e0a\u540c\u65f6\u8fd0\u884c\uff0c\u4f46\u80af\u5b9a\u4f1a\u9047\u5230\u4e00\u4e9b\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u4e1c\u897f\u9700\u8981\u505a\u540c\u6b65\uff08\u65e0\u6cd5\u5e76\u884c\uff0c\u53ea\u80fd\u4e32\u884c\uff09\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u6709sync\u548cchannel2\u79cd\u65b9\u5f0f\u5b9e\u73b0\u540c\u6b65\u3002\u53ea\u4e0d\u8fc7channel\u9664\u4e86\u505a\u540c\u6b65\uff0c\u8fd8\u80fd\u7528\u4e8e\u4f20\u9012\u53d8\u91cf\uff08\u5373\u901a\u8fc7\u901a\u4fe1\u6765\u5171\u4eab\u53d8\u91cf\uff09\uff0c\u800csync\u53ea\u6709\u540c\u6b65\u4f5c\u7528\uff08\u901a\u8fc7\u5171\u4eab\u53d8\u91cf\u6765\u901a\u4fe1\uff09", 
            "title": "3.4. \u6761\u4ef6\u53d8\u91cf(Cond)"
        }, 
        {
            "location": "/goroutine/sync_cond/#_1", 
            "text": "\u4e0e\u4e92\u65a5\u91cf\u4e0d\u540c\uff0c\u6761\u4ef6\u53d8\u91cf\u7684\u4f5c\u7528\u5e76\u4e0d\u662f\u4fdd\u8bc1\u5728\u540c\u4e00\u65f6\u523b\u4ec5\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u67d0\u4e00\u4e2a\u5171\u4eab\u6570\u636e\uff0c\u800c\u662f\u5728\u5bf9\u5e94\u7684\u5171\u4eab\u6570\u636e\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u901a\u77e5\u5176\u4ed6\u56e0\u6b64\u800c\u88ab\u963b\u585e\u7684\u7ebf\u7a0b\u3002\u6761\u4ef6\u53d8\u91cf\u603b\u662f\u4e0e\u4e92\u65a5\u91cf\u7ec4\u5408\u4f7f\u7528\u3002\u4e92\u65a5\u91cf\u4e3a\u5171\u4eab\u6570\u636e\u7684\u8bbf\u95ee\u63d0\u4f9b\u4e92\u65a5\u652f\u6301\uff0c\u800c\u6761\u4ef6\u53d8\u91cf\u53ef\u4ee5\u5c31\u5171\u4eab\u6570\u636e\u7684\u72b6\u6001\u7684\u53d8\u5316\u5411\u76f8\u5173\u7ebf\u7a0b\u53d1\u51fa\u901a\u77e5\u3002", 
            "title": "\u7528\u9014"
        }, 
        {
            "location": "/goroutine/sync_cond/#_2", 
            "text": "lock := new(sync.Mutex)\ncond := sync.NewCond(lock)  \u4e5f\u53ef\u4ee5\u5199\u6210\u4e00\u884c  cond := sync.NewCond(new(sync.Mutex))", 
            "title": "\u58f0\u660e"
        }, 
        {
            "location": "/goroutine/sync_cond/#_3", 
            "text": "cond.L.Lock()\ncond.L.Unlock()\ncond.Wait()\ncond.Signal()\ncond.Broadcast()   Note    cond.L.Lock() \u548c cond.L.Unlock() \uff1a\u4e5f\u53ef\u4ee5\u4f7f\u7528 lock.Lock() \u548c lock.Unlock() \uff0c\u5b8c\u5168\u4e00\u6837\uff0c\u56e0\u4e3a\u662f\u6307\u9488\u8f6c\u9012    cond.Wait() \uff1aUnlock()- \u963b\u585e\u7b49\u5f85\u901a\u77e5(\u5373\u7b49\u5f85Signal()\u6216Broadcast()\u7684\u901a\u77e5)- \u6536\u5230\u901a\u77e5 - Lock()    cond.Signal() \uff1a\u901a\u77e5\u4e00\u4e2aWait()\u4e86\u7684\uff0c\u82e5\u6ca1\u6709Wait()\uff0c\u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002 Signal()\u901a\u77e5\u7684\u987a\u5e8f\u662f\u6839\u636e\u539f\u6765\u52a0\u5165\u901a\u77e5\u5217\u8868(Wait())\u7684\u5148\u5165\u5148\u51fa    cond.Broadcast() : \u901a\u77e5\u6240\u6709Wait()\u4e86\u7684\uff0c\u82e5\u6ca1\u6709Wait()\uff0c\u4e5f\u4e0d\u4f1a\u62a5\u9519", 
            "title": "\u65b9\u6cd5"
        }, 
        {
            "location": "/goroutine/sync_cond/#_4", 
            "text": "\b\u4e0b\u9762\u56fe1-\u56fe3\u6765\u81ea\"\u90dd\u6797\"\u7684go\u8bed\u8a00\u4e66\u7c4d  \u6ca1\u7528\u6761\u4ef6\u53d8\u91cf\u65f6\u5019:   \u56fe1\uff1a\u751f\u4ea7\u8005\u7ebf\u7a0b\u6dfb\u52a0\u6570\u636e\u5e93\u7684\u6d41\u7a0b  \u56fe1\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a\u5f53\u961f\u5217\u603b\u662f\u6ee1\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u4e0d\u505c\u7684\u5faa\u73af\u83b7\u53d6\u961f\u5217\u72b6\u6001\uff0c\u56e0\u6b64\u4e5f\u4e0d\u4f1a\u91ca\u653e\u9501\uff0c\u800c\u6d88\u8d39\u8005\u5c31\u65e0\u6cd5\u83b7\u5f97\u9501\u6765\u53d6\u8d70\u961f\u5217\u4e2d\u7684\u6570\u636e\u3002\u5982\u679c\u961f\u5217\u4e2d\u7684\u6570\u636e\u65e0\u6cd5\u53d6\u8d70\uff0c\u90a3\u4e48\u961f\u5217\u5c31\u6c38\u8fdc\u90fd\u662f\u6ee1\u7684\uff0c\u5bfc\u81f4\u4e86\u6b7b\u9501\u3002  \u4f7f\u7528\u6761\u4ef6\u53d8\u91cf\u540e\uff0c\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1a   \u56fe2\uff1a\u751f\u4ea7\u8005\u7ebf\u7a0b\u6dfb\u52a0\u6570\u636e\u5e93\u7684\u6d41\u7a0b  \u56fe2\u89e3\u51b3\u4e86\u56fe1\u7684\u95ee\u9898\uff1a\u5f53\u961f\u5217\u6ee1\u7684\u65f6\u5019\uff0c\u5219\u5148\u89e3\u9501\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6b7b\u9501\uff08\u91ca\u653e\u9501\u7ed9\u5176\u4ed6\u4eba\u7528\uff09  \u9644\uff1a\u548c\u56fe2\u5339\u914d\u7684\u6d88\u8d39\u8005\u7ebf\u7a0b   \u56fe3\uff1a\u6d88\u8d39\u8005\u7ebf\u7a0b", 
            "title": "\u5de5\u4f5c\u539f\u7406(\u6458\u53d6)"
        }, 
        {
            "location": "/goroutine/sync_cond/#_5", 
            "text": "\u62a2\u5360\u9501\u540e\uff0c\u5224\u65ad\u81ea\u5df1\u662f\u5426\u6ee1\u8db3\u5904\u7406  \u6761\u4ef6 \uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u5219\u5148  \u91ca\u653e\u9501\u7ed9\u522b\u4eba\u7528 \uff0c\u7136\u540e\u81ea\u5df1  \u963b\u585e \uff0c\u7b49\u522b\u4eba\u4e3b\u52a8  \u901a\u77e5\u81ea\u5df1 (\u80af\u5b9a\u662f\u522b\u4eba\u7684\u4e8b\u60c5\u505a\u5b8c\u4e86\u624d\u4f1a\u901a\u77e5\u81ea\u5df1)\uff0c\u5c31\u89e3\u9664\u963b\u585e\uff0c\u7136\u540e\u518d\u53bb  \u83b7\u5f97\u9501   Error  \u8be5\u56fe\u903b\u8f91\u4e5f\u8bb8\u4e00\u5f00\u59cb\u770b\u8fc7\u53bb\u6ca1\u5565\u95ee\u9898\uff0c\u4f46\u662f\u5b9e\u9645\u6267\u884c\u8d77\u6765\uff0c\u5c31\u4f1a\u6709\u4e00\u4e9b\u5f02\u5e38\u60c5\u51b5\uff0c\u56e0\u6b64\u5efa\u8bae\u80fd\u7528CSP\u6a21\u578b\u5c31\u7528\uff08\u5373channel\uff09\uff0c\u5c3d\u91cf\u4e0d\u4f7f\u7528\u9501", 
            "title": "\u5de5\u4f5c\u539f\u7406(\u539f\u521b)"
        }, 
        {
            "location": "/goroutine/sync_cond/#_6", 
            "text": "package   main  import   ( \n     fmt \n     sync \n     time  )  func   main ()   { \n     cond   :=   sync . NewCond ( new ( sync . Mutex )) \n     condition   :=   0 \n\n     // Consumer \n     go   func ()   { \n         for   { \n             cond . L . Lock () \n             for   condition   ==   0   { \n                 cond . Wait () \n             } \n             condition -- \n             fmt . Printf ( Consumer: %d\\n ,   condition ) \n             cond . Signal () \n             cond . L . Unlock () \n         } \n     }() \n\n     // Producer \n     for   { \n         time . Sleep ( time . Second ) \n         cond . L . Lock () \n         for   condition   ==   3   { \n             cond . Wait () \n         } \n         condition ++ \n         fmt . Printf ( Producer: %d\\n ,   condition ) \n         cond . Signal () \n         cond . L . Unlock () \n     }  }   \u8f93\u51fa  Producer: 1\nConsumer: 0\nProducer: 1\nConsumer: 0\nProducer: 1\nConsumer: 0\nProducer: 1\nConsumer: 0\nProducer: 1\nConsumer: 0\n...  \u6ce8\u610f\uff1a \u8fd9\u4e2a\u4f8b\u5b50\u770b\u8fc7\u53bb\u633a\u597d\uff0c\u4f46\u53ea\u80fd\u7528\u4e8e\u5355\u751f\u4ea7\u8005+\u5355\u6d88\u8d39\u8005\uff0c\u540c\u65f6\u5bf9condition\u7684\u5224\u65ad\u53ea\u67090\u548c1\u8fd9\u79cd\u5e03\u5c14\u503c\u72b6\u6001  \u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5e94\u5f53\u9075\u5faa\u5148channel\u540e\u9501\u7684\u987a\u5e8f\uff0c\u5373channel\u5982\u679c\u80fd\u6ee1\u8db3\u9700\u6c42\uff0c\u5219\u4e0d\u8981\u7528\u9501\uff0c\u5982\u679c\u573a\u666f\u6bd4\u8f83\u590d\u6742\uff0cchannel\u65e0\u6cd5\u6ee1\u8db3\uff0c\u518d\u52a0\u4e0a\u9501\u6765\u63a7\u5236\u3002\u56e0\u4e3achannel\u672c\u8eab\u5c31\u662f\u5148\u8fdb\u5148\u51fa\uff0c\u7b49\u540c\u4e8e\u6d88\u606f\u961f\u5217  package   main  import   ( \n     fmt \n     time  )  func   main ()   { \n     ch   :=   make ( chan   int ,   3 ) \n     v   :=   0 \n\n     // Consumer \n     go   func ()   { \n         for   { \n             fmt . Printf ( Consumer: %d\\n ,   - ch ) \n         } \n     }() \n\n     // Producer \n     for   { \n         v ++ \n         fmt . Printf ( Producer: %d\\n ,   v ) \n         ch   -   v \n         time . Sleep ( time . Second ) \n     }  }   Producer: 1\nConsumer: 1\nProducer: 2\nConsumer: 2\nProducer: 3\nConsumer: 3\nProducer: 4\nConsumer: 4\nProducer: 5\nConsumer: 5\n...", 
            "title": "\u793a\u4f8b"
        }, 
        {
            "location": "/goroutine/sync_cond/#synccond", 
            "text": "\u4ee5\u4e0b\u5747\u4e3a\u4e2a\u4eba\u7406\u89e3\uff08\u4e0d\u4e00\u5b9a\u51c6\u786e\uff09  \u6761\u4ef6\u53d8\u91cf\u662f\u4e00\u79cd\u5e94\u7528\u573a\u666f\uff0c\u4e0d\u662f\u53ea\u6709golang\u624d\u6709\u6761\u4ef6\u53d8\u91cf\uff0c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u3001\u8bed\u8a00\u4e5f\u90fd\u6709\u6761\u4ef6\u53d8\u91cf  sync.Cond\u662fgolang\u4e3a\u4e86\u9002\u914d\u8fd9\u79cd\u5e94\u7528\u573a\u666f\u800c\u5f00\u53d1\u51fa\u6765\u7684\u914d\u5957\u7ec4\u4ef6\u3002\u51c6\u786e\u8bf4\u662f\u901a\u8fc7sync.Cond\u914d\u5408sync.Mutex\u6765\u5b9e\u73b0\u6761\u4ef6\u53d8\u91cf\u7684\u5e94\u7528\u573a\u666f\u3002  \u56e0\u6b64\uff0csync.Cond\u672c\u8eab\u5e76\u4e0d\u662f\u4ec0\u4e48\u6761\u4ef6\u53d8\u91cf\uff0c\u53ea\u662f\u5b83\u7684\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u4f60\u5b9e\u73b0\u6761\u4ef6\u53d8\u91cf\u7684\u5e94\u7528\uff0c\u6240\u4ee5\u5e72\u8106\u540d\u5b57\u5c31\u53eb\u6761\u4ef6\u53d8\u91cf\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b8c\u5168\u53ef\u4ee5\u4e0d\u7528\u4e8e\u6761\u4ef6\u53d8\u91cf\u800c\u7528\u4e8e\u5176\u4ed6\u73af\u5883\uff0c\u53ea\u662f\u6ca1\u4eba\u8fd9\u4e48\u5e72\u800c\u5df2\uff0c\u800c\u4e14\u4e5f\u4e0d\u662f\u521d\u8877\u3002", 
            "title": "\u6761\u4ef6\u53d8\u91cf\u548csync.Cond\u5173\u7cfb"
        }, 
        {
            "location": "/goroutine/sync_cond/#_7", 
            "text": "\u6761\u4ef6\u53d8\u91cf\u53ea\u662f\u89e3\u51b3\u4e86\u4e92\u65a5\u91cf\u7684\u95ee\u9898\uff0c\u6216\u8005\u8bf4\u914d\u5408\u4e92\u65a5\u91cf\u89e3\u51b3\u4e86\u9501\u7684\u95ee\u9898\uff0c\u4f46\u662f\u5e76\u4e0d\u80fd\u5b9e\u73b0\u5e76\u53d1\uff0c\u6216\u8005\u8bf4\u5b9e\u73b0\u5e76\u53d1\u8981\u5bf9\u9501\u6709\u5f88\u597d\u7684\u8bbe\u8ba1\u548c\u63a7\u5236\uff0c\u5426\u5219\u5bb9\u6613\u6b7b\u9501\u6216\u975e\u9884\u671f\u7684\u60c5\u51b5\u51fa\u73b0\u3002  \u56e0\u4e3a\u4e0d\u77e5\u9053\u9501\u4ec0\u4e48\u65f6\u5019\u88ab\u975e\u9884\u671f\u7684\u534f\u7a0b\u7ed9\u62a2\u5360\u4e86\uff0c\u5bfc\u81f4\u6b7b\u9501\u6216\u975e\u9884\u671f\u7684\u60c5\u51b5\u53d1\u751f\u3002  \u5373\u5982\u679c\u628a\u4e0a\u9762\u539f\u521b\u7684\u5de5\u4f5c\u539f\u7406\u56fe\u91cc\u518d\u52a0\u4e0a\u4e00\u4e2a\u751f\u4ea7\u8005\u6216\u6d88\u8d39\u8005\uff0c\u5c31\u6709\u53ef\u80fd\u5bfc\u81f4\u975e\u9884\u671f\u60c5\u51b5\u53d1\u751f\uff0c\u6bd4\u5982Signal\u65f6\u5019\u9501\u4f1a\u88abWait\u7684\u534f\u7a0b\u7ed9\u83b7\u5f97(\u5047\u8bbeSignal\u540e\u662fUnlock)\uff0c\u4f46\u56e0\u4e3a\u4e0d\u6b621\u4e2a\u5e76\u53d1\uff0c\u7ed3\u679c\u88ab\u53e6\u4e00\u4e2a\u5e76\u53d1\u7684\u534f\u7a0b\u7ed9\u62a2\u5360\u4e86\u9501\uff0c\u800c\u4e14\u662f\u5728\u975e\u540c\u4e00\u4ee3\u7801\u72b6\u6001\u4e0b\uff08\u6bd4\u5982\u88ab\u53e6\u4e00\u4e2a\u534f\u7a0b\u7684\u7b2c\u4e00\u4e2aLock\uff09  \u6761\u4ef6\u53d8\u91cf\u56e0\u4e3a\u5728\u4e2d\u95f4\u53c8\u52a0\u4e86\u4e00\u4e2a\u91ca\u653e\u9501\u3001\u83b7\u53d6\u9501\uff0c\u56e0\u6b64\u4f1a\u628a\u60c5\u51b5\u641e\u5f97\u590d\u6742\uff0c\u4e00\u4e2a\u751f\u4ea7\u4e00\u4e2a\u6d88\u8d39\u5c31\u4e0d\u5bb9\u6613\u4e86\uff0c\u5f53\u5927\u4e8e2\u4e2a\u534f\u7a0b\u65f6\u5019\u5c31\u5bb9\u6613\u51fa\u73b0\u5f02\u5e38\u60c5\u51b5\u3002\u4e5f\u5c31\u662f\u8bf4\u80fd\u4e0d\u7528\u6761\u4ef6\u53d8\u91cf\u5c3d\u91cf\u4e0d\u7528\uff0c\u514d\u5f97\u641e\u7684\u592a\u590d\u6742\u4e0d\u5bb9\u6613\u6392\u67e5\u3002", 
            "title": "\u5e76\u53d1\u4e0d\u5bb9\u6613"
        }, 
        {
            "location": "/goroutine/sync_cond/#channelsync", 
            "text": "\u4e00\u822c\u5e76\u53d1\u5c31\u662f\u6307\u591a\u4e2a\u7a0b\u5e8f\u903b\u8f91\u4e0a\u540c\u65f6\u8fd0\u884c\uff0c\u4f46\u80af\u5b9a\u4f1a\u9047\u5230\u4e00\u4e9b\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u4e1c\u897f\u9700\u8981\u505a\u540c\u6b65\uff08\u65e0\u6cd5\u5e76\u884c\uff0c\u53ea\u80fd\u4e32\u884c\uff09\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u6709sync\u548cchannel2\u79cd\u65b9\u5f0f\u5b9e\u73b0\u540c\u6b65\u3002\u53ea\u4e0d\u8fc7channel\u9664\u4e86\u505a\u540c\u6b65\uff0c\u8fd8\u80fd\u7528\u4e8e\u4f20\u9012\u53d8\u91cf\uff08\u5373\u901a\u8fc7\u901a\u4fe1\u6765\u5171\u4eab\u53d8\u91cf\uff09\uff0c\u800csync\u53ea\u6709\u540c\u6b65\u4f5c\u7528\uff08\u901a\u8fc7\u5171\u4eab\u53d8\u91cf\u6765\u901a\u4fe1\uff09", 
            "title": "channel\u548csync\u533a\u522b"
        }, 
        {
            "location": "/goroutine/sync_pool/", 
            "text": "\u5173\u4e8e\u5806\u548c\u6808\u7684\u57fa\u7840\n\n\n\n\n\u4e0b\u9762\u5185\u5bb9\u6458\u81ea \nhttp://blog.cyeam.com/golang/2017/02/08/go-optimize-slice-pool\n\n\n\u7a0b\u5e8f\u4f1a\u4ece\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u5757\u5185\u5b58\uff0c\u800c\u8fd9\u5757\u5185\u5b58\u4e5f\u4f1a\u88ab\u5206\u6210\u5806\u548c\u6808\u3002\u6808\u53ef\u4ee5\u7b80\u5355\u5f97\u7406\u89e3\u6210\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u5185\u90e8\u7533\u8bf7\u5230\u7684\u5185\u5b58\uff0c\u5b83\u4eec\u4f1a\u968f\u7740\u51fd\u6570\u7684\u8fd4\u56de\u628a\u5185\u5b58\u8fd8\u7ed9\u7cfb\u7edf\u3002\n\n\nfunc\n \nF\n()\n \n{\n\n    \ntemp\n \n:=\n \nmake\n([]\nint\n,\n \n0\n,\n \n20\n)\n\n    \n...\n\n\n}\n\n\n\n\n\n\u7c7b\u4f3c\u4e8e\u4e0a\u9762\u4ee3\u7801\u91cc\u9762\u7684temp\u53d8\u91cf\uff0c\u53ea\u662f\u5185\u51fd\u6570\u5185\u90e8\u7533\u8bf7\u7684\u4e34\u65f6\u53d8\u91cf\uff0c\u5e76\u4e0d\u4f1a\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\uff0c\u5b83\u5c31\u662f\u88ab\u7f16\u8bd1\u5668\u7533\u8bf7\u5230\u6808\u91cc\u9762\u3002\n\u7533\u8bf7\u5230\u6808\u5185\u5b58\u597d\u5904\uff1a\u51fd\u6570\u8fd4\u56de\u76f4\u63a5\u91ca\u653e\uff0c\u4e0d\u4f1a\u5f15\u8d77\u5783\u573e\u56de\u6536\uff0c\u5bf9\u6027\u80fd\u6ca1\u6709\u5f71\u54cd\u3002\n\n\nfunc\n \nF\n()\n \n[]\nint\n{\n\n    \na\n \n:=\n \nmake\n([]\nint\n,\n \n0\n,\n \n20\n)\n\n    \nreturn\n \na\n\n\n}\n\n\n\n\n\n\u800c\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u7533\u8bf7\u7684\u4ee3\u7801\u4e00\u6a21\u4e00\u6837\uff0c\u4f46\u662f\u7533\u8bf7\u540e\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\u4e86\uff0c\u7f16\u8bd1\u5668\u4f1a\u8ba4\u4e3a\u53d8\u91cf\u4e4b\u540e\u8fd8\u4f1a\u88ab\u4f7f\u7528\uff0c\u5f53\u51fd\u6570\u8fd4\u56de\u4e4b\u540e\u5e76\u4e0d\u4f1a\u5c06\u5176\u5185\u5b58\u5f52\u8fd8\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u88ab\u7533\u8bf7\u5230\u5806\u4e0a\u9762\u4e86\u3002\n\u7533\u8bf7\u5230\u5806\u4e0a\u9762\u7684\u5185\u5b58\u624d\u4f1a\u5f15\u8d77\u5783\u573e\u56de\u6536\u3002\n\n\nfunc\n \nF\n()\n \n{\n\n    \na\n \n:=\n \nmake\n([]\nint\n,\n \n0\n,\n \n20\n)\n\n    \nb\n \n:=\n \nmake\n([]\nint\n,\n \n0\n,\n \n20000\n)\n\n    \nl\n \n:=\n \n20\n\n    \nc\n \n:=\n \nmake\n([]\nint\n,\n \n0\n,\n \nl\n)\n\n\n}\n\n\n\n\n\na\u548cb\u4ee3\u7801\u4e00\u6837\uff0c\u5c31\u662f\u7533\u8bf7\u7684\u7a7a\u95f4\u4e0d\u4e00\u6837\u5927\uff0c\u4f46\u662f\u5b83\u4eec\u4e24\u4e2a\u7684\u547d\u8fd0\u662f\u622a\u7136\u76f8\u53cd\u7684\u3002a\u524d\u9762\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff0c\u4f1a\u7533\u8bf7\u5230\u6808\u4e0a\u9762\uff0c\u800cb\uff0c\u7531\u4e8e\u7533\u8bf7\u7684\u5185\u5b58\u8f83\u5927\uff0c\n\u7f16\u8bd1\u5668\u4f1a\u628a\u8fd9\u79cd\u7533\u8bf7\u5185\u5b58\u8f83\u5927\u7684\u53d8\u91cf\u8f6c\u79fb\u5230\u5806\u4e0a\u9762\u3002\u5373\u4f7f\u662f\u4e34\u65f6\u53d8\u91cf\uff0c\u7533\u8bf7\u8fc7\u5927\u4e5f\u4f1a\u5728\u5806\u4e0a\u9762\u7533\u8bf7\u3002\n\n\n\u800cc\uff0c\u5bf9\u6211\u4eec\u800c\u8a00\u5176\u542b\u4e49\u548ca\u662f\u4e00\u81f4\u7684\uff0c\n\u4f46\u662f\u7f16\u8bd1\u5668\u5bf9\u4e8e\u8fd9\u79cd\u4e0d\u5b9a\u957f\u5ea6\u7684\u7533\u8bf7\u65b9\u5f0f\uff0c\u4e5f\u4f1a\u5728\u5806\u4e0a\u9762\u7533\u8bf7\uff0c\u5373\u4f7f\u7533\u8bf7\u7684\u957f\u5ea6\u5f88\u77ed\u3002\n\n\n\u5b9e\u9645\u9879\u76ee\u57fa\u672c\u90fd\u662f\u901a\u8fc7c := make([]int, 0, l)\u6765\u7533\u8bf7\u5185\u5b58\uff0c\u957f\u5ea6\u90fd\u662f\u4e0d\u786e\u5b9a\u7684\u3002\u81ea\u7136\u800c\u7136\u8fd9\u4e9b\u53d8\u91cf\u90fd\u4f1a\u7533\u8bf7\u5230\u5806\u4e0a\u9762\u4e86\u3002Golang\u4f7f\u7528\u7684\u5783\u573e\u56de\u6536\u7b97\u6cd5\u662f\u300e\u6807\u8bb0\u2014\u2014\u6e05\u9664\u300f\u3002\u7b80\u5355\u5f97\u8bf4\uff0c\u5c31\u662f\u7a0b\u5e8f\u8981\u4ece\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u5757\u6bd4\u8f83\u5927\u7684\u5185\u5b58\uff0c\u5185\u5b58\u5206\u6210\u5c0f\u5757\uff0c\u901a\u8fc7\u94fe\u8868\u94fe\u63a5\u3002\u6bcf\u6b21\u7a0b\u5e8f\u7533\u8bf7\u5185\u5b58\uff0c\u5c31\u4ece\u94fe\u8868\u4e0a\u9762\u904d\u5386\u6bcf\u4e00\u5c0f\u5757\uff0c\u627e\u5230\u7b26\u5408\u7684\u5c31\u8fd4\u56de\u5176\u5730\u5740\uff0c\u6ca1\u6709\u5408\u9002\u7684\u5c31\u4ece\u64cd\u4f5c\u7cfb\u7edf\u518d\u7533\u8bf7\u3002\u5982\u679c\u7533\u8bf7\u5185\u5b58\u6b21\u6570\u8f83\u591a\uff0c\u800c\u4e14\u7533\u8bf7\u7684\u5927\u5c0f\u4e0d\u56fa\u5b9a\uff0c\u5c31\u4f1a\u5f15\u8d77\u5185\u5b58\u788e\u7247\u5316\u7684\u95ee\u9898\u3002\u7533\u8bf7\u7684\u5806\u5185\u5b58\u5e76\u6ca1\u6709\u7528\u5b8c\uff0c\u4f46\u662f\u7528\u6237\u7533\u8bf7\u7684\u5185\u5b58\u7684\u65f6\u5019\u5374\u6ca1\u6709\u5408\u9002\u7684\u7a7a\u95f4\u63d0\u4f9b\u3002\u8fd9\u6837\u4f1a\u904d\u5386\u6574\u4e2a\u94fe\u8868\uff0c\u8fd8\u4f1a\u7ee7\u7eed\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u5185\u5b58\u3002\u8fd9\u5c31\u80fd\u89e3\u91ca\u6211\u4e00\u5f00\u59cb\u63cf\u8ff0\u7684\u95ee\u9898\uff0c\n\u7533\u8bf7\u4e00\u5757\u5185\u5b58\u53d8\u6210\u4e86\u6162\u8bed\u53e5\u3002\n\n\n\u7533\u8bf7\u5185\u5b58\u53d8\u6210\u4e86\u6162\u8bed\u53e5\uff0c\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528\u4e34\u65f6\u5bf9\u8c61\u6c60\n\n\n\u4f7f\u7528\n\n\n\n\n\n\n\u8be5\u4f8b\u5b50\u6458\u81eahttps://\nwww.jianshu.com/p/2bd41a8f2254\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n    \ntime\n\n\n)\n\n\n\n// \u4e00\u4e2a[]byte\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]byte\n\n\nvar\n \nbytePool\n \n=\n \nsync\n.\nPool\n{\n\n    \nNew\n:\n \nfunc\n()\n \ninterface\n{}\n \n{\n\n        \nb\n \n:=\n \nmake\n([]\nbyte\n,\n \n1024\n)\n\n        \nreturn\n \nb\n\n    \n},\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \ntime\n.\nNow\n().\nUnix\n()\n\n    \n// \u4e0d\u4f7f\u7528\u5bf9\u8c61\u6c60\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n1000000000\n;\n \ni\n++\n \n{\n\n        \nobj\n \n:=\n \nmake\n([]\nbyte\n,\n \n1024\n)\n\n        \n_\n \n=\n \nobj\n\n    \n}\n\n    \nb\n \n:=\n \ntime\n.\nNow\n().\nUnix\n()\n\n    \n// \u4f7f\u7528\u5bf9\u8c61\u6c60\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n1000000000\n;\n \ni\n++\n \n{\n\n        \nobj\n \n:=\n \nbytePool\n.\nGet\n().(\n*\n[]\nbyte\n)\n\n        \nbytePool\n.\nPut\n(\nobj\n)\n\n    \n}\n\n    \nc\n \n:=\n \ntime\n.\nNow\n().\nUnix\n()\n\n    \nfmt\n.\nPrintln\n(\nwithout pool \n,\n \nb\n-\na\n,\n \ns\n)\n\n    \nfmt\n.\nPrintln\n(\nwith    pool \n,\n \nc\n-\nb\n,\n \ns\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nwithout pool  20 s\nwith    pool  15 s\n\n\n\n\n\u8be6\u89e3\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n\n)\n\n\n\n// \u4e00\u4e2a[]byte\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]byte\n\n\nvar\n \nbytePool\n \n=\n \nsync\n.\nPool\n{\n\n    \nNew\n:\n \nfunc\n()\n \ninterface\n{}\n \n{\n\n        \nb\n \n:=\n \nmake\n([]\nbyte\n,\n \n8\n)\n\n        \nreturn\n \nb\n\n    \n},\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nbytePool\n)\n\n    \nfmt\n.\nPrintf\n(\n%+v\\n\n,\n \nbytePool\n)\n\n\n    \nobj\n \n:=\n \nbytePool\n.\nGet\n().(\n*\n[]\nbyte\n)\n\n\n    \nfmt\n.\nPrintf\n(\n%T\\n\n,\n \nobj\n)\n\n    \nfmt\n.\nPrintf\n(\n%v\\n\n,\n \nobj\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nsync.Pool\n{noCopy:{} local:\nnil\n localSize:0 New:0x1090180}\n*[]uint8\n\n[0 0 0 0 0 0 0 0]\n\n\n\n\n\u4e3a\u4ec0\u4e48\u8981\u7528\u7c7b\u578b\u65ad\u8a00\n\n\n\n\n\u4e0b\u9762\u901a\u8fc73\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u4e3a\u4ec0\u4e48\u8981\u7528\u7c7b\u578b\u65ad\u8a00\n(*int)\n\n\n\u9996\u5148\uff0c\u8fd9\u79cd\u7528\u6cd5\u662f\u4e0d\u5bf9\u7684\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \ne\n \nfunc\n()\n \ninterface\n{}\n\n\n}\n\n\n\nvar\n \nfoo\n \n=\n \nMyStruct\n{\n\n    \ne\n:\n \nfunc\n()\n \ninterface\n{}\n \n{\n\n        \ni\n \n:=\n \n1\n\n        \nreturn\n \ni\n\n    \n},\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintf\n(\nfoo: %T\\n\n,\n \nfoo\n)\n\n    \nfmt\n.\nPrintf\n(\nfoo: %+v\\n\n,\n \nfoo\n)\n\n\n    \na\n \n:=\n \nfoo\n.\ne\n()\n\n    \nfmt\n.\nPrintf\n(\na: %T\\n\n,\n \na\n)\n\n    \nfmt\n.\nPrintf\n(\na: %+v\\n\n,\n \na\n)\n\n\n    \na\n \n=\n \n2\n\n    \nfmt\n.\nPrintf\n(\na: %T\\n\n,\n \na\n)\n\n    \nfmt\n.\nPrintf\n(\na: %+v\\n\n,\n \na\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nfoo: main.MyStruct\nfoo: {e:0x10901f0}\na: *int\na: 0xc4200160b0\na: int\na: 2\n\n\n\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u6700\u540ea\u7684\u7c7b\u578b\u662fint\uff0c\u800c\u4e0d\u662f\u671f\u671b\u4e2d\u7684*int\u3002\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\uff0c\u56e0\u4e3aa\u662f\u4e00\u4e2a\u7a7a\u63a5\u53e3interface{}\uff0c\u56e0\u6b64a\u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u7c7b\u578b\u7684\u503c\n\n\n\u90a3\u4e48\u6539\u9020\u4e00\u4e0b\uff08\u8fd9\u6837\u4e5f\u662f\u9519\u7684\uff09\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \ne\n \nfunc\n()\n \ninterface\n{}\n\n\n}\n\n\n\nvar\n \nfoo\n \n=\n \nMyStruct\n{\n\n    \ne\n:\n \nfunc\n()\n \ninterface\n{}\n \n{\n\n        \ni\n \n:=\n \n1\n\n        \nreturn\n \ni\n\n    \n},\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintf\n(\nfoo: %T\\n\n,\n \nfoo\n)\n\n    \nfmt\n.\nPrintf\n(\nfoo: %+v\\n\n,\n \nfoo\n)\n\n\n    \na\n \n:=\n \nfoo\n.\ne\n()\n\n    \nfmt\n.\nPrintf\n(\na: %T\\n\n,\n \na\n)\n\n    \nfmt\n.\nPrintf\n(\na: %+v\\n\n,\n \na\n)\n\n\n    \n*\na\n \n=\n \n2\n\n    \nfmt\n.\nPrintf\n(\na: %T\\n\n,\n \na\n)\n\n    \nfmt\n.\nPrintf\n(\na: %+v\\n\n,\n \na\n)\n\n\n}\n\n\n\n\n\n\u62a5\u9519\n\n\ninvalid indirect of a (type interface {})\n\n\n\n\n\u56e0\u4e3a\u63a5\u53e3\u7c7b\u578b\uff08a\u662f\u7a7a\u63a5\u53e3\uff09\u662f\u4e0d\u80fd\u4f7f\u7528\n*a\n\u6765\u505a\u8d4b\u503c\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u4f7f\u7528\u7c7b\u578b\u65ad\u8a00\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \ne\n \nfunc\n()\n \ninterface\n{}\n\n\n}\n\n\n\nvar\n \nfoo\n \n=\n \nMyStruct\n{\n\n    \ne\n:\n \nfunc\n()\n \ninterface\n{}\n \n{\n\n        \ni\n \n:=\n \n1\n\n        \nreturn\n \ni\n\n    \n},\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintf\n(\nfoo: %T\\n\n,\n \nfoo\n)\n\n    \nfmt\n.\nPrintf\n(\nfoo: %+v\\n\n,\n \nfoo\n)\n\n\n    \na\n \n:=\n \nfoo\n.\ne\n().(\n*\nint\n)\n\n    \nfmt\n.\nPrintf\n(\na: %T\\n\n,\n \na\n)\n\n    \nfmt\n.\nPrintf\n(\na: %+v\\n\n,\n \na\n)\n\n\n    \n*\na\n \n=\n \n2\n\n    \nfmt\n.\nPrintf\n(\na: %T\\n\n,\n \na\n)\n\n    \nfmt\n.\nPrintf\n(\na: %+v\\n\n,\n \na\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nfoo: main.MyStruct\nfoo: {e:0x1090210}\na: *int\na: 0xc4200160b0\na: *int\na: 0xc4200160b0\n\n\n\n\n\u8fd9\u6837\u624d\u662f\u9884\u671f\u7684\uff0c\u5373a\u4f9d\u7136\u4e3a\u6307\u9488\n\n\npool\u662f\u98de\u673a\uff0c\u8d77\u6b65\u52a0\u901f\u4e0d\u5982\u8dd1\u8f66\n\n\n\n\n\u53ea\u6709\u5f53\u6bcf\u4e2a\u5bf9\u8c61\u5360\u7528\u5185\u5b58\u8f83\u5927\u65f6\u5019\uff0c\u7528pool\u624d\u4f1a\u6539\u5584\u6027\u80fd\n\n\n\u5bf9\u6bd41\uff08\u8d77\u6b65\u9636\u6bb5\uff09:\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n    \ntime\n\n\n)\n\n\n\n// \u4e00\u4e2a[]byte\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]byte\n\n\nvar\n \nbytePool\n \n=\n \nsync\n.\nPool\n{\n\n    \nNew\n:\n \nfunc\n()\n \ninterface\n{}\n \n{\n\n\n        \nb\n \n:=\n \nmake\n([]\nbyte\n,\n \n1\n)\n\n\n        \nreturn\n \nb\n\n    \n},\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \ntime\n.\nNow\n().\nUnix\n()\n\n    \n// \u4e0d\u4f7f\u7528\u5bf9\u8c61\u6c60\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n1000000000\n;\n \ni\n++\n \n{\n\n        \nobj\n \n:=\n \nmake\n([]\nbyte\n,\n \n1\n)\n\n        \n_\n \n=\n \nobj\n\n    \n}\n\n    \nb\n \n:=\n \ntime\n.\nNow\n().\nUnix\n()\n\n    \n// \u4f7f\u7528\u5bf9\u8c61\u6c60\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n1000000000\n;\n \ni\n++\n \n{\n\n        \nobj\n \n:=\n \nbytePool\n.\nGet\n().(\n*\n[]\nbyte\n)\n\n        \nbytePool\n.\nPut\n(\nobj\n)\n\n    \n}\n\n    \nc\n \n:=\n \ntime\n.\nNow\n().\nUnix\n()\n\n    \nfmt\n.\nPrintln\n(\nwithout pool \n,\n \nb\n-\na\n,\n \ns\n)\n\n    \nfmt\n.\nPrintln\n(\nwith    pool \n,\n \nc\n-\nb\n,\n \ns\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nwithout pool  0 s\nwith    pool  17 s\n\n\n\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u5f53[]byte\u53ea\u67091\u4e2a\u5143\u7d20\u65f6\u5019\uff0c\u7528pool\b\u6027\u80fd\u53cd\u800c\u66f4\u5dee\n\n\n\u5bf9\u6bd42\uff08\u8ffd\u8d76\u9636\u6bb5\uff09:\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n    \ntime\n\n\n)\n\n\n\n// \u4e00\u4e2a[]byte\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]byte\n\n\nvar\n \nbytePool\n \n=\n \nsync\n.\nPool\n{\n\n    \nNew\n:\n \nfunc\n()\n \ninterface\n{}\n \n{\n\n\n        \nb\n \n:=\n \nmake\n([]\nbyte\n,\n \n800\n)\n\n\n        \nreturn\n \nb\n\n    \n},\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \ntime\n.\nNow\n().\nUnix\n()\n\n    \n// \u4e0d\u4f7f\u7528\u5bf9\u8c61\u6c60\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n1000000000\n;\n \ni\n++\n \n{\n\n        \nobj\n \n:=\n \nmake\n([]\nbyte\n,\n \n800\n)\n\n        \n_\n \n=\n \nobj\n\n    \n}\n\n    \nb\n \n:=\n \ntime\n.\nNow\n().\nUnix\n()\n\n    \n// \u4f7f\u7528\u5bf9\u8c61\u6c60\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n1000000000\n;\n \ni\n++\n \n{\n\n        \nobj\n \n:=\n \nbytePool\n.\nGet\n().(\n*\n[]\nbyte\n)\n\n        \nbytePool\n.\nPut\n(\nobj\n)\n\n    \n}\n\n    \nc\n \n:=\n \ntime\n.\nNow\n().\nUnix\n()\n\n    \nfmt\n.\nPrintln\n(\nwithout pool \n,\n \nb\n-\na\n,\n \ns\n)\n\n    \nfmt\n.\nPrintln\n(\nwith    pool \n,\n \nc\n-\nb\n,\n \ns\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nwithout pool  16 s\nwith    pool  17 s\n\n\n\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u98de\u673a\u5feb\u8d76\u4e0a\u8dd1\u8f66\u4e86\n\n\n\u5bf9\u6bd43\uff08\u8d85\u8d8a\u9636\u6bb5\uff09:\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n    \ntime\n\n\n)\n\n\n\n// \u4e00\u4e2a[]byte\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]byte\n\n\nvar\n \nbytePool\n \n=\n \nsync\n.\nPool\n{\n\n    \nNew\n:\n \nfunc\n()\n \ninterface\n{}\n \n{\n\n\n        \nb\n \n:=\n \nmake\n([]\nbyte\n,\n \n8000\n)\n\n\n        \nreturn\n \nb\n\n    \n},\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \na\n \n:=\n \ntime\n.\nNow\n().\nUnix\n()\n\n    \n// \u4e0d\u4f7f\u7528\u5bf9\u8c61\u6c60\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n1000000000\n;\n \ni\n++\n \n{\n\n        \nobj\n \n:=\n \nmake\n([]\nbyte\n,\n \n8000\n)\n\n        \n_\n \n=\n \nobj\n\n    \n}\n\n    \nb\n \n:=\n \ntime\n.\nNow\n().\nUnix\n()\n\n    \n// \u4f7f\u7528\u5bf9\u8c61\u6c60\n\n    \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n1000000000\n;\n \ni\n++\n \n{\n\n        \nobj\n \n:=\n \nbytePool\n.\nGet\n().(\n*\n[]\nbyte\n)\n\n        \nbytePool\n.\nPut\n(\nobj\n)\n\n    \n}\n\n    \nc\n \n:=\n \ntime\n.\nNow\n().\nUnix\n()\n\n    \nfmt\n.\nPrintln\n(\nwithout pool \n,\n \nb\n-\na\n,\n \ns\n)\n\n    \nfmt\n.\nPrintln\n(\nwith    pool \n,\n \nc\n-\nb\n,\n \ns\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nwithout pool  128 s\nwith    pool  17 s\n\n\n\n\n\n\n\u53ef\u4ee5\u770b\u52302\u4e2a\u7279\u5f81\n\n\n\n\n\n\n\u5f53\u6bcf\u4e2a\u5bf9\u8c61\u7684\u5185\u5b58\u5c0f\u4e8e\u4e00\u5b9a\u91cf\u7684\u65f6\u5019\uff0c\u4e0d\u4f7f\u7528pool\u7684\u6027\u80fd\u79d2\u6740\u4f7f\u7528pool\uff1b\u5f53\u5185\u5b58\u5904\u4e8e\u67d0\u4e2a\u91cf\u7684\u65f6\u5019\uff0c\u4e0d\u4f7f\u7528pool\u548c\u4f7f\u7528pool\u6027\u80fd\u76f8\u5f53\uff1b\u5f53\u5185\u5b58\u5927\u4e8e\u67d0\u4e2a\u91cf\u7684\u65f6\u5019\uff0c\u4f7f\u7528pool\u7684\u4f18\u52bf\u5c31\u663e\u73b0\u51fa\u6765\u4e86\n\n\n\n\n\n\n\u4e0d\u4f7f\u7528pool\uff0c\u90a3\u4e48\u5bf9\u8c61\u5360\u7528\u5185\u5b58\u8d8a\u5927\uff0c\u6027\u80fd\u4e0b\u964d\u8d8a\u5389\u5bb3\uff1b\u4f7f\u7528pool\uff0c\u65e0\u8bba\u5bf9\u8c61\u5360\u7528\u5185\u5b58\u5927\u8fd8\u662f\u5c0f\uff0c\u6027\u80fd\u90fd\u4fdd\u6301\u4e0d\u53d8\u3002\u53ef\u4ee5\u770b\u5230pool\u6709\u70b9\u50cf\u98de\u673a\uff0c\u867d\u7136\u8d77\u6b65\u6bd4\u8dd1\u8f66\u6162\uff0c\u4f46\u540e\u52b2\u5341\u8db3\u3002\n\n\n\n\n\n\n\u5373\uff1apool\u9002\u5408\u5360\u7528\u5185\u5b58\u5927\u4e14\u5e76\u53d1\u91cf\u5927\u7684\u573a\u666f\u3002\u5f53\u5185\u5b58\u5c0f\u5e76\u53d1\u91cf\u5c11\u7684\u65f6\u5019\uff0c\u4f7f\u7528pool\u9002\u5f97\u5176\u53cd\n\n\n\n\n\u793a\u4f8b\n\n\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n\n)\n\n\n\n// \u4e00\u4e2a[]int\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]int\n\n\nvar\n \nintPool\n \n=\n \nsync\n.\nPool\n{\n\n    \nNew\n:\n \nfunc\n()\n \ninterface\n{}\n \n{\n\n        \nb\n \n:=\n \nmake\n([]\nint\n,\n \n8\n)\n\n        \nreturn\n \nb\n\n    \n},\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \n// \u4e0d\u4f7f\u7528\u5bf9\u8c61\u6c60\n\n    \nfor\n \ni\n \n:=\n \n1\n;\n \ni\n \n \n3\n;\n \ni\n++\n \n{\n\n        \nobj\n \n:=\n \nmake\n([]\nint\n,\n \n8\n)\n\n        \nobj\n[\ni\n]\n \n=\n \ni\n\n        \nfmt\n.\nPrintf\n(\nobj%d: %T %+v\\n\n,\n \ni\n,\n \nobj\n,\n \nobj\n)\n\n    \n}\n\n\n    \nfmt\n.\nPrintln\n(\n-----------\n)\n\n\n    \n// \u4f7f\u7528\u5bf9\u8c61\u6c60\n\n    \nfor\n \ni\n \n:=\n \n1\n;\n \ni\n \n \n3\n;\n \ni\n++\n \n{\n\n        \nobj\n \n:=\n \nintPool\n.\nGet\n().(\n*\n[]\nint\n)\n\n        \n(\n*\nobj\n)[\ni\n]\n \n=\n \ni\n\n        \nfmt\n.\nPrintf\n(\nobj%d: %T %+v\\n\n,\n \ni\n,\n \nobj\n,\n \nobj\n)\n\n        \nintPool\n.\nPut\n(\nobj\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nobj1: []int [0 1 0 0 0 0 0 0]\nobj2: []int [0 0 2 0 0 0 0 0]\n-----------\nobj1: *[]int \n[0 1 0 0 0 0 0 0]\nobj2: *[]int \n[0 1 2 0 0 0 0 0]\n\n\n\n\n\u53ef\u4ee5\u770b\u5230\uff0cpool\u7684Get\u548cPut\u771f\u7684\u662f\u4ece\u6c60\u91cc\u83b7\u5f97\u548c\u653e\u5165\u6c60\u91cc\uff0c\u5426\u5219\u4e0d\u4f1a\u51fa\u73b0\bGet\u83b7\u5f97\u7684\u53d8\u91cf\u662f\u65e7\u7684\u53d8\u91cf\uff08\u5373\u4e4b\u524d\u901a\u8fc7Put\u653e\u5165\u7684\uff09\n\n\n\u5982\u679c\u628a\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\nintPool.Put(obj)\n\u8fd9\u884c\u5220\u6389\uff0c\u90a3\u4e48\u8f93\u51fa\u5c31\u662f\n\n\nobj1: []int [0 1 0 0 0 0 0 0]\nobj2: []int [0 0 2 0 0 0 0 0]\n-----------\nobj1: *[]int \n[0 1 0 0 0 0 0 0]\nobj2: *[]int \n[0 0 2 0 0 0 0 0]\n\n\n\n\n\u73b0\u5728\u8fdb\u4e00\u6b65\uff0c\u770b\u4e0b\u591a\u6b21Get\u548cPut\uff0c\u662f\u5426\u6c60\u7684\u611f\u89c9\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nsync\n\n    \ntime\n\n\n)\n\n\n\n// \u4e00\u4e2a[]int\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]int\n\n\nvar\n \nintPool\n \n=\n \nsync\n.\nPool\n{\n\n    \nNew\n:\n \nfunc\n()\n \ninterface\n{}\n \n{\n\n        \nb\n \n:=\n \nmake\n([]\nint\n,\n \n10\n)\n\n        \nreturn\n \nb\n\n    \n},\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\n===A===\n)\n\n    \nfor\n \ni\n \n:=\n \n1\n;\n \ni\n \n \n8\n;\n \ni\n++\n \n{\n\n        \ngo\n \nfunc\n(\ni\n \nint\n)\n \n{\n\n            \nobj\n \n:=\n \nintPool\n.\nGet\n().(\n*\n[]\nint\n)\n\n            \n(\n*\nobj\n)[\ni\n]\n \n=\n \ni\n\n            \nfmt\n.\nPrintf\n(\n%d obj: %T %+v\\n\n,\n \ni\n,\n \nobj\n,\n \nobj\n)\n\n            \nintPool\n.\nPut\n(\nobj\n)\n\n        \n}(\ni\n)\n\n    \n}\n\n\n    \ntime\n.\nSleep\n(\n3\n \n*\n \ntime\n.\nSecond\n)\n\n\n    \nfmt\n.\nPrintln\n(\n===B===\n)\n\n    \nfor\n \ni\n \n:=\n \n1\n;\n \ni\n \n \n8\n;\n \ni\n++\n \n{\n\n        \nobj\n \n:=\n \nintPool\n.\nGet\n().(\n*\n[]\nint\n)\n\n        \nfmt\n.\nPrintf\n(\n%d obj: %T %+v\\n\n,\n \ni\n,\n \nobj\n,\n \nobj\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\u7b2c\u4e00\u6b21\u8f93\u51fa\n\n\n===A===\n1 obj: *[]int \n[0 1 0 0 0 0 0 0 0 0]\n2 obj: *[]int \n[0 0 2 0 0 0 0 0 0 0]\n4 obj: *[]int \n[0 0 0 0 4 0 0 0 0 0]\n3 obj: *[]int \n[0 0 0 3 0 0 0 0 0 0]\n7 obj: *[]int \n[0 0 0 3 0 0 0 7 0 0]\n5 obj: *[]int \n[0 0 0 0 0 5 0 0 0 0]\n6 obj: *[]int \n[0 0 0 0 0 0 6 0 0 0]\n===B===\n1 obj: *[]int \n[0 0 0 0 0 0 6 0 0 0]\n2 obj: *[]int \n[0 0 0 0 0 0 0 0 0 0]\n3 obj: *[]int \n[0 0 0 0 0 0 0 0 0 0]\n4 obj: *[]int \n[0 0 0 0 0 0 0 0 0 0]\n5 obj: *[]int \n[0 0 0 0 0 0 0 0 0 0]\n6 obj: *[]int \n[0 0 0 0 0 0 0 0 0 0]\n7 obj: *[]int \n[0 0 0 0 0 0 0 0 0 0]\n\n\n\n\n\u7b2c\u4e8c\u6b21\u8f93\u51fa\n\n\n===A===\n5 obj: *[]int \n[0 0 0 0 0 5 0 0 0 0]\n6 obj: *[]int \n[0 0 0 0 0 0 6 0 0 0]\n2 obj: *[]int \n[0 0 2 0 0 5 0 0 0 0]\n4 obj: *[]int \n[0 0 0 0 4 0 0 0 0 0]\n1 obj: *[]int \n[0 1 0 0 0 0 0 0 0 0]\n3 obj: *[]int \n[0 0 0 3 0 0 0 0 0 0]\n7 obj: *[]int \n[0 0 0 0 0 0 0 7 0 0]\n===B===\n1 obj: *[]int \n[0 0 0 0 0 0 0 7 0 0]\n2 obj: *[]int \n[0 0 0 3 0 0 0 0 0 0]\n3 obj: *[]int \n[0 1 0 0 0 0 0 0 0 0]\n4 obj: *[]int \n[0 0 0 0 4 0 0 0 0 0]\n5 obj: *[]int \n[0 0 2 0 0 5 0 0 0 0]\n6 obj: *[]int \n[0 0 0 0 0 0 0 0 0 0]\n7 obj: *[]int \n[0 0 0 0 0 0 0 0 0 0]\n\n\n\n\n\u7ecf\u6d4b\u8bd5\uff0c\u6bcf\u6b21\u8f93\u51fa\u5747\u4e0d\u540c\uff0c\u5305\u62ecA\u90e8\u5206\u548cB\u90e8\u5206\u3002\n\n\n\u5c24\u5176\u6ce8\u610fB\u90e8\u5206\uff0c\u5982\u679c\u662f\u51680\uff0c\u5219\u8868\u793a\u6ca1\u6709\u4ece\u7f13\u5b58\u4e2d\u627e\u5230\uff0c\u5e94\u8be5\u662f\u65b0\u5206\u914d\u7684\uff0c\u5982\u679c\u975e\u51680\uff0c\u5219\u662f\u4ece\u4e4b\u524dA\u90e8\u5206\u4e2d\u901a\u8fc7PUT\u5199\u5165\u7f13\u5b58\u7684\u3002\u7f13\u5b58\u5373Pool\n\n\nPool\u77e5\u8bc6\u70b9\n\n\n\n\nsync.Pool\uff1a\n\n\n\n\n// A Pool is a set of temporary objects that may be individually saved and\n// retrieved.\n//\n// Any item stored in the Pool may be removed automatically at any time without\n// notification. If the Pool holds the only reference when this happens, the\n// item might be deallocated.\n//\n// A Pool is safe for use by multiple goroutines simultaneously.\n//\n// Pool's purpose is to cache allocated but unused items for later reuse,\n// relieving pressure on the garbage collector. That is, it makes it easy to\n// build efficient, thread-safe free lists. However, it is not suitable for all\n// free lists.\n//\n// An appropriate use of a Pool is to manage a group of temporary items\n// silently shared among and potentially reused by concurrent independent\n// clients of a package. Pool provides a way to amortize allocation overhead\n// across many clients.\n//\n// An example of good use of a Pool is in the fmt package, which maintains a\n// dynamically-sized store of temporary output buffers. The store scales under\n// load (when many goroutines are actively printing) and shrinks when\n// quiescent.\n//\n// On the other hand, a free list maintained as part of a short-lived object is\n// not a suitable use for a Pool, since the overhead does not amortize well in\n// that scenario. It is more efficient to have such objects implement their own\n// free list.\n\n\n\n\n\n\n\n\nPool\u7684\u76ee\u7684\u662f\u7f13\u5b58\u5df2\u5206\u914d\u4f46\u672a\u4f7f\u7528\u7684\u9879\u76ee\u4ee5\u5907\u540e\u7528\n\n\n\n\n\n\n\u591a\u534f\u7a0b\u5e76\u53d1\u5b89\u5168\n\n\n\n\n\n\n\u7f13\u5b58\u5728Pool\u91cc\u7684item\u4f1a\u6ca1\u6709\u4efb\u4f55\u901a\u77e5\u60c5\u51b5\u4e0b\u968f\u65f6\u88ab\u79fb\u9664\uff0c\u4ee5\u7f13\u89e3GC\u538b\u529b\n\n\n\n\n\n\n\u6c60\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u6cd5\u6765\u7f13\u89e3\u8de8\u591a\u4e2a\u5ba2\u6237\u7aef\u7684\u5206\u914d\u5f00\u9500\u3002\n\n\n\n\n\n\n\u4e0d\u662f\u6240\u6709\u573a\u666f\u90fd\u9002\u5408\u7528Pool\uff0c\u5982\u679c\u91ca\u653e\u94fe\u8868\u662f\u67d0\u4e2a\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u7531\u8fd9\u4e2a\u5bf9\u8c61\u7ef4\u62a4\uff0c\u800c\u8fd9\u4e2a\u5bf9\u8c61\u53ea\u7531\u4e00\u4e2a\u5ba2\u6237\u7aef\u4f7f\u7528\uff0c\u5728\u8fd9\u4e2a\u5ba2\u6237\u7aef\u5de5\u4f5c\u5b8c\u6210\u540e\u91ca\u653e\u94fe\u8868\uff0c\u90a3\u4e48\u7528Pool\u5b9e\u73b0\u8fd9\u4e2a\u91ca\u653e\u94fe\u8868\u662f\u4e0d\u5408\u9002\u7684\u3002\n\n\n\n\n\n\n\u5b98\u65b9\u5bf9Pool\u7684\u76ee\u7684\u63cf\u8ff0\uff1a\n\n\nPool\u8bbe\u8ba1\u7528\u610f\u662f\u5728\u5168\u5c40\u53d8\u91cf\u91cc\u7ef4\u62a4\u7684\u91ca\u653e\u94fe\u8868\uff0c\u5c24\u5176\u662f\u88ab\u591a\u4e2a goroutine \u540c\u65f6\u8bbf\u95ee\u7684\u5168\u5c40\u53d8\u91cf\u3002\u4f7f\u7528Pool\u4ee3\u66ff\u81ea\u5df1\u5199\u7684\u91ca\u653e\u94fe\u8868\uff0c\u53ef\u4ee5\u8ba9\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u5728\u6070\u5f53\u7684\u573a\u666f\u4e0b\u4ece\u6c60\u91cc\u91cd\u7528\u67d0\u9879\u503c\u3002sync.Pool\u4e00\u79cd\u5408\u9002\u7684\u65b9\u6cd5\u662f\uff0c\u4e3a\u4e34\u65f6\u7f13\u51b2\u533a\u521b\u5efa\u4e00\u4e2a\u6c60\uff0c\u591a\u4e2a\u5ba2\u6237\u7aef\u4f7f\u7528\u8fd9\u4e2a\u7f13\u51b2\u533a\u6765\u5171\u4eab\u5168\u5c40\u8d44\u6e90\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u91ca\u653e\u94fe\u8868\u662f\u67d0\u4e2a\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u7531\u8fd9\u4e2a\u5bf9\u8c61\u7ef4\u62a4\uff0c\u800c\u8fd9\u4e2a\u5bf9\u8c61\u53ea\u7531\u4e00\u4e2a\u5ba2\u6237\u7aef\u4f7f\u7528\uff0c\u5728\u8fd9\u4e2a\u5ba2\u6237\u7aef\u5de5\u4f5c\u5b8c\u6210\u540e\u91ca\u653e\u94fe\u8868\uff0c\u90a3\u4e48\u7528Pool\u5b9e\u73b0\u8fd9\u4e2a\u91ca\u653e\u94fe\u8868\u662f\u4e0d\u5408\u9002\u7684\u3002\n\n\nPool\u7684\u6b63\u786e\u7528\u6cd5\n\n\n\n\n\u5728Put\u4e4b\u524d\u91cd\u7f6e\uff0c\u5728Get\u4e4b\u540e\u91cd\u7f6e", 
            "title": "3.5. \u4e34\u65f6\u5bf9\u8c61\u6c60(Pool)"
        }, 
        {
            "location": "/goroutine/sync_pool/#_1", 
            "text": "\u4e0b\u9762\u5185\u5bb9\u6458\u81ea  http://blog.cyeam.com/golang/2017/02/08/go-optimize-slice-pool  \u7a0b\u5e8f\u4f1a\u4ece\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u5757\u5185\u5b58\uff0c\u800c\u8fd9\u5757\u5185\u5b58\u4e5f\u4f1a\u88ab\u5206\u6210\u5806\u548c\u6808\u3002\u6808\u53ef\u4ee5\u7b80\u5355\u5f97\u7406\u89e3\u6210\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u5185\u90e8\u7533\u8bf7\u5230\u7684\u5185\u5b58\uff0c\u5b83\u4eec\u4f1a\u968f\u7740\u51fd\u6570\u7684\u8fd4\u56de\u628a\u5185\u5b58\u8fd8\u7ed9\u7cfb\u7edf\u3002  func   F ()   { \n     temp   :=   make ([] int ,   0 ,   20 ) \n     ...  }   \u7c7b\u4f3c\u4e8e\u4e0a\u9762\u4ee3\u7801\u91cc\u9762\u7684temp\u53d8\u91cf\uff0c\u53ea\u662f\u5185\u51fd\u6570\u5185\u90e8\u7533\u8bf7\u7684\u4e34\u65f6\u53d8\u91cf\uff0c\u5e76\u4e0d\u4f1a\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\uff0c\u5b83\u5c31\u662f\u88ab\u7f16\u8bd1\u5668\u7533\u8bf7\u5230\u6808\u91cc\u9762\u3002 \u7533\u8bf7\u5230\u6808\u5185\u5b58\u597d\u5904\uff1a\u51fd\u6570\u8fd4\u56de\u76f4\u63a5\u91ca\u653e\uff0c\u4e0d\u4f1a\u5f15\u8d77\u5783\u573e\u56de\u6536\uff0c\u5bf9\u6027\u80fd\u6ca1\u6709\u5f71\u54cd\u3002  func   F ()   [] int { \n     a   :=   make ([] int ,   0 ,   20 ) \n     return   a  }   \u800c\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u7533\u8bf7\u7684\u4ee3\u7801\u4e00\u6a21\u4e00\u6837\uff0c\u4f46\u662f\u7533\u8bf7\u540e\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\u4e86\uff0c\u7f16\u8bd1\u5668\u4f1a\u8ba4\u4e3a\u53d8\u91cf\u4e4b\u540e\u8fd8\u4f1a\u88ab\u4f7f\u7528\uff0c\u5f53\u51fd\u6570\u8fd4\u56de\u4e4b\u540e\u5e76\u4e0d\u4f1a\u5c06\u5176\u5185\u5b58\u5f52\u8fd8\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u88ab\u7533\u8bf7\u5230\u5806\u4e0a\u9762\u4e86\u3002 \u7533\u8bf7\u5230\u5806\u4e0a\u9762\u7684\u5185\u5b58\u624d\u4f1a\u5f15\u8d77\u5783\u573e\u56de\u6536\u3002  func   F ()   { \n     a   :=   make ([] int ,   0 ,   20 ) \n     b   :=   make ([] int ,   0 ,   20000 ) \n     l   :=   20 \n     c   :=   make ([] int ,   0 ,   l )  }   a\u548cb\u4ee3\u7801\u4e00\u6837\uff0c\u5c31\u662f\u7533\u8bf7\u7684\u7a7a\u95f4\u4e0d\u4e00\u6837\u5927\uff0c\u4f46\u662f\u5b83\u4eec\u4e24\u4e2a\u7684\u547d\u8fd0\u662f\u622a\u7136\u76f8\u53cd\u7684\u3002a\u524d\u9762\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff0c\u4f1a\u7533\u8bf7\u5230\u6808\u4e0a\u9762\uff0c\u800cb\uff0c\u7531\u4e8e\u7533\u8bf7\u7684\u5185\u5b58\u8f83\u5927\uff0c \u7f16\u8bd1\u5668\u4f1a\u628a\u8fd9\u79cd\u7533\u8bf7\u5185\u5b58\u8f83\u5927\u7684\u53d8\u91cf\u8f6c\u79fb\u5230\u5806\u4e0a\u9762\u3002\u5373\u4f7f\u662f\u4e34\u65f6\u53d8\u91cf\uff0c\u7533\u8bf7\u8fc7\u5927\u4e5f\u4f1a\u5728\u5806\u4e0a\u9762\u7533\u8bf7\u3002  \u800cc\uff0c\u5bf9\u6211\u4eec\u800c\u8a00\u5176\u542b\u4e49\u548ca\u662f\u4e00\u81f4\u7684\uff0c \u4f46\u662f\u7f16\u8bd1\u5668\u5bf9\u4e8e\u8fd9\u79cd\u4e0d\u5b9a\u957f\u5ea6\u7684\u7533\u8bf7\u65b9\u5f0f\uff0c\u4e5f\u4f1a\u5728\u5806\u4e0a\u9762\u7533\u8bf7\uff0c\u5373\u4f7f\u7533\u8bf7\u7684\u957f\u5ea6\u5f88\u77ed\u3002  \u5b9e\u9645\u9879\u76ee\u57fa\u672c\u90fd\u662f\u901a\u8fc7c := make([]int, 0, l)\u6765\u7533\u8bf7\u5185\u5b58\uff0c\u957f\u5ea6\u90fd\u662f\u4e0d\u786e\u5b9a\u7684\u3002\u81ea\u7136\u800c\u7136\u8fd9\u4e9b\u53d8\u91cf\u90fd\u4f1a\u7533\u8bf7\u5230\u5806\u4e0a\u9762\u4e86\u3002Golang\u4f7f\u7528\u7684\u5783\u573e\u56de\u6536\u7b97\u6cd5\u662f\u300e\u6807\u8bb0\u2014\u2014\u6e05\u9664\u300f\u3002\u7b80\u5355\u5f97\u8bf4\uff0c\u5c31\u662f\u7a0b\u5e8f\u8981\u4ece\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u5757\u6bd4\u8f83\u5927\u7684\u5185\u5b58\uff0c\u5185\u5b58\u5206\u6210\u5c0f\u5757\uff0c\u901a\u8fc7\u94fe\u8868\u94fe\u63a5\u3002\u6bcf\u6b21\u7a0b\u5e8f\u7533\u8bf7\u5185\u5b58\uff0c\u5c31\u4ece\u94fe\u8868\u4e0a\u9762\u904d\u5386\u6bcf\u4e00\u5c0f\u5757\uff0c\u627e\u5230\u7b26\u5408\u7684\u5c31\u8fd4\u56de\u5176\u5730\u5740\uff0c\u6ca1\u6709\u5408\u9002\u7684\u5c31\u4ece\u64cd\u4f5c\u7cfb\u7edf\u518d\u7533\u8bf7\u3002\u5982\u679c\u7533\u8bf7\u5185\u5b58\u6b21\u6570\u8f83\u591a\uff0c\u800c\u4e14\u7533\u8bf7\u7684\u5927\u5c0f\u4e0d\u56fa\u5b9a\uff0c\u5c31\u4f1a\u5f15\u8d77\u5185\u5b58\u788e\u7247\u5316\u7684\u95ee\u9898\u3002\u7533\u8bf7\u7684\u5806\u5185\u5b58\u5e76\u6ca1\u6709\u7528\u5b8c\uff0c\u4f46\u662f\u7528\u6237\u7533\u8bf7\u7684\u5185\u5b58\u7684\u65f6\u5019\u5374\u6ca1\u6709\u5408\u9002\u7684\u7a7a\u95f4\u63d0\u4f9b\u3002\u8fd9\u6837\u4f1a\u904d\u5386\u6574\u4e2a\u94fe\u8868\uff0c\u8fd8\u4f1a\u7ee7\u7eed\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u5185\u5b58\u3002\u8fd9\u5c31\u80fd\u89e3\u91ca\u6211\u4e00\u5f00\u59cb\u63cf\u8ff0\u7684\u95ee\u9898\uff0c \u7533\u8bf7\u4e00\u5757\u5185\u5b58\u53d8\u6210\u4e86\u6162\u8bed\u53e5\u3002  \u7533\u8bf7\u5185\u5b58\u53d8\u6210\u4e86\u6162\u8bed\u53e5\uff0c\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528\u4e34\u65f6\u5bf9\u8c61\u6c60", 
            "title": "\u5173\u4e8e\u5806\u548c\u6808\u7684\u57fa\u7840"
        }, 
        {
            "location": "/goroutine/sync_pool/#_2", 
            "text": "\u8be5\u4f8b\u5b50\u6458\u81eahttps:// www.jianshu.com/p/2bd41a8f2254   package   main  import   ( \n     fmt \n     sync \n     time  )  // \u4e00\u4e2a[]byte\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]byte  var   bytePool   =   sync . Pool { \n     New :   func ()   interface {}   { \n         b   :=   make ([] byte ,   1024 ) \n         return   b \n     },  }  func   main ()   { \n     a   :=   time . Now (). Unix () \n     // \u4e0d\u4f7f\u7528\u5bf9\u8c61\u6c60 \n     for   i   :=   0 ;   i     1000000000 ;   i ++   { \n         obj   :=   make ([] byte ,   1024 ) \n         _   =   obj \n     } \n     b   :=   time . Now (). Unix () \n     // \u4f7f\u7528\u5bf9\u8c61\u6c60 \n     for   i   :=   0 ;   i     1000000000 ;   i ++   { \n         obj   :=   bytePool . Get ().( * [] byte ) \n         bytePool . Put ( obj ) \n     } \n     c   :=   time . Now (). Unix () \n     fmt . Println ( without pool  ,   b - a ,   s ) \n     fmt . Println ( with    pool  ,   c - b ,   s )  }   \u8f93\u51fa  without pool  20 s\nwith    pool  15 s", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/goroutine/sync_pool/#_3", 
            "text": "package   main  import   ( \n     fmt \n     sync  )  // \u4e00\u4e2a[]byte\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]byte  var   bytePool   =   sync . Pool { \n     New :   func ()   interface {}   { \n         b   :=   make ([] byte ,   8 ) \n         return   b \n     },  }  func   main ()   { \n     fmt . Printf ( %T\\n ,   bytePool ) \n     fmt . Printf ( %+v\\n ,   bytePool ) \n\n     obj   :=   bytePool . Get ().( * [] byte ) \n\n     fmt . Printf ( %T\\n ,   obj ) \n     fmt . Printf ( %v\\n ,   obj )  }   \u8f93\u51fa  sync.Pool\n{noCopy:{} local: nil  localSize:0 New:0x1090180}\n*[]uint8 [0 0 0 0 0 0 0 0]", 
            "title": "\u8be6\u89e3"
        }, 
        {
            "location": "/goroutine/sync_pool/#_4", 
            "text": "\u4e0b\u9762\u901a\u8fc73\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u4e3a\u4ec0\u4e48\u8981\u7528\u7c7b\u578b\u65ad\u8a00 (*int)  \u9996\u5148\uff0c\u8fd9\u79cd\u7528\u6cd5\u662f\u4e0d\u5bf9\u7684  package   main  import   fmt  type   MyStruct   struct   { \n     e   func ()   interface {}  }  var   foo   =   MyStruct { \n     e :   func ()   interface {}   { \n         i   :=   1 \n         return   i \n     },  }  func   main ()   { \n     fmt . Printf ( foo: %T\\n ,   foo ) \n     fmt . Printf ( foo: %+v\\n ,   foo ) \n\n     a   :=   foo . e () \n     fmt . Printf ( a: %T\\n ,   a ) \n     fmt . Printf ( a: %+v\\n ,   a ) \n\n     a   =   2 \n     fmt . Printf ( a: %T\\n ,   a ) \n     fmt . Printf ( a: %+v\\n ,   a )  }   \u8f93\u51fa  foo: main.MyStruct\nfoo: {e:0x10901f0}\na: *int\na: 0xc4200160b0\na: int\na: 2  \u53ef\u4ee5\u770b\u5230\uff0c\u6700\u540ea\u7684\u7c7b\u578b\u662fint\uff0c\u800c\u4e0d\u662f\u671f\u671b\u4e2d\u7684*int\u3002\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\uff0c\u56e0\u4e3aa\u662f\u4e00\u4e2a\u7a7a\u63a5\u53e3interface{}\uff0c\u56e0\u6b64a\u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u7c7b\u578b\u7684\u503c  \u90a3\u4e48\u6539\u9020\u4e00\u4e0b\uff08\u8fd9\u6837\u4e5f\u662f\u9519\u7684\uff09\uff1a  package   main  import   fmt  type   MyStruct   struct   { \n     e   func ()   interface {}  }  var   foo   =   MyStruct { \n     e :   func ()   interface {}   { \n         i   :=   1 \n         return   i \n     },  }  func   main ()   { \n     fmt . Printf ( foo: %T\\n ,   foo ) \n     fmt . Printf ( foo: %+v\\n ,   foo ) \n\n     a   :=   foo . e () \n     fmt . Printf ( a: %T\\n ,   a ) \n     fmt . Printf ( a: %+v\\n ,   a ) \n\n     * a   =   2 \n     fmt . Printf ( a: %T\\n ,   a ) \n     fmt . Printf ( a: %+v\\n ,   a )  }   \u62a5\u9519  invalid indirect of a (type interface {})  \u56e0\u4e3a\u63a5\u53e3\u7c7b\u578b\uff08a\u662f\u7a7a\u63a5\u53e3\uff09\u662f\u4e0d\u80fd\u4f7f\u7528 *a \u6765\u505a\u8d4b\u503c\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u4f7f\u7528\u7c7b\u578b\u65ad\u8a00  package   main  import   fmt  type   MyStruct   struct   { \n     e   func ()   interface {}  }  var   foo   =   MyStruct { \n     e :   func ()   interface {}   { \n         i   :=   1 \n         return   i \n     },  }  func   main ()   { \n     fmt . Printf ( foo: %T\\n ,   foo ) \n     fmt . Printf ( foo: %+v\\n ,   foo ) \n\n     a   :=   foo . e ().( * int ) \n     fmt . Printf ( a: %T\\n ,   a ) \n     fmt . Printf ( a: %+v\\n ,   a ) \n\n     * a   =   2 \n     fmt . Printf ( a: %T\\n ,   a ) \n     fmt . Printf ( a: %+v\\n ,   a )  }   \u8f93\u51fa  foo: main.MyStruct\nfoo: {e:0x1090210}\na: *int\na: 0xc4200160b0\na: *int\na: 0xc4200160b0  \u8fd9\u6837\u624d\u662f\u9884\u671f\u7684\uff0c\u5373a\u4f9d\u7136\u4e3a\u6307\u9488", 
            "title": "\u4e3a\u4ec0\u4e48\u8981\u7528\u7c7b\u578b\u65ad\u8a00"
        }, 
        {
            "location": "/goroutine/sync_pool/#pool", 
            "text": "\u53ea\u6709\u5f53\u6bcf\u4e2a\u5bf9\u8c61\u5360\u7528\u5185\u5b58\u8f83\u5927\u65f6\u5019\uff0c\u7528pool\u624d\u4f1a\u6539\u5584\u6027\u80fd  \u5bf9\u6bd41\uff08\u8d77\u6b65\u9636\u6bb5\uff09:  package   main  import   ( \n     fmt \n     sync \n     time  )  // \u4e00\u4e2a[]byte\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]byte  var   bytePool   =   sync . Pool { \n     New :   func ()   interface {}   {           b   :=   make ([] byte ,   1 )           return   b \n     },  }  func   main ()   { \n     a   :=   time . Now (). Unix () \n     // \u4e0d\u4f7f\u7528\u5bf9\u8c61\u6c60 \n     for   i   :=   0 ;   i     1000000000 ;   i ++   { \n         obj   :=   make ([] byte ,   1 ) \n         _   =   obj \n     } \n     b   :=   time . Now (). Unix () \n     // \u4f7f\u7528\u5bf9\u8c61\u6c60 \n     for   i   :=   0 ;   i     1000000000 ;   i ++   { \n         obj   :=   bytePool . Get ().( * [] byte ) \n         bytePool . Put ( obj ) \n     } \n     c   :=   time . Now (). Unix () \n     fmt . Println ( without pool  ,   b - a ,   s ) \n     fmt . Println ( with    pool  ,   c - b ,   s )  }   \u8f93\u51fa  without pool  0 s\nwith    pool  17 s  \u53ef\u4ee5\u770b\u5230\uff0c\u5f53[]byte\u53ea\u67091\u4e2a\u5143\u7d20\u65f6\u5019\uff0c\u7528pool\b\u6027\u80fd\u53cd\u800c\u66f4\u5dee  \u5bf9\u6bd42\uff08\u8ffd\u8d76\u9636\u6bb5\uff09:  package   main  import   ( \n     fmt \n     sync \n     time  )  // \u4e00\u4e2a[]byte\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]byte  var   bytePool   =   sync . Pool { \n     New :   func ()   interface {}   {           b   :=   make ([] byte ,   800 )           return   b \n     },  }  func   main ()   { \n     a   :=   time . Now (). Unix () \n     // \u4e0d\u4f7f\u7528\u5bf9\u8c61\u6c60 \n     for   i   :=   0 ;   i     1000000000 ;   i ++   { \n         obj   :=   make ([] byte ,   800 ) \n         _   =   obj \n     } \n     b   :=   time . Now (). Unix () \n     // \u4f7f\u7528\u5bf9\u8c61\u6c60 \n     for   i   :=   0 ;   i     1000000000 ;   i ++   { \n         obj   :=   bytePool . Get ().( * [] byte ) \n         bytePool . Put ( obj ) \n     } \n     c   :=   time . Now (). Unix () \n     fmt . Println ( without pool  ,   b - a ,   s ) \n     fmt . Println ( with    pool  ,   c - b ,   s )  }   \u8f93\u51fa  without pool  16 s\nwith    pool  17 s  \u53ef\u4ee5\u770b\u5230\uff0c\u98de\u673a\u5feb\u8d76\u4e0a\u8dd1\u8f66\u4e86  \u5bf9\u6bd43\uff08\u8d85\u8d8a\u9636\u6bb5\uff09:  package   main  import   ( \n     fmt \n     sync \n     time  )  // \u4e00\u4e2a[]byte\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]byte  var   bytePool   =   sync . Pool { \n     New :   func ()   interface {}   {           b   :=   make ([] byte ,   8000 )           return   b \n     },  }  func   main ()   { \n     a   :=   time . Now (). Unix () \n     // \u4e0d\u4f7f\u7528\u5bf9\u8c61\u6c60 \n     for   i   :=   0 ;   i     1000000000 ;   i ++   { \n         obj   :=   make ([] byte ,   8000 ) \n         _   =   obj \n     } \n     b   :=   time . Now (). Unix () \n     // \u4f7f\u7528\u5bf9\u8c61\u6c60 \n     for   i   :=   0 ;   i     1000000000 ;   i ++   { \n         obj   :=   bytePool . Get ().( * [] byte ) \n         bytePool . Put ( obj ) \n     } \n     c   :=   time . Now (). Unix () \n     fmt . Println ( without pool  ,   b - a ,   s ) \n     fmt . Println ( with    pool  ,   c - b ,   s )  }   \u8f93\u51fa  without pool  128 s\nwith    pool  17 s   \u53ef\u4ee5\u770b\u52302\u4e2a\u7279\u5f81    \u5f53\u6bcf\u4e2a\u5bf9\u8c61\u7684\u5185\u5b58\u5c0f\u4e8e\u4e00\u5b9a\u91cf\u7684\u65f6\u5019\uff0c\u4e0d\u4f7f\u7528pool\u7684\u6027\u80fd\u79d2\u6740\u4f7f\u7528pool\uff1b\u5f53\u5185\u5b58\u5904\u4e8e\u67d0\u4e2a\u91cf\u7684\u65f6\u5019\uff0c\u4e0d\u4f7f\u7528pool\u548c\u4f7f\u7528pool\u6027\u80fd\u76f8\u5f53\uff1b\u5f53\u5185\u5b58\u5927\u4e8e\u67d0\u4e2a\u91cf\u7684\u65f6\u5019\uff0c\u4f7f\u7528pool\u7684\u4f18\u52bf\u5c31\u663e\u73b0\u51fa\u6765\u4e86    \u4e0d\u4f7f\u7528pool\uff0c\u90a3\u4e48\u5bf9\u8c61\u5360\u7528\u5185\u5b58\u8d8a\u5927\uff0c\u6027\u80fd\u4e0b\u964d\u8d8a\u5389\u5bb3\uff1b\u4f7f\u7528pool\uff0c\u65e0\u8bba\u5bf9\u8c61\u5360\u7528\u5185\u5b58\u5927\u8fd8\u662f\u5c0f\uff0c\u6027\u80fd\u90fd\u4fdd\u6301\u4e0d\u53d8\u3002\u53ef\u4ee5\u770b\u5230pool\u6709\u70b9\u50cf\u98de\u673a\uff0c\u867d\u7136\u8d77\u6b65\u6bd4\u8dd1\u8f66\u6162\uff0c\u4f46\u540e\u52b2\u5341\u8db3\u3002    \u5373\uff1apool\u9002\u5408\u5360\u7528\u5185\u5b58\u5927\u4e14\u5e76\u53d1\u91cf\u5927\u7684\u573a\u666f\u3002\u5f53\u5185\u5b58\u5c0f\u5e76\u53d1\u91cf\u5c11\u7684\u65f6\u5019\uff0c\u4f7f\u7528pool\u9002\u5f97\u5176\u53cd", 
            "title": "pool\u662f\u98de\u673a\uff0c\u8d77\u6b65\u52a0\u901f\u4e0d\u5982\u8dd1\u8f66"
        }, 
        {
            "location": "/goroutine/sync_pool/#_5", 
            "text": "package   main  import   ( \n     fmt \n     sync  )  // \u4e00\u4e2a[]int\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]int  var   intPool   =   sync . Pool { \n     New :   func ()   interface {}   { \n         b   :=   make ([] int ,   8 ) \n         return   b \n     },  }  func   main ()   { \n     // \u4e0d\u4f7f\u7528\u5bf9\u8c61\u6c60 \n     for   i   :=   1 ;   i     3 ;   i ++   { \n         obj   :=   make ([] int ,   8 ) \n         obj [ i ]   =   i \n         fmt . Printf ( obj%d: %T %+v\\n ,   i ,   obj ,   obj ) \n     } \n\n     fmt . Println ( ----------- ) \n\n     // \u4f7f\u7528\u5bf9\u8c61\u6c60 \n     for   i   :=   1 ;   i     3 ;   i ++   { \n         obj   :=   intPool . Get ().( * [] int ) \n         ( * obj )[ i ]   =   i \n         fmt . Printf ( obj%d: %T %+v\\n ,   i ,   obj ,   obj ) \n         intPool . Put ( obj ) \n     }  }   \u8f93\u51fa  obj1: []int [0 1 0 0 0 0 0 0]\nobj2: []int [0 0 2 0 0 0 0 0]\n-----------\nobj1: *[]int  [0 1 0 0 0 0 0 0]\nobj2: *[]int  [0 1 2 0 0 0 0 0]  \u53ef\u4ee5\u770b\u5230\uff0cpool\u7684Get\u548cPut\u771f\u7684\u662f\u4ece\u6c60\u91cc\u83b7\u5f97\u548c\u653e\u5165\u6c60\u91cc\uff0c\u5426\u5219\u4e0d\u4f1a\u51fa\u73b0\bGet\u83b7\u5f97\u7684\u53d8\u91cf\u662f\u65e7\u7684\u53d8\u91cf\uff08\u5373\u4e4b\u524d\u901a\u8fc7Put\u653e\u5165\u7684\uff09  \u5982\u679c\u628a\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 intPool.Put(obj) \u8fd9\u884c\u5220\u6389\uff0c\u90a3\u4e48\u8f93\u51fa\u5c31\u662f  obj1: []int [0 1 0 0 0 0 0 0]\nobj2: []int [0 0 2 0 0 0 0 0]\n-----------\nobj1: *[]int  [0 1 0 0 0 0 0 0]\nobj2: *[]int  [0 0 2 0 0 0 0 0]  \u73b0\u5728\u8fdb\u4e00\u6b65\uff0c\u770b\u4e0b\u591a\u6b21Get\u548cPut\uff0c\u662f\u5426\u6c60\u7684\u611f\u89c9  package   main  import   ( \n     fmt \n     sync \n     time  )  // \u4e00\u4e2a[]int\u7684\u5bf9\u8c61\u6c60\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e3a\u4e00\u4e2a[]int  var   intPool   =   sync . Pool { \n     New :   func ()   interface {}   { \n         b   :=   make ([] int ,   10 ) \n         return   b \n     },  }  func   main ()   { \n     fmt . Println ( ===A=== ) \n     for   i   :=   1 ;   i     8 ;   i ++   { \n         go   func ( i   int )   { \n             obj   :=   intPool . Get ().( * [] int ) \n             ( * obj )[ i ]   =   i \n             fmt . Printf ( %d obj: %T %+v\\n ,   i ,   obj ,   obj ) \n             intPool . Put ( obj ) \n         }( i ) \n     } \n\n     time . Sleep ( 3   *   time . Second ) \n\n     fmt . Println ( ===B=== ) \n     for   i   :=   1 ;   i     8 ;   i ++   { \n         obj   :=   intPool . Get ().( * [] int ) \n         fmt . Printf ( %d obj: %T %+v\\n ,   i ,   obj ,   obj ) \n     }  }   \u7b2c\u4e00\u6b21\u8f93\u51fa  ===A===\n1 obj: *[]int  [0 1 0 0 0 0 0 0 0 0]\n2 obj: *[]int  [0 0 2 0 0 0 0 0 0 0]\n4 obj: *[]int  [0 0 0 0 4 0 0 0 0 0]\n3 obj: *[]int  [0 0 0 3 0 0 0 0 0 0]\n7 obj: *[]int  [0 0 0 3 0 0 0 7 0 0]\n5 obj: *[]int  [0 0 0 0 0 5 0 0 0 0]\n6 obj: *[]int  [0 0 0 0 0 0 6 0 0 0]\n===B===\n1 obj: *[]int  [0 0 0 0 0 0 6 0 0 0]\n2 obj: *[]int  [0 0 0 0 0 0 0 0 0 0]\n3 obj: *[]int  [0 0 0 0 0 0 0 0 0 0]\n4 obj: *[]int  [0 0 0 0 0 0 0 0 0 0]\n5 obj: *[]int  [0 0 0 0 0 0 0 0 0 0]\n6 obj: *[]int  [0 0 0 0 0 0 0 0 0 0]\n7 obj: *[]int  [0 0 0 0 0 0 0 0 0 0]  \u7b2c\u4e8c\u6b21\u8f93\u51fa  ===A===\n5 obj: *[]int  [0 0 0 0 0 5 0 0 0 0]\n6 obj: *[]int  [0 0 0 0 0 0 6 0 0 0]\n2 obj: *[]int  [0 0 2 0 0 5 0 0 0 0]\n4 obj: *[]int  [0 0 0 0 4 0 0 0 0 0]\n1 obj: *[]int  [0 1 0 0 0 0 0 0 0 0]\n3 obj: *[]int  [0 0 0 3 0 0 0 0 0 0]\n7 obj: *[]int  [0 0 0 0 0 0 0 7 0 0]\n===B===\n1 obj: *[]int  [0 0 0 0 0 0 0 7 0 0]\n2 obj: *[]int  [0 0 0 3 0 0 0 0 0 0]\n3 obj: *[]int  [0 1 0 0 0 0 0 0 0 0]\n4 obj: *[]int  [0 0 0 0 4 0 0 0 0 0]\n5 obj: *[]int  [0 0 2 0 0 5 0 0 0 0]\n6 obj: *[]int  [0 0 0 0 0 0 0 0 0 0]\n7 obj: *[]int  [0 0 0 0 0 0 0 0 0 0]  \u7ecf\u6d4b\u8bd5\uff0c\u6bcf\u6b21\u8f93\u51fa\u5747\u4e0d\u540c\uff0c\u5305\u62ecA\u90e8\u5206\u548cB\u90e8\u5206\u3002  \u5c24\u5176\u6ce8\u610fB\u90e8\u5206\uff0c\u5982\u679c\u662f\u51680\uff0c\u5219\u8868\u793a\u6ca1\u6709\u4ece\u7f13\u5b58\u4e2d\u627e\u5230\uff0c\u5e94\u8be5\u662f\u65b0\u5206\u914d\u7684\uff0c\u5982\u679c\u975e\u51680\uff0c\u5219\u662f\u4ece\u4e4b\u524dA\u90e8\u5206\u4e2d\u901a\u8fc7PUT\u5199\u5165\u7f13\u5b58\u7684\u3002\u7f13\u5b58\u5373Pool", 
            "title": "\u793a\u4f8b"
        }, 
        {
            "location": "/goroutine/sync_pool/#pool_1", 
            "text": "sync.Pool\uff1a   // A Pool is a set of temporary objects that may be individually saved and\n// retrieved.\n//\n// Any item stored in the Pool may be removed automatically at any time without\n// notification. If the Pool holds the only reference when this happens, the\n// item might be deallocated.\n//\n// A Pool is safe for use by multiple goroutines simultaneously.\n//\n// Pool's purpose is to cache allocated but unused items for later reuse,\n// relieving pressure on the garbage collector. That is, it makes it easy to\n// build efficient, thread-safe free lists. However, it is not suitable for all\n// free lists.\n//\n// An appropriate use of a Pool is to manage a group of temporary items\n// silently shared among and potentially reused by concurrent independent\n// clients of a package. Pool provides a way to amortize allocation overhead\n// across many clients.\n//\n// An example of good use of a Pool is in the fmt package, which maintains a\n// dynamically-sized store of temporary output buffers. The store scales under\n// load (when many goroutines are actively printing) and shrinks when\n// quiescent.\n//\n// On the other hand, a free list maintained as part of a short-lived object is\n// not a suitable use for a Pool, since the overhead does not amortize well in\n// that scenario. It is more efficient to have such objects implement their own\n// free list.     Pool\u7684\u76ee\u7684\u662f\u7f13\u5b58\u5df2\u5206\u914d\u4f46\u672a\u4f7f\u7528\u7684\u9879\u76ee\u4ee5\u5907\u540e\u7528    \u591a\u534f\u7a0b\u5e76\u53d1\u5b89\u5168    \u7f13\u5b58\u5728Pool\u91cc\u7684item\u4f1a\u6ca1\u6709\u4efb\u4f55\u901a\u77e5\u60c5\u51b5\u4e0b\u968f\u65f6\u88ab\u79fb\u9664\uff0c\u4ee5\u7f13\u89e3GC\u538b\u529b    \u6c60\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u6cd5\u6765\u7f13\u89e3\u8de8\u591a\u4e2a\u5ba2\u6237\u7aef\u7684\u5206\u914d\u5f00\u9500\u3002    \u4e0d\u662f\u6240\u6709\u573a\u666f\u90fd\u9002\u5408\u7528Pool\uff0c\u5982\u679c\u91ca\u653e\u94fe\u8868\u662f\u67d0\u4e2a\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u7531\u8fd9\u4e2a\u5bf9\u8c61\u7ef4\u62a4\uff0c\u800c\u8fd9\u4e2a\u5bf9\u8c61\u53ea\u7531\u4e00\u4e2a\u5ba2\u6237\u7aef\u4f7f\u7528\uff0c\u5728\u8fd9\u4e2a\u5ba2\u6237\u7aef\u5de5\u4f5c\u5b8c\u6210\u540e\u91ca\u653e\u94fe\u8868\uff0c\u90a3\u4e48\u7528Pool\u5b9e\u73b0\u8fd9\u4e2a\u91ca\u653e\u94fe\u8868\u662f\u4e0d\u5408\u9002\u7684\u3002    \u5b98\u65b9\u5bf9Pool\u7684\u76ee\u7684\u63cf\u8ff0\uff1a  Pool\u8bbe\u8ba1\u7528\u610f\u662f\u5728\u5168\u5c40\u53d8\u91cf\u91cc\u7ef4\u62a4\u7684\u91ca\u653e\u94fe\u8868\uff0c\u5c24\u5176\u662f\u88ab\u591a\u4e2a goroutine \u540c\u65f6\u8bbf\u95ee\u7684\u5168\u5c40\u53d8\u91cf\u3002\u4f7f\u7528Pool\u4ee3\u66ff\u81ea\u5df1\u5199\u7684\u91ca\u653e\u94fe\u8868\uff0c\u53ef\u4ee5\u8ba9\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u5728\u6070\u5f53\u7684\u573a\u666f\u4e0b\u4ece\u6c60\u91cc\u91cd\u7528\u67d0\u9879\u503c\u3002sync.Pool\u4e00\u79cd\u5408\u9002\u7684\u65b9\u6cd5\u662f\uff0c\u4e3a\u4e34\u65f6\u7f13\u51b2\u533a\u521b\u5efa\u4e00\u4e2a\u6c60\uff0c\u591a\u4e2a\u5ba2\u6237\u7aef\u4f7f\u7528\u8fd9\u4e2a\u7f13\u51b2\u533a\u6765\u5171\u4eab\u5168\u5c40\u8d44\u6e90\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u91ca\u653e\u94fe\u8868\u662f\u67d0\u4e2a\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u7531\u8fd9\u4e2a\u5bf9\u8c61\u7ef4\u62a4\uff0c\u800c\u8fd9\u4e2a\u5bf9\u8c61\u53ea\u7531\u4e00\u4e2a\u5ba2\u6237\u7aef\u4f7f\u7528\uff0c\u5728\u8fd9\u4e2a\u5ba2\u6237\u7aef\u5de5\u4f5c\u5b8c\u6210\u540e\u91ca\u653e\u94fe\u8868\uff0c\u90a3\u4e48\u7528Pool\u5b9e\u73b0\u8fd9\u4e2a\u91ca\u653e\u94fe\u8868\u662f\u4e0d\u5408\u9002\u7684\u3002", 
            "title": "Pool\u77e5\u8bc6\u70b9"
        }, 
        {
            "location": "/goroutine/sync_pool/#pool_2", 
            "text": "\u5728Put\u4e4b\u524d\u91cd\u7f6e\uff0c\u5728Get\u4e4b\u540e\u91cd\u7f6e", 
            "title": "Pool\u7684\u6b63\u786e\u7528\u6cd5"
        }, 
        {
            "location": "/goroutine/sync_reference/", 
            "text": "sync\u5168\u90e8\n\n\n\n\n\n\n\n\nhttps://github.com/polaris1119/The-Golang-Standard-Library-by-Example/blob/master/chapter16/16.01.md\n\n\n\n\n\n\nhttps://www.cnblogs.com/golove/p/5918082.html\n\n\n\n\n\n\nhttps://studygolang.com/articles/11038?fr=sidebar\n\n\n\n\n\n\n\u4e92\u65a5\u9501\u3001\u8bfb\u5199\u9501\n\n\n\n\n\n\n\n\nhttps://www.zhihu.com/question/27256570\n\n\n\n\n\n\nhttps://www.cnblogs.com/niniwzw/archive/2013/06/24/3153955.html\n\n\n\n\n\n\nhttp://www.jb51.net/article/57335.htm\n\n\n\n\n\n\n\u6761\u4ef6\u53d8\u91cf\n\n\n\n\n\n\n\n\nhttp://openmymind.net/Condition-Variables/\n\n\n\n\n\n\nhttps://studygolang.com/articles/2190\n\n\n\n\n\n\nhttps://studygolang.com/articles/5956\n\n\n\n\n\n\nhttp://ifeve.com/go-concurrency-condition-variable/\n\n\n\n\n\n\n\u4e34\u65f6\u5bf9\u8c61\u6c60\n\n\n\n\n\n\n\n\nhttp://blog.cyeam.com/golang/2017/02/08/go-optimize-slice-pool\n\n\n\n\n\n\nhttps://www.jianshu.com/p/2bd41a8f2254\n\n\n\n\n\n\nhttps://studygolang.com/articles/700", 
            "title": "3.5. \u53c2\u8003\u8d44\u6599"
        }, 
        {
            "location": "/goroutine/sync_reference/#sync", 
            "text": "https://github.com/polaris1119/The-Golang-Standard-Library-by-Example/blob/master/chapter16/16.01.md    https://www.cnblogs.com/golove/p/5918082.html    https://studygolang.com/articles/11038?fr=sidebar", 
            "title": "sync\u5168\u90e8"
        }, 
        {
            "location": "/goroutine/sync_reference/#_1", 
            "text": "https://www.zhihu.com/question/27256570    https://www.cnblogs.com/niniwzw/archive/2013/06/24/3153955.html    http://www.jb51.net/article/57335.htm", 
            "title": "\u4e92\u65a5\u9501\u3001\u8bfb\u5199\u9501"
        }, 
        {
            "location": "/goroutine/sync_reference/#_2", 
            "text": "http://openmymind.net/Condition-Variables/    https://studygolang.com/articles/2190    https://studygolang.com/articles/5956    http://ifeve.com/go-concurrency-condition-variable/", 
            "title": "\u6761\u4ef6\u53d8\u91cf"
        }, 
        {
            "location": "/goroutine/sync_reference/#_3", 
            "text": "http://blog.cyeam.com/golang/2017/02/08/go-optimize-slice-pool    https://www.jianshu.com/p/2bd41a8f2254    https://studygolang.com/articles/700", 
            "title": "\u4e34\u65f6\u5bf9\u8c61\u6c60"
        }, 
        {
            "location": "/other/string/", 
            "text": "\u5b57\u7b26\u4e32\u62fc\u63a5\n\n\n\n\n\u5c06string\u7c7b\u578b\u7684slice\u4e2d\u7684\u5143\u7d20\u7528\u6307\u5b9a\u5b57\u7b26\u62fc\u63a5\u8d77\u6765\n\n\nstrings.Join(sli, \n \n)\n\n\n\n\n\u8868\u793a\u5c06sli\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u7528\u4e00\u4e2a\u7a7a\u683c\u62fc\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2astring\n\n\n\n\nWarning\n\n\n\u4ec5\u652f\u6301[]string\uff0c\u4e0d\u652f\u6301array\uff0c\u4e5f\u4e0d\u652f\u6301[]int", 
            "title": "1. \u5b57\u7b26\u4e32\u5904\u7406"
        }, 
        {
            "location": "/other/string/#_1", 
            "text": "\u5c06string\u7c7b\u578b\u7684slice\u4e2d\u7684\u5143\u7d20\u7528\u6307\u5b9a\u5b57\u7b26\u62fc\u63a5\u8d77\u6765  strings.Join(sli,    )  \u8868\u793a\u5c06sli\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u7528\u4e00\u4e2a\u7a7a\u683c\u62fc\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2astring   Warning  \u4ec5\u652f\u6301[]string\uff0c\u4e0d\u652f\u6301array\uff0c\u4e5f\u4e0d\u652f\u6301[]int", 
            "title": "\u5b57\u7b26\u4e32\u62fc\u63a5"
        }, 
        {
            "location": "/other/range/", 
            "text": "range\u4e3b\u8981\u7528\u4e8efor\u5faa\u73af\uff0c\u7528\u6765\u8fed\u4ee3\u53d6\u51faslice\u6216map\u7684\u5143\u7d20\n\n\n\u7528\u4e8eslice\u65f6\u5019\uff0c\u4f1a\u8fd4\u56de2\u4e2a\u503c\uff1a\n\n\n\n\n\n\n\u7b2c\u4e00\u4e2a\u503c\u662f\u5143\u7d20\u4e0b\u6807\uff0c\u6bd4\u5982\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u6807\u662f0\n\n\n\n\n\n\n\u7b2c\u4e8c\u4e2a\u503c\u662f\u5143\u7d20\u5185\u5bb9\n\n\n\n\n\n\n\n\n\u5bf9slice\u7528range\u65f6\u5019\u53d6\u7684\u662f\u53ef\u89c1\u5143\u7d20\uff0c\u5373\u4e0d\u8d85\u8fc7len\u8303\u56f4\uff0c\u800c\u4e0d\u662fcap\u5143\u7d20\u3002\u56e0\u4e3a\u53ef\u89c1\u5143\u7d20\u624d\u6709\u503c\uff0ccap\u53ea\u662f\u5bb9\u91cf\uff0c\u8d85\u51fa\u53ef\u89c1\u90e8\u5206\u662f\u6ca1\u6709\u503c\u7684\u3002\n\n\n\n\n\u4e3e\u4f8b\n\n\npow\n \n:=\n \n[]\nint\n{\n2\n,\n \n3\n,\n \n5\n,\n \n7\n,\n \n11\n,\n \n13\n}\n\n\nfor\n \ni\n,\n \nv\n \n:=\n \nrange\n \npow\n \n{\n\n    \nfmt\n.\nPrintf\n(\nindex=%d, value=%d\\n\n,\n \ni\n,\n \nv\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nindex=0, value=2\nindex=1, value=3\nindex=2, value=5\nindex=3, value=7\nindex=4, value=11\nindex=5, value=13\n\n\n\n\n\u53ef\u4ee5\u7528\u4e0b\u5212\u7ebf_\u4f5c\u4e3a\u5360\u4f4d\u7b26\uff0c\u8868\u793a\u4e0d\u9700\u8981\u53d6\u503c\n\n\n\u5982\u679c\u53ea\u60f3\u53d6index\uff0c\u4e0d\u60f3\u53d6value\uff0c\u53ef\u4ee5\u4e0d\u5199\n, value\n\uff0c\u6bd4\u5982\n\n\npow\n \n:=\n \nmake\n([]\nint\n,\n \n10\n)\n\n\nfor\n \ni\n \n:=\n \nrange\n \npow\n \n{\n\n    \npow\n[\ni\n]\n \n=\n \n1\n \n \nuint\n(\ni\n)\n \n// == 2**i\n\n\n}\n\n\nfor\n \n_\n,\n \nvalue\n \n:=\n \nrange\n \npow\n \n{\n\n    \nfmt\n.\nPrintf\n(\n%d\\n\n,\n \nvalue\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\n1\n2\n4\n8\n16\n32\n64\n128\n256\n\n\n\n\n\n\n\u5173\u4e8e\u5de6\u79fb\u548c\u53f3\u79fb\u8fd0\u7b97\u7b26\n\n\n\u5de6\u79fb\u8fd0\u7b97\u7b26\n\n\n\u53f3\u79fb\u8fd0\u7b97\u7b26", 
            "title": "2. range"
        }, 
        {
            "location": "/other/concurrent/", 
            "text": "\u5728\u8ba1\u7b97\u673a\u91cc\uff0c\u4e00\u5207\u4e8b\u7269\u90fd\u662f\u4ece\u540c\u6b65\u963b\u585e\u5f00\u59cb\uff0c\u6162\u6162\u53d1\u5c55\u6210\u5f02\u6b65\u975e\u963b\u585e\u3002\n\n\n\u53ea\u8981\u4e0d\u60f3\u963b\u585e\uff0c\u5c31\u6709\u5f02\u6b65\u7684\u9700\u6c42\uff0c\u56e0\u6b64\u5c31\u8981\u5b9e\u73b0\u5e76\u53d1\uff0c\u5728\u8ba1\u7b97\u673a\u5c31\u7531\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u6765\u5177\u4f53\u5b9e\u73b0\u3002\n\n\n\u53ea\u6709\u5e95\u5c42\u5b9e\u73b0\u5f02\u6b65\uff0c\u4e0a\u5c42\u624d\u53ef\u80fd\u5b9e\u73b0\u5e76\u884c\u3002\u6bd4\u5982\u8bfb\u5199\u78c1\u76d8\u65f6\u5019\u5c06\u8bfb\u5199\u7684\u64cd\u4f5c\u4ea4\u7531\u78c1\u76d8DMA\u6a21\u5f0f\u8fdb\u884c\uff0c\u8fd9\u4e2a\u65f6\u5019\u4e0d\u9700\u8981cpu\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0ccpu\u624d\u7a7a\u95f2\u51fa\u6765\u505a\u5176\u4ed6\u4e8b\uff08\u6bd4\u5982\u8bfb\u5199\u53e6\u4e00\u5757\u78c1\u76d8\uff09\uff0c\u5f53\u78c1\u76d8\u8bfb\u5199\u5b8c\u6bd5\u540e\u901a\u77e5cpu\uff0c\u8fd9\u5c31\u662f\u5f02\u6b65\u3002\u53ea\u6709\u5e95\u5c42\u5b9e\u73b0\u5f02\u6b65\uff0c\u624d\u6709\u534f\u7a0b\u5b58\u5728\u7684\u610f\u4e49\u3002\uff08\u4e2a\u4eba\u7406\u89e3\uff09\n\n\n\u540c\u6b65\u3001\u5f02\u6b65\n\n\n\n\n\u540c\u6b65\u3001\u5f02\u6b65\u662f\u4e00\u5bf9\uff0c\u5173\u6ce8\u7684\u662f\u6d88\u606f\u901a\u77e5\u673a\u5236\uff0c\u4e00\u6b21\u5b8c\u6210\u662f\u540c\u6b65\uff0c\u4e24\u6b21\u5b8c\u6210\u662f\u5f02\u6b65\n\n\n\n\n\n\n\u540c\u6b65: \u6253\u7535\u8bdd\uff08\u4e00\u6b21\u6027\u628a\u4e8b\u60c5\u8bf4\u5b8c\uff09\n\n\n\n\n\n\n\u5f02\u6b65: \u53d1\u77ed\u4fe1\b\u8bf4\u4e8b\uff0c\u7b49\u5f85\u56de\u590d\uff08\u6536\u5230\u56de\u590d\u624d\u7b97\u662f\u628a\u4e8b\u60c5\u8bf4\u5b8c\uff0c\u8fd9\u91cc\u662f\u4e24\u6b21\uff09\n\n\n\n\n\n\n\u540c\u6b65\u4e0e\u5f02\u6b65\u662f\u5bf9\u5e94\u7684\uff0c\u5b83\u4eec\u662f\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u8981\u4e48\u662f\u540c\u6b65\u7684\uff0c\u8981\u4e48\u662f\u5f02\u6b65\u7684\u3002\n\n\n\u963b\u585e\u3001\u975e\u963b\u585e\n\n\n\n\n\u963b\u585e\u3001\u975e\u963b\u585e\u662f\u4e00\u5bf9\uff0c\u5173\u6ce8\u7684\u662f\u7a0b\u5e8f\u5728\u7b49\u5f85\u8c03\u7528\u7ed3\u679c\uff08\u6d88\u606f\uff0c\u8fd4\u56de\u503c\uff09\u65f6\u7684\u72b6\u6001\n\n\n\n\n\n\n\u963b\u585e: \u53ea\u80fd\u505a\u4e00\u4ef6\u4e8b\n\n\n\n\n\n\n\u975e\u963b\u585e: \u505a\u4e00\u4ef6\u4e8b\u540c\u65f6\u53ef\u4ee5\u505a\u5176\u4ed6\u4e8b\n\n\n\n\n\n\n\u963b\u585e\u4e0e\u975e\u963b\u585e\u662f\u5bf9\u540c\u4e00\u4e2a\u7ebf\u7a0b\u6765\u8bf4\u7684\uff0c\u5728\u67d0\u4e2a\u65f6\u523b\uff0c\u7ebf\u7a0b\u8981\u4e48\u5904\u4e8e\u963b\u585e\uff0c\u8981\u4e48\u5904\u4e8e\u975e\u963b\u585e\u3002\n\n\n\u963b\u585e\u662f\u4f7f\u7528\u540c\u6b65\u673a\u5236\u7684\u7ed3\u679c\uff0c\u975e\u963b\u585e\u5219\u662f\u4f7f\u7528\u5f02\u6b65\u673a\u5236\u7684\u7ed3\u679c\u3002\n\n\n\u540c\u6b65\u5f02\u6b65\u548c\u963b\u585e\u975e\u963b\u585e\u7684\u7ec4\u5408\n\n\n\n\n\u540c\u6b65\u3001\u5f02\u6b65\uff0c\u4e0e\u963b\u585e\u3001\u975e\u963b\u585e\uff0c\u6ca1\u6709\u5fc5\u7136\u8054\u7cfb\n\n\n\u7ec4\u5408\u4f8b\u5b50\uff1a\n\n\n\n\n\n\n\u540c\u6b65\u963b\u585e: \u6253\u7535\u8bdd\u65f6\u5019\uff0c\u5176\u4ed6\u4efb\u4f55\u4e8b\u90fd\u505a\u4e0d\u4e86\uff08\u6bd4\u5982\u4e0d\u80fd\u540c\u65f6\u770b\u5b69\u5b50\uff09\u3002\u6548\u7387\u4f4e\u4e0b\n\n\n\n\n\n\n\u540c\u6b65\u975e\u963b\u585e: \u6253\u7535\u8bdd\u65f6\u5019\uff0c\u65f6\u4e0d\u65f6\u770b\u770b\u5b69\u5b50\u6709\u6ca1\u6709\u5371\u9669\u3002\u4e0d\u505c\u5207\u6362\uff0c\u6548\u7387\u4f4e\u4e0b\n\n\n\n\n\n\n\u5f02\u6b65\u963b\u585e: \u53d1\u77ed\u4fe1\uff0c\u5728\u6536\u5230\u77ed\u4fe1\u56de\u590d\u4e4b\u524d\u4ec0\u4e48\u4e8b\u90fd\u505a\u4e0d\u4e86\uff08\u6bd4\u5982\u4e0d\u80fd\u540c\u65f6\u770b\u5b69\u5b50\uff09\u3002\u8fd9\u79cd\u60c5\u5f62\u4e0d\u5e38\u89c1\n\n\n\n\n\n\n\u5f02\u6b65\u975e\u963b\u585e: \u53d1\u77ed\u4fe1\uff0c\u7136\u540e\u966a\u5b69\u5b50\u73a9\uff0c\u6536\u5230\u77ed\u4fe1\u56de\u590d\u901a\u77e5\u540e\u518d\u53bb\u770b\u624b\u673a\u3002\u6548\u7387\u6700\u9ad8\n\n\n\n\n\n\n\u7f16\u7801\u5e94\u7528\uff0c\u6307\u7684\u90fd\u662f\u7528\u6237\u4ee3\u7801\u903b\u8f91\uff0c\u800c\u975e\u5e95\u5c42\u7684\u5b9e\u73b0\uff1a\n\n\n\n\n\n\n\u540c\u6b65\u963b\u585e\uff1a\u6700\u666e\u904d\u6700\u5e38\u89c1\uff0c\u7b26\u5408\u601d\u7ef4\uff0c\u5bb9\u6613\u7f16\u5199\uff0c\u5bb9\u6613\u8c03\u8bd5\n\n\n\n\n\n\n\u540c\u6b65\u975e\u963b\u585e\uff1a\u81ea\u5df1\u7684\u903b\u8f91\u662f\u540c\u6b65\uff0c\u4f46\u7531\u4e8e\u4f7f\u7528\u4e86\u67d0\u4e2a\u6a21\u5757\uff0c\u800c\u8fd9\u4e2a\u6a21\u5757\u662f\u5b9e\u73b0\u5f02\u6b65\u7684\uff0c\u6240\u4ee5\u7acb\u523b\u8fd4\u56de\uff0c\u4e8e\u662f\u4ece\u81ea\u5df1\u7684\u4ee3\u7801\u903b\u8f91\u89d2\u5ea6\u770b\u6ca1\u6709\u963b\u585e\u3002\n\n\n\n\n\u5982\u679c\u5e95\u5c42\u6ca1\u6709\u5b9e\u73b0\u5f02\u6b65\uff0c\u90a3\u4e48\u4e0a\u5c42\u7684\u7528\u6237\u903b\u8f91\u5c31\u4e0d\u53ef\u80fd\u5b9e\u73b0\u975e\u963b\u585e\u3002\u6bd4\u5982nodejs\u90fd\u8bf4\u662f\u5355\u7ebf\u7a0b\u3001\u5f02\u6b65\u3001\u975e\u963b\u585eI/O\uff0c\u5176\u5b9e\u662f\u56e0\u4e3anodejs\u5e95\u5c42\u5b9e\u73b0\u4e86\u5f02\u6b65\uff08\u6bd4\u5982\u591a\u7ebf\u7a0b\u4e4b\u7c7b\u7684\uff09\b\uff0c\u4f46\u6ca1\u6709\u5f00\u653e\u5f02\u6b65\u529f\u80fd\uff08\u6bd4\u5982\u591a\u7ebf\u7a0b\uff09\u7ed9\u7528\u6237\u4f7f\u7528\u3002\n\n\n\n\n\n\n\n\n\u5355\u7ebf\u7a0b\u3001\u591a\u7ebf\u7a0b\n\n\n\n\n\n\n\n\n\u5355\u7ebf\u7a0b: \u5355\u7ebf\u7a0b\u53ea\u80fd\u5b9e\u73b0\u540c\u6b65\uff0c\u65e0\u6cd5\u5b9e\u73b0\u5f02\u6b65\n\n\n\n\n\n\n\u591a\u7ebf\u7a0b: \u662f\u5b9e\u73b0\u5f02\u6b65\u7684\u6700\u5e38\u7528\u624b\u6bb5\uff0c\u5b9e\u73b0\u5f02\u6b65\u8fd8\u6709\u591a\u8fdb\u7a0b\u3001\u534f\u7a0b\u7b49\u65b9\u6cd5\n\n\n\n\n\n\n\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3001\u534f\u7a0b\n\n\n\n\n\n\n\n\n\u8fdb\u7a0b:\n\n\n\n\n\n\n\u6982\u5ff5: \u8d44\u6e90\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d\n\n\n\n\n\n\n\u901a\u4fe1: \u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u53ea\u80fd\u901a\u8fc7\u8fdb\u7a0b\u901a\u4fe1\u7684\u65b9\u5f0f\u8fdb\u884c\n\n\n\n\n\n\n\u591a\u8fdb\u7a0b: \u62f7\u8d1d\uff0c\u4f7f\u7528fork()\uff0c\u751f\u6210\u5b50\u8fdb\u7a0b\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u62e5\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff08\u4ee3\u7801\u6bb5\u3001\u5806\u6808\u6bb5\u3001\u6570\u636e\u6bb5\uff09\n\n\n\n\n\n\n\n\n\n\n\u7ebf\u7a0b:\n\n\n\n\n\n\n\u6982\u5ff5: \u8c03\u5ea6\u8fd0\u884c\u7684\u6700\u5c0f\u5355\u4f4d\n\n\n\n\n\n\n\u901a\u4fe1: \u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u5171\u4eab\u6570\u636e\uff08\u6bd4\u5982\u5168\u5c40\u53d8\u91cf\uff0c\u9759\u6001\u53d8\u91cf\uff09\n\n\n\n\n\n\n\u591a\u7ebf\u7a0b: \u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\uff0c\u5b83\u4eec\u4e4b\u95f4\u5171\u4eab\u5927\u90e8\u5206\u6570\u636e\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u5730\u5740\u7a7a\u95f4\u3002\u5f53\u7136\u7ebf\u7a0b\u662f\u62e5\u6709\u81ea\u5df1\u7684\u5c40\u90e8\u53d8\u91cf\u548c\u5806\u6808\uff08\u6ce8\u610f\u4e0d\u662f\u5806\uff09\n\n\n\n\n\n\n\n\n\n\n\u534f\u7a0b:\n\n\n\n\n\n\n\u6982\u5ff5: \u975e\u62a2\u5360\u5f0f\u8c03\u5ea6\u3002\u7528\u6237\u6001\u6a21\u62df\u8fdb\u7a0b\u7ebf\u7a0b\u7684\u5207\u6362\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5e76\u975eOS\u5185\u6838\u63d0\u4f9b\u7684\u529f\u80fd\u3002\u7531\u7a0b\u5e8f\u5458\u4e3b\u52a8\u63a7\u5236\u534f\u7a0b\u4e4b\u95f4\u7684\u5207\u6362\u3002\n\n\n\n\n\n\n\u901a\u4fe1: \u4e0d\u8981\u901a\u8fc7\u5171\u4eab\u5185\u5b58\u6765\u901a\u4fe1\uff0c\u800c\u5e94\u8be5\u901a\u8fc7\u901a\u4fe1\u6765\u5171\u4eab\u5185\u5b58\u3002\n\n\n\n\ngolang\u63d0\u4f9b\u4e00\u79cd\u57fa\u4e8e\u6d88\u606f\u673a\u5236\u800c\u975e\u5171\u4eab\u5185\u5b58\u7684\u901a\u4fe1\u6a21\u578b\u3002\u6d88\u606f\u673a\u5236\u8ba4\u4e3a\u6bcf\u4e2a\u5e76\u53d1\u5355\u5143\u90fd\u662f\u81ea\u5305\u542b\u7684\u72ec\u7acb\u4e2a\u4f53\uff0c\u5e76\u4e14\u62e5\u6709\u81ea\u5df1\u7684\u53d8\u91cf\uff0c\u4f46\u5728\u4e0d\u540c\u5e76\u53d1\u5355\u5143\u95f4\u8fd9\u4e9b\u53d8\u91cf\u4e0d\u5171\u4eab\u3002\u6bcf\u4e2a\u5e76\u53d1\u5355\u5143\u7684\u8f93\u5165\u548c\u8f93\u51fa\u53ea\u6709\u4e00\u79cd\uff0c\u90a3\u5c31\u662f\u6d88\u606f\u3002\n\n\n\n\n\n\n\n\n\u5e94\u7528\u573a\u666f: \u7ecf\u5178\u7684web\u5e94\u7528\u573a\u666f\u5c31\u662f\u63a8\u9001\u7684\u5e76\u53d1\u80fd\u529b\n\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\u5b9e\u9645\u4e0a\u534f\u7a0b\u662f\u6700\u65e9\u51fa\u73b0\u7684\uff0c\u90a3\u4e2a\u65f6\u5019\u8ba1\u7b97\u673a\u7684\u80fd\u529b\u8fd8\u5f88\u5355\u4e00\uff0c\u4e0d\u5177\u5907\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u529f\u80fd\uff0c\u662f\u7531\u7a0b\u5e8f\u5458\u624b\u5de5\u63a7\u5236\u591a\u4efb\u52a1\u4e4b\u95f4\u7684\u8c03\u5ea6\u3002\u540e\u6765\u8fdb\u7a0b\u51fa\u73b0\u4e86\uff0c\u7531\u4e8e\u6027\u80fd\u74f6\u9888\uff0c\u51fa\u73b0\u4e86\u7ebf\u7a0b\u3002\u4e00\u76f4\u5230\u8fd9\u4e2a\u65f6\u5019\u534f\u7a0b\u90fd\u662f\u4e0d\u6e29\u4e0d\u706b\u7684\uff0c\u4f46\u540e\u6765\u7531\u4e8e\u5355cpu\u7684\u8ba1\u7b97\u80fd\u529b\u5df2\u4e0d\u6210\u4e3a\u74f6\u9888\uff0c\u800c\u662fio\u6210\u4e3a\u74f6\u9888\uff0c\u56e0\u6b64\u534f\u7a0b\u53c8\u9010\u6e10\u706b\u4e86\u8d77\u6765\u3002\u56e0\u4e3a\u534f\u7a0b\u7684\u5207\u6362\u5f00\u9500\u5c0f\uff0c\u9002\u7528\u4e8eio\u5bc6\u96c6\u578b\u9ad8\u5e76\u53d1\u573a\u666f\u3002\n\n\n\n\n\u6548\u7387\uff08\u5373\u5207\u6362\u5f00\u9500\u8c01\u6700\u5c0f\uff09\u6bd4\u8f83\uff1a\u534f\u7a0b \n \u591a\u7ebf\u7a0b \n \u591a\u8fdb\u7a0b\n\n\n\u7f16\u7a0b\u96be\u5ea6\u6bd4\u8f83: \u534f\u7a0b \n \u591a\u8fdb\u7a0b \n \u591a\u7ebf\u7a0b\u3002\u56e0\u4e3a\u591a\u7ebf\u7a0b\u8981\u6ce8\u610f\u540c\u6b65\u548c\u4e92\u65a5\uff08\u7ebf\u7a0b\u5b89\u5168\uff09\uff0c\u5426\u5219\u5bb9\u6613\u9020\u6210\u6b7b\u9501\u3002\n\n\n\u7ecf\u5178\u8bb2\u89e3\uff08\u7f51\u4e0a\u6458\u53d6\uff09\n\u8fdb\u7a0b\u662fcpu\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u7ebf\u7a0b\u662fcpu\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u4ee5\u524d\u8fdb\u7a0b\u65e2\u662f\u8d44\u6e90\u5206\u914d\u4e5f\u662f\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u540e\u6765\u4e3a\u4e86\u66f4\u5408\u7406\u7684\u4f7f\u7528cpu(\u5b9e\u9645\u4e0a\u662fcpu\u6027\u80fd\u8d8a\u6765\u8d8a\u597d)\uff0c\u624d\u5c06\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u5206\u5f00\uff0c\u5c31\u6709\u4e86\u7ebf\u7a0b\u3002\u7ebf\u7a0b\u662f\u5efa\u7acb\u5728\u8fdb\u7a0b\u7684\u57fa\u7840\u4e0a\u7684\u4e00\u6b21\u7a0b\u5e8f\u8fd0\u884c\u5355\u4f4d\u3002\n\u5982\u679c\u8bf4\u591a\u8fdb\u7a0b\u5bf9\u4e8e\u591aCPU\uff0c\u591a\u7ebf\u7a0b\u5bf9\u5e94\u591a\u6838CPU\uff0c\u90a3\u4e48\u4e8b\u4ef6\u9a71\u52a8\u548c\u534f\u7a0b\u5219\u662f\u5728\u5145\u5206\u6316\u6398\u4e0d\u65ad\u63d0\u9ad8\u6027\u80fd\u7684\u5355\u6838CPU\u7684\u6f5c\u529b\u3002\n\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u8fdb\u7a0b\u62e5\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u8fd0\u884c\u4e0d\u4f1a\u76f8\u4e92\u5e72\u6270\uff0c\u4f46\u662f\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u6bd4\u8f83\u9ebb\u70e6\uff1b\u7ebf\u7a0b\u62e5\u6709\u72ec\u7acb\u7684\u6808\u4f46\u5171\u4eab\u5185\u5b58\uff0c\u56e0\u6b64\u6570\u636e\u5171\u4eab\u6bd4\u8f83\u5bb9\u6613\uff0c\u4f46\u662f\u591a\u7ebf\u7a0b\u4e2d\u9700\u8981\u5229\u7528\u52a0\u9501\u6765\u8fdb\u884c\u8bbf\u95ee\u63a7\u5236\uff1a\u8fd9\u662f\u4e2a\u975e\u5e38\u5934\u75db\u7684\u95ee\u9898\uff0c\u4e0d\u52a0\u9501\u975e\u5e38\u5bb9\u6613\u5bfc\u81f4\u6570\u636e\u7684\u9519\u8bef\uff0c\u52a0\u9501\u5bb9\u6613\u51fa\u73b0\u6b7b\u9501\u3002\u591a\u7ebf\u7a0b\u5728\u591a\u4e2a\u6838\u4e0a\u540c\u65f6\u8fd0\u884c\uff0c\u7a0b\u5e8f\u5458\u6839\u672c\u65e0\u6cd5\u63a7\u5236\u7a0b\u5e8f\u5177\u4f53\u7684\u8fd0\u884c\u8fc7\u7a0b\uff0c\u96be\u4ee5\u8c03\u8bd5\u3002\u800c\u4e14\u7ebf\u7a0b\u7684\u5207\u6362\u7ecf\u5e38\u9700\u8981\u6df1\u5165\u5230\u5185\u6838\uff0c\u56e0\u6b64\u7ebf\u7a0b\u7684\u5207\u6362\u4ee3\u4ef7\u8fd8\u662f\u6bd4\u8f83\u5927\u7684\u3002\u534f\u7a0bcoroutine\u62e5\u6709\u81ea\u5df1\u7684\u6808\u548c\u5c40\u90e8\u53d8\u91cf\uff0c\u76f8\u4e92\u4e4b\u95f4\u5171\u4eab\u5168\u5c40\u53d8\u91cf\u3002\u4efb\u4f55\u65f6\u5019\u53ea\u6709\u4e00\u4e2a\u534f\u7a0b\u5728\u771f\u6b63\u8fd0\u884c\uff0c\u7a0b\u5e8f\u5458\u80fd\u591f\u63a7\u5236\u534f\u7a0b\u7684\u5207\u6362\u548c\u8fd0\u884c\uff0c\u56e0\u6b64\u534f\u7a0b\u7684\u7a0b\u5e8f\u76f8\u6bd4\u591a\u7ebf\u7a0b\u7f16\u7a0b\u6765\u8bf4\u8f7b\u677e\u5f88\u591a\u3002\u7531\u4e8e\u534f\u7a0b\u662f\u7528\u6237\u7ea7\u7ebf\u7a0b\uff0c\u56e0\u4e3a\u534f\u7a0b\u7684\u5207\u6362\u4ee3\u4ef7\u5f88\u5c0f\u3002\n\u7a0b\u5e8f\u5458\u80fd\u591f\u63a7\u5236\u534f\u7a0b\u7684\u5207\u6362\uff0c\u8fd9\u53e5\u8bdd\u9700\u8981\u8ba4\u771f\u7406\u89e3\u4e0b\u3002\u7a0b\u5e8f\u5458\u901a\u8fc7yield\u8ba9\u534f\u7a0b\u5728\u7a7a\u95f2\uff08\u6bd4\u5982\u7b49\u5f85io\uff0c\u7f51\u7edc\u6570\u636e\u672a\u5230\u8fbe\uff09\u65f6\u653e\u5f03\u6267\u884c\u6743\uff0c\u901a\u8fc7resume\u8c03\u5ea6\u534f\u7a0b\u8fd0\u884c\u3002\u534f\u7a0b\u4e00\u65e6\u5f00\u59cb\u8fd0\u884c\u5c31\u4e0d\u4f1a\u7ed3\u675f\uff0c\u76f4\u5230\u9047\u5230yield\u4ea4\u51fa\u6267\u884c\u6743\u3002Yield\u548cresume\u8fd9\u4e00\u5bf9\u63a7\u5236\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u5b9e\u73b0\u7a0b\u5e8f\u4e4b\u95f4\u7684\u201c\u7b49\u5f85\u201d\u9700\u6c42\uff0c\u5373\u201c\u5f02\u6b65\u903b\u8f91\u201d\u3002\u603b\u7ed3\u8d77\u6765\uff0c\u5c31\u662f\u534f\u7a0b\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u5b9e\u73b0\u7528\u540c\u6b65\u7684\u65b9\u5f0f\u7f16\u5199\u5f02\u6b65\u7684\u903b\u8f91\u3002\n\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u534f\u7a0b\uff0c\u53c8\u79f0\u5fae\u7ebf\u7a0b\u3001\u7ea4\u7a0b\uff0c\u82f1\u6587\u540d Coroutine\u3002\u5b83\u7c7b\u4f3c\u4e8e\u5b50\u4f8b\u7a0b\uff0c\u4f46\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5728\u5b50\u4f8b\u7a0b\u5185\u90e8\u53ef\u4e2d\u65ad\uff0c\u7136\u540e\u8f6c\u800c\u6267\u884c\u522b\u7684\u5b50\u4f8b\u7a0b\uff0c\u5728\u9002\u5f53\u7684\u65f6\u5019\u518d\u8fd4\u56de\u6765\u63a5\u7740\u6267\u884c\u3002\u4ee5\u4e00\u4e2a Web \u8bf7\u6c42\u7684\u5904\u7406\u4e3a\u4f8b\uff0c\u5f53\u7528\u6237\u53d1\u8d77\u8bf7\u6c42\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4ece\u540e\u7aef\u6570\u636e\u5e93\u4e2d\u63d0\u53d6\u6240\u9700\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5f88\u6162\u3002\u8fd9\u65f6\uff0c\u5982\u679c\u662f\u534f\u7a0b\uff0c\u5219\u53ef\u4ee5\u5728\u6b64\u5148\u4e2d\u65ad\uff0c\u8f6c\u800c\u8ba9\u522b\u4eba\u5148\u6267\u884c\uff0c\u5f85\u6570\u636e\u5e93\u7684\u67e5\u8be2\u8fd4\u56de\u4e4b\u540e\u518d\u8fd4\u56de\u6765\u7ee7\u7eed\u5b8c\u6210\u6570\u636e\u7684\u7ec4\u88c5\u5e76\u6700\u7ec8\u8fd4\u56de\u7ed9\u7528\u6237\u3002\u8fd9\u6837\u5c31\u611f\u89c9\u548c\u8c10\u4e86\u8bb8\u591a\u3002\n\u6211\u4eec\u524d\u9762\u8bf4\u8fc7\uff0c\u534f\u7a0b\u7684\u601d\u60f3\u672c\u8d28\u4e0a\u5c31\u662f\u63a7\u5236\u6d41\u7684\u4e3b\u52a8\u8ba9\u51fa\u548c\u6062\u590d\u673a\u5236\u3002\u5728\u73b0\u4ee3\u8bed\u8a00\u91cc\uff0c\u53ef\u4ee5\u5b9e\u73b0\u534f\u7a0b\u601d\u60f3\u7684\u65b9\u6cd5\u5f88\u591a\uff0c\u8fd9\u4e9b\u5b9e\u73b0\u95f4\u5e76\u65e0\u9ad8\u4e0b\u4e4b\u5206\uff0c\u6240\u533a\u522b\u7684\u5c31\u662f\u662f\u5426\u9002\u5408\u5e94\u7528\u573a\u666f\u3002\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5bf9\u4e8e\u5404\u79cd\u534f\u7a0b\u7684\u5206\u7c7b\uff0c\u5982\u534a\u5bf9\u79f0/\u5bf9\u79f0\u534f\u7a0b\uff0c\u6709\u6808\u4e0e\u65e0\u6808\u534f\u7a0b\u7b49\u5177\u4f53\u5b9e\u73b0\u5c31\u80fd\u63d0\u7eb2\u6308\u9886\uff0c\u65e0\u9700\u5728\u5b9e\u73b0\u7ec6\u8282\u4e0a\u7ea0\u7ed3\u3002\n\u603b\u7684\u6765\u8bf4\uff0c\u534f\u7a0b\u4e3a\u534f\u540c\u4efb\u52a1\u63d0\u4f9b\u4e86\u4e00\u79cd\u8fd0\u884c\u65f6\u62bd\u8c61\u3002\u8fd9\u79cd\u62bd\u8c61\u975e\u5e38\u9002\u5408\u4e8e\u534f\u540c\u591a\u4efb\u52a1\u8c03\u5ea6\u548c\u6570\u636e\u6d41\u5904\u7406\u3002\u5728\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u56e0\u4e3a\u7528\u6237\u6001\u7ebf\u7a0b\u5207\u6362\u4ee3\u4ef7\u6bd4\u5185\u6838\u6001\u7ebf\u7a0b\u5c0f\uff0c\u534f\u7a0b\u6210\u4e3a\u4e86\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u591a\u4efb\u52a1\u6a21\u578b\u3002\u6211\u4eec\u65e0\u6cd5\u9884\u6d4b\u672a\u6765\uff0c\u4f46\u662f\u53ef\u4ee5\u770b\u5230\uff0c\u534f\u7a0b\u5df2\u7ecf\u6210\u4e3a\u8bb8\u591a\u64c5\u957f\u6570\u636e\u5904\u7406\u7684\u8bed\u8a00\u7684\u4e00\u7ea7\u5bf9\u8c61\u3002\u968f\u7740\u8ba1\u7b97\u673a\u5e76\u884c\u6027\u80fd\u7684\u63d0\u5347\uff0c\u7528\u6237\u6001\u4efb\u52a1\u8c03\u5ea6\u5df2\u7ecf\u6210\u4e3a\u4e00\u79cd\u6807\u51c6\u7684\u591a\u4efb\u52a1\u6a21\u578b\u3002\u5728\u8fd9\u6837\u7684\u5927\u8d8b\u52bf\u4e0b\uff0c\u534f\u7a0b\u8fd9\u4e2a\u7b80\u5355\u4e14\u6709\u6548\u7684\u6a21\u578b\u5c31\u663e\u5f97\u66f4\u52a0\u5f15\u4eba\u6ce8\u76ee\u3002\n\u4ee5\u73b0\u4ee3\u773c\u5149\u6765\u770b\uff0c\u9ad8\u7ea7\u8bed\u8a00\u7f16\u8bd1\u5668\u5b9e\u9645\u4e0a\u662f\u591a\u4e2a\u6b65\u9aa4\u7ec4\u5408\u800c\u6210\uff1a\u8bcd\u6cd5\u89e3\u6790\uff0c\u8bed\u6cd5\u89e3\u6790\uff0c\u8bed\u6cd5\u6811\u6784\u5efa\uff0c\u4ee5\u53ca\u4f18\u5316\u548c\u76ee\u6807\u4ee3\u7801\u751f\u6210\u7b49\u7b49\u3002\u7f16\u8bd1\u5b9e\u8d28\u4e0a\u5c31\u662f\u4ece\u6e90\u7a0b\u5e8f\u51fa\u53d1\uff0c\u4f9d\u6b21\u5c06\u8fd9\u4e9b\u6b65\u9aa4\u7684\u8f93\u51fa\u4f5c\u4e3a\u4e0b\u4e00\u6b65\u7684\u8f93\u5165\uff0c\u6700\u7ec8\u8f93\u51fa\u76ee\u6807\u4ee3\u7801\u3002\u5728\u73b0\u4ee3\u8ba1\u7b97\u673a\u4e0a\u5b9e\u73b0\u8fd9\u79cd\u7ba1\u9053\u5f0f\u7684\u67b6\u6784\u6beb\u65e0\u56f0\u96be\uff1a\u53ea\u9700\u8981\u4f9d\u6b21\u8fd0\u884c\uff0c\u4e2d\u95f4\u7ed3\u679c\u5b58\u4e3a\u4e2d\u95f4\u6587\u4ef6\u6216\u653e\u5165\u5185\u5b58\u5373\u53ef\u3002GCC \u548c Clang \u7f16\u8bd1\u5668\uff0c\u4ee5\u53ca ANTLR \u6784\u5efa\u7684\u7f16\u8bd1\u5668\uff0c\u90fd\u9075\u5faa\u8fd9\u6837\u7684\u8bbe\u8ba1\u3002\u800c\u5728 Conway \u7684\u8bbe\u8ba1\u91cc\uff0c\u8bcd\u6cd5\u548c\u8bed\u6cd5\u89e3\u6790\u4e0d\u518d\u662f\u4e24\u4e2a\u72ec\u7acb\u8fd0\u884c\u7684\u6b65\u9aa4\uff0c\u800c\u662f\u4ea4\u7ec7\u5728\u4e00\u8d77\u3002\u7f16\u8bd1\u5668\u7684\u63a7\u5236\u6d41\u5728\u8bcd\u6cd5\u548c\u8bed\u6cd5\u89e3\u6790\u4e4b\u95f4\u6765\u56de\u5207\u6362\uff1a\u5f53\u8bcd\u6cd5\u6a21\u5757\u8bfb\u5165\u8db3\u591f\u591a\u7684 token \u65f6\uff0c\u63a7\u5236\u6d41\u4ea4\u7ed9\u8bed\u6cd5\u5206\u6790\uff1b\u5f53\u8bed\u6cd5\u5206\u6790\u6d88\u5316\u5b8c\u6240\u6709 token \u540e\uff0c\u63a7\u5236\u6d41\u4ea4\u7ed9\u8bcd\u6cd5\u5206\u6790\u3002\u8bcd\u6cd5\u548c\u8bed\u6cd5\u5206\u522b\u72ec\u7acb\u7ef4\u62a4\u81ea\u8eab\u7684\u8fd0\u884c\u72b6\u6001\u3002Conway \u6784\u5efa\u7684\u8fd9\u79cd\u534f\u540c\u5de5\u4f5c\u673a\u5236\uff0c\u9700\u8981\u53c2\u4e0e\u8005\u201c\u8ba9\u51fa (yield)\u201d\u63a7\u5236\u6d41\u65f6\uff0c\u8bb0\u4f4f\u81ea\u8eab\u72b6\u6001\uff0c\u4ee5\u4fbf\u5728\u63a7\u5236\u6d41\u8fd4\u56de\u65f6\u80fd\u591f\u4ece\u4e0a\u6b21\u8ba9\u51fa\u7684\u4f4d\u7f6e\u6062\u590d(resume)\u6267\u884c\u3002\u7b80\u8a00\u4e4b\uff0c\u534f\u7a0b\u7684\u5168\u90e8\u7cbe\u795e\u5c31\u5728\u4e8e\u63a7\u5236\u6d41\u7684\u4e3b\u52a8\u8ba9\u51fa\u548c\u6062\u590d\u3002\u6211\u4eec\u719f\u6089\u7684\u5b50\u8fc7\u7a0b\u8c03\u7528\u53ef\u4ee5\u770b\u4f5c\u5728\u8fd4\u56de\u65f6\u8ba9\u51fa\u63a7\u5236\u6d41\u7684\u4e00\u79cd\u7279\u6b8a\u7684\u534f\u7a0b\uff0c\u5176\u5185\u90e8\u72b6\u6001\u5728\u8fd4\u56de\u65f6\u88ab\u4e22\u5f03\u4e86\uff0c\u56e0\u6b64\u4e0d\u5b58\u5728\u201c\u6062\u590d\u201d\u8fd9\u4e2a\u64cd\u4f5c\u3002\n\u5e76\u53d1\u3001\u5e76\u884c\u3001\u591a\u4efb\u52a1\n\n\n\n\n\n\n\n\n\u5e76\u53d1: (\u5b8f\u89c2\u7684)\uff0c\u903b\u8f91\u4e0a\u7684\u540c\u65f6\u8fd0\u884c\uff0c\u4f46\u540c\u4e00\u65f6\u95f4\u5e95\u5c42\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u5728\u8fd0\u884c\n\n\n\n\n\n\n\u5e76\u884c: (\u5fae\u89c2\u7684)\uff0c\u771f\u6b63\u7684\u540c\u65f6\u8fd0\u884c\uff0c\u901a\u8fc7\u591a\u6838\u5b9e\u73b0\uff0c\u4efb\u52a1\u5206\u5e03\u5728\u4e0d\u540c\u6838\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u662f\u5206\u5e03\u5728\u4e0d\u540c\u670d\u52a1\u5668\u4e0a\u3002\n\n\n\n\n\n\n\u591a\u4efb\u52a1: \u53ea\u8981\u903b\u8f91\u4e0a\u80fd\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff0c\u5c31\u7b97\u662f\u591a\u4efb\u52a1\uff0c\u65e0\u8bba\u662f\u5426\u771f\u6b63\u5e76\u884c\u3002\n\n\n\n\n\n\n\u5355\u6838cpu\u5c31\u662f\u5e76\u53d1\uff0c\u591a\u6838cpu\u624d\u6709\u53ef\u80fd\u5e76\u884c\uff0c\u4e3a\u4ec0\u4e48\u8bf4\u662f\u6709\u53ef\u80fd\u800c\u4e0d\u662f\u7edd\u5bf9\uff0c\u56e0\u4e3a\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u7a0b\u5e8f\u6570\u91cf\u5fc5\u5b9a\u6bd4cpu\u6570\u91cf\u591a\n\n\n\u53ea\u6709\u5e95\u5c42\u5b9e\u73b0\u5f02\u6b65\uff0c\u4e0a\u5c42\u624d\u6709\u5e76\u884c\u7684\u53ef\u80fd\uff0c\u5426\u5219\u6700\u591a\u53ea\u662f\u5e76\u53d1\n\n\ncpu\u5bc6\u96c6\u578b\u548cio\u5bc6\u96c6\u578b\n\n\n\n\n\n\n\n\nio\u5bc6\u96c6\u578b: \u5305\u542b\u7f51\u7edcio\u548c\u78c1\u76d8io\u7b49\uff0c\u5c31\u662f\u4e00\u4e2a\u6267\u884c\u5f88\u4e45\u7684\u64cd\u4f5c\u4e0d\u662f\u7531\u672c\u673acpu\u8fdb\u884c\u64cd\u4f5c\u800c\u662f\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u7136\u540e\u7531\u8fdc\u7a0b\u670d\u52a1\u5668\u64cd\u4f5c\uff0c\u6216\u8005\u662f\u53d1\u9001\u4e00\u4e2a\u8bfb\u5199\u78c1\u76d8\u7684\u8bf7\u6c42\u7136\u540e\u7531\u78c1\u76d8\u786c\u4ef6DMA\u8fdb\u884c\u64cd\u4f5c\u3002\u603b\u4e4b\u5c31\u662fcpu\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\uff0c\u7136\u540e\u7b49\u5f85\u7ed3\u679c\u3002\u5982\u679c\u4e00\u4e2a\u4e1a\u52a1\u7684\u8fd9\u79cd\u7c7b\u578b\u7684\u64cd\u4f5c\u6bd4\u8f83\u591a\uff0c\u5c31\u79f0\u8fd9\u4e2a\u4e1a\u52a1\u4e3aio\u5bc6\u96c6\u578b\u4e1a\u52a1\n\n\n\n\n\n\ncpu\u5bc6\u96c6\u578b: \u4e00\u4e2a\u64cd\u4f5c\u7531\u672c\u673acpu\u8fdb\u884c\u8fd0\u7b97\u3002\u5982\u679c\u4e00\u4e2a\u4e1a\u52a1\u7684cpu\u8fd0\u7b97\u91cf\u6bd4\u8f83\u5927\uff0c\u800cio\u64cd\u4f5c\u6bd4\u8f83\u5c11\uff0c\u5219\u79f0\u8fd9\u4e2a\u4e1a\u52a1\u4e3acpu\u5bc6\u96c6\u578b\u4e1a\u52a1\n\n\n\n\n\n\n\u591a\u6838\u5904\u7406\u5668\u53ef\u4ee5\u5b9e\u73b0cpu\u8fd0\u7b97\u7684\u5e76\u884c\uff0c\u63d0\u9ad8\u8fd0\u7b97\u80fd\u529b\uff0c\u8fd9\u4e2a\u65f6\u5019\u7528\u591a\u8fdb\u7a0b\u6216\u8005\u591a\u7ebf\u7a0b\u5c31\u9002\u7528\u4e8ecpu\u5bc6\u96c6\u578b\u3002\u800c\u534f\u7a0b\u4e0d\u9002\u5408\uff0c\u56e0\u4e3a\u534f\u7a0b\u662f\u7528\u6237\u6001\u7684\u6280\u672f\uff0c\u53ea\u80fd\u5355\u6838\uff0c\u56e0\u6b64\u5e76\u4e0d\u80fd\u63d0\u9ad8cpu\u5e76\u884c\u8fd0\u7b97\u80fd\u529b\uff0c\u4e5f\u56e0\u6b64\u53ea\u9002\u5408io\u5bc6\u96c6\u578b\u3002\u591a\u8fdb\u7a0b\u548c\u591a\u7ebf\u7a0b\u9664\u4e86\u5728\u591a\u6838\u65f6\u5019\u9002\u5e94cpu\u5bc6\u96c6\u578b\uff0c\u4e5f\u53ef\u4ee5\u9002\u7528io\u5bc6\u96c6\u578b\uff0c\u5c24\u5176\u662f\u5355\u6838\u65f6\u5019\uff0c\u53ea\u4e0d\u8fc7\u534f\u7a0b\u7684\u5207\u6362\u5f00\u9500\u6bd4\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u90fd\u5c0f\n\n\n\n\n\u7ecf\u5178\u8bb2\u89e3\uff08\u7f51\u4e0a\u6458\u53d6\uff09\n\n\n\u603b\u7684\u8bf4\u6765\uff0c\u5f53\u5355\u6838cpu\u6027\u80fd\u63d0\u5347\uff0ccpu\u4e0d\u5728\u6210\u4e3a\u6027\u80fd\u74f6\u9888\u65f6\uff0c\u91c7\u7528\u5f02\u6b65server\u80fd\u591f\u7b80\u5316\u7f16\u7a0b\u6a21\u578b\uff0c\u4e5f\u80fd\u63d0\u9ad8IO\u5bc6\u96c6\u578b\u5e94\u7528\u7684\u6027\u80fd\u3002\n\n\n\u5728 I/O \u5bc6\u96c6\u578b\u7684\u5e94\u7528\u4e2d\uff0cCPU \u53ef\u80fd\u603b\u662f\u82e6\u82e6\u7b49\u5f85\u7740 I/O \u64cd\u4f5c\u7684\u5b8c\u6210\u3002\u5982\u679c\u662f\u4e00\u4e2a\u63d0\u4f9b Web \u7684\u670d\u52a1\u7684\u8bdd\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u4e00\u4e2a\u7ebf\u7a0b\u4f1a\u56e0\u4e3a I/O \u963b\u585e\u800c\u65e0\u6cd5\u5feb\u901f\u7684\u5bf9\u5176\u4ed6\u8bf7\u6c42\u8fdb\u884c\u54cd\u5e94\u3002\u52bf\u5fc5\u4e5f\u9020\u6210\u4e00\u79cd\u8d44\u6e90\u6d6a\u8d39\u548c\u6548\u7387\u4f4e\u4e0b\u3002\u5728\u8fd9\u79cd\u65f6\u5019\uff0c\u534f\u7a0b\u7684\u4ef7\u503c\u5c31\u4f53\u73b0\u4e86\u51fa\u6765\uff0c\u4f8b\u5982\u57fa\u4e8e Python \u8bed\u8a00\u5b9e\u73b0\u7684 tornado Web \u6846\u67b6\u5c31\u662f\u57fa\u4e8e\u6b64\u539f\u7406\u3002\n\n\n\n\n\u534f\u540c\u5f0f\u8c03\u5ea6\u3001\u62a2\u5360\u5f0f\u8c03\u5ea6\n\n\n\n\n\u56e0\u4e3a\u6211\u4eec\u6240\u719f\u6089\u7684\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf\uff0c\u90fd\u662f\u4ece\u534f\u540c\u5f0f\u8c03\u5ea6\uff08\u5982 Windows 3.2\uff0c Mac OS 9 \u7b49\uff09\u8fc7\u6e21\u5230\u62a2\u5360\u5f0f\u591a\u4efb\u52a1\u7cfb\u7edf\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u8c03\u5ea6\u65b9\u5f0f\u5e76\u65e0\u9ad8\u4e0b\uff0c\u5b8c\u5168\u53d6\u51b3\u4e8e\u5e94\u7528\u573a\u666f\u3002\u62a2\u5360\u5f0f\u7cfb\u7edf\u5141\u8bb8\u64cd\u4f5c\u7cfb\u7edf\u5265\u593a\u8fdb\u7a0b\u6267\u884c\u6743\u9650\uff0c\u62a2\u5360\u63a7\u5236\u6d41\uff0c\u56e0\u800c\u5929\u7136\u9002\u5408\u670d\u52a1\u5668\u548c\u56fe\u5f62\u64cd\u4f5c\u7cfb\u7edf\uff0c\u56e0\u4e3a\u8c03\u5ea6\u5668\u53ef\u4ee5\u4f18\u5148\u4fdd\u8bc1\u5bf9\u7528\u6237\u4ea4\u4e92\u548c\u7f51\u7edc\u4e8b\u4ef6\u7684\u5feb\u901f\u54cd\u5e94\u3002\u5f53\u5e74 Windows 95 \u521a\u521a\u63a8\u51fa\u7684\u65f6\u5019\uff0c\u62a2\u5360\u5f0f\u591a\u4efb\u52a1\u5c31\u88ab\u4f5c\u4e3a\u4e00\u5927\u4e70\u70b9\u5927\u52a0\u5ba3\u4f20\u3002\u534f\u540c\u5f0f\u8c03\u5ea6\u5219\u7b49\u5230\u8fdb\u7a0b\u65f6\u95f4\u7247\u7528\u5b8c\u6216\u7cfb\u7edf\u8c03\u7528\u65f6\u8f6c\u79fb\u6267\u884c\u6743\u9650\uff0c\u56e0\u6b64\u9002\u5408\u5b9e\u65f6\u6216\u5206\u65f6\u7b49\u7b49\u5bf9\u8fd0\u884c\u65f6\u95f4\u6709\u4fdd\u969c\u7684\u7cfb\u7edf\u3002\n\n\n\u534f\u540c\u5f0f\u8c03\u5ea6\u4e5f\u53eb\u975e\u62a2\u5360\u5f0f\u8c03\u5ea6\u3002\u534f\u7a0b\u5c31\u662f\u7ecf\u5178\u7684\u975e\u62a2\u5360\u5f0f\u8c03\u5ea6\u3002\n\n\n\u4e8b\u4ef6\u9a71\u52a8\u3001\u89c2\u5bdf\u8005\u3001\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u3001\u8ba2\u9605\u53d1\u5e03\u3001\u670d\u52a1\u53d1\u73b0\n\n\n\n\n\u4e0b\u9762\u51e0\u4e2a\u672f\u8bed\uff0c\u5176\u5b9e\u539f\u7406\u90fd\u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u4e00\u79cd\u4e3b\u52a8\u5f0f\u7684\u64cd\u4f5c\uff0c\u53ea\u662f\u6709\u7684\u540d\u8bcd\u65e9\u51fa\u73b0\uff0c\u6709\u7684\u540d\u8bcd\u665a\u51fa\u73b0\u3002\n\n\n\n\n\n\n\u4e8b\u4ef6\u9a71\u52a8: \u662f\u4e00\u79cd\u5b8f\u89c2\u7684\u7ecf\u5178\u6a21\u5f0f\uff0c\u7b49\u5f85\u6d88\u606f\u505a\u4e8b\uff0c\u5c31\u662f\u4e8b\u4ef6\u9a71\u52a8\uff0c\u4e0b\u9762\u7684\u89c2\u5bdf\u8005\u3001\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u3001\u8ba2\u9605\u53d1\u5e03\u3001\u670d\u52a1\u53d1\u73b0\u90fd\u53ea\u662f\u4e8b\u4ef6\u9a71\u52a8\u7684\u5177\u4f53\u5b9e\u73b0\u6a21\u578b\u3002\uff08\u4e2a\u4eba\u7406\u89e3\uff09\n\n\n\u7ecf\u5178\u8bb2\u89e3\uff08\u7f51\u4e0a\u6458\u53d6\uff09\n\u73b0\u4e0b\u6d41\u884c\u7684\u5f02\u6b65server\u90fd\u662f\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7684\uff08\u5982nginx\uff09\u3002\u4e8b\u4ef6\u9a71\u52a8\u7b80\u5316\u4e86\u7f16\u7a0b\u6a21\u578b\uff0c\u5f88\u597d\u5730\u89e3\u51b3\u4e86\u591a\u7ebf\u7a0b\u96be\u4e8e\u7f16\u7a0b\uff0c\u96be\u4e8e\u8c03\u8bd5\u7684\u95ee\u9898\u3002\u5f02\u6b65\u4e8b\u4ef6\u9a71\u52a8\u6a21\u578b\u4e2d\uff0c\u628a\u4f1a\u5bfc\u81f4\u963b\u585e\u7684\u64cd\u4f5c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c\uff0c\u4e3b\u7ebf\u7a0b\u8d1f\u8d23\u53d1\u8d77\u8fd9\u4e2a\u5f02\u6b65\u64cd\u4f5c\uff0c\u5e76\u5904\u7406\u8fd9\u4e2a\u5f02\u6b65\u64cd\u4f5c\u7684\u7ed3\u679c\u3002\u7531\u4e8e\u6240\u6709\u963b\u585e\u7684\u64cd\u4f5c\u90fd\u8f6c\u5316\u4e3a\u5f02\u6b65\u64cd\u4f5c\uff0c\u7406\u8bba\u4e0a\u4e3b\u7ebf\u7a0b\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u662f\u5728\u5904\u7406\u5b9e\u9645\u7684\u8ba1\u7b97\u4efb\u52a1\uff0c\u5c11\u4e86\u591a\u7ebf\u7a0b\u7684\u8c03\u5ea6\u65f6\u95f4\uff0c\u6240\u4ee5\u8fd9\u79cd\u6a21\u578b\u7684\u6027\u80fd\u901a\u5e38\u4f1a\u6bd4\u8f83\u597d\u3002\n\n\n\n\n\u89c2\u5bdf\u8005\u6a21\u5f0f: \u6211\u8ba4\u4e3a\u8fd9\u662f\u4e8b\u4ef6\u9a71\u52a8\u7684\u5177\u4f53\u6a21\u5f0f\uff0c\u800c\u4e0b\u9762\u7684\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u3001\u8ba2\u9605\u53d1\u5e03\u3001\u670d\u52a1\u53d1\u73b0\uff0c\u53c8\u662f\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u5177\u4f53\u5b9e\u73b0\u65b9\u5f0f\u3002\n\n\n\u7ecf\u5178\u8bb2\u89e3\uff08\u7f51\u4e0a\u6458\u53d6\uff09\n\u6709\u65f6\u53c8\u88ab\u79f0\u4e3a\u53d1\u5e03\uff08publish \uff09-\u8ba2\u9605\uff08Subscribe\uff09\u6a21\u5f0f\u3001\u6a21\u578b-\u89c6\u56fe\uff08View\uff09\u6a21\u5f0f\u3001\u6e90-\u6536\u542c\u8005(Listener)\u6a21\u5f0f\u6216\u4ece\u5c5e\u8005\u6a21\u5f0f\u3002\u5c5e\u4e8e\u884c\u4e3a\u578b\u6a21\u5f0f\u7684\u4e00\u79cd\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u79cd\u4e00\u5bf9\u591a\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u8ba9\u591a\u4e2a\u89c2\u5bdf\u8005\u5bf9\u8c61\u540c\u65f6\u76d1\u542c\u67d0\u4e00\u4e2a\u4e3b\u9898\u5bf9\u8c61\u3002\u8fd9\u4e2a\u4e3b\u9898\u5bf9\u8c61\u5728\u72b6\u6001\u53d8\u5316\u65f6\uff0c\u4f1a\u901a\u77e5\u6240\u6709\u7684\u89c2\u5bdf\u8005\u5bf9\u8c61\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u81ea\u52a8\u66f4\u65b0\u81ea\u5df1\u3002\n\n\n\n\n\u751f\u4ea7\u6d88\u8d39\u8005\u6a21\u5f0f: \u6307\u7684\u662f\u7531\u751f\u4ea7\u8005\u5c06\u6570\u636e\u6e90\u6e90\u4e0d\u65ad\u63a8\u9001\u5230\u6d88\u606f\u4e2d\u5fc3\uff0c\u7531\u4e0d\u540c\u7684\u6d88\u8d39\u8005\u4ece\u6d88\u606f\u4e2d\u5fc3\u53d6\u51fa\u6570\u636e\u505a\u81ea\u5df1\u7684\u5904\u7406\uff0c\u5728\u540c\u4e00\u7c7b\u522b\u4e0b\uff0c\u6240\u6709\u6d88\u8d39\u8005\u62ff\u5230\u7684\u90fd\u662f\u540c\u6837\u7684\u6570\u636e\n\n\n\n\n\n\n\u8ba2\u9605\u53d1\u5e03\u6a21\u5f0f: \u672c\u8d28\u4e0a\u4e5f\u662f\u4e00\u79cd\u751f\u4ea7\u6d88\u8d39\u8005\u6a21\u5f0f\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u7531\u8ba2\u9605\u8005\u9996\u5148\u5411\u6d88\u606f\u4e2d\u5fc3\u6307\u5b9a\u81ea\u5df1\u5bf9\u54ea\u4e9b\u6570\u636e\u611f\u5174\u8da3\uff0c\u53d1\u5e03\u8005\u63a8\u9001\u7684\u6570\u636e\u7ecf\u8fc7\u6d88\u606f\u4e2d\u5fc3\u540e\uff0c\u6bcf\u4e2a\u8ba2\u9605\u8005\u62ff\u5230\u7684\u4ec5\u4ec5\u662f\u81ea\u5df1\u611f\u5174\u8da3\u7684\u4e00\u7ec4\u6570\u636e\u3002\n\n\n\n\n\n\n\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0: \u5fae\u670d\u52a1\u67b6\u6784\u7531\u4e00\u4e2a\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u548c\u56f4\u7ed5\u8be5\u6ce8\u518c\u4e2d\u5fc3\u7684\u4e00\u5806\u670d\u52a1\u7ec4\u6210\u3002\u6bcf\u4e2a\u670d\u52a1\u5c06\u81ea\u5df1\u7684\u5730\u5740\u548c\u5176\u4ed6\u5143\u4fe1\u606f\u6ce8\u518c\u5230\u6ce8\u518c\u4e2d\u5fc3\uff08zookeeper\u6216etcd\u7b49\uff09\uff0c\u6709\u4f9d\u8d56\u5b83\u7684\u5176\u4ed6\u670d\u52a1\u4f1a\u5b9e\u65f6\u53d1\u73b0\uff08watch\u673a\u5236\uff09\u53d8\u5316\u3002\n\n\n\n\n\n\n\u751f\u4ea7\u6d88\u8d39\u8005\u6a21\u5f0f\u548c\u8ba2\u9605\u53d1\u5e03\u6a21\u5f0f\u662f\u4f7f\u7528\u6d88\u606f\u4e2d\u95f4\u4ef6\u65f6\u6700\u5e38\u7528\u7684\uff0c\u7528\u4e8e\u529f\u80fd\u89e3\u8026\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u95f4\u7684\u6d88\u606f\u901a\u4fe1\u3002\n\n\n\u53c2\u8003\u8d44\u6599\n\n\n\n\n\n\n\n\n\u5728\u591a\u6838CPU\u4e0b\uff0c\u540c\u4e00\u8fdb\u7a0b\u4e0b\u7684\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4e0d\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c?\n\n\n\n\n\n\n\u4e3a\u4ec0\u4e48\u89c9\u5f97\u534f\u7a0b\u662f\u8d8b\u52bf?\n\n\n\n\n\n\n\u7f16\u7a0b\u73e0\u7391\u756a\u5916\u7bc7-Q \u534f\u7a0b\u7684\u5386\u53f2\uff0c\u73b0\u5728\u548c\u672a\u6765\n\n\n\n\n\n\n\u6d45\u8c08\u6211\u5bf9\u534f\u7a0b\u7684\u7406\u89e3\n\n\n\n\n\n\n\u5f02\u6b65\u548c\u975e\u963b\u585e\u4e4b\u95f4\u7684\u533a\u522b\n\n\n\n\n\n\n\u5f02\u6b65\uff0c\u591a\u7ebf\u7a0b\u548c\u5e76\u884c\u7684\u533a\u522b?\n\n\n\n\n\n\n\u7ebf\u7a0b\u7684\u540c\u6b65\u548c\u5f02\u6b65\n\n\n\n\n\n\n\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3001\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u3001\u534f\u7a0b\u548cgo\u4e2d\u7684Goroutine \u90a3\u4e9b\u4e8b\u513f\n\n\n\n\n\n\n\u600e\u6837\u7406\u89e3\u963b\u585e\u975e\u963b\u585e\u4e0e\u540c\u6b65\u5f02\u6b65\u7684\u533a\u522b?\n\n\n\n\n\n\n\u6df1\u5165\u7406\u89e3 Python \u5f02\u6b65\u7f16\u7a0b\n\n\n\n\n\n\nKafka\u4e0b\u7684\u751f\u4ea7\u6d88\u8d39\u8005\u6a21\u5f0f\u4e0e\u8ba2\u9605\u53d1\u5e03\u6a21\u5f0f\n\n\n\n\n\n\n\u4ece\u5185\u6838\u5f00\u53d1\u8005\u7684\u89d2\u5ea6\u770b\u534f\u7a0b\u4e0e\u7ebf\u7a0b\n\n\n\n\n\n\n\u4ece0\u52301\uff0cPython\u5f02\u6b65\u7f16\u7a0b\u7684\u6f14\u8fdb\u4e4b\u8def\n\n\n\n\n\n\npython\u7684\u5355\u7ebf\u7a0b\u5f02\u6b65\u975e\u963b\u585e\u6846\u67b6karlooper\n\n\n\n\n\n\n\u8ddf\u65e0\u95fb\u5b66Go\u8bed\u8a00\uff1aGo\u7f16\u7a0b\u57fa\u7840\u89c6\u9891\u6559\u7a0b\n\n\n\n\n\n\n\u534f\u7a0bCoroutine\u2014\u2014\u7528\u540c\u6b65\u7684\u65b9\u5f0f\u7f16\u5199\u5f02\u6b65\u7684\u903b\u8f91\n\n\n\n\n\n\ngo\u534f\u7a0b\u901a\u4fe1", 
            "title": "3. \u5e76\u53d1\u3001\u4e8b\u4ef6\u9a71\u52a8\u7b49"
        }, 
        {
            "location": "/other/concurrent/#_1", 
            "text": "\u540c\u6b65\u3001\u5f02\u6b65\u662f\u4e00\u5bf9\uff0c\u5173\u6ce8\u7684\u662f\u6d88\u606f\u901a\u77e5\u673a\u5236\uff0c\u4e00\u6b21\u5b8c\u6210\u662f\u540c\u6b65\uff0c\u4e24\u6b21\u5b8c\u6210\u662f\u5f02\u6b65    \u540c\u6b65: \u6253\u7535\u8bdd\uff08\u4e00\u6b21\u6027\u628a\u4e8b\u60c5\u8bf4\u5b8c\uff09    \u5f02\u6b65: \u53d1\u77ed\u4fe1\b\u8bf4\u4e8b\uff0c\u7b49\u5f85\u56de\u590d\uff08\u6536\u5230\u56de\u590d\u624d\u7b97\u662f\u628a\u4e8b\u60c5\u8bf4\u5b8c\uff0c\u8fd9\u91cc\u662f\u4e24\u6b21\uff09    \u540c\u6b65\u4e0e\u5f02\u6b65\u662f\u5bf9\u5e94\u7684\uff0c\u5b83\u4eec\u662f\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u8981\u4e48\u662f\u540c\u6b65\u7684\uff0c\u8981\u4e48\u662f\u5f02\u6b65\u7684\u3002", 
            "title": "\u540c\u6b65\u3001\u5f02\u6b65"
        }, 
        {
            "location": "/other/concurrent/#_2", 
            "text": "\u963b\u585e\u3001\u975e\u963b\u585e\u662f\u4e00\u5bf9\uff0c\u5173\u6ce8\u7684\u662f\u7a0b\u5e8f\u5728\u7b49\u5f85\u8c03\u7528\u7ed3\u679c\uff08\u6d88\u606f\uff0c\u8fd4\u56de\u503c\uff09\u65f6\u7684\u72b6\u6001    \u963b\u585e: \u53ea\u80fd\u505a\u4e00\u4ef6\u4e8b    \u975e\u963b\u585e: \u505a\u4e00\u4ef6\u4e8b\u540c\u65f6\u53ef\u4ee5\u505a\u5176\u4ed6\u4e8b    \u963b\u585e\u4e0e\u975e\u963b\u585e\u662f\u5bf9\u540c\u4e00\u4e2a\u7ebf\u7a0b\u6765\u8bf4\u7684\uff0c\u5728\u67d0\u4e2a\u65f6\u523b\uff0c\u7ebf\u7a0b\u8981\u4e48\u5904\u4e8e\u963b\u585e\uff0c\u8981\u4e48\u5904\u4e8e\u975e\u963b\u585e\u3002  \u963b\u585e\u662f\u4f7f\u7528\u540c\u6b65\u673a\u5236\u7684\u7ed3\u679c\uff0c\u975e\u963b\u585e\u5219\u662f\u4f7f\u7528\u5f02\u6b65\u673a\u5236\u7684\u7ed3\u679c\u3002", 
            "title": "\u963b\u585e\u3001\u975e\u963b\u585e"
        }, 
        {
            "location": "/other/concurrent/#_3", 
            "text": "\u540c\u6b65\u3001\u5f02\u6b65\uff0c\u4e0e\u963b\u585e\u3001\u975e\u963b\u585e\uff0c\u6ca1\u6709\u5fc5\u7136\u8054\u7cfb  \u7ec4\u5408\u4f8b\u5b50\uff1a    \u540c\u6b65\u963b\u585e: \u6253\u7535\u8bdd\u65f6\u5019\uff0c\u5176\u4ed6\u4efb\u4f55\u4e8b\u90fd\u505a\u4e0d\u4e86\uff08\u6bd4\u5982\u4e0d\u80fd\u540c\u65f6\u770b\u5b69\u5b50\uff09\u3002\u6548\u7387\u4f4e\u4e0b    \u540c\u6b65\u975e\u963b\u585e: \u6253\u7535\u8bdd\u65f6\u5019\uff0c\u65f6\u4e0d\u65f6\u770b\u770b\u5b69\u5b50\u6709\u6ca1\u6709\u5371\u9669\u3002\u4e0d\u505c\u5207\u6362\uff0c\u6548\u7387\u4f4e\u4e0b    \u5f02\u6b65\u963b\u585e: \u53d1\u77ed\u4fe1\uff0c\u5728\u6536\u5230\u77ed\u4fe1\u56de\u590d\u4e4b\u524d\u4ec0\u4e48\u4e8b\u90fd\u505a\u4e0d\u4e86\uff08\u6bd4\u5982\u4e0d\u80fd\u540c\u65f6\u770b\u5b69\u5b50\uff09\u3002\u8fd9\u79cd\u60c5\u5f62\u4e0d\u5e38\u89c1    \u5f02\u6b65\u975e\u963b\u585e: \u53d1\u77ed\u4fe1\uff0c\u7136\u540e\u966a\u5b69\u5b50\u73a9\uff0c\u6536\u5230\u77ed\u4fe1\u56de\u590d\u901a\u77e5\u540e\u518d\u53bb\u770b\u624b\u673a\u3002\u6548\u7387\u6700\u9ad8    \u7f16\u7801\u5e94\u7528\uff0c\u6307\u7684\u90fd\u662f\u7528\u6237\u4ee3\u7801\u903b\u8f91\uff0c\u800c\u975e\u5e95\u5c42\u7684\u5b9e\u73b0\uff1a    \u540c\u6b65\u963b\u585e\uff1a\u6700\u666e\u904d\u6700\u5e38\u89c1\uff0c\u7b26\u5408\u601d\u7ef4\uff0c\u5bb9\u6613\u7f16\u5199\uff0c\u5bb9\u6613\u8c03\u8bd5    \u540c\u6b65\u975e\u963b\u585e\uff1a\u81ea\u5df1\u7684\u903b\u8f91\u662f\u540c\u6b65\uff0c\u4f46\u7531\u4e8e\u4f7f\u7528\u4e86\u67d0\u4e2a\u6a21\u5757\uff0c\u800c\u8fd9\u4e2a\u6a21\u5757\u662f\u5b9e\u73b0\u5f02\u6b65\u7684\uff0c\u6240\u4ee5\u7acb\u523b\u8fd4\u56de\uff0c\u4e8e\u662f\u4ece\u81ea\u5df1\u7684\u4ee3\u7801\u903b\u8f91\u89d2\u5ea6\u770b\u6ca1\u6709\u963b\u585e\u3002   \u5982\u679c\u5e95\u5c42\u6ca1\u6709\u5b9e\u73b0\u5f02\u6b65\uff0c\u90a3\u4e48\u4e0a\u5c42\u7684\u7528\u6237\u903b\u8f91\u5c31\u4e0d\u53ef\u80fd\u5b9e\u73b0\u975e\u963b\u585e\u3002\u6bd4\u5982nodejs\u90fd\u8bf4\u662f\u5355\u7ebf\u7a0b\u3001\u5f02\u6b65\u3001\u975e\u963b\u585eI/O\uff0c\u5176\u5b9e\u662f\u56e0\u4e3anodejs\u5e95\u5c42\u5b9e\u73b0\u4e86\u5f02\u6b65\uff08\u6bd4\u5982\u591a\u7ebf\u7a0b\u4e4b\u7c7b\u7684\uff09\b\uff0c\u4f46\u6ca1\u6709\u5f00\u653e\u5f02\u6b65\u529f\u80fd\uff08\u6bd4\u5982\u591a\u7ebf\u7a0b\uff09\u7ed9\u7528\u6237\u4f7f\u7528\u3002", 
            "title": "\u540c\u6b65\u5f02\u6b65\u548c\u963b\u585e\u975e\u963b\u585e\u7684\u7ec4\u5408"
        }, 
        {
            "location": "/other/concurrent/#_4", 
            "text": "\u5355\u7ebf\u7a0b: \u5355\u7ebf\u7a0b\u53ea\u80fd\u5b9e\u73b0\u540c\u6b65\uff0c\u65e0\u6cd5\u5b9e\u73b0\u5f02\u6b65    \u591a\u7ebf\u7a0b: \u662f\u5b9e\u73b0\u5f02\u6b65\u7684\u6700\u5e38\u7528\u624b\u6bb5\uff0c\u5b9e\u73b0\u5f02\u6b65\u8fd8\u6709\u591a\u8fdb\u7a0b\u3001\u534f\u7a0b\u7b49\u65b9\u6cd5", 
            "title": "\u5355\u7ebf\u7a0b\u3001\u591a\u7ebf\u7a0b"
        }, 
        {
            "location": "/other/concurrent/#_5", 
            "text": "\u8fdb\u7a0b:    \u6982\u5ff5: \u8d44\u6e90\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d    \u901a\u4fe1: \u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u53ea\u80fd\u901a\u8fc7\u8fdb\u7a0b\u901a\u4fe1\u7684\u65b9\u5f0f\u8fdb\u884c    \u591a\u8fdb\u7a0b: \u62f7\u8d1d\uff0c\u4f7f\u7528fork()\uff0c\u751f\u6210\u5b50\u8fdb\u7a0b\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u62e5\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff08\u4ee3\u7801\u6bb5\u3001\u5806\u6808\u6bb5\u3001\u6570\u636e\u6bb5\uff09      \u7ebf\u7a0b:    \u6982\u5ff5: \u8c03\u5ea6\u8fd0\u884c\u7684\u6700\u5c0f\u5355\u4f4d    \u901a\u4fe1: \u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u5171\u4eab\u6570\u636e\uff08\u6bd4\u5982\u5168\u5c40\u53d8\u91cf\uff0c\u9759\u6001\u53d8\u91cf\uff09    \u591a\u7ebf\u7a0b: \u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\uff0c\u5b83\u4eec\u4e4b\u95f4\u5171\u4eab\u5927\u90e8\u5206\u6570\u636e\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u5730\u5740\u7a7a\u95f4\u3002\u5f53\u7136\u7ebf\u7a0b\u662f\u62e5\u6709\u81ea\u5df1\u7684\u5c40\u90e8\u53d8\u91cf\u548c\u5806\u6808\uff08\u6ce8\u610f\u4e0d\u662f\u5806\uff09      \u534f\u7a0b:    \u6982\u5ff5: \u975e\u62a2\u5360\u5f0f\u8c03\u5ea6\u3002\u7528\u6237\u6001\u6a21\u62df\u8fdb\u7a0b\u7ebf\u7a0b\u7684\u5207\u6362\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5e76\u975eOS\u5185\u6838\u63d0\u4f9b\u7684\u529f\u80fd\u3002\u7531\u7a0b\u5e8f\u5458\u4e3b\u52a8\u63a7\u5236\u534f\u7a0b\u4e4b\u95f4\u7684\u5207\u6362\u3002    \u901a\u4fe1: \u4e0d\u8981\u901a\u8fc7\u5171\u4eab\u5185\u5b58\u6765\u901a\u4fe1\uff0c\u800c\u5e94\u8be5\u901a\u8fc7\u901a\u4fe1\u6765\u5171\u4eab\u5185\u5b58\u3002   golang\u63d0\u4f9b\u4e00\u79cd\u57fa\u4e8e\u6d88\u606f\u673a\u5236\u800c\u975e\u5171\u4eab\u5185\u5b58\u7684\u901a\u4fe1\u6a21\u578b\u3002\u6d88\u606f\u673a\u5236\u8ba4\u4e3a\u6bcf\u4e2a\u5e76\u53d1\u5355\u5143\u90fd\u662f\u81ea\u5305\u542b\u7684\u72ec\u7acb\u4e2a\u4f53\uff0c\u5e76\u4e14\u62e5\u6709\u81ea\u5df1\u7684\u53d8\u91cf\uff0c\u4f46\u5728\u4e0d\u540c\u5e76\u53d1\u5355\u5143\u95f4\u8fd9\u4e9b\u53d8\u91cf\u4e0d\u5171\u4eab\u3002\u6bcf\u4e2a\u5e76\u53d1\u5355\u5143\u7684\u8f93\u5165\u548c\u8f93\u51fa\u53ea\u6709\u4e00\u79cd\uff0c\u90a3\u5c31\u662f\u6d88\u606f\u3002     \u5e94\u7528\u573a\u666f: \u7ecf\u5178\u7684web\u5e94\u7528\u573a\u666f\u5c31\u662f\u63a8\u9001\u7684\u5e76\u53d1\u80fd\u529b       Warning  \u5b9e\u9645\u4e0a\u534f\u7a0b\u662f\u6700\u65e9\u51fa\u73b0\u7684\uff0c\u90a3\u4e2a\u65f6\u5019\u8ba1\u7b97\u673a\u7684\u80fd\u529b\u8fd8\u5f88\u5355\u4e00\uff0c\u4e0d\u5177\u5907\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u529f\u80fd\uff0c\u662f\u7531\u7a0b\u5e8f\u5458\u624b\u5de5\u63a7\u5236\u591a\u4efb\u52a1\u4e4b\u95f4\u7684\u8c03\u5ea6\u3002\u540e\u6765\u8fdb\u7a0b\u51fa\u73b0\u4e86\uff0c\u7531\u4e8e\u6027\u80fd\u74f6\u9888\uff0c\u51fa\u73b0\u4e86\u7ebf\u7a0b\u3002\u4e00\u76f4\u5230\u8fd9\u4e2a\u65f6\u5019\u534f\u7a0b\u90fd\u662f\u4e0d\u6e29\u4e0d\u706b\u7684\uff0c\u4f46\u540e\u6765\u7531\u4e8e\u5355cpu\u7684\u8ba1\u7b97\u80fd\u529b\u5df2\u4e0d\u6210\u4e3a\u74f6\u9888\uff0c\u800c\u662fio\u6210\u4e3a\u74f6\u9888\uff0c\u56e0\u6b64\u534f\u7a0b\u53c8\u9010\u6e10\u706b\u4e86\u8d77\u6765\u3002\u56e0\u4e3a\u534f\u7a0b\u7684\u5207\u6362\u5f00\u9500\u5c0f\uff0c\u9002\u7528\u4e8eio\u5bc6\u96c6\u578b\u9ad8\u5e76\u53d1\u573a\u666f\u3002   \u6548\u7387\uff08\u5373\u5207\u6362\u5f00\u9500\u8c01\u6700\u5c0f\uff09\u6bd4\u8f83\uff1a\u534f\u7a0b   \u591a\u7ebf\u7a0b   \u591a\u8fdb\u7a0b  \u7f16\u7a0b\u96be\u5ea6\u6bd4\u8f83: \u534f\u7a0b   \u591a\u8fdb\u7a0b   \u591a\u7ebf\u7a0b\u3002\u56e0\u4e3a\u591a\u7ebf\u7a0b\u8981\u6ce8\u610f\u540c\u6b65\u548c\u4e92\u65a5\uff08\u7ebf\u7a0b\u5b89\u5168\uff09\uff0c\u5426\u5219\u5bb9\u6613\u9020\u6210\u6b7b\u9501\u3002  \u7ecf\u5178\u8bb2\u89e3\uff08\u7f51\u4e0a\u6458\u53d6\uff09 \u8fdb\u7a0b\u662fcpu\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u7ebf\u7a0b\u662fcpu\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u4ee5\u524d\u8fdb\u7a0b\u65e2\u662f\u8d44\u6e90\u5206\u914d\u4e5f\u662f\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u540e\u6765\u4e3a\u4e86\u66f4\u5408\u7406\u7684\u4f7f\u7528cpu(\u5b9e\u9645\u4e0a\u662fcpu\u6027\u80fd\u8d8a\u6765\u8d8a\u597d)\uff0c\u624d\u5c06\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u5206\u5f00\uff0c\u5c31\u6709\u4e86\u7ebf\u7a0b\u3002\u7ebf\u7a0b\u662f\u5efa\u7acb\u5728\u8fdb\u7a0b\u7684\u57fa\u7840\u4e0a\u7684\u4e00\u6b21\u7a0b\u5e8f\u8fd0\u884c\u5355\u4f4d\u3002 \u5982\u679c\u8bf4\u591a\u8fdb\u7a0b\u5bf9\u4e8e\u591aCPU\uff0c\u591a\u7ebf\u7a0b\u5bf9\u5e94\u591a\u6838CPU\uff0c\u90a3\u4e48\u4e8b\u4ef6\u9a71\u52a8\u548c\u534f\u7a0b\u5219\u662f\u5728\u5145\u5206\u6316\u6398\u4e0d\u65ad\u63d0\u9ad8\u6027\u80fd\u7684\u5355\u6838CPU\u7684\u6f5c\u529b\u3002 \u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u8fdb\u7a0b\u62e5\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u8fd0\u884c\u4e0d\u4f1a\u76f8\u4e92\u5e72\u6270\uff0c\u4f46\u662f\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u6bd4\u8f83\u9ebb\u70e6\uff1b\u7ebf\u7a0b\u62e5\u6709\u72ec\u7acb\u7684\u6808\u4f46\u5171\u4eab\u5185\u5b58\uff0c\u56e0\u6b64\u6570\u636e\u5171\u4eab\u6bd4\u8f83\u5bb9\u6613\uff0c\u4f46\u662f\u591a\u7ebf\u7a0b\u4e2d\u9700\u8981\u5229\u7528\u52a0\u9501\u6765\u8fdb\u884c\u8bbf\u95ee\u63a7\u5236\uff1a\u8fd9\u662f\u4e2a\u975e\u5e38\u5934\u75db\u7684\u95ee\u9898\uff0c\u4e0d\u52a0\u9501\u975e\u5e38\u5bb9\u6613\u5bfc\u81f4\u6570\u636e\u7684\u9519\u8bef\uff0c\u52a0\u9501\u5bb9\u6613\u51fa\u73b0\u6b7b\u9501\u3002\u591a\u7ebf\u7a0b\u5728\u591a\u4e2a\u6838\u4e0a\u540c\u65f6\u8fd0\u884c\uff0c\u7a0b\u5e8f\u5458\u6839\u672c\u65e0\u6cd5\u63a7\u5236\u7a0b\u5e8f\u5177\u4f53\u7684\u8fd0\u884c\u8fc7\u7a0b\uff0c\u96be\u4ee5\u8c03\u8bd5\u3002\u800c\u4e14\u7ebf\u7a0b\u7684\u5207\u6362\u7ecf\u5e38\u9700\u8981\u6df1\u5165\u5230\u5185\u6838\uff0c\u56e0\u6b64\u7ebf\u7a0b\u7684\u5207\u6362\u4ee3\u4ef7\u8fd8\u662f\u6bd4\u8f83\u5927\u7684\u3002\u534f\u7a0bcoroutine\u62e5\u6709\u81ea\u5df1\u7684\u6808\u548c\u5c40\u90e8\u53d8\u91cf\uff0c\u76f8\u4e92\u4e4b\u95f4\u5171\u4eab\u5168\u5c40\u53d8\u91cf\u3002\u4efb\u4f55\u65f6\u5019\u53ea\u6709\u4e00\u4e2a\u534f\u7a0b\u5728\u771f\u6b63\u8fd0\u884c\uff0c\u7a0b\u5e8f\u5458\u80fd\u591f\u63a7\u5236\u534f\u7a0b\u7684\u5207\u6362\u548c\u8fd0\u884c\uff0c\u56e0\u6b64\u534f\u7a0b\u7684\u7a0b\u5e8f\u76f8\u6bd4\u591a\u7ebf\u7a0b\u7f16\u7a0b\u6765\u8bf4\u8f7b\u677e\u5f88\u591a\u3002\u7531\u4e8e\u534f\u7a0b\u662f\u7528\u6237\u7ea7\u7ebf\u7a0b\uff0c\u56e0\u4e3a\u534f\u7a0b\u7684\u5207\u6362\u4ee3\u4ef7\u5f88\u5c0f\u3002 \u7a0b\u5e8f\u5458\u80fd\u591f\u63a7\u5236\u534f\u7a0b\u7684\u5207\u6362\uff0c\u8fd9\u53e5\u8bdd\u9700\u8981\u8ba4\u771f\u7406\u89e3\u4e0b\u3002\u7a0b\u5e8f\u5458\u901a\u8fc7yield\u8ba9\u534f\u7a0b\u5728\u7a7a\u95f2\uff08\u6bd4\u5982\u7b49\u5f85io\uff0c\u7f51\u7edc\u6570\u636e\u672a\u5230\u8fbe\uff09\u65f6\u653e\u5f03\u6267\u884c\u6743\uff0c\u901a\u8fc7resume\u8c03\u5ea6\u534f\u7a0b\u8fd0\u884c\u3002\u534f\u7a0b\u4e00\u65e6\u5f00\u59cb\u8fd0\u884c\u5c31\u4e0d\u4f1a\u7ed3\u675f\uff0c\u76f4\u5230\u9047\u5230yield\u4ea4\u51fa\u6267\u884c\u6743\u3002Yield\u548cresume\u8fd9\u4e00\u5bf9\u63a7\u5236\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u5b9e\u73b0\u7a0b\u5e8f\u4e4b\u95f4\u7684\u201c\u7b49\u5f85\u201d\u9700\u6c42\uff0c\u5373\u201c\u5f02\u6b65\u903b\u8f91\u201d\u3002\u603b\u7ed3\u8d77\u6765\uff0c\u5c31\u662f\u534f\u7a0b\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u5b9e\u73b0\u7528\u540c\u6b65\u7684\u65b9\u5f0f\u7f16\u5199\u5f02\u6b65\u7684\u903b\u8f91\u3002 \u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u534f\u7a0b\uff0c\u53c8\u79f0\u5fae\u7ebf\u7a0b\u3001\u7ea4\u7a0b\uff0c\u82f1\u6587\u540d Coroutine\u3002\u5b83\u7c7b\u4f3c\u4e8e\u5b50\u4f8b\u7a0b\uff0c\u4f46\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5728\u5b50\u4f8b\u7a0b\u5185\u90e8\u53ef\u4e2d\u65ad\uff0c\u7136\u540e\u8f6c\u800c\u6267\u884c\u522b\u7684\u5b50\u4f8b\u7a0b\uff0c\u5728\u9002\u5f53\u7684\u65f6\u5019\u518d\u8fd4\u56de\u6765\u63a5\u7740\u6267\u884c\u3002\u4ee5\u4e00\u4e2a Web \u8bf7\u6c42\u7684\u5904\u7406\u4e3a\u4f8b\uff0c\u5f53\u7528\u6237\u53d1\u8d77\u8bf7\u6c42\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4ece\u540e\u7aef\u6570\u636e\u5e93\u4e2d\u63d0\u53d6\u6240\u9700\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5f88\u6162\u3002\u8fd9\u65f6\uff0c\u5982\u679c\u662f\u534f\u7a0b\uff0c\u5219\u53ef\u4ee5\u5728\u6b64\u5148\u4e2d\u65ad\uff0c\u8f6c\u800c\u8ba9\u522b\u4eba\u5148\u6267\u884c\uff0c\u5f85\u6570\u636e\u5e93\u7684\u67e5\u8be2\u8fd4\u56de\u4e4b\u540e\u518d\u8fd4\u56de\u6765\u7ee7\u7eed\u5b8c\u6210\u6570\u636e\u7684\u7ec4\u88c5\u5e76\u6700\u7ec8\u8fd4\u56de\u7ed9\u7528\u6237\u3002\u8fd9\u6837\u5c31\u611f\u89c9\u548c\u8c10\u4e86\u8bb8\u591a\u3002 \u6211\u4eec\u524d\u9762\u8bf4\u8fc7\uff0c\u534f\u7a0b\u7684\u601d\u60f3\u672c\u8d28\u4e0a\u5c31\u662f\u63a7\u5236\u6d41\u7684\u4e3b\u52a8\u8ba9\u51fa\u548c\u6062\u590d\u673a\u5236\u3002\u5728\u73b0\u4ee3\u8bed\u8a00\u91cc\uff0c\u53ef\u4ee5\u5b9e\u73b0\u534f\u7a0b\u601d\u60f3\u7684\u65b9\u6cd5\u5f88\u591a\uff0c\u8fd9\u4e9b\u5b9e\u73b0\u95f4\u5e76\u65e0\u9ad8\u4e0b\u4e4b\u5206\uff0c\u6240\u533a\u522b\u7684\u5c31\u662f\u662f\u5426\u9002\u5408\u5e94\u7528\u573a\u666f\u3002\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5bf9\u4e8e\u5404\u79cd\u534f\u7a0b\u7684\u5206\u7c7b\uff0c\u5982\u534a\u5bf9\u79f0/\u5bf9\u79f0\u534f\u7a0b\uff0c\u6709\u6808\u4e0e\u65e0\u6808\u534f\u7a0b\u7b49\u5177\u4f53\u5b9e\u73b0\u5c31\u80fd\u63d0\u7eb2\u6308\u9886\uff0c\u65e0\u9700\u5728\u5b9e\u73b0\u7ec6\u8282\u4e0a\u7ea0\u7ed3\u3002 \u603b\u7684\u6765\u8bf4\uff0c\u534f\u7a0b\u4e3a\u534f\u540c\u4efb\u52a1\u63d0\u4f9b\u4e86\u4e00\u79cd\u8fd0\u884c\u65f6\u62bd\u8c61\u3002\u8fd9\u79cd\u62bd\u8c61\u975e\u5e38\u9002\u5408\u4e8e\u534f\u540c\u591a\u4efb\u52a1\u8c03\u5ea6\u548c\u6570\u636e\u6d41\u5904\u7406\u3002\u5728\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u56e0\u4e3a\u7528\u6237\u6001\u7ebf\u7a0b\u5207\u6362\u4ee3\u4ef7\u6bd4\u5185\u6838\u6001\u7ebf\u7a0b\u5c0f\uff0c\u534f\u7a0b\u6210\u4e3a\u4e86\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u591a\u4efb\u52a1\u6a21\u578b\u3002\u6211\u4eec\u65e0\u6cd5\u9884\u6d4b\u672a\u6765\uff0c\u4f46\u662f\u53ef\u4ee5\u770b\u5230\uff0c\u534f\u7a0b\u5df2\u7ecf\u6210\u4e3a\u8bb8\u591a\u64c5\u957f\u6570\u636e\u5904\u7406\u7684\u8bed\u8a00\u7684\u4e00\u7ea7\u5bf9\u8c61\u3002\u968f\u7740\u8ba1\u7b97\u673a\u5e76\u884c\u6027\u80fd\u7684\u63d0\u5347\uff0c\u7528\u6237\u6001\u4efb\u52a1\u8c03\u5ea6\u5df2\u7ecf\u6210\u4e3a\u4e00\u79cd\u6807\u51c6\u7684\u591a\u4efb\u52a1\u6a21\u578b\u3002\u5728\u8fd9\u6837\u7684\u5927\u8d8b\u52bf\u4e0b\uff0c\u534f\u7a0b\u8fd9\u4e2a\u7b80\u5355\u4e14\u6709\u6548\u7684\u6a21\u578b\u5c31\u663e\u5f97\u66f4\u52a0\u5f15\u4eba\u6ce8\u76ee\u3002 \u4ee5\u73b0\u4ee3\u773c\u5149\u6765\u770b\uff0c\u9ad8\u7ea7\u8bed\u8a00\u7f16\u8bd1\u5668\u5b9e\u9645\u4e0a\u662f\u591a\u4e2a\u6b65\u9aa4\u7ec4\u5408\u800c\u6210\uff1a\u8bcd\u6cd5\u89e3\u6790\uff0c\u8bed\u6cd5\u89e3\u6790\uff0c\u8bed\u6cd5\u6811\u6784\u5efa\uff0c\u4ee5\u53ca\u4f18\u5316\u548c\u76ee\u6807\u4ee3\u7801\u751f\u6210\u7b49\u7b49\u3002\u7f16\u8bd1\u5b9e\u8d28\u4e0a\u5c31\u662f\u4ece\u6e90\u7a0b\u5e8f\u51fa\u53d1\uff0c\u4f9d\u6b21\u5c06\u8fd9\u4e9b\u6b65\u9aa4\u7684\u8f93\u51fa\u4f5c\u4e3a\u4e0b\u4e00\u6b65\u7684\u8f93\u5165\uff0c\u6700\u7ec8\u8f93\u51fa\u76ee\u6807\u4ee3\u7801\u3002\u5728\u73b0\u4ee3\u8ba1\u7b97\u673a\u4e0a\u5b9e\u73b0\u8fd9\u79cd\u7ba1\u9053\u5f0f\u7684\u67b6\u6784\u6beb\u65e0\u56f0\u96be\uff1a\u53ea\u9700\u8981\u4f9d\u6b21\u8fd0\u884c\uff0c\u4e2d\u95f4\u7ed3\u679c\u5b58\u4e3a\u4e2d\u95f4\u6587\u4ef6\u6216\u653e\u5165\u5185\u5b58\u5373\u53ef\u3002GCC \u548c Clang \u7f16\u8bd1\u5668\uff0c\u4ee5\u53ca ANTLR \u6784\u5efa\u7684\u7f16\u8bd1\u5668\uff0c\u90fd\u9075\u5faa\u8fd9\u6837\u7684\u8bbe\u8ba1\u3002\u800c\u5728 Conway \u7684\u8bbe\u8ba1\u91cc\uff0c\u8bcd\u6cd5\u548c\u8bed\u6cd5\u89e3\u6790\u4e0d\u518d\u662f\u4e24\u4e2a\u72ec\u7acb\u8fd0\u884c\u7684\u6b65\u9aa4\uff0c\u800c\u662f\u4ea4\u7ec7\u5728\u4e00\u8d77\u3002\u7f16\u8bd1\u5668\u7684\u63a7\u5236\u6d41\u5728\u8bcd\u6cd5\u548c\u8bed\u6cd5\u89e3\u6790\u4e4b\u95f4\u6765\u56de\u5207\u6362\uff1a\u5f53\u8bcd\u6cd5\u6a21\u5757\u8bfb\u5165\u8db3\u591f\u591a\u7684 token \u65f6\uff0c\u63a7\u5236\u6d41\u4ea4\u7ed9\u8bed\u6cd5\u5206\u6790\uff1b\u5f53\u8bed\u6cd5\u5206\u6790\u6d88\u5316\u5b8c\u6240\u6709 token \u540e\uff0c\u63a7\u5236\u6d41\u4ea4\u7ed9\u8bcd\u6cd5\u5206\u6790\u3002\u8bcd\u6cd5\u548c\u8bed\u6cd5\u5206\u522b\u72ec\u7acb\u7ef4\u62a4\u81ea\u8eab\u7684\u8fd0\u884c\u72b6\u6001\u3002Conway \u6784\u5efa\u7684\u8fd9\u79cd\u534f\u540c\u5de5\u4f5c\u673a\u5236\uff0c\u9700\u8981\u53c2\u4e0e\u8005\u201c\u8ba9\u51fa (yield)\u201d\u63a7\u5236\u6d41\u65f6\uff0c\u8bb0\u4f4f\u81ea\u8eab\u72b6\u6001\uff0c\u4ee5\u4fbf\u5728\u63a7\u5236\u6d41\u8fd4\u56de\u65f6\u80fd\u591f\u4ece\u4e0a\u6b21\u8ba9\u51fa\u7684\u4f4d\u7f6e\u6062\u590d(resume)\u6267\u884c\u3002\u7b80\u8a00\u4e4b\uff0c\u534f\u7a0b\u7684\u5168\u90e8\u7cbe\u795e\u5c31\u5728\u4e8e\u63a7\u5236\u6d41\u7684\u4e3b\u52a8\u8ba9\u51fa\u548c\u6062\u590d\u3002\u6211\u4eec\u719f\u6089\u7684\u5b50\u8fc7\u7a0b\u8c03\u7528\u53ef\u4ee5\u770b\u4f5c\u5728\u8fd4\u56de\u65f6\u8ba9\u51fa\u63a7\u5236\u6d41\u7684\u4e00\u79cd\u7279\u6b8a\u7684\u534f\u7a0b\uff0c\u5176\u5185\u90e8\u72b6\u6001\u5728\u8fd4\u56de\u65f6\u88ab\u4e22\u5f03\u4e86\uff0c\u56e0\u6b64\u4e0d\u5b58\u5728\u201c\u6062\u590d\u201d\u8fd9\u4e2a\u64cd\u4f5c\u3002", 
            "title": "\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3001\u534f\u7a0b"
        }, 
        {
            "location": "/other/concurrent/#_6", 
            "text": "\u5e76\u53d1: (\u5b8f\u89c2\u7684)\uff0c\u903b\u8f91\u4e0a\u7684\u540c\u65f6\u8fd0\u884c\uff0c\u4f46\u540c\u4e00\u65f6\u95f4\u5e95\u5c42\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u5728\u8fd0\u884c    \u5e76\u884c: (\u5fae\u89c2\u7684)\uff0c\u771f\u6b63\u7684\u540c\u65f6\u8fd0\u884c\uff0c\u901a\u8fc7\u591a\u6838\u5b9e\u73b0\uff0c\u4efb\u52a1\u5206\u5e03\u5728\u4e0d\u540c\u6838\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u662f\u5206\u5e03\u5728\u4e0d\u540c\u670d\u52a1\u5668\u4e0a\u3002    \u591a\u4efb\u52a1: \u53ea\u8981\u903b\u8f91\u4e0a\u80fd\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff0c\u5c31\u7b97\u662f\u591a\u4efb\u52a1\uff0c\u65e0\u8bba\u662f\u5426\u771f\u6b63\u5e76\u884c\u3002    \u5355\u6838cpu\u5c31\u662f\u5e76\u53d1\uff0c\u591a\u6838cpu\u624d\u6709\u53ef\u80fd\u5e76\u884c\uff0c\u4e3a\u4ec0\u4e48\u8bf4\u662f\u6709\u53ef\u80fd\u800c\u4e0d\u662f\u7edd\u5bf9\uff0c\u56e0\u4e3a\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u7a0b\u5e8f\u6570\u91cf\u5fc5\u5b9a\u6bd4cpu\u6570\u91cf\u591a  \u53ea\u6709\u5e95\u5c42\u5b9e\u73b0\u5f02\u6b65\uff0c\u4e0a\u5c42\u624d\u6709\u5e76\u884c\u7684\u53ef\u80fd\uff0c\u5426\u5219\u6700\u591a\u53ea\u662f\u5e76\u53d1", 
            "title": "\u5e76\u53d1\u3001\u5e76\u884c\u3001\u591a\u4efb\u52a1"
        }, 
        {
            "location": "/other/concurrent/#cpuio", 
            "text": "io\u5bc6\u96c6\u578b: \u5305\u542b\u7f51\u7edcio\u548c\u78c1\u76d8io\u7b49\uff0c\u5c31\u662f\u4e00\u4e2a\u6267\u884c\u5f88\u4e45\u7684\u64cd\u4f5c\u4e0d\u662f\u7531\u672c\u673acpu\u8fdb\u884c\u64cd\u4f5c\u800c\u662f\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u7136\u540e\u7531\u8fdc\u7a0b\u670d\u52a1\u5668\u64cd\u4f5c\uff0c\u6216\u8005\u662f\u53d1\u9001\u4e00\u4e2a\u8bfb\u5199\u78c1\u76d8\u7684\u8bf7\u6c42\u7136\u540e\u7531\u78c1\u76d8\u786c\u4ef6DMA\u8fdb\u884c\u64cd\u4f5c\u3002\u603b\u4e4b\u5c31\u662fcpu\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\uff0c\u7136\u540e\u7b49\u5f85\u7ed3\u679c\u3002\u5982\u679c\u4e00\u4e2a\u4e1a\u52a1\u7684\u8fd9\u79cd\u7c7b\u578b\u7684\u64cd\u4f5c\u6bd4\u8f83\u591a\uff0c\u5c31\u79f0\u8fd9\u4e2a\u4e1a\u52a1\u4e3aio\u5bc6\u96c6\u578b\u4e1a\u52a1    cpu\u5bc6\u96c6\u578b: \u4e00\u4e2a\u64cd\u4f5c\u7531\u672c\u673acpu\u8fdb\u884c\u8fd0\u7b97\u3002\u5982\u679c\u4e00\u4e2a\u4e1a\u52a1\u7684cpu\u8fd0\u7b97\u91cf\u6bd4\u8f83\u5927\uff0c\u800cio\u64cd\u4f5c\u6bd4\u8f83\u5c11\uff0c\u5219\u79f0\u8fd9\u4e2a\u4e1a\u52a1\u4e3acpu\u5bc6\u96c6\u578b\u4e1a\u52a1    \u591a\u6838\u5904\u7406\u5668\u53ef\u4ee5\u5b9e\u73b0cpu\u8fd0\u7b97\u7684\u5e76\u884c\uff0c\u63d0\u9ad8\u8fd0\u7b97\u80fd\u529b\uff0c\u8fd9\u4e2a\u65f6\u5019\u7528\u591a\u8fdb\u7a0b\u6216\u8005\u591a\u7ebf\u7a0b\u5c31\u9002\u7528\u4e8ecpu\u5bc6\u96c6\u578b\u3002\u800c\u534f\u7a0b\u4e0d\u9002\u5408\uff0c\u56e0\u4e3a\u534f\u7a0b\u662f\u7528\u6237\u6001\u7684\u6280\u672f\uff0c\u53ea\u80fd\u5355\u6838\uff0c\u56e0\u6b64\u5e76\u4e0d\u80fd\u63d0\u9ad8cpu\u5e76\u884c\u8fd0\u7b97\u80fd\u529b\uff0c\u4e5f\u56e0\u6b64\u53ea\u9002\u5408io\u5bc6\u96c6\u578b\u3002\u591a\u8fdb\u7a0b\u548c\u591a\u7ebf\u7a0b\u9664\u4e86\u5728\u591a\u6838\u65f6\u5019\u9002\u5e94cpu\u5bc6\u96c6\u578b\uff0c\u4e5f\u53ef\u4ee5\u9002\u7528io\u5bc6\u96c6\u578b\uff0c\u5c24\u5176\u662f\u5355\u6838\u65f6\u5019\uff0c\u53ea\u4e0d\u8fc7\u534f\u7a0b\u7684\u5207\u6362\u5f00\u9500\u6bd4\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u90fd\u5c0f   \u7ecf\u5178\u8bb2\u89e3\uff08\u7f51\u4e0a\u6458\u53d6\uff09  \u603b\u7684\u8bf4\u6765\uff0c\u5f53\u5355\u6838cpu\u6027\u80fd\u63d0\u5347\uff0ccpu\u4e0d\u5728\u6210\u4e3a\u6027\u80fd\u74f6\u9888\u65f6\uff0c\u91c7\u7528\u5f02\u6b65server\u80fd\u591f\u7b80\u5316\u7f16\u7a0b\u6a21\u578b\uff0c\u4e5f\u80fd\u63d0\u9ad8IO\u5bc6\u96c6\u578b\u5e94\u7528\u7684\u6027\u80fd\u3002  \u5728 I/O \u5bc6\u96c6\u578b\u7684\u5e94\u7528\u4e2d\uff0cCPU \u53ef\u80fd\u603b\u662f\u82e6\u82e6\u7b49\u5f85\u7740 I/O \u64cd\u4f5c\u7684\u5b8c\u6210\u3002\u5982\u679c\u662f\u4e00\u4e2a\u63d0\u4f9b Web \u7684\u670d\u52a1\u7684\u8bdd\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u4e00\u4e2a\u7ebf\u7a0b\u4f1a\u56e0\u4e3a I/O \u963b\u585e\u800c\u65e0\u6cd5\u5feb\u901f\u7684\u5bf9\u5176\u4ed6\u8bf7\u6c42\u8fdb\u884c\u54cd\u5e94\u3002\u52bf\u5fc5\u4e5f\u9020\u6210\u4e00\u79cd\u8d44\u6e90\u6d6a\u8d39\u548c\u6548\u7387\u4f4e\u4e0b\u3002\u5728\u8fd9\u79cd\u65f6\u5019\uff0c\u534f\u7a0b\u7684\u4ef7\u503c\u5c31\u4f53\u73b0\u4e86\u51fa\u6765\uff0c\u4f8b\u5982\u57fa\u4e8e Python \u8bed\u8a00\u5b9e\u73b0\u7684 tornado Web \u6846\u67b6\u5c31\u662f\u57fa\u4e8e\u6b64\u539f\u7406\u3002", 
            "title": "cpu\u5bc6\u96c6\u578b\u548cio\u5bc6\u96c6\u578b"
        }, 
        {
            "location": "/other/concurrent/#_7", 
            "text": "\u56e0\u4e3a\u6211\u4eec\u6240\u719f\u6089\u7684\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf\uff0c\u90fd\u662f\u4ece\u534f\u540c\u5f0f\u8c03\u5ea6\uff08\u5982 Windows 3.2\uff0c Mac OS 9 \u7b49\uff09\u8fc7\u6e21\u5230\u62a2\u5360\u5f0f\u591a\u4efb\u52a1\u7cfb\u7edf\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u8c03\u5ea6\u65b9\u5f0f\u5e76\u65e0\u9ad8\u4e0b\uff0c\u5b8c\u5168\u53d6\u51b3\u4e8e\u5e94\u7528\u573a\u666f\u3002\u62a2\u5360\u5f0f\u7cfb\u7edf\u5141\u8bb8\u64cd\u4f5c\u7cfb\u7edf\u5265\u593a\u8fdb\u7a0b\u6267\u884c\u6743\u9650\uff0c\u62a2\u5360\u63a7\u5236\u6d41\uff0c\u56e0\u800c\u5929\u7136\u9002\u5408\u670d\u52a1\u5668\u548c\u56fe\u5f62\u64cd\u4f5c\u7cfb\u7edf\uff0c\u56e0\u4e3a\u8c03\u5ea6\u5668\u53ef\u4ee5\u4f18\u5148\u4fdd\u8bc1\u5bf9\u7528\u6237\u4ea4\u4e92\u548c\u7f51\u7edc\u4e8b\u4ef6\u7684\u5feb\u901f\u54cd\u5e94\u3002\u5f53\u5e74 Windows 95 \u521a\u521a\u63a8\u51fa\u7684\u65f6\u5019\uff0c\u62a2\u5360\u5f0f\u591a\u4efb\u52a1\u5c31\u88ab\u4f5c\u4e3a\u4e00\u5927\u4e70\u70b9\u5927\u52a0\u5ba3\u4f20\u3002\u534f\u540c\u5f0f\u8c03\u5ea6\u5219\u7b49\u5230\u8fdb\u7a0b\u65f6\u95f4\u7247\u7528\u5b8c\u6216\u7cfb\u7edf\u8c03\u7528\u65f6\u8f6c\u79fb\u6267\u884c\u6743\u9650\uff0c\u56e0\u6b64\u9002\u5408\u5b9e\u65f6\u6216\u5206\u65f6\u7b49\u7b49\u5bf9\u8fd0\u884c\u65f6\u95f4\u6709\u4fdd\u969c\u7684\u7cfb\u7edf\u3002  \u534f\u540c\u5f0f\u8c03\u5ea6\u4e5f\u53eb\u975e\u62a2\u5360\u5f0f\u8c03\u5ea6\u3002\u534f\u7a0b\u5c31\u662f\u7ecf\u5178\u7684\u975e\u62a2\u5360\u5f0f\u8c03\u5ea6\u3002", 
            "title": "\u534f\u540c\u5f0f\u8c03\u5ea6\u3001\u62a2\u5360\u5f0f\u8c03\u5ea6"
        }, 
        {
            "location": "/other/concurrent/#_8", 
            "text": "\u4e0b\u9762\u51e0\u4e2a\u672f\u8bed\uff0c\u5176\u5b9e\u539f\u7406\u90fd\u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u4e00\u79cd\u4e3b\u52a8\u5f0f\u7684\u64cd\u4f5c\uff0c\u53ea\u662f\u6709\u7684\u540d\u8bcd\u65e9\u51fa\u73b0\uff0c\u6709\u7684\u540d\u8bcd\u665a\u51fa\u73b0\u3002    \u4e8b\u4ef6\u9a71\u52a8: \u662f\u4e00\u79cd\u5b8f\u89c2\u7684\u7ecf\u5178\u6a21\u5f0f\uff0c\u7b49\u5f85\u6d88\u606f\u505a\u4e8b\uff0c\u5c31\u662f\u4e8b\u4ef6\u9a71\u52a8\uff0c\u4e0b\u9762\u7684\u89c2\u5bdf\u8005\u3001\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u3001\u8ba2\u9605\u53d1\u5e03\u3001\u670d\u52a1\u53d1\u73b0\u90fd\u53ea\u662f\u4e8b\u4ef6\u9a71\u52a8\u7684\u5177\u4f53\u5b9e\u73b0\u6a21\u578b\u3002\uff08\u4e2a\u4eba\u7406\u89e3\uff09  \u7ecf\u5178\u8bb2\u89e3\uff08\u7f51\u4e0a\u6458\u53d6\uff09 \u73b0\u4e0b\u6d41\u884c\u7684\u5f02\u6b65server\u90fd\u662f\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7684\uff08\u5982nginx\uff09\u3002\u4e8b\u4ef6\u9a71\u52a8\u7b80\u5316\u4e86\u7f16\u7a0b\u6a21\u578b\uff0c\u5f88\u597d\u5730\u89e3\u51b3\u4e86\u591a\u7ebf\u7a0b\u96be\u4e8e\u7f16\u7a0b\uff0c\u96be\u4e8e\u8c03\u8bd5\u7684\u95ee\u9898\u3002\u5f02\u6b65\u4e8b\u4ef6\u9a71\u52a8\u6a21\u578b\u4e2d\uff0c\u628a\u4f1a\u5bfc\u81f4\u963b\u585e\u7684\u64cd\u4f5c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c\uff0c\u4e3b\u7ebf\u7a0b\u8d1f\u8d23\u53d1\u8d77\u8fd9\u4e2a\u5f02\u6b65\u64cd\u4f5c\uff0c\u5e76\u5904\u7406\u8fd9\u4e2a\u5f02\u6b65\u64cd\u4f5c\u7684\u7ed3\u679c\u3002\u7531\u4e8e\u6240\u6709\u963b\u585e\u7684\u64cd\u4f5c\u90fd\u8f6c\u5316\u4e3a\u5f02\u6b65\u64cd\u4f5c\uff0c\u7406\u8bba\u4e0a\u4e3b\u7ebf\u7a0b\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u662f\u5728\u5904\u7406\u5b9e\u9645\u7684\u8ba1\u7b97\u4efb\u52a1\uff0c\u5c11\u4e86\u591a\u7ebf\u7a0b\u7684\u8c03\u5ea6\u65f6\u95f4\uff0c\u6240\u4ee5\u8fd9\u79cd\u6a21\u578b\u7684\u6027\u80fd\u901a\u5e38\u4f1a\u6bd4\u8f83\u597d\u3002   \u89c2\u5bdf\u8005\u6a21\u5f0f: \u6211\u8ba4\u4e3a\u8fd9\u662f\u4e8b\u4ef6\u9a71\u52a8\u7684\u5177\u4f53\u6a21\u5f0f\uff0c\u800c\u4e0b\u9762\u7684\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u3001\u8ba2\u9605\u53d1\u5e03\u3001\u670d\u52a1\u53d1\u73b0\uff0c\u53c8\u662f\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u5177\u4f53\u5b9e\u73b0\u65b9\u5f0f\u3002  \u7ecf\u5178\u8bb2\u89e3\uff08\u7f51\u4e0a\u6458\u53d6\uff09 \u6709\u65f6\u53c8\u88ab\u79f0\u4e3a\u53d1\u5e03\uff08publish \uff09-\u8ba2\u9605\uff08Subscribe\uff09\u6a21\u5f0f\u3001\u6a21\u578b-\u89c6\u56fe\uff08View\uff09\u6a21\u5f0f\u3001\u6e90-\u6536\u542c\u8005(Listener)\u6a21\u5f0f\u6216\u4ece\u5c5e\u8005\u6a21\u5f0f\u3002\u5c5e\u4e8e\u884c\u4e3a\u578b\u6a21\u5f0f\u7684\u4e00\u79cd\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u79cd\u4e00\u5bf9\u591a\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u8ba9\u591a\u4e2a\u89c2\u5bdf\u8005\u5bf9\u8c61\u540c\u65f6\u76d1\u542c\u67d0\u4e00\u4e2a\u4e3b\u9898\u5bf9\u8c61\u3002\u8fd9\u4e2a\u4e3b\u9898\u5bf9\u8c61\u5728\u72b6\u6001\u53d8\u5316\u65f6\uff0c\u4f1a\u901a\u77e5\u6240\u6709\u7684\u89c2\u5bdf\u8005\u5bf9\u8c61\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u81ea\u52a8\u66f4\u65b0\u81ea\u5df1\u3002   \u751f\u4ea7\u6d88\u8d39\u8005\u6a21\u5f0f: \u6307\u7684\u662f\u7531\u751f\u4ea7\u8005\u5c06\u6570\u636e\u6e90\u6e90\u4e0d\u65ad\u63a8\u9001\u5230\u6d88\u606f\u4e2d\u5fc3\uff0c\u7531\u4e0d\u540c\u7684\u6d88\u8d39\u8005\u4ece\u6d88\u606f\u4e2d\u5fc3\u53d6\u51fa\u6570\u636e\u505a\u81ea\u5df1\u7684\u5904\u7406\uff0c\u5728\u540c\u4e00\u7c7b\u522b\u4e0b\uff0c\u6240\u6709\u6d88\u8d39\u8005\u62ff\u5230\u7684\u90fd\u662f\u540c\u6837\u7684\u6570\u636e    \u8ba2\u9605\u53d1\u5e03\u6a21\u5f0f: \u672c\u8d28\u4e0a\u4e5f\u662f\u4e00\u79cd\u751f\u4ea7\u6d88\u8d39\u8005\u6a21\u5f0f\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u7531\u8ba2\u9605\u8005\u9996\u5148\u5411\u6d88\u606f\u4e2d\u5fc3\u6307\u5b9a\u81ea\u5df1\u5bf9\u54ea\u4e9b\u6570\u636e\u611f\u5174\u8da3\uff0c\u53d1\u5e03\u8005\u63a8\u9001\u7684\u6570\u636e\u7ecf\u8fc7\u6d88\u606f\u4e2d\u5fc3\u540e\uff0c\u6bcf\u4e2a\u8ba2\u9605\u8005\u62ff\u5230\u7684\u4ec5\u4ec5\u662f\u81ea\u5df1\u611f\u5174\u8da3\u7684\u4e00\u7ec4\u6570\u636e\u3002    \u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0: \u5fae\u670d\u52a1\u67b6\u6784\u7531\u4e00\u4e2a\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u548c\u56f4\u7ed5\u8be5\u6ce8\u518c\u4e2d\u5fc3\u7684\u4e00\u5806\u670d\u52a1\u7ec4\u6210\u3002\u6bcf\u4e2a\u670d\u52a1\u5c06\u81ea\u5df1\u7684\u5730\u5740\u548c\u5176\u4ed6\u5143\u4fe1\u606f\u6ce8\u518c\u5230\u6ce8\u518c\u4e2d\u5fc3\uff08zookeeper\u6216etcd\u7b49\uff09\uff0c\u6709\u4f9d\u8d56\u5b83\u7684\u5176\u4ed6\u670d\u52a1\u4f1a\u5b9e\u65f6\u53d1\u73b0\uff08watch\u673a\u5236\uff09\u53d8\u5316\u3002    \u751f\u4ea7\u6d88\u8d39\u8005\u6a21\u5f0f\u548c\u8ba2\u9605\u53d1\u5e03\u6a21\u5f0f\u662f\u4f7f\u7528\u6d88\u606f\u4e2d\u95f4\u4ef6\u65f6\u6700\u5e38\u7528\u7684\uff0c\u7528\u4e8e\u529f\u80fd\u89e3\u8026\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u95f4\u7684\u6d88\u606f\u901a\u4fe1\u3002", 
            "title": "\u4e8b\u4ef6\u9a71\u52a8\u3001\u89c2\u5bdf\u8005\u3001\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u3001\u8ba2\u9605\u53d1\u5e03\u3001\u670d\u52a1\u53d1\u73b0"
        }, 
        {
            "location": "/other/concurrent/#_9", 
            "text": "\u5728\u591a\u6838CPU\u4e0b\uff0c\u540c\u4e00\u8fdb\u7a0b\u4e0b\u7684\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4e0d\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c?    \u4e3a\u4ec0\u4e48\u89c9\u5f97\u534f\u7a0b\u662f\u8d8b\u52bf?    \u7f16\u7a0b\u73e0\u7391\u756a\u5916\u7bc7-Q \u534f\u7a0b\u7684\u5386\u53f2\uff0c\u73b0\u5728\u548c\u672a\u6765    \u6d45\u8c08\u6211\u5bf9\u534f\u7a0b\u7684\u7406\u89e3    \u5f02\u6b65\u548c\u975e\u963b\u585e\u4e4b\u95f4\u7684\u533a\u522b    \u5f02\u6b65\uff0c\u591a\u7ebf\u7a0b\u548c\u5e76\u884c\u7684\u533a\u522b?    \u7ebf\u7a0b\u7684\u540c\u6b65\u548c\u5f02\u6b65    \u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3001\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u3001\u534f\u7a0b\u548cgo\u4e2d\u7684Goroutine \u90a3\u4e9b\u4e8b\u513f    \u600e\u6837\u7406\u89e3\u963b\u585e\u975e\u963b\u585e\u4e0e\u540c\u6b65\u5f02\u6b65\u7684\u533a\u522b?    \u6df1\u5165\u7406\u89e3 Python \u5f02\u6b65\u7f16\u7a0b    Kafka\u4e0b\u7684\u751f\u4ea7\u6d88\u8d39\u8005\u6a21\u5f0f\u4e0e\u8ba2\u9605\u53d1\u5e03\u6a21\u5f0f    \u4ece\u5185\u6838\u5f00\u53d1\u8005\u7684\u89d2\u5ea6\u770b\u534f\u7a0b\u4e0e\u7ebf\u7a0b    \u4ece0\u52301\uff0cPython\u5f02\u6b65\u7f16\u7a0b\u7684\u6f14\u8fdb\u4e4b\u8def    python\u7684\u5355\u7ebf\u7a0b\u5f02\u6b65\u975e\u963b\u585e\u6846\u67b6karlooper    \u8ddf\u65e0\u95fb\u5b66Go\u8bed\u8a00\uff1aGo\u7f16\u7a0b\u57fa\u7840\u89c6\u9891\u6559\u7a0b    \u534f\u7a0bCoroutine\u2014\u2014\u7528\u540c\u6b65\u7684\u65b9\u5f0f\u7f16\u5199\u5f02\u6b65\u7684\u903b\u8f91    go\u534f\u7a0b\u901a\u4fe1", 
            "title": "\u53c2\u8003\u8d44\u6599"
        }, 
        {
            "location": "/other/binary_operation/", 
            "text": "\u5de6\u79fb\u8fd0\u7b97\u7b26\n\n\n\n\nx \n y\n\n\n\n\n\u8868\u793a\u5c06x\u7684\u4e8c\u8fdb\u5236\u6574\u4e2a\u5de6\u79fby\u4f4d\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u539f\u6765\u4e0d\u52a8\uff0c\u7136\u540e\u5728\u6700\u53f3\u8fb9\u52a0y\u4e2a0\n\n\n\u6bd4\u5982100 \n 2\u4e3a400\uff0c\u56e0\u4e3a100\u7684\u4e8c\u8fdb\u5236\u662f1100100\uff0c\u5de6\u79fb2\u4f4d\u5c31\u662f110010000\uff0c\u5373400\n\n\n\u53f3\u79fb\u8fd0\u7b97\u7b26\n\n\n\n\nx \n y\n\n\n\n\n\u8868\u793a\u5c06y\u7684\u4e8c\u8fdb\u5236\u6574\u4e2a\u53f3\u79fby\u4f4d\uff0c\u8d85\u51fa\u8fb9\u754c\u7684\u5c31\u9057\u5f03\u6389\uff0c\u5168\u90e8\u8d85\u51fa\u8fb9\u754c\u7684\u5c31\u4e3a0\n\n\n\u6bd4\u5982400 \n 2\u4e3a100\uff0c\u56e0\u4e3a400\u7684\u4e8c\u8fdb\u5236\u662f110010000\uff0c\u53f3\u79fb2\u4f4d\u5c31\u662f1100100\uff0c\u5373\u5341\u8fdb\u5236\u7684100\n\n\n\u6bd4\u5982\u4e8c\u8fdb\u5236\u7684101\uff0c\u53f3\u79fb2\u4f4d\u5c31\u662f1\uff0c\u4e5f\u5373\u5341\u8fdb\u5236\u76841\uff0c\u4f46\u5982\u679c\u662f\u53f3\u79fb3\u4f4d\u5c31\u662f0", 
            "title": "4. \u4f4d\u8fd0\u7b97"
        }, 
        {
            "location": "/other/binary_operation/#_1", 
            "text": "x   y  \u8868\u793a\u5c06x\u7684\u4e8c\u8fdb\u5236\u6574\u4e2a\u5de6\u79fby\u4f4d\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u539f\u6765\u4e0d\u52a8\uff0c\u7136\u540e\u5728\u6700\u53f3\u8fb9\u52a0y\u4e2a0  \u6bd4\u5982100   2\u4e3a400\uff0c\u56e0\u4e3a100\u7684\u4e8c\u8fdb\u5236\u662f1100100\uff0c\u5de6\u79fb2\u4f4d\u5c31\u662f110010000\uff0c\u5373400", 
            "title": "\u5de6\u79fb\u8fd0\u7b97\u7b26&lt;&lt;"
        }, 
        {
            "location": "/other/binary_operation/#_2", 
            "text": "x   y  \u8868\u793a\u5c06y\u7684\u4e8c\u8fdb\u5236\u6574\u4e2a\u53f3\u79fby\u4f4d\uff0c\u8d85\u51fa\u8fb9\u754c\u7684\u5c31\u9057\u5f03\u6389\uff0c\u5168\u90e8\u8d85\u51fa\u8fb9\u754c\u7684\u5c31\u4e3a0  \u6bd4\u5982400   2\u4e3a100\uff0c\u56e0\u4e3a400\u7684\u4e8c\u8fdb\u5236\u662f110010000\uff0c\u53f3\u79fb2\u4f4d\u5c31\u662f1100100\uff0c\u5373\u5341\u8fdb\u5236\u7684100  \u6bd4\u5982\u4e8c\u8fdb\u5236\u7684101\uff0c\u53f3\u79fb2\u4f4d\u5c31\u662f1\uff0c\u4e5f\u5373\u5341\u8fdb\u5236\u76841\uff0c\u4f46\u5982\u679c\u662f\u53f3\u79fb3\u4f4d\u5c31\u662f0", 
            "title": "\u53f3\u79fb\u8fd0\u7b97\u7b26&gt;&gt;"
        }, 
        {
            "location": "/other/loop_iterate_traversal_recursion/", 
            "text": "\u8be6\u7ec6\u5730\u5740\uff1a\nhttp://www.nowamagic.net/librarys/veda/detail/2324\n\n\n\u4e0b\u9762\u6458\u5f55\u90e8\u5206\u5185\u5bb9\uff1a\n\n\n\n\n\n\n\u5faa\u73af\uff08loop\uff09\uff1a\u6307\u7684\u662f\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u91cd\u590d\u6267\u884c\u540c\u4e00\u6bb5\u4ee3\u7801\u3002\u6bd4\u5982\uff0cwhile\u8bed\u53e5\u3002\n\n\n\n\n\n\n\u8fed\u4ee3\uff08iterate\uff09\uff1a\u6307\u7684\u662f\u6309\u7167\u67d0\u79cd\u987a\u5e8f\u9010\u4e2a\u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u6bcf\u4e00\u9879\u3002\u6bd4\u5982\uff0cfor\u8bed\u53e5\u3002\n\n\n\n\n\n\n\u904d\u5386\uff08traversal\uff09\uff1a\u6307\u7684\u662f\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5219\u8bbf\u95ee\u6811\u5f62\u7ed3\u6784\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u800c\u4e14\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ea\u8bbf\u95ee\u4e00\u6b21\u3002\n\n\n\n\n\n\n\u9012\u5f52\uff08recursion\uff09\uff1a\u6307\u7684\u662f\u4e00\u4e2a\u51fd\u6570\u4e0d\u65ad\u8c03\u7528\u81ea\u8eab\u7684\u884c\u4e3a\u3002\u6bd4\u5982\uff0c\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u8f93\u51fa\u8457\u540d\u7684\u6590\u6ce2\u7eb3\u5951\u6570\u5217\u3002", 
            "title": "5. \u5faa\u73af\u3001\u8fed\u4ee3\u3001\u904d\u5386\u3001\u9012\u5f52\u7684\u533a\u522b"
        }, 
        {
            "location": "/other/go_python/", 
            "text": "\u56de\u8c03\u51fd\u6570\n\n\n\n\n\n\n\u9762\u5411\u5bf9\u8c61\n\n\n\n\n\n\n\u9e2d\u5b50\u7c7b\u578b/\u63a5\u53e3\n\n\n\n\n\n\n\u63a8\u8350\u5c0f\u767d\u770b\u770b: \n\u4ece\u65e0\u5230\u6709\u9010\u6b65\u7406\u89e3\u9762\u5411\u5bf9\u8c61\u548c\u63a5\u53e3", 
            "title": "6. go\u548cpython\u7684\u6bd4\u8f83"
        }, 
        {
            "location": "/other/oo/", 
            "text": "\u5076\u7136\u5728\u4e00\u4e2aQQ\u6280\u672f\u7fa4\u91cc\u770b\u5230\u7684\u4e00\u4e2a\u56fe\u7247\uff0c\u633a\u751f\u52a8\u7684:\n\n\n\n\n\u9762\u5411\u5bf9\u8c613\u6b65\n\n\n\n\n\u8be6\u89c1\uff1a\nhttp://developer.51cto.com/art/200906/130568.htm\n\n\n\n\n\n\n\u7cfb\u7edf\u5206\u6790\n\n\n\n\n\n\n\u7cfb\u7edf\u8bbe\u8ba1\n\n\n\n\n\n\n\u5b9e\u73b0\uff08\u7f16\u7801\uff09\n\n\n\n\n\n\n\u91cd\u8f7doverload\u4e0e\u8986\u76d6override\n\n\n\n\nhttp://developer.51cto.com/art/201106/266705.htm\n\n\nOverload\u662f\u91cd\u8f7d\u7684\u610f\u601d\uff0cOverride\u662f\u8986\u76d6\u7684\u610f\u601d\uff0c\u4e5f\u5c31\u662f\u91cd\u5199\u3002\n\n\n\u91cd\u8f7dOverload\u8868\u793a\u540c\u4e00\u4e2a\u7c7b\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u540d\u79f0\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u4f46\u8fd9\u4e9b\u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\u5404\u4e0d\u76f8\u540c\uff08\u5373\u53c2\u6570\u4e2a\u6570\u6216\u7c7b\u578b\u4e0d\u540c\uff09\u3002\n\n\n\u91cd\u5199Override\u8868\u793a\u5b50\u7c7b\u4e2d\u7684\u65b9\u6cd5\u53ef\u4ee5\u4e0e\u7236\u7c7b\u4e2d\u7684\u67d0\u4e2a\u65b9\u6cd5\u7684\u540d\u79f0\u548c\u53c2\u6570\u5b8c\u5168\u76f8\u540c\uff0c\u901a\u8fc7\u5b50\u7c7b\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u65f6\uff0c\u5c06\u8c03\u7528\u5b50\u7c7b\u4e2d\u7684\u5b9a\u4e49\u65b9\u6cd5\uff0c\u8fd9\u76f8\u5f53\u4e8e\u628a\u7236\u7c7b\u4e2d\u5b9a\u4e49\u7684\u90a3\u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u65b9\u6cd5\u7ed9\u8986\u76d6\u4e86\uff0c\u8fd9\u4e5f\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u591a\u6001\u6027\u7684\u4e00\u79cd\u8868\u73b0\u3002\n\n\n\u91cd\u5199override\u662f\u7236\u7c7b\u4e0e\u5b50\u7c7b\u4e4b\u95f4\u591a\u6001\u6027\u7684\u4e00\u79cd\u8868\u73b0\uff0c\u91cd\u8f7doverload\u662f\u4e00\u4e2a\u7c7b\u4e2d\u591a\u6001\u6027\u7684\u4e00\u79cd\u8868\u73b0\n\uff0cgo\u8bed\u8a00\u53ea\u652f\u6301override\uff0c\u4e0d\u652f\u6301overload\n\n\ngo\u4e0d\u652f\u6301overload\u7684\u4f8b\u5b50\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nMyStruct\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nMyStruct\n)\n \nfoo\n(\ni\n \nint\n)\n \n{\n\n    \nfmt\n.\nPrintln\n(\nthis\n.\nX\n \n+\n \ni\n)\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nMyStruct\n)\n \nfoo\n(\nj\n \nstring\n)\n \n{\n\n    \nfmt\n.\nPrintln\n(\nthis\n.\nX\n)\n\n    \nfmt\n.\nPrintln\n(\nj\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns\n \n:=\n \nMyStruct\n{\n3\n,\n4\n}\n\n    \ns\n.\nfoo\n(\n100\n)\n\n    \ns\n.\nfoo\n(\nhello\n)\n\n\n}\n\n\n\n\n\u62a5\u9519\n./t.go:13:6: (*MyStruct).foo redeclared in this block\n    previous declaration at ./t.go:9:6\n./t.go:13:6: method redeclared: MyStruct.foo\n    method(*MyStruct) func(int)\n    method(*MyStruct) func(string)\n./t.go:21:8: cannot use \nhello\n (type string) as type int in argument to s.foo\n\n\n\n\u591a\u6001\n\n\n\n\nhttp://bbs.itheima.com/thread-119448-1-1.html\n\n\n\u4e0d\u8981\u628a\u51fd\u6570\u91cd\u8f7d\u7406\u89e3\u4e3a\u591a\u6001\u3002\n\n\n\u591a\u6001\u662f\u4e00\u79cd\u8fd0\u884c\u671f\u7684\u884c\u4e3a\uff0c\u4e0d\u662f\u7f16\u8bd1\u671f\u7684\u884c\u4e3a\u3002\n\n\n\u591a\u6001\u53ef\u4ee5\u7406\u89e3\u4e3a \u4e00\u4e2a\u4e8b\u7269\uff0c\u591a\u79cd\u8868\u73b0\u5f62\u6001\u3002\n\n\n\u6bd4\u5982\u4e00\u4e2a\u8001\u5e08\uff08\u597d\u6bd4java\u4e2d\u4e00\u4e2a\u7c7b\uff0c\u4e00\u4e2a\u63cf\u8ff0\u8001\u5e08\u7684\u7c7b\uff09\uff0c\u5728\u5b66\u751f\u9762\u524d\u4ed6\u4ee5\u8001\u5e08\u7684\u5f62\u6001\u5b58\u5728\uff0c\u800c\u5728\u4ed6\u5b69\u5b50\u9762\u524d\u4ee5\u7236\u4eb2\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u5728\u4ed6\u59bb\u5b50\u9762\u524d\u5219\u4ee5\u8001\u516c\u7684\u5f62\u5f0f\u5b58\u5728\u3002\n\n\n\u4f8b\u5982\u5728java\u4e2d\u53ef\u4ee5\u7528\u7236\u7c7b\u7c7b\u578b\u7684\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u7c7b\u578b\n\n\nObject obj=new String(\na\n);\n\n\n\n\nobj\u4e3a\u7236\u7c7b\u7c7b\u578b\u5f15\u7528\uff0c\u7528obj\u6307\u5411\u4e86\u5b50\u7c7b\u5bf9\u8c61String\u3002\n\n\n\u4e0d\u7528\u591a\u6001\u65f6\uff0c\u8fd9\u6837\u5199\n\n\nString s=new String(\na\n);\n\n\n\n\n\u5373\u7528\u672c\u7c7b\u7c7b\u578b\u5f15\u7528\u6307\u5411\u672c\u7c7b\u7c7b\u578b\u5b9e\u4f8b\u3002\n\n\n\n\n\u5173\u4e8ejava\u4e2d\u7684\u591a\u6001\n\n\n\u4e0b\u97622\u4e2a\u90fd\u662f\u591a\u6001\uff1a\n\n\n\n\n\n\n\u7236\u7c7b\u7684\u5f15\u7528\u7c7b\u578b\u53d8\u91cf\u6307\u5411\u4e86\u5b50\u7c7b\u7684\u5bf9\u8c61\n\n\n\n\n\n\n\u63a5\u53e3\u7c7b\u578b\u7684\u5f15\u7528\u7c7b\u578b\u53d8\u91cf\u6307\u5411\u4e86\u63a5\u53e3\u5b9e\u73b0\u7c7b \u7684\u5bf9\u8c61\u3002\n\n\n\n\n\n\n\u4ee5\u4e0b\u662f\u7b2c2\u70b9\u7684\u4f8b\u5b50\uff1a\n\n\n\u5b9e\u73b0\u5173\u7cfb\u4e0b\u7684\u591a\u6001\uff1a\n\u63a5\u53e3 \u53d8\u91cf = new \u63a5\u53e3\u5b9e\u73b0\u7c7b\u7684\u5bf9\u8c61\u3002\n\n\n//\u63a5\u53e3\u7684\u65b9\u6cd5\u5168\u90e8\u90fd\u662f\u975e\u9759\u6001\u7684\u65b9\u6cd5\n\n\ninterface\n \nDao\n{\n\n    \npublic\n \nvoid\n \nadd\n();\n  \n    \npublic\n \nvoid\n \ndelete\n();\n  \n\n}\n  \n\n\n//\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b  \n\n\nclass\n \nUserDao\n \nimplements\n \nDao\n{\n  \n    \npublic\n \nvoid\n \nadd\n(){\n  \n        \nSystem\n.\nout\n.\nprintln\n(\n\u6dfb\u52a0\u5458\u5de5\u6210\u529f\uff01\uff01\n);\n  \n    \n}\n   \n    \npublic\n \nvoid\n \ndelete\n(){\n  \n        \nSystem\n.\nout\n.\nprintln\n(\n\u5220\u9664\u5458\u5de5\u6210\u529f\uff01\uff01\n);\n  \n    \n}\n  \n\n}\n  \n\n\nclass\n \nDemo3\n   \n\n{\n  \n    \npublic\n \nstatic\n \nvoid\n \nmain\n(\nString\n[]\n \nargs\n)\n   \n    \n{\n  \n        \n//\u5b9e\u73b0\u5173\u7cfb\u4e0b\u7684\u591a\u6001  \n\n        \nDao\n \nd\n \n=\n \nnew\n \nUserDao\n();\n \n//\u63a5\u53e3\u7684\u5f15\u7528\u7c7b\u578b\u53d8\u91cf\u6307\u5411\u4e86\u63a5\u53e3\u5b9e\u73b0\u7c7b\u7684\u5bf9\u8c61\u3002  \n\n        \nd\n.\nadd\n();\n  \n    \n}\n  \n\n}\n\n\n\n\n\n\n\n\u9e2d\u5b50\u7c7b\u578b\n\n\n\n\n\u4ecb\u7ecd\n\n\nhttps://zh.wikipedia.org/wiki/\u9e2d\u5b50\u7c7b\u578b\n\n\nhttp://www.jb51.net/article/116025.htm\n\uff08\u9e2d\u5b50\u7c7b\u578b\u4e0e\u591a\u6001\uff09\n\n\n\u5f53\u770b\u5230\u4e00\u53ea\u9e1f\u8d70\u8d77\u6765\u50cf\u9e2d\u5b50\u3001\u6e38\u6cf3\u8d77\u6765\u50cf\u9e2d\u5b50\u3001\u53eb\u8d77\u6765\u4e5f\u50cf\u9e2d\u5b50\uff0c\u90a3\u4e48\u8fd9\u53ea\u9e1f\u5c31\u53ef\u4ee5\u88ab\u79f0\u4e3a\u9e2d\u5b50\n\n\n\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u9e2d\u5b50\u7c7b\u578b\uff08\u82f1\u8bed\uff1aDuck typing\uff09\u662f\u52a8\u6001\u7c7b\u578b\u548c\u67d0\u4e9b\u9759\u6001\u8bed\u8a00\u7684\u4e00\u79cd\u5bf9\u8c61\u63a8\u65ad\u98ce\u683c\u3002\n\n\n\u5728\u9e2d\u5b50\u7c7b\u578b\u4e2d\uff0c\u5173\u6ce8\u7684\u4e0d\u662f\u5bf9\u8c61\u7684\u7c7b\u578b\u672c\u8eab\uff0c\u800c\u662f\u5b83\u662f\u5982\u4f55\u4f7f\u7528\u7684\u3002\n\n\n\u9e2d\u5b50\u7c7b\u578b\u901a\u5e38\u5f97\u76ca\u4e8e\u4e0d\u6d4b\u8bd5\u65b9\u6cd5\u548c\u51fd\u6570\u4e2d\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u800c\u662f\u4f9d\u8d56\u6587\u6863\u3001\u6e05\u6670\u7684\u4ee3\u7801\u548c\u6d4b\u8bd5\u6765\u786e\u4fdd\u6b63\u786e\u4f7f\u7528\u3002\n\n\n\u4e2a\u4eba\u7406\u89e3\u9e2d\u5b50\u7c7b\u578b\u662f\u591a\u6001\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\n\n\npython\u9e2d\u5b50\u7c7b\u578b\n\n\nhttps://docs.python.org/3/glossary.html#term-duck-typing\n\n\nPython\u4e0d\u652f\u6301\u591a\u6001\uff0c\u4e5f\u4e0d\u7528\u652f\u6301\u591a\u6001\uff0cpython\u662f\u4e00\u79cd\u591a\u6001\u8bed\u8a00\uff0c\u5d07\u5c1a\u9e2d\u5b50\u7c7b\u578b\n\n\n\u4f8b1\n\n\n#!/usr/bin/env python\n\n\n# -*- coding: utf-8 -*-\n\n\n\ndef\n \ncalculate\n(\na\n,\n \nb\n,\n \nc\n):\n\n    \nreturn\n \n(\na\n+\nb\n)\n*\nc\n\n\n\nexample1\n \n=\n \ncalculate\n(\n1\n,\n \n2\n,\n \n3\n)\n\n\nexample2\n \n=\n \ncalculate\n([\n1\n,\n \n2\n,\n \n3\n],\n \n[\n4\n,\n \n5\n,\n \n6\n],\n \n2\n)\n\n\nexample3\n \n=\n \ncalculate\n(\napples \n,\n \nand oranges, \n,\n \n3\n)\n\n\n\nprint\n \nexample1\n\n\nprint\n \nexample2\n\n\nprint\n \nexample3\n\n\n\n\n\n\u8f93\u51fa\n\n\n9\n[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]\napples and oranges, apples and oranges, apples and oranges,\n\n\n\n\n\n\n\u8be5\u4f8b\u5b50\u9e2d\u5b50\u7c7b\u578b\u5728\u4e0d\u4f7f\u7528\u7ee7\u627f\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u4e86\u591a\u6001\n\n\n\n\n\u4f8b2\n\n\n#!/usr/bin/env python\n\n\n# -*- coding: utf-8 -*-\n\n\n\nclass\n \nDuck\n:\n\n    \ndef\n \nquack\n(\nself\n):\n\n        \nprint\n \n\u8fd9\u9e2d\u5b50\u5728\u5471\u5471\u53eb\n\n    \ndef\n \nfeathers\n(\nself\n):\n\n        \nprint\n \n\u8fd9\u9e2d\u5b50\u62e5\u6709\u767d\u8272\u4e0e\u7070\u8272\u7fbd\u6bdb\n\n\n\nclass\n \nPerson\n:\n\n    \ndef\n \nquack\n(\nself\n):\n\n        \nprint\n \n\u8fd9\u4eba\u6b63\u5728\u6a21\u4eff\u9e2d\u5b50\n\n    \ndef\n \nfeathers\n(\nself\n):\n\n        \nprint\n \n\u8fd9\u4eba\u5728\u5730\u4e0a\u62ff\u8d771\u6839\u7fbd\u6bdb\u7136\u540e\u7d66\u5176\u4ed6\u4eba\u770b\n\n\n\ndef\n \nin_the_forest\n(\nduck\n):\n\n    \nduck\n.\nquack\n()\n\n    \nduck\n.\nfeathers\n()\n\n\n\ndef\n \ngame\n():\n\n    \ndonald\n \n=\n \nDuck\n()\n\n    \njohn\n \n=\n \nPerson\n()\n\n    \nin_the_forest\n(\ndonald\n)\n\n    \nin_the_forest\n(\njohn\n)\n\n\n\ngame\n()\n\n\n\n\n\n\u8f93\u51fa\n\n\n\u8fd9\u9e2d\u5b50\u5728\u5471\u5471\u53eb\n\u8fd9\u9e2d\u5b50\u62e5\u6709\u767d\u8272\u4e0e\u7070\u8272\u7fbd\u6bdb\n\u8fd9\u4eba\u6b63\u5728\u6a21\u4eff\u9e2d\u5b50\n\u8fd9\u4eba\u5728\u5730\u4e0a\u62ff\u8d771\u6839\u7fbd\u6bdb\u7136\u540e\u7d66\u5176\u4ed6\u4eba\u770b\n\n\n\n\ngo\u9e2d\u5b50\u7c7b\u578b\n\n\ngolang\u4e2d\u6ca1\u6709class\u7684\u6982\u5ff5\uff0c\u800c\u662f\u901a\u8fc7interface\u7c7b\u578b\u8f6c\u6362\u652f\u6301\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u4e2d\u5e38\u89c1\u7684\u9e2d\u5b50\u7c7b\u578b\uff0c\u6765\u8fbe\u5230\u8fd0\u884c\u65f6\u591a\u6001\u7684\u6548\u679c\u3002\n\n\n\u63a5\u53e3\u53ef\u4ee5\u63d0\u4f9b\u9e2d\u5b50\u7c7b\u578b\u7684\u4e00\u4e9b\u76ca\u5904\uff0c\u4f46\u9e2d\u5b50\u7c7b\u578b\u4e0e\u4e4b\u4e0d\u540c\u7684\u662f\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u4efb\u4f55\u63a5\u53e3\u3002\n\n\n\u4e0a\u9762python\u7684\u4f8b\u5b50\u7528go\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nDucker\n \ninterface\n \n{\n\n    \nquack\n()\n\n    \nfeathers\n()\n\n\n}\n\n\n\ntype\n \nDuck\n \nstruct\n{}\n\n\ntype\n \nPerson\n \nstruct\n{}\n\n\n\nfunc\n \n(\nthis\n \n*\nDuck\n)\n \nquack\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\n\u8fd9\u9e2d\u5b50\u5728\u5471\u5471\u53eb\n)\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nDuck\n)\n \nfeathers\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\n\u8fd9\u9e2d\u5b50\u62e5\u6709\u767d\u8272\u4e0e\u7070\u8272\u7fbd\u6bdb\n)\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nPerson\n)\n \nquack\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\n\u8fd9\u4eba\u6b63\u5728\u6a21\u4eff\u9e2d\u5b50\n)\n\n\n}\n\n\n\nfunc\n \n(\nthis\n \n*\nPerson\n)\n \nfeathers\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\n\u8fd9\u4eba\u5728\u5730\u4e0a\u62ff\u8d771\u6839\u7fbd\u6bdb\u7136\u540e\u7d66\u5176\u4ed6\u4eba\u770b\n)\n\n\n}\n\n\n\nfunc\n \nin_the_forest\n(\nd\n \nDucker\n)\n \n{\n\n    \nd\n.\nquack\n()\n\n    \nd\n.\nfeathers\n()\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ndonald\n \n:=\n \nDuck\n{}\n\n    \njohn\n \n:=\n \nPerson\n{}\n\n    \nin_the_forest\n(\ndonald\n)\n\n    \nin_the_forest\n(\njohn\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\u4e5f\u662f\n\n\n\u8fd9\u9e2d\u5b50\u5728\u5471\u5471\u53eb\n\u8fd9\u9e2d\u5b50\u62e5\u6709\u767d\u8272\u4e0e\u7070\u8272\u7fbd\u6bdb\n\u8fd9\u4eba\u6b63\u5728\u6a21\u4eff\u9e2d\u5b50\n\u8fd9\u4eba\u5728\u5730\u4e0a\u62ff\u8d771\u6839\u7fbd\u6bdb\u7136\u540e\u7d66\u5176\u4ed6\u4eba\u770b\n\n\n\n\n\u8fd92\u4e2a\u4f8b\u5b50\u5bf9\u6bd4\uff0c\u53ef\u4ee5\u76f4\u63a5\u770b\u51fa\u51e0\u70b9\u533a\u522b:\n\n\n\n\n\n\npython\u65e0\u9700\u63a5\u53e3\uff08python\u662f\u52a8\u6001\u8bed\u8a00\uff0c\u6ca1\u6709\u63a5\u53e3\uff09\uff0c\u800cgo\u9700\u8981\u63a5\u53e3\n\n\n\n\n\n\npython\u7684in_the_forest\u65e0\u9700\u6307\u5b9a\u4f20\u5165\u53c2\u6570\u7c7b\u578b\uff0c\u800cgo\u9700\u8981\uff08\u4f20\u5165\u53c2\u6570\u65f6\u5019\u5b9e\u73b0\u4e86\u63a5\u53e3\uff09\n\n\n\n\n\n\n\u6cdb\u578b\u7f16\u7a0b\n\n\n\n\ngo\"\u6cdb\u578b\u7f16\u7a0b\"\n\n\n\u62bd\u8c61\u7c7b\u4e0e\u63a5\u53e3\n\n\n\n\n\u62bd\u8c61\u7c7b\uff08\u4e5f\u53eb\u57fa\u7c7b\uff09\uff1a\n\n\n\n\n\n\n\u5c0f\u660e\u5728\u5bb6\u8ddf\u5988\u5988\u8bf4\uff0c\u6211\u8981\u5403\u6c34\u679c\u3002\u5988\u5988\u53bb\u6c34\u679c\u644a\u53bb\u4e70\u6c34\u679c\uff0c\u770b\u770b\u54ea\u4e2a\u4fbf\u5b9c\u5c31\u4e70\u54ea\u4e2a\u3002\u6700\u540e\u4e70\u56de\u53bb\u4e86\u6a58\u5b50\u3002\u8fd9\u5c31\u53eb\u62bd\u8c61\u7c7b\u3002\n\n\n\n\n\n\n\u4f60\u6709\u4e00\u8f86\u5b9d\u9a6c\u7684\u6c7d\u8f66\uff0c\u6709\u4e00\u5929\uff0c\u4f60\u62ff\u5b83\u53bb\u8d8a\u91ce\u4e86\uff0c\u8f6e\u80ce\uff0c\u54ce\uff0c\u81ea\u7136\u7206\u6389\uff0c\u73b0\u5728\u4f60\u60f3\u6362\u8f6e\u80ce\u3002\u4f60\u4e0d\u60f3\u6362\u5b9d\u9a6c\u7684\u8f6e\u80ce\uff0c\u592a\u8d35\u3002\u4f60\u4e0d\u60f3\u6362qq\u7684\u8f6e\u80ce\uff0c\u4e0d\u597d\u4f7f\u3002\u4f60\u60f3\u6362\u5965\u8fea\u7684\uff0c\u6362\u4e86\uff0c\u597d\u7528\u3002\u8fd9\u5c31\u662f\u62bd\u8c61\u7c7b\u3002\n\n\n\n\n\n\n\u63a5\u53e3\uff1a\n\n\n\n\n\n\n\u4f60\u5728\u8857\u4e0a\u88ab\u4eba\u7fa4\u6bb4\uff0c\u6709\u4eba\u7528\u68cd\u5b50\u6253\u4f60\uff0c\u6709\u4eba\u7528\u811a\u8e39\uff0c\u6709\u4eba\u7528\u62f3\u5934\u3002\u53cd\u6b63\u4f60\u8d39\u8840\u4e86\u3002\u8fd9\u5c31\u53eb\u63a5\u53e3\u3002\n\n\n\n\n\n\n\u4f60\u7684\u7535\u8111\u4e0a\u53ea\u6709\u4e00\u4e2aUSB\u63a5\u53e3\u3002\u8fd9\u4e2aUSB\u63a5\u53e3\u53ef\u4ee5\u63a5MP3\uff0c\u6570\u7801\u76f8\u673a\uff0c\u6444\u50cf\u5934\uff0c\u9f20\u6807\uff0c\u952e\u76d8\u7b49\u3002\u6240\u6709\u7684\u4e0a\u8ff0\u786c\u4ef6\u90fd\u53ef\u4ee5\u516c\u7528\u8fd9\u4e2a\u63a5\u53e3\uff0c\u800c\u4e14\u6709\u5f88\u597d\u7684\u6269\u5c55\u6027\u3002\u8fd9\u5c31\u662f\u63a5\u53e3\n\n\n\n\n\n\n\u63a5\u53e3\u548c\u62bd\u8c61\u7c7b\u90fd\u662f\u591a\u6001\u3002\n\n\n\u5047\u8bbe\u6211\u8981\u62ff\u9065\u63a7\u5668\u6253\u5f00\u7535\u5668\u3002\u63a5\u53e3\u548c\u62bd\u8c61\u7c7b\u591a\u6001\u7684\u4fa7\u91cd\u70b9\u4e0d\u540c\u3002\u63a5\u53e3\u7684\u4fa7\u91cd\u70b9\u5728\u9065\u63a7\u5668\uff0c\u591a\u6001\u7684\u4fa7\u91cd\u70b9\u5728\u7535\u5668\n\n\n\u6a2a\u770b\u63a5\u53e3\u7ad6\u770b\u7c7b\uff1a\u6a2a\u5411\u6269\u5c55\u4f7f\u7528\u63a5\u53e3\uff1b\u7eb5\u5411\u6269\u5c55\u4f7f\u7528\u62bd\u8c61\u57fa\u7c7b\uff1b\u6a2a\u5411\u548c\u7eb5\u5411\u90fd\u8981\u6269\u5c55\uff0c\u4f7f\u7528\u62bd\u8c61\u57fa\u7c7b\u7ee7\u627f\u63a5\u53e3\u3002\n\n\n\n\n\n\n\u5728\u5dee\u5f02\u8f83\u5927\u7684\u5bf9\u8c61\u4e2d\u8ffd\u6c42\u529f\u80fd\u4e0a\u7684\u5171\u6027\u65f6\uff0c\u4f7f\u7528\u63a5\u53e3\u3002\n\n\n\n\n\n\n\u5728\u5dee\u5f02\u8f83\u5c0f\u7684\u5bf9\u8c61\u4e2d\u8ffd\u6c42\u529f\u80fd\u4e0a\u7684\u4e0d\u540c\u65f6\uff0c\u4f7f\u7528\u62bd\u8c61\u57fa\u7c7b\uff0c\u56e0\u4e3a\u62bd\u8c61\u57fa\u7c7b\u53ef\u4ee5\u5305\u542b\u5b9e\u73b0\u7684\u6210\u5458\u3002\n\n\n\n\n\n\ngolang\u91cc\u7684\"\u9762\u5411\u5bf9\u8c61\"\n\n\n\n\n\u8be6\u89c1\u63a5\u53e3\u7ae0\u8282\n\n\n\u63a8\u8350\u5c0f\u767d\u770b\u770b: \n\u4ece\u65e0\u5230\u6709\u9010\u6b65\u7406\u89e3\u9762\u5411\u5bf9\u8c61\u548c\u63a5\u53e3\n\n\n3\u79cd\u4ee3\u7801\u98ce\u683c\n\n\n\n\n\u6765\u81ea\uff1a\nhttps://docs.python.org/3/glossary.html\n \u4e2d\u63d0\u5230\u7684\n\n\n\n\n\n\nduck typing\n\n\n\n\n\n\nEAFP\uff08Easier to ask for forgiveness than permission\uff09\n\n\n\n\n\n\nLBYL\uff08Look before you leap\uff09\n\n\n\n\n\n\n\u6cdb\u578b\u7f16\u7a0b\u3001\u9e2d\u5b50\u7c7b\u578b\u3001interface\u5173\u7cfb\n\n\n\n\n\u8fd9\u6bb5\u8bdd\u4e3a\u4e2a\u4eba\u7406\u89e3\uff0c\u4e0d\u4fdd\u8bc1\u51c6\u786e\u6027\u9e2d\u5b50\u7c7b\u578b\u662f\u4e00\u4e2a\u8001\u5916\u63d0\u51fa\u7684\u6784\u60f3\uff0c\u662f\u4e00\u79cd\u52a8\u6001\u7684\u4ee3\u7801\u98ce\u683c\uff0c\u67d0\u4e2a\u5f00\u53d1\u8bed\u8a00\u652f\u6301\u4e86\u8fd9\u4e2a\u6784\u60f3\u800c\u4ea7\u751f\u7684\u7f16\u7a0b\u98ce\u683c\u6216\u89c4\u8303\uff0c\u53eb\u505a\u6cdb\u578b\u7f16\u7a0b\uff0cinterface\u662fgo\u5bf9\u6cdb\u578b\u7f16\u7a0b\u7684\u5b9e\u73b0\uff08\u51c6\u786e\u8bf4\u662fgo\u4e0d\u652f\u6301\u6cdb\u578b\u7f16\u7a0b\uff0c\u4f46go\u7684interface\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u6cdb\u578b\u7f16\u7a0b\u7684\u6548\u679c\uff09\n\n\n\u6cdb\u578b\u7f16\u7a0b\uff1a\u50cf\u7c7b\u4e00\u6837\uff0c\u6cdb\u578b\u4e5f\u662f\u4e00\u79cd\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u662f\u6cdb\u578b\u4e0d\u5c5e\u4e8e\u9762\u5411\u5bf9\u8c61\uff0c\u5b83\u662f\u9762\u5411\u5bf9\u8c61\u7684\u8865\u5145\u548c\u53d1\u5c55\u3002\n\n\n\u7ee7\u627f\n\n\n\n\n\u4f7f\u7528struct\u5d4c\u5957\u53ef\u4ee5\u6a21\u62df\u7ee7\u627f\uff0c\u8be6\u89c1\n\u9762\u5411\u5bf9\u8c61\u5199\u6cd5\u6bd4\u8f83-\u7ee7\u627f", 
            "title": "7. \u9762\u5411\u5bf9\u8c61"
        }, 
        {
            "location": "/other/oo/#3", 
            "text": "\u8be6\u89c1\uff1a http://developer.51cto.com/art/200906/130568.htm    \u7cfb\u7edf\u5206\u6790    \u7cfb\u7edf\u8bbe\u8ba1    \u5b9e\u73b0\uff08\u7f16\u7801\uff09", 
            "title": "\u9762\u5411\u5bf9\u8c613\u6b65"
        }, 
        {
            "location": "/other/oo/#overloadoverride", 
            "text": "http://developer.51cto.com/art/201106/266705.htm  Overload\u662f\u91cd\u8f7d\u7684\u610f\u601d\uff0cOverride\u662f\u8986\u76d6\u7684\u610f\u601d\uff0c\u4e5f\u5c31\u662f\u91cd\u5199\u3002  \u91cd\u8f7dOverload\u8868\u793a\u540c\u4e00\u4e2a\u7c7b\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u540d\u79f0\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u4f46\u8fd9\u4e9b\u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\u5404\u4e0d\u76f8\u540c\uff08\u5373\u53c2\u6570\u4e2a\u6570\u6216\u7c7b\u578b\u4e0d\u540c\uff09\u3002  \u91cd\u5199Override\u8868\u793a\u5b50\u7c7b\u4e2d\u7684\u65b9\u6cd5\u53ef\u4ee5\u4e0e\u7236\u7c7b\u4e2d\u7684\u67d0\u4e2a\u65b9\u6cd5\u7684\u540d\u79f0\u548c\u53c2\u6570\u5b8c\u5168\u76f8\u540c\uff0c\u901a\u8fc7\u5b50\u7c7b\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u65f6\uff0c\u5c06\u8c03\u7528\u5b50\u7c7b\u4e2d\u7684\u5b9a\u4e49\u65b9\u6cd5\uff0c\u8fd9\u76f8\u5f53\u4e8e\u628a\u7236\u7c7b\u4e2d\u5b9a\u4e49\u7684\u90a3\u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u65b9\u6cd5\u7ed9\u8986\u76d6\u4e86\uff0c\u8fd9\u4e5f\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u591a\u6001\u6027\u7684\u4e00\u79cd\u8868\u73b0\u3002  \u91cd\u5199override\u662f\u7236\u7c7b\u4e0e\u5b50\u7c7b\u4e4b\u95f4\u591a\u6001\u6027\u7684\u4e00\u79cd\u8868\u73b0\uff0c\u91cd\u8f7doverload\u662f\u4e00\u4e2a\u7c7b\u4e2d\u591a\u6001\u6027\u7684\u4e00\u79cd\u8868\u73b0 \uff0cgo\u8bed\u8a00\u53ea\u652f\u6301override\uff0c\u4e0d\u652f\u6301overload  go\u4e0d\u652f\u6301overload\u7684\u4f8b\u5b50 package   main  import   fmt  type   MyStruct   struct   { \n     X ,   Y   int  }  func   ( this   * MyStruct )   foo ( i   int )   { \n     fmt . Println ( this . X   +   i )  }  func   ( this   * MyStruct )   foo ( j   string )   { \n     fmt . Println ( this . X ) \n     fmt . Println ( j )  }  func   main ()   { \n     s   :=   MyStruct { 3 , 4 } \n     s . foo ( 100 ) \n     s . foo ( hello )  }   \u62a5\u9519 ./t.go:13:6: (*MyStruct).foo redeclared in this block\n    previous declaration at ./t.go:9:6\n./t.go:13:6: method redeclared: MyStruct.foo\n    method(*MyStruct) func(int)\n    method(*MyStruct) func(string)\n./t.go:21:8: cannot use  hello  (type string) as type int in argument to s.foo", 
            "title": "\u91cd\u8f7doverload\u4e0e\u8986\u76d6override"
        }, 
        {
            "location": "/other/oo/#_1", 
            "text": "http://bbs.itheima.com/thread-119448-1-1.html  \u4e0d\u8981\u628a\u51fd\u6570\u91cd\u8f7d\u7406\u89e3\u4e3a\u591a\u6001\u3002  \u591a\u6001\u662f\u4e00\u79cd\u8fd0\u884c\u671f\u7684\u884c\u4e3a\uff0c\u4e0d\u662f\u7f16\u8bd1\u671f\u7684\u884c\u4e3a\u3002  \u591a\u6001\u53ef\u4ee5\u7406\u89e3\u4e3a \u4e00\u4e2a\u4e8b\u7269\uff0c\u591a\u79cd\u8868\u73b0\u5f62\u6001\u3002  \u6bd4\u5982\u4e00\u4e2a\u8001\u5e08\uff08\u597d\u6bd4java\u4e2d\u4e00\u4e2a\u7c7b\uff0c\u4e00\u4e2a\u63cf\u8ff0\u8001\u5e08\u7684\u7c7b\uff09\uff0c\u5728\u5b66\u751f\u9762\u524d\u4ed6\u4ee5\u8001\u5e08\u7684\u5f62\u6001\u5b58\u5728\uff0c\u800c\u5728\u4ed6\u5b69\u5b50\u9762\u524d\u4ee5\u7236\u4eb2\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u5728\u4ed6\u59bb\u5b50\u9762\u524d\u5219\u4ee5\u8001\u516c\u7684\u5f62\u5f0f\u5b58\u5728\u3002  \u4f8b\u5982\u5728java\u4e2d\u53ef\u4ee5\u7528\u7236\u7c7b\u7c7b\u578b\u7684\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u7c7b\u578b  Object obj=new String( a );  obj\u4e3a\u7236\u7c7b\u7c7b\u578b\u5f15\u7528\uff0c\u7528obj\u6307\u5411\u4e86\u5b50\u7c7b\u5bf9\u8c61String\u3002  \u4e0d\u7528\u591a\u6001\u65f6\uff0c\u8fd9\u6837\u5199  String s=new String( a );  \u5373\u7528\u672c\u7c7b\u7c7b\u578b\u5f15\u7528\u6307\u5411\u672c\u7c7b\u7c7b\u578b\u5b9e\u4f8b\u3002   \u5173\u4e8ejava\u4e2d\u7684\u591a\u6001  \u4e0b\u97622\u4e2a\u90fd\u662f\u591a\u6001\uff1a    \u7236\u7c7b\u7684\u5f15\u7528\u7c7b\u578b\u53d8\u91cf\u6307\u5411\u4e86\u5b50\u7c7b\u7684\u5bf9\u8c61    \u63a5\u53e3\u7c7b\u578b\u7684\u5f15\u7528\u7c7b\u578b\u53d8\u91cf\u6307\u5411\u4e86\u63a5\u53e3\u5b9e\u73b0\u7c7b \u7684\u5bf9\u8c61\u3002    \u4ee5\u4e0b\u662f\u7b2c2\u70b9\u7684\u4f8b\u5b50\uff1a  \u5b9e\u73b0\u5173\u7cfb\u4e0b\u7684\u591a\u6001\uff1a\n\u63a5\u53e3 \u53d8\u91cf = new \u63a5\u53e3\u5b9e\u73b0\u7c7b\u7684\u5bf9\u8c61\u3002  //\u63a5\u53e3\u7684\u65b9\u6cd5\u5168\u90e8\u90fd\u662f\u975e\u9759\u6001\u7684\u65b9\u6cd5  interface   Dao { \n     public   void   add ();   \n     public   void   delete ();    }    //\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b    class   UserDao   implements   Dao {   \n     public   void   add (){   \n         System . out . println ( \u6dfb\u52a0\u5458\u5de5\u6210\u529f\uff01\uff01 );   \n     }    \n     public   void   delete (){   \n         System . out . println ( \u5220\u9664\u5458\u5de5\u6210\u529f\uff01\uff01 );   \n     }    }    class   Demo3     {   \n     public   static   void   main ( String []   args )    \n     {   \n         //\u5b9e\u73b0\u5173\u7cfb\u4e0b\u7684\u591a\u6001   \n         Dao   d   =   new   UserDao ();   //\u63a5\u53e3\u7684\u5f15\u7528\u7c7b\u578b\u53d8\u91cf\u6307\u5411\u4e86\u63a5\u53e3\u5b9e\u73b0\u7c7b\u7684\u5bf9\u8c61\u3002   \n         d . add ();   \n     }    }", 
            "title": "\u591a\u6001"
        }, 
        {
            "location": "/other/oo/#_2", 
            "text": "", 
            "title": "\u9e2d\u5b50\u7c7b\u578b"
        }, 
        {
            "location": "/other/oo/#_3", 
            "text": "https://zh.wikipedia.org/wiki/\u9e2d\u5b50\u7c7b\u578b  http://www.jb51.net/article/116025.htm \uff08\u9e2d\u5b50\u7c7b\u578b\u4e0e\u591a\u6001\uff09  \u5f53\u770b\u5230\u4e00\u53ea\u9e1f\u8d70\u8d77\u6765\u50cf\u9e2d\u5b50\u3001\u6e38\u6cf3\u8d77\u6765\u50cf\u9e2d\u5b50\u3001\u53eb\u8d77\u6765\u4e5f\u50cf\u9e2d\u5b50\uff0c\u90a3\u4e48\u8fd9\u53ea\u9e1f\u5c31\u53ef\u4ee5\u88ab\u79f0\u4e3a\u9e2d\u5b50  \u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u9e2d\u5b50\u7c7b\u578b\uff08\u82f1\u8bed\uff1aDuck typing\uff09\u662f\u52a8\u6001\u7c7b\u578b\u548c\u67d0\u4e9b\u9759\u6001\u8bed\u8a00\u7684\u4e00\u79cd\u5bf9\u8c61\u63a8\u65ad\u98ce\u683c\u3002  \u5728\u9e2d\u5b50\u7c7b\u578b\u4e2d\uff0c\u5173\u6ce8\u7684\u4e0d\u662f\u5bf9\u8c61\u7684\u7c7b\u578b\u672c\u8eab\uff0c\u800c\u662f\u5b83\u662f\u5982\u4f55\u4f7f\u7528\u7684\u3002  \u9e2d\u5b50\u7c7b\u578b\u901a\u5e38\u5f97\u76ca\u4e8e\u4e0d\u6d4b\u8bd5\u65b9\u6cd5\u548c\u51fd\u6570\u4e2d\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u800c\u662f\u4f9d\u8d56\u6587\u6863\u3001\u6e05\u6670\u7684\u4ee3\u7801\u548c\u6d4b\u8bd5\u6765\u786e\u4fdd\u6b63\u786e\u4f7f\u7528\u3002  \u4e2a\u4eba\u7406\u89e3\u9e2d\u5b50\u7c7b\u578b\u662f\u591a\u6001\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f", 
            "title": "\u4ecb\u7ecd"
        }, 
        {
            "location": "/other/oo/#python", 
            "text": "https://docs.python.org/3/glossary.html#term-duck-typing  Python\u4e0d\u652f\u6301\u591a\u6001\uff0c\u4e5f\u4e0d\u7528\u652f\u6301\u591a\u6001\uff0cpython\u662f\u4e00\u79cd\u591a\u6001\u8bed\u8a00\uff0c\u5d07\u5c1a\u9e2d\u5b50\u7c7b\u578b  \u4f8b1  #!/usr/bin/env python  # -*- coding: utf-8 -*-  def   calculate ( a ,   b ,   c ): \n     return   ( a + b ) * c  example1   =   calculate ( 1 ,   2 ,   3 )  example2   =   calculate ([ 1 ,   2 ,   3 ],   [ 4 ,   5 ,   6 ],   2 )  example3   =   calculate ( apples  ,   and oranges,  ,   3 )  print   example1  print   example2  print   example3   \u8f93\u51fa  9\n[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]\napples and oranges, apples and oranges, apples and oranges,   \u8be5\u4f8b\u5b50\u9e2d\u5b50\u7c7b\u578b\u5728\u4e0d\u4f7f\u7528\u7ee7\u627f\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u4e86\u591a\u6001   \u4f8b2  #!/usr/bin/env python  # -*- coding: utf-8 -*-  class   Duck : \n     def   quack ( self ): \n         print   \u8fd9\u9e2d\u5b50\u5728\u5471\u5471\u53eb \n     def   feathers ( self ): \n         print   \u8fd9\u9e2d\u5b50\u62e5\u6709\u767d\u8272\u4e0e\u7070\u8272\u7fbd\u6bdb  class   Person : \n     def   quack ( self ): \n         print   \u8fd9\u4eba\u6b63\u5728\u6a21\u4eff\u9e2d\u5b50 \n     def   feathers ( self ): \n         print   \u8fd9\u4eba\u5728\u5730\u4e0a\u62ff\u8d771\u6839\u7fbd\u6bdb\u7136\u540e\u7d66\u5176\u4ed6\u4eba\u770b  def   in_the_forest ( duck ): \n     duck . quack () \n     duck . feathers ()  def   game (): \n     donald   =   Duck () \n     john   =   Person () \n     in_the_forest ( donald ) \n     in_the_forest ( john )  game ()   \u8f93\u51fa  \u8fd9\u9e2d\u5b50\u5728\u5471\u5471\u53eb\n\u8fd9\u9e2d\u5b50\u62e5\u6709\u767d\u8272\u4e0e\u7070\u8272\u7fbd\u6bdb\n\u8fd9\u4eba\u6b63\u5728\u6a21\u4eff\u9e2d\u5b50\n\u8fd9\u4eba\u5728\u5730\u4e0a\u62ff\u8d771\u6839\u7fbd\u6bdb\u7136\u540e\u7d66\u5176\u4ed6\u4eba\u770b", 
            "title": "python\u9e2d\u5b50\u7c7b\u578b"
        }, 
        {
            "location": "/other/oo/#go", 
            "text": "golang\u4e2d\u6ca1\u6709class\u7684\u6982\u5ff5\uff0c\u800c\u662f\u901a\u8fc7interface\u7c7b\u578b\u8f6c\u6362\u652f\u6301\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u4e2d\u5e38\u89c1\u7684\u9e2d\u5b50\u7c7b\u578b\uff0c\u6765\u8fbe\u5230\u8fd0\u884c\u65f6\u591a\u6001\u7684\u6548\u679c\u3002  \u63a5\u53e3\u53ef\u4ee5\u63d0\u4f9b\u9e2d\u5b50\u7c7b\u578b\u7684\u4e00\u4e9b\u76ca\u5904\uff0c\u4f46\u9e2d\u5b50\u7c7b\u578b\u4e0e\u4e4b\u4e0d\u540c\u7684\u662f\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u4efb\u4f55\u63a5\u53e3\u3002  \u4e0a\u9762python\u7684\u4f8b\u5b50\u7528go\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a  package   main  import   fmt  type   Ducker   interface   { \n     quack () \n     feathers ()  }  type   Duck   struct {}  type   Person   struct {}  func   ( this   * Duck )   quack ()   { \n     fmt . Println ( \u8fd9\u9e2d\u5b50\u5728\u5471\u5471\u53eb )  }  func   ( this   * Duck )   feathers ()   { \n     fmt . Println ( \u8fd9\u9e2d\u5b50\u62e5\u6709\u767d\u8272\u4e0e\u7070\u8272\u7fbd\u6bdb )  }  func   ( this   * Person )   quack ()   { \n     fmt . Println ( \u8fd9\u4eba\u6b63\u5728\u6a21\u4eff\u9e2d\u5b50 )  }  func   ( this   * Person )   feathers ()   { \n     fmt . Println ( \u8fd9\u4eba\u5728\u5730\u4e0a\u62ff\u8d771\u6839\u7fbd\u6bdb\u7136\u540e\u7d66\u5176\u4ed6\u4eba\u770b )  }  func   in_the_forest ( d   Ducker )   { \n     d . quack () \n     d . feathers ()  }  func   main ()   { \n     donald   :=   Duck {} \n     john   :=   Person {} \n     in_the_forest ( donald ) \n     in_the_forest ( john )  }   \u8f93\u51fa\u4e5f\u662f  \u8fd9\u9e2d\u5b50\u5728\u5471\u5471\u53eb\n\u8fd9\u9e2d\u5b50\u62e5\u6709\u767d\u8272\u4e0e\u7070\u8272\u7fbd\u6bdb\n\u8fd9\u4eba\u6b63\u5728\u6a21\u4eff\u9e2d\u5b50\n\u8fd9\u4eba\u5728\u5730\u4e0a\u62ff\u8d771\u6839\u7fbd\u6bdb\u7136\u540e\u7d66\u5176\u4ed6\u4eba\u770b  \u8fd92\u4e2a\u4f8b\u5b50\u5bf9\u6bd4\uff0c\u53ef\u4ee5\u76f4\u63a5\u770b\u51fa\u51e0\u70b9\u533a\u522b:    python\u65e0\u9700\u63a5\u53e3\uff08python\u662f\u52a8\u6001\u8bed\u8a00\uff0c\u6ca1\u6709\u63a5\u53e3\uff09\uff0c\u800cgo\u9700\u8981\u63a5\u53e3    python\u7684in_the_forest\u65e0\u9700\u6307\u5b9a\u4f20\u5165\u53c2\u6570\u7c7b\u578b\uff0c\u800cgo\u9700\u8981\uff08\u4f20\u5165\u53c2\u6570\u65f6\u5019\u5b9e\u73b0\u4e86\u63a5\u53e3\uff09", 
            "title": "go\u9e2d\u5b50\u7c7b\u578b"
        }, 
        {
            "location": "/other/oo/#_4", 
            "text": "go\"\u6cdb\u578b\u7f16\u7a0b\"", 
            "title": "\u6cdb\u578b\u7f16\u7a0b"
        }, 
        {
            "location": "/other/oo/#_5", 
            "text": "\u62bd\u8c61\u7c7b\uff08\u4e5f\u53eb\u57fa\u7c7b\uff09\uff1a    \u5c0f\u660e\u5728\u5bb6\u8ddf\u5988\u5988\u8bf4\uff0c\u6211\u8981\u5403\u6c34\u679c\u3002\u5988\u5988\u53bb\u6c34\u679c\u644a\u53bb\u4e70\u6c34\u679c\uff0c\u770b\u770b\u54ea\u4e2a\u4fbf\u5b9c\u5c31\u4e70\u54ea\u4e2a\u3002\u6700\u540e\u4e70\u56de\u53bb\u4e86\u6a58\u5b50\u3002\u8fd9\u5c31\u53eb\u62bd\u8c61\u7c7b\u3002    \u4f60\u6709\u4e00\u8f86\u5b9d\u9a6c\u7684\u6c7d\u8f66\uff0c\u6709\u4e00\u5929\uff0c\u4f60\u62ff\u5b83\u53bb\u8d8a\u91ce\u4e86\uff0c\u8f6e\u80ce\uff0c\u54ce\uff0c\u81ea\u7136\u7206\u6389\uff0c\u73b0\u5728\u4f60\u60f3\u6362\u8f6e\u80ce\u3002\u4f60\u4e0d\u60f3\u6362\u5b9d\u9a6c\u7684\u8f6e\u80ce\uff0c\u592a\u8d35\u3002\u4f60\u4e0d\u60f3\u6362qq\u7684\u8f6e\u80ce\uff0c\u4e0d\u597d\u4f7f\u3002\u4f60\u60f3\u6362\u5965\u8fea\u7684\uff0c\u6362\u4e86\uff0c\u597d\u7528\u3002\u8fd9\u5c31\u662f\u62bd\u8c61\u7c7b\u3002    \u63a5\u53e3\uff1a    \u4f60\u5728\u8857\u4e0a\u88ab\u4eba\u7fa4\u6bb4\uff0c\u6709\u4eba\u7528\u68cd\u5b50\u6253\u4f60\uff0c\u6709\u4eba\u7528\u811a\u8e39\uff0c\u6709\u4eba\u7528\u62f3\u5934\u3002\u53cd\u6b63\u4f60\u8d39\u8840\u4e86\u3002\u8fd9\u5c31\u53eb\u63a5\u53e3\u3002    \u4f60\u7684\u7535\u8111\u4e0a\u53ea\u6709\u4e00\u4e2aUSB\u63a5\u53e3\u3002\u8fd9\u4e2aUSB\u63a5\u53e3\u53ef\u4ee5\u63a5MP3\uff0c\u6570\u7801\u76f8\u673a\uff0c\u6444\u50cf\u5934\uff0c\u9f20\u6807\uff0c\u952e\u76d8\u7b49\u3002\u6240\u6709\u7684\u4e0a\u8ff0\u786c\u4ef6\u90fd\u53ef\u4ee5\u516c\u7528\u8fd9\u4e2a\u63a5\u53e3\uff0c\u800c\u4e14\u6709\u5f88\u597d\u7684\u6269\u5c55\u6027\u3002\u8fd9\u5c31\u662f\u63a5\u53e3    \u63a5\u53e3\u548c\u62bd\u8c61\u7c7b\u90fd\u662f\u591a\u6001\u3002  \u5047\u8bbe\u6211\u8981\u62ff\u9065\u63a7\u5668\u6253\u5f00\u7535\u5668\u3002\u63a5\u53e3\u548c\u62bd\u8c61\u7c7b\u591a\u6001\u7684\u4fa7\u91cd\u70b9\u4e0d\u540c\u3002\u63a5\u53e3\u7684\u4fa7\u91cd\u70b9\u5728\u9065\u63a7\u5668\uff0c\u591a\u6001\u7684\u4fa7\u91cd\u70b9\u5728\u7535\u5668  \u6a2a\u770b\u63a5\u53e3\u7ad6\u770b\u7c7b\uff1a\u6a2a\u5411\u6269\u5c55\u4f7f\u7528\u63a5\u53e3\uff1b\u7eb5\u5411\u6269\u5c55\u4f7f\u7528\u62bd\u8c61\u57fa\u7c7b\uff1b\u6a2a\u5411\u548c\u7eb5\u5411\u90fd\u8981\u6269\u5c55\uff0c\u4f7f\u7528\u62bd\u8c61\u57fa\u7c7b\u7ee7\u627f\u63a5\u53e3\u3002    \u5728\u5dee\u5f02\u8f83\u5927\u7684\u5bf9\u8c61\u4e2d\u8ffd\u6c42\u529f\u80fd\u4e0a\u7684\u5171\u6027\u65f6\uff0c\u4f7f\u7528\u63a5\u53e3\u3002    \u5728\u5dee\u5f02\u8f83\u5c0f\u7684\u5bf9\u8c61\u4e2d\u8ffd\u6c42\u529f\u80fd\u4e0a\u7684\u4e0d\u540c\u65f6\uff0c\u4f7f\u7528\u62bd\u8c61\u57fa\u7c7b\uff0c\u56e0\u4e3a\u62bd\u8c61\u57fa\u7c7b\u53ef\u4ee5\u5305\u542b\u5b9e\u73b0\u7684\u6210\u5458\u3002", 
            "title": "\u62bd\u8c61\u7c7b\u4e0e\u63a5\u53e3"
        }, 
        {
            "location": "/other/oo/#golang", 
            "text": "\u8be6\u89c1\u63a5\u53e3\u7ae0\u8282  \u63a8\u8350\u5c0f\u767d\u770b\u770b:  \u4ece\u65e0\u5230\u6709\u9010\u6b65\u7406\u89e3\u9762\u5411\u5bf9\u8c61\u548c\u63a5\u53e3", 
            "title": "golang\u91cc\u7684\"\u9762\u5411\u5bf9\u8c61\""
        }, 
        {
            "location": "/other/oo/#3_1", 
            "text": "\u6765\u81ea\uff1a https://docs.python.org/3/glossary.html  \u4e2d\u63d0\u5230\u7684    duck typing    EAFP\uff08Easier to ask for forgiveness than permission\uff09    LBYL\uff08Look before you leap\uff09", 
            "title": "3\u79cd\u4ee3\u7801\u98ce\u683c"
        }, 
        {
            "location": "/other/oo/#interface", 
            "text": "\u8fd9\u6bb5\u8bdd\u4e3a\u4e2a\u4eba\u7406\u89e3\uff0c\u4e0d\u4fdd\u8bc1\u51c6\u786e\u6027\u9e2d\u5b50\u7c7b\u578b\u662f\u4e00\u4e2a\u8001\u5916\u63d0\u51fa\u7684\u6784\u60f3\uff0c\u662f\u4e00\u79cd\u52a8\u6001\u7684\u4ee3\u7801\u98ce\u683c\uff0c\u67d0\u4e2a\u5f00\u53d1\u8bed\u8a00\u652f\u6301\u4e86\u8fd9\u4e2a\u6784\u60f3\u800c\u4ea7\u751f\u7684\u7f16\u7a0b\u98ce\u683c\u6216\u89c4\u8303\uff0c\u53eb\u505a\u6cdb\u578b\u7f16\u7a0b\uff0cinterface\u662fgo\u5bf9\u6cdb\u578b\u7f16\u7a0b\u7684\u5b9e\u73b0\uff08\u51c6\u786e\u8bf4\u662fgo\u4e0d\u652f\u6301\u6cdb\u578b\u7f16\u7a0b\uff0c\u4f46go\u7684interface\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u6cdb\u578b\u7f16\u7a0b\u7684\u6548\u679c\uff09  \u6cdb\u578b\u7f16\u7a0b\uff1a\u50cf\u7c7b\u4e00\u6837\uff0c\u6cdb\u578b\u4e5f\u662f\u4e00\u79cd\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u662f\u6cdb\u578b\u4e0d\u5c5e\u4e8e\u9762\u5411\u5bf9\u8c61\uff0c\u5b83\u662f\u9762\u5411\u5bf9\u8c61\u7684\u8865\u5145\u548c\u53d1\u5c55\u3002", 
            "title": "\u6cdb\u578b\u7f16\u7a0b\u3001\u9e2d\u5b50\u7c7b\u578b\u3001interface\u5173\u7cfb"
        }, 
        {
            "location": "/other/oo/#_6", 
            "text": "\u4f7f\u7528struct\u5d4c\u5957\u53ef\u4ee5\u6a21\u62df\u7ee7\u627f\uff0c\u8be6\u89c1 \u9762\u5411\u5bf9\u8c61\u5199\u6cd5\u6bd4\u8f83-\u7ee7\u627f", 
            "title": "\u7ee7\u627f"
        }, 
        {
            "location": "/other/nil/", 
            "text": "int\u548c[]int nil\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \na\n \nint\n\n    \nif\n \na\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\na is nil\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\u8f93\u51fa\n\n\n./nil.go:7: cannot convert nil to type int\n\n\n\n\n\u4fee\u6539\u4ee3\u7801\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \na\n \nint\n \n=\n \nnil\n\n    \nif\n \na\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\na is nil\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\u8f93\u51fa\n\n\n./nil.go:6: cannot use nil as type int in assignment\n./nil.go:7: cannot convert nil to type int\n\n\n\n\n\u4fee\u6539\u4ee3\u7801\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \na\n \n[]\nint\n\n    \nif\n \na\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\na is nil\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\u8f93\u51fa\n\n\na is nil\n\n\n\n\n\u4fee\u6539\u4ee3\u7801\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nvar\n \na\n \n[]\nint\n \n=\n \nnil\n\n    \nif\n \na\n \n==\n \nnil\n \n{\n\n        \nfmt\n.\nPrintln\n(\na is nil\n)\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\u8f93\u51fa\n\n\na is nil\n\n\n\n\n\u8bf4\u660e\u4e0d\u662f\u4ec0\u4e48\u6240\u6709\u7c7b\u578b\u7684\u53d8\u91cf\u90fd\u80fd\u7528if xxx == nil\u6765\u5224\u65ad\u662f\u5426\u662fnil\n\n\narray\u548cslice nil\n\n\n\n\n\u8be6\u89c1array slice\u7ae0\u8282\n\n\nmap nil\n\n\n\n\n\u8be6\u89c1map\u7ae0\u8282\n\n\ninterface nil\n\n\n\n\n\u8be6\u89c1\u63a5\u53e3\u7ae0\u8282", 
            "title": "8. nil"
        }, 
        {
            "location": "/other/nil/#intint-nil", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 package   main  import   fmt  func   main ()   { \n     var   a   int \n     if   a   ==   nil   { \n         fmt . Println ( a is nil ) \n     }  }    \u8f93\u51fa  ./nil.go:7: cannot convert nil to type int  \u4fee\u6539\u4ee3\u7801   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 package   main  import   fmt  func   main ()   { \n     var   a   int   =   nil \n     if   a   ==   nil   { \n         fmt . Println ( a is nil ) \n     }  }    \u8f93\u51fa  ./nil.go:6: cannot use nil as type int in assignment\n./nil.go:7: cannot convert nil to type int  \u4fee\u6539\u4ee3\u7801   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 package   main  import   fmt  func   main ()   { \n     var   a   [] int \n     if   a   ==   nil   { \n         fmt . Println ( a is nil ) \n     }  }    \u8f93\u51fa  a is nil  \u4fee\u6539\u4ee3\u7801   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 package   main  import   fmt  func   main ()   { \n     var   a   [] int   =   nil \n     if   a   ==   nil   { \n         fmt . Println ( a is nil ) \n     }  }    \u8f93\u51fa  a is nil  \u8bf4\u660e\u4e0d\u662f\u4ec0\u4e48\u6240\u6709\u7c7b\u578b\u7684\u53d8\u91cf\u90fd\u80fd\u7528if xxx == nil\u6765\u5224\u65ad\u662f\u5426\u662fnil", 
            "title": "int\u548c[]int nil"
        }, 
        {
            "location": "/other/nil/#arrayslice-nil", 
            "text": "\u8be6\u89c1array slice\u7ae0\u8282", 
            "title": "array\u548cslice nil"
        }, 
        {
            "location": "/other/nil/#map-nil", 
            "text": "\u8be6\u89c1map\u7ae0\u8282", 
            "title": "map nil"
        }, 
        {
            "location": "/other/nil/#interface-nil", 
            "text": "\u8be6\u89c1\u63a5\u53e3\u7ae0\u8282", 
            "title": "interface nil"
        }, 
        {
            "location": "/other/make/", 
            "text": "array\u548cslice make\n\n\n\n\n\u8be6\u89c1array slice\u7ae0\u8282\n\n\nmap make\n\n\n\n\n\u8be6\u89c1map\u7ae0\u8282", 
            "title": "9. make"
        }, 
        {
            "location": "/other/make/#arrayslice-make", 
            "text": "\u8be6\u89c1array slice\u7ae0\u8282", 
            "title": "array\u548cslice make"
        }, 
        {
            "location": "/other/make/#map-make", 
            "text": "\u8be6\u89c1map\u7ae0\u8282", 
            "title": "map make"
        }, 
        {
            "location": "/other/enum/", 
            "text": "\u679a\u4e3e\u5c31\u662f\u4e00\u4e00\u5217\u4e3e\uff0c\u5c06\u6240\u6709\u7684\u60c5\u51b5\u90fd\u5217\u4e3e\u51fa\u6765\uff0c\u90a3\u4e48\u53d6\u503c\u7684\u65f6\u5019\u53ea\u80fd\u662f\u8fd9\u51e0\u79cd\u60c5\u51b5\u7684\u4e00\u79cd\uff0c\u4e0d\u80fd\u662f\u522b\u7684\u3002\n\n\ngo\u679a\u4e3e\uff1a\n\n\n\u5728go\u8bed\u8a00\u4e2d\uff0c\u6ca1\u6709\u76f4\u63a5\u652f\u6301\u679a\u4e3e\u7684\u5173\u952e\u5b57\uff0c\u4e5f\u5c31\u9020\u6210go\u6ca1\u6709\u76f4\u63a5\u679a\u4e3e\u7684\u529f\u80fd\u3002\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7const+iota\u6765\u6a21\u62df\u679a\u4e3e\n\n\n\u4f8b\u5b50\uff1a\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\n// \u5b9e\u73b0\u679a\u4e3e\u4f8b\u5b50\n\n\ntype\n \nState\n \nint\n\n\n\n// iota \u521d\u59cb\u5316\u540e\u4f1a\u81ea\u52a8\u9012\u589e\n\n\nconst\n \n(\n\n    \nRunning\n \nState\n \n=\n \niota\n    \n// value --\n 0\n\n    \nStopped\n                 \n// value --\n 1\n\n    \nRebooting\n               \n// value --\n 2\n\n    \nTerminated\n              \n// value --\n 3\n\n\n)\n\n\n\nfunc\n \n(\nthis\n \nState\n)\n \nString\n()\n \nstring\n \n{\n\n    \nswitch\n \nthis\n \n{\n\n    \ncase\n \nRunning\n:\n\n        \nreturn\n \nRunning\n\n    \ncase\n \nStopped\n:\n\n        \nreturn\n \nStopped\n\n    \ndefault\n:\n\n        \nreturn\n \nUnknown\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nstate\n \n:=\n \nStopped\n\n    \nfmt\n.\nPrintln\n(\nstate\n,\n \nstate\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nstate Stopped\n\n\n\n\n\u6ca1\u6709\u91cd\u8f7dString\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\u5219\u8f93\u51fa\nstate 1\n\n\n\u9644iota\u8be6\u89e3\uff1a\nhttps://studygolang.com/articles/2192", 
            "title": "10. \u679a\u4e3e"
        }, 
        {
            "location": "/other/readers/", 
            "text": "io.Reader\n\n\n\n\nio \u5305\u6307\u5b9a\u4e86 io.Reader \u63a5\u53e3\uff0c \u5b83\u8868\u793a\u4ece\u6570\u636e\u6d41\u7ed3\u5c3e\u8bfb\u53d6\u3002\n\n\nGo\u6807\u51c6\u5e93\u5305\u542b\u8fd9\u4e2a\u4e86io.Reader\u63a5\u53e3\u7684\u8bb8\u591a\u5b9e\u73b0\uff0c\u5305\u62ec\u6587\u4ef6\u3001\u7f51\u7edc\u8fde\u63a5\u3001\u538b\u7f29\u3001\u52a0\u5bc6\u7b49\n\n\nio.Reader\u63a5\u53e3\u7684\u5b9a\u4e49\uff1a\n\n\ntype\n \nReader\n \ninterface\n \n{\n\n    \nRead\n(\np\n \n[]\nbyte\n)\n \n(\nn\n \nint\n,\n \nerr\n \nerror\n)\n\n\n}\n\n\n\n\n\n\u4efb\u610f\u7684type\u53ea\u8981\u5b9e\u73b0\u4e86\nRead(p []byte) (n int, err error)\n\u5c31\u53ef\u4ee5\u88ab\u5176\u4ed6\u7a0b\u5e8f\u901a\u8fc7\u5b9e\u73b0Reader\u63a5\u53e3\u65b9\u5f0f\u6765\u8c03\u7528Read()\u65b9\u6cd5\n\n\nRead()\uff1a\u7528\u6570\u636e\u586b\u5145\u6307\u5b9a\u7684\u5b57\u8282 slice\uff0c\u5e76\u4e14\u8fd4\u56de\u586b\u5145\u7684\u5b57\u8282\u6570\u548c\u9519\u8bef\u4fe1\u606f\u3002 \u5728\u9047\u5230\u6570\u636e\u6d41\u7ed3\u5c3e\u65f6\uff0c\u8fd4\u56de io.EOF \u9519\u8bef\u3002\n\n\nstrings.Reader\n\n\n\n\nstrings.Reader\u662f\u4e2astruct\uff0c\u5b9a\u4e49\u5982\u4e0b\n\n\n// A Reader implements the io.Reader, io.ReaderAt, io.Seeker, io.WriterTo,\n\n\n// io.ByteScanner, and io.RuneScanner interfaces by reading\n\n\n// from a string.\n\n\ntype\n \nReader\n \nstruct\n \n{\n\n    \ns\n        \nstring\n\n    \ni\n        \nint64\n \n// current reading index\n\n    \nprevRune\n \nint\n   \n// index of previous rune; or \n 0\n\n\n}\n\n\n\n\n\nstrings.Reader\u5b9e\u73b0\u4e86io.Reader\uff0c\u56e0\u4e3astrings.Reader\u62e5\u6709\u7b26\u5408io.Reader\u8981\u6c42\u7684Read()\u65b9\u6cd5\uff0c\u5b9a\u4e49\u5982\u4e0b\n\n\nfunc\n \n(\nr\n \n*\nReader\n)\n \nRead\n(\nb\n \n[]\nbyte\n)\n \n(\nn\n \nint\n,\n \nerr\n \nerror\n)\n \n{\n\n    \nif\n \nr\n.\ni\n \n=\n \nint64\n(\nlen\n(\nr\n.\ns\n))\n \n{\n\n        \nreturn\n \n0\n,\n \nio\n.\nEOF\n\n    \n}\n\n    \nr\n.\nprevRune\n \n=\n \n-\n1\n\n    \nn\n \n=\n \ncopy\n(\nb\n,\n \nr\n.\ns\n[\nr\n.\ni\n:])\n\n    \nr\n.\ni\n \n+=\n \nint64\n(\nn\n)\n\n    \nreturn\n\n\n}\n\n\n\n\n\n\u4e0b\u9762\u4f8b\u5b50\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a strings.Reader\u3002 \u5e76\u4e14\u4ee5\u6bcf\u6b21 8 \u5b57\u8282\u7684\u901f\u5ea6\u8bfb\u53d6\u5b83\u7684\u8f93\u51fa\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nio\n\n    \nstrings\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nr\n \n:=\n \nstrings\n.\nNewReader\n(\nHello, Reader!\n)\n\n\n    \nb\n \n:=\n \nmake\n([]\nbyte\n,\n \n8\n)\n\n    \nfor\n \n{\n\n        \nn\n,\n \nerr\n \n:=\n \nr\n.\nRead\n(\nb\n)\n\n        \nfmt\n.\nPrintf\n(\nn = %v err = %v b = %v\\n\n,\n \nn\n,\n \nerr\n,\n \nb\n)\n\n        \nfmt\n.\nPrintf\n(\nb[:n] = %q\\n\n,\n \nb\n[:\nn\n])\n\n        \nif\n \nerr\n \n==\n \nio\n.\nEOF\n \n{\n\n            \nbreak\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\uff1a\n\n\nn = 8 err = \nnil\n b = [72 101 108 108 111 44 32 82]\nb[:n] = \nHello, R\n\nn = 6 err = \nnil\n b = [101 97 100 101 114 33 32 82]\nb[:n] = \neader!\n\nn = 0 err = EOF b = [101 97 100 101 114 33 32 82]\nb[:n] = \n\n\n\n\n\n\u6ce8\u610f\u70b9\uff1a\n\n\n\n\n\n\nr.Read(b) \u8868\u793a\u8bfb\u53d6r\u91cc\u9762\u7684\u5b57\u7b26\u4e32\uff08\u5373Hello, Reader!\uff09\uff0c\u6bcf\u6b21\u8bfb\u51fa8\u4e2a\u5b57\u8282\u5e76\u5b58\u5165slice b\u4e2d\uff0c\u5b58\u5165\u65b9\u5f0f\u662f\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u5b58\uff0c\u4e0d\u7ba1\u5143\u7d20\u539f\u6765\u662f\u5426\u5df2\u7ecf\u6709\u503c\u90fd\u76f4\u63a5\u8986\u76d6\u3002\u56e0\u6b64\u8981\u505aEOF\u7684\u5224\u65ad\uff0c\u56e0\u4e3a\u6700\u7ec8slice\u7684\u503c\u662f\u6700\u540e\u4e00\u6b21\u5faa\u73af\u8bfb\u51fa\u7684\uff08\u9760\u524d\uff09+ \u6700\u540e\u4e00\u6b21\u7684\u524d\u4e00\u6b21\u5faa\u73af\u8bfb\u51fa\u7684\uff08\u9760\u540e\uff09\uff0c\u5373\u5047\u8bbe\u5b57\u7b26\u4e32\u662f\u4ecea\u5230z\uff0c\u800c\u4e14[]byte, 3\uff0c\u90a3\u4e48\u6700\u7ec8slice\u7684\u503c\u7c7b\u4f3c\u8fd9\u6837[x, y, z, u, v, w]\n\n\n\n\n\n\n\u6bcf\u6b21r.Read()\u4e4b\u540e\u5df2\u7ecf\u88ab\u8bfb\u53d6\u7684r\u91cc\u9762\u7684\u5b57\u7b26\u4e32\u5c31\u4e0d\u80fd\u88ab\u91cd\u65b0\u8bfb\u53d6\u4e86\n\n\n\n\n\n\n\u5982\u679c\u4e0a\u9762\u4f8b\u5b50\u4e0d\u662f\u5f88\u61c2\uff0c\u5bf9\u4e0a\u9762\u4f8b\u5b50\u7a0d\u5fae\u6539\u9020\u4e0b\uff0c\u66f4\u8be6\u7ec6\u7684\u8f93\u51fa\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nio\n\n    \nstrings\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nr\n \n:=\n \nstrings\n.\nNewReader\n(\nHello, Reader!\n)\n\n\n    \nb\n \n:=\n \nmake\n([]\nbyte\n,\n \n4\n)\n\n    \nfmt\n.\nPrintln\n(\n===init===\n)\n\n    \nfmt\n.\nPrintln\n(\nr:\n,\n \nr\n)\n\n    \nfmt\n.\nPrintln\n(\nb:\n,\n \nb\n)\n\n\n    \nfmt\n.\nPrintln\n(\n===for begin===\n)\n\n    \nfor\n \n{\n\n        \nn\n,\n \nerr\n \n:=\n \nr\n.\nRead\n(\nb\n)\n\n        \nfmt\n.\nPrintln\n(\nr:\n,\n \nr\n)\n\n        \nfmt\n.\nPrintf\n(\nn = %v, err = %v, b = %v\\n\n,\n \nn\n,\n \nerr\n,\n \nb\n)\n\n        \nfmt\n.\nPrintf\n(\nb[:n] = %q\\n\n,\n \nb\n[:\nn\n])\n\n        \nif\n \nerr\n \n==\n \nio\n.\nEOF\n \n{\n\n            \nbreak\n\n        \n}\n\n        \nfmt\n.\nPrintln\n(\n---\n)\n\n    \n}\n\n\n    \nfmt\n.\nPrintln\n(\n===end===\n)\n\n    \nn\n,\n \nerr\n \n:=\n \nr\n.\nRead\n(\nb\n)\n\n    \nfmt\n.\nPrintln\n(\nr:\n,\n \nr\n)\n\n    \nfmt\n.\nPrintf\n(\nn = %v, err = %v, b = %v\\n\n,\n \nn\n,\n \nerr\n,\n \nb\n)\n\n    \nfmt\n.\nPrintf\n(\nb[:n] = %q\\n\n,\n \nb\n[:\nn\n])\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\uff1a\n\n\n===init===\nr: \n{Hello, Reader! 0 -1}\nb: [0 0 0 0]\n===for begin===\nr: \n{Hello, Reader! 4 -1}\nn = 4, err = \nnil\n, b = [72 101 108 108]\nb[:n] = \nHell\n\n---\nr: \n{Hello, Reader! 8 -1}\nn = 4, err = \nnil\n, b = [111 44 32 82]\nb[:n] = \no, R\n\n---\nr: \n{Hello, Reader! 12 -1}\nn = 4, err = \nnil\n, b = [101 97 100 101]\nb[:n] = \neade\n\n---\nr: \n{Hello, Reader! 14 -1}\nn = 2, err = \nnil\n, b = [114 33 100 101]\nb[:n] = \nr!\n\n---\nr: \n{Hello, Reader! 14 -1}\nn = 0, err = EOF, b = [114 33 100 101]\nb[:n] = \n\n===end===\nr: \n{Hello, Reader! 14 -1}\nn = 0, err = EOF, b = [114 33 100 101]\nb[:n] =", 
            "title": "11. Readers"
        }, 
        {
            "location": "/other/readers/#ioreader", 
            "text": "io \u5305\u6307\u5b9a\u4e86 io.Reader \u63a5\u53e3\uff0c \u5b83\u8868\u793a\u4ece\u6570\u636e\u6d41\u7ed3\u5c3e\u8bfb\u53d6\u3002  Go\u6807\u51c6\u5e93\u5305\u542b\u8fd9\u4e2a\u4e86io.Reader\u63a5\u53e3\u7684\u8bb8\u591a\u5b9e\u73b0\uff0c\u5305\u62ec\u6587\u4ef6\u3001\u7f51\u7edc\u8fde\u63a5\u3001\u538b\u7f29\u3001\u52a0\u5bc6\u7b49  io.Reader\u63a5\u53e3\u7684\u5b9a\u4e49\uff1a  type   Reader   interface   { \n     Read ( p   [] byte )   ( n   int ,   err   error )  }   \u4efb\u610f\u7684type\u53ea\u8981\u5b9e\u73b0\u4e86 Read(p []byte) (n int, err error) \u5c31\u53ef\u4ee5\u88ab\u5176\u4ed6\u7a0b\u5e8f\u901a\u8fc7\u5b9e\u73b0Reader\u63a5\u53e3\u65b9\u5f0f\u6765\u8c03\u7528Read()\u65b9\u6cd5  Read()\uff1a\u7528\u6570\u636e\u586b\u5145\u6307\u5b9a\u7684\u5b57\u8282 slice\uff0c\u5e76\u4e14\u8fd4\u56de\u586b\u5145\u7684\u5b57\u8282\u6570\u548c\u9519\u8bef\u4fe1\u606f\u3002 \u5728\u9047\u5230\u6570\u636e\u6d41\u7ed3\u5c3e\u65f6\uff0c\u8fd4\u56de io.EOF \u9519\u8bef\u3002", 
            "title": "io.Reader"
        }, 
        {
            "location": "/other/readers/#stringsreader", 
            "text": "strings.Reader\u662f\u4e2astruct\uff0c\u5b9a\u4e49\u5982\u4e0b  // A Reader implements the io.Reader, io.ReaderAt, io.Seeker, io.WriterTo,  // io.ByteScanner, and io.RuneScanner interfaces by reading  // from a string.  type   Reader   struct   { \n     s          string \n     i          int64   // current reading index \n     prevRune   int     // index of previous rune; or   0  }   strings.Reader\u5b9e\u73b0\u4e86io.Reader\uff0c\u56e0\u4e3astrings.Reader\u62e5\u6709\u7b26\u5408io.Reader\u8981\u6c42\u7684Read()\u65b9\u6cd5\uff0c\u5b9a\u4e49\u5982\u4e0b  func   ( r   * Reader )   Read ( b   [] byte )   ( n   int ,   err   error )   { \n     if   r . i   =   int64 ( len ( r . s ))   { \n         return   0 ,   io . EOF \n     } \n     r . prevRune   =   - 1 \n     n   =   copy ( b ,   r . s [ r . i :]) \n     r . i   +=   int64 ( n ) \n     return  }   \u4e0b\u9762\u4f8b\u5b50\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a strings.Reader\u3002 \u5e76\u4e14\u4ee5\u6bcf\u6b21 8 \u5b57\u8282\u7684\u901f\u5ea6\u8bfb\u53d6\u5b83\u7684\u8f93\u51fa  package   main  import   ( \n     fmt \n     io \n     strings  )  func   main ()   { \n     r   :=   strings . NewReader ( Hello, Reader! ) \n\n     b   :=   make ([] byte ,   8 ) \n     for   { \n         n ,   err   :=   r . Read ( b ) \n         fmt . Printf ( n = %v err = %v b = %v\\n ,   n ,   err ,   b ) \n         fmt . Printf ( b[:n] = %q\\n ,   b [: n ]) \n         if   err   ==   io . EOF   { \n             break \n         } \n     }  }   \u8f93\u51fa\uff1a  n = 8 err =  nil  b = [72 101 108 108 111 44 32 82]\nb[:n] =  Hello, R \nn = 6 err =  nil  b = [101 97 100 101 114 33 32 82]\nb[:n] =  eader! \nn = 0 err = EOF b = [101 97 100 101 114 33 32 82]\nb[:n] =    \u6ce8\u610f\u70b9\uff1a    r.Read(b) \u8868\u793a\u8bfb\u53d6r\u91cc\u9762\u7684\u5b57\u7b26\u4e32\uff08\u5373Hello, Reader!\uff09\uff0c\u6bcf\u6b21\u8bfb\u51fa8\u4e2a\u5b57\u8282\u5e76\u5b58\u5165slice b\u4e2d\uff0c\u5b58\u5165\u65b9\u5f0f\u662f\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u5b58\uff0c\u4e0d\u7ba1\u5143\u7d20\u539f\u6765\u662f\u5426\u5df2\u7ecf\u6709\u503c\u90fd\u76f4\u63a5\u8986\u76d6\u3002\u56e0\u6b64\u8981\u505aEOF\u7684\u5224\u65ad\uff0c\u56e0\u4e3a\u6700\u7ec8slice\u7684\u503c\u662f\u6700\u540e\u4e00\u6b21\u5faa\u73af\u8bfb\u51fa\u7684\uff08\u9760\u524d\uff09+ \u6700\u540e\u4e00\u6b21\u7684\u524d\u4e00\u6b21\u5faa\u73af\u8bfb\u51fa\u7684\uff08\u9760\u540e\uff09\uff0c\u5373\u5047\u8bbe\u5b57\u7b26\u4e32\u662f\u4ecea\u5230z\uff0c\u800c\u4e14[]byte, 3\uff0c\u90a3\u4e48\u6700\u7ec8slice\u7684\u503c\u7c7b\u4f3c\u8fd9\u6837[x, y, z, u, v, w]    \u6bcf\u6b21r.Read()\u4e4b\u540e\u5df2\u7ecf\u88ab\u8bfb\u53d6\u7684r\u91cc\u9762\u7684\u5b57\u7b26\u4e32\u5c31\u4e0d\u80fd\u88ab\u91cd\u65b0\u8bfb\u53d6\u4e86    \u5982\u679c\u4e0a\u9762\u4f8b\u5b50\u4e0d\u662f\u5f88\u61c2\uff0c\u5bf9\u4e0a\u9762\u4f8b\u5b50\u7a0d\u5fae\u6539\u9020\u4e0b\uff0c\u66f4\u8be6\u7ec6\u7684\u8f93\u51fa  package   main  import   ( \n     fmt \n     io \n     strings  )  func   main ()   { \n     r   :=   strings . NewReader ( Hello, Reader! ) \n\n     b   :=   make ([] byte ,   4 ) \n     fmt . Println ( ===init=== ) \n     fmt . Println ( r: ,   r ) \n     fmt . Println ( b: ,   b ) \n\n     fmt . Println ( ===for begin=== ) \n     for   { \n         n ,   err   :=   r . Read ( b ) \n         fmt . Println ( r: ,   r ) \n         fmt . Printf ( n = %v, err = %v, b = %v\\n ,   n ,   err ,   b ) \n         fmt . Printf ( b[:n] = %q\\n ,   b [: n ]) \n         if   err   ==   io . EOF   { \n             break \n         } \n         fmt . Println ( --- ) \n     } \n\n     fmt . Println ( ===end=== ) \n     n ,   err   :=   r . Read ( b ) \n     fmt . Println ( r: ,   r ) \n     fmt . Printf ( n = %v, err = %v, b = %v\\n ,   n ,   err ,   b ) \n     fmt . Printf ( b[:n] = %q\\n ,   b [: n ])  }   \u8f93\u51fa\uff1a  ===init===\nr:  {Hello, Reader! 0 -1}\nb: [0 0 0 0]\n===for begin===\nr:  {Hello, Reader! 4 -1}\nn = 4, err =  nil , b = [72 101 108 108]\nb[:n] =  Hell \n---\nr:  {Hello, Reader! 8 -1}\nn = 4, err =  nil , b = [111 44 32 82]\nb[:n] =  o, R \n---\nr:  {Hello, Reader! 12 -1}\nn = 4, err =  nil , b = [101 97 100 101]\nb[:n] =  eade \n---\nr:  {Hello, Reader! 14 -1}\nn = 2, err =  nil , b = [114 33 100 101]\nb[:n] =  r! \n---\nr:  {Hello, Reader! 14 -1}\nn = 0, err = EOF, b = [114 33 100 101]\nb[:n] =  \n===end===\nr:  {Hello, Reader! 14 -1}\nn = 0, err = EOF, b = [114 33 100 101]\nb[:n] =", 
            "title": "strings.Reader"
        }, 
        {
            "location": "/other/style/", 
            "text": "New\u98ce\u683c\n\n\n\n\n\u4f8b1\uff1a\u6ca1\u6709\u7528New\u65f6\u5019\nperson.go\npackage\n \nperson\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nPerson\n \nstruct\n \n{\n\n    \nName\n \nstring\n\n\n}\n\n\n\nfunc\n \n(\np\n \n*\nPerson\n)\n \nSayHi\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nHello, my name is\n,\n \np\n.\nName\n)\n\n\n}\n\n\n\n\n\u8c03\u7528\u8005\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \ngithub.com/cyent/repo1/person\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nme\n \n:=\n \nperson\n.\nPerson\n{\nName\n:\nSwaroop\n}\n\n    \nme\n.\nSayHi\n()\n\n\n}\n\n\n\n\n\u8f93\u51fa\nHello, my name is Swaroop\n\n\n\n\u6ce8\u610f\uff1a\u5bfc\u5165\u7684\u5305\u91cc\u7684struct\u7684\u5143\u7d20\u5fc5\u987b\u4e5f\u8981\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u624d\u80fd\u88ab\u8c03\u7528\u8005\u4f7f\u7528\n\u4f8b2\uff1a\u65b9\u6cd5\u540d\u5e26New\u53ef\u4ee5\u8ba9\u5305\u770b\u8fc7\u53bb\u66f4\u50cfjava\u7684\u9762\u5411\u5bf9\u8c61\u98ce\u683c\nperson.go\npackage person\n\nimport \nfmt\n\n\ntype Person struct {\n    name string\n}\n\nfunc NewPerson(n string) *Person {\n    return \nPerson{name: n}\n}\n\nfunc (p *Person) SayHi() {\n    fmt.Println(\nHello, my name is\n, p.name)\n}\n\n\n\n\u8c03\u7528\u8005\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \ngithub.com/cyent/repo1/person\n\n\n)\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nme\n \n:=\n \nperson\n.\nNewPerson\n(\nSwaroop\n)\n\n    \nme\n.\nSayHi\n()\n\n\n}\n\n\n\n\n\u8f93\u51fa\uff1a\nHello, my name is Swaroop\n\n\n\n\u6ce8\u610f\uff1a\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u7528name\u800c\u4e0d\u9700\u8981\u9996\u5b57\u6bcd\u5927\u5199\uff08Name\uff09\n\u4ec0\u4e48\u65f6\u5019\u7528\u7b2c\u4e00\u79cd\u4f8b\u5b50\uff08\u77e5\u9053\u8981\u8c03\u7528\u5305\u91cc\u7684\u4fe1\u606f\uff09\uff0c\u4ec0\u4e48\u65f6\u5019\u7528\u7b2c\u4e8c\u79cd\u4f8b\u5b50\uff08\u7528New\u98ce\u683c\u7684\u51fd\u6570\u5305\u88c5\uff09\uff0c\u5df2\u77e5\u67092\u70b9\u539f\u56e0\u6765\u5224\u65ad\uff1a\n\n\n\n\n\n\n\u9700\u8981\u5c01\u88c5\u7684\u65f6\u5019\uff0c\u4f7f\u7528New\uff0c\u4e0d\u5c01\u88c5\u65f6\u5019\uff08\u6bd4\u5982\u4e00\u4e2a\u6a21\u5757\u5185\u90e8\uff0c\u53ef\u4ee5\u4e0d\u7528New\uff09\n\n\n\u6bd4\u5982\u8bfb\u53d6json\u6587\u4ef6\uff0c\u5e76\u8f6c\u6362\u4e3ago\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f1a\u67092\u4e2a\u4e8b\u8981\u505a\uff1a\n\n\n\n\n\n\n\u628ajson\u6587\u4ef6\u8bfb\u5165\u4e00\u4e2a\u53d8\u91cf\n\n\n\n\n\n\n\u628a\u53d8\u91cf\u5185\u5bb9\u8f6c\u6362\u4e3ago\u7684\u6570\u636e\u7ed3\u6784\n\n\n\n\n\n\n\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u5c31\u53ef\u4ee5\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5c31\u662f\u51fd\u6570\u5305\u88c5\uff0c\u6bd4\u5982NewFromJsonFile()\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u628a\u8bfb\u6587\u4ef6\u3001\u8f6c\u6362\u653e\u5728\u4e00\u8d77\n\n\n\n\n\n\n\u5982\u679c\u8981\u4f20\u7684\u53c2\u6570\u6bd4\u8f83\u5c11\uff0c\u53ef\u4ee5\u4e0d\u7528New\uff0c\u5982\u679c\u8981\u4f20\u7684\u53c2\u6570\u5f88\u591a\uff0c\u6709\u5341\u51e0\u4e2a\uff0c\u53ef\u4ee5\u7528New\n\n\n\n\n\n\n\n\nstruct\u548cstruct\u5143\u7d20\u540d\u9700\u8981\u5927\u5199\u624d\u80fd\u88ab\u5bfc\u5165\n\n\n\u8be6\u89c1\nstruct-\u5bfc\u51fa\u540d", 
            "title": "12. \u7f16\u7801\u98ce\u683c"
        }, 
        {
            "location": "/other/style/#new", 
            "text": "\u4f8b1\uff1a\u6ca1\u6709\u7528New\u65f6\u5019 person.go package   person  import   fmt  type   Person   struct   { \n     Name   string  }  func   ( p   * Person )   SayHi ()   { \n     fmt . Println ( Hello, my name is ,   p . Name )  }   \u8c03\u7528\u8005 package   main  import   ( \n     github.com/cyent/repo1/person  )  func   main ()   { \n     me   :=   person . Person { Name : Swaroop } \n     me . SayHi ()  }   \u8f93\u51fa Hello, my name is Swaroop  \u6ce8\u610f\uff1a\u5bfc\u5165\u7684\u5305\u91cc\u7684struct\u7684\u5143\u7d20\u5fc5\u987b\u4e5f\u8981\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u624d\u80fd\u88ab\u8c03\u7528\u8005\u4f7f\u7528 \u4f8b2\uff1a\u65b9\u6cd5\u540d\u5e26New\u53ef\u4ee5\u8ba9\u5305\u770b\u8fc7\u53bb\u66f4\u50cfjava\u7684\u9762\u5411\u5bf9\u8c61\u98ce\u683c person.go package person\n\nimport  fmt \n\ntype Person struct {\n    name string\n}\n\nfunc NewPerson(n string) *Person {\n    return  Person{name: n}\n}\n\nfunc (p *Person) SayHi() {\n    fmt.Println( Hello, my name is , p.name)\n}  \u8c03\u7528\u8005 package   main  import   ( \n     github.com/cyent/repo1/person  )  func   main ()   { \n     me   :=   person . NewPerson ( Swaroop ) \n     me . SayHi ()  }   \u8f93\u51fa\uff1a Hello, my name is Swaroop  \u6ce8\u610f\uff1a\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u7528name\u800c\u4e0d\u9700\u8981\u9996\u5b57\u6bcd\u5927\u5199\uff08Name\uff09 \u4ec0\u4e48\u65f6\u5019\u7528\u7b2c\u4e00\u79cd\u4f8b\u5b50\uff08\u77e5\u9053\u8981\u8c03\u7528\u5305\u91cc\u7684\u4fe1\u606f\uff09\uff0c\u4ec0\u4e48\u65f6\u5019\u7528\u7b2c\u4e8c\u79cd\u4f8b\u5b50\uff08\u7528New\u98ce\u683c\u7684\u51fd\u6570\u5305\u88c5\uff09\uff0c\u5df2\u77e5\u67092\u70b9\u539f\u56e0\u6765\u5224\u65ad\uff1a    \u9700\u8981\u5c01\u88c5\u7684\u65f6\u5019\uff0c\u4f7f\u7528New\uff0c\u4e0d\u5c01\u88c5\u65f6\u5019\uff08\u6bd4\u5982\u4e00\u4e2a\u6a21\u5757\u5185\u90e8\uff0c\u53ef\u4ee5\u4e0d\u7528New\uff09  \u6bd4\u5982\u8bfb\u53d6json\u6587\u4ef6\uff0c\u5e76\u8f6c\u6362\u4e3ago\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f1a\u67092\u4e2a\u4e8b\u8981\u505a\uff1a    \u628ajson\u6587\u4ef6\u8bfb\u5165\u4e00\u4e2a\u53d8\u91cf    \u628a\u53d8\u91cf\u5185\u5bb9\u8f6c\u6362\u4e3ago\u7684\u6570\u636e\u7ed3\u6784    \u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u5c31\u53ef\u4ee5\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5c31\u662f\u51fd\u6570\u5305\u88c5\uff0c\u6bd4\u5982NewFromJsonFile()\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u628a\u8bfb\u6587\u4ef6\u3001\u8f6c\u6362\u653e\u5728\u4e00\u8d77    \u5982\u679c\u8981\u4f20\u7684\u53c2\u6570\u6bd4\u8f83\u5c11\uff0c\u53ef\u4ee5\u4e0d\u7528New\uff0c\u5982\u679c\u8981\u4f20\u7684\u53c2\u6570\u5f88\u591a\uff0c\u6709\u5341\u51e0\u4e2a\uff0c\u53ef\u4ee5\u7528New     struct\u548cstruct\u5143\u7d20\u540d\u9700\u8981\u5927\u5199\u624d\u80fd\u88ab\u5bfc\u5165  \u8be6\u89c1 struct-\u5bfc\u51fa\u540d", 
            "title": "New\u98ce\u683c"
        }, 
        {
            "location": "/other/new/", 
            "text": "new()\n\n\n\n\ngo\u5185\u5efa\nnew()\n\u7684\u5b9a\u4e49\n\n\nfunc\n \nnew\n(\nType\n)\n \n*\nType\n\n\n\n\n\n\u5185\u5efa\u51fd\u6570 new() \u7528\u6765\u5206\u914d\u5185\u5b58\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u7c7b\u578b\uff0c\u4e0d\u662f\u4e00\u4e2a\u503c\uff0c\u5b83\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u5411\u65b0\u5206\u914d\u7c7b\u578b\u96f6\u503c\u7684\u6307\u9488\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\ntype\n \nfoo\n \nstruct\n \n{\n\n    \nX\n,\n \nY\n \nint\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ns1\n \n:=\n \nfoo\n{}\n\n    \ns2\n \n:=\n \nnew\n(\nfoo\n)\n\n\n    \nfmt\n.\nPrintf\n(\ns1: %T %v\\n\n,\n \ns1\n,\n \ns1\n)\n\n    \nfmt\n.\nPrintf\n(\ns2: %T %v\\n\n,\n \ns2\n,\n \ns2\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\ns1: main.foo {0 0}\ns2: *main.foo \n{0 0}", 
            "title": "13. new"
        }, 
        {
            "location": "/other/new/#new", 
            "text": "go\u5185\u5efa new() \u7684\u5b9a\u4e49  func   new ( Type )   * Type   \u5185\u5efa\u51fd\u6570 new() \u7528\u6765\u5206\u914d\u5185\u5b58\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u7c7b\u578b\uff0c\u4e0d\u662f\u4e00\u4e2a\u503c\uff0c\u5b83\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u5411\u65b0\u5206\u914d\u7c7b\u578b\u96f6\u503c\u7684\u6307\u9488  package   main  import   fmt  type   foo   struct   { \n     X ,   Y   int  }  func   main ()   { \n     s1   :=   foo {} \n     s2   :=   new ( foo ) \n\n     fmt . Printf ( s1: %T %v\\n ,   s1 ,   s1 ) \n     fmt . Printf ( s2: %T %v\\n ,   s2 ,   s2 )  }   \u8f93\u51fa  s1: main.foo {0 0}\ns2: *main.foo  {0 0}", 
            "title": "new()"
        }, 
        {
            "location": "/other/ptr_cpu/", 
            "text": "\u73af\u5883\u8bf4\u660e\n\n\n\n\n2\u53f0\u6d4b\u8bd5vm\uff0c1\u53f0\u662f\u5355\u6838\uff0c1\u53f0\u662f4\u6838\n\n\n\u4ee3\u7801\u903b\u8f91\uff1a\n\n\n\n\n\n\n\u591a\u8fdb\u7a0b\uff1a\u4e3b\u8fdb\u7a0b\u548c2\u4e2a\u5b50\u8fdb\u7a0b(fork)\u540c\u65f6\u8fd0\u884c\u6b7b\u5faa\u73af\n\n\n\n\n\n\n\u591a\u7ebf\u7a0b\uff1a\u4e3b\u7ebf\u7a0b(main)\u548c\u751f\u6210\u76842\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8fd0\u884c\u6b7b\u5faa\u73af\n\n\n\n\n\n\n\u534f\u7a0b\uff1a\u4e3b\u534f\u7a0b\u548c\u751f\u6210\u76842\u4e2a\u534f\u7a0b\u540c\u65f6\u8fd0\u884c\u6b7b\u5faa\u73af\n\n\n\n\n\n\n\u89c2\u5bdf\u65b9\u6cd5: top(\u5c55\u5f00\u6240\u6709cpu)\u548cps -eLf\n\n\n\u89c2\u5bdf\u70b9\uff1a\n\n\n\n\n\n\n\u5360\u7528\u51e0\u4e2acpu\n\n\n\n\n\n\ncpu\u603b\u4f7f\u7528\u7387\u767e\u5206\u6bd4\n\n\n\n\n\n\n\u6bcf\u4e2acpu\u7684user\u548csys\u7684\u767e\u5206\u6bd4\n\n\n\n\n\n\n\u5f00\u542f\u7684\u7ebf\u7a0b\u6570\u91cf\n\n\n\n\n\n\n\u6bcf\u4e2a\u7ebf\u7a0b\u5360\u7528cpu\u7684\u767e\u5206\u6bd4\n\n\n\n\n\n\n\u7ed3\u679c\u6bd4\u8f83\uff1a\n\n\n\n\n\n\n\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u4e4b\u95f4\u7684\u533a\u522b\n\n\n\n\n\n\n\u4e0d\u540c\u8bed\u8a00\u3001\u540c\u8bed\u8a00\u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u7684\u533a\u522b\n\n\n\n\n\n\n\u6d4b\u8bd5\u4ee3\u7801:\n\n\n\n\n\n\n\u591a\u8fdb\u7a0b\n\n\nlinux-GCC 4.8.5 \u591a\u8fdb\u7a0b(fork)\nmain\n()\n \n{\n\n    \nif\n \n(\nfork\n()\n \n!=\n \n0\n)\n \n{\n\n        \nfork\n();\n\n    \n}\n\n    \nwhile\n(\n1\n)\n \n{}\n\n\n}\n\n\n\n\npython2.7 \u591a\u8fdb\u7a0b\n# -*- coding: utf-8 -*-\n\n\n\nimport\n \nmultiprocessing\n\n\n\ndef\n \nloop\n():\n\n    \nwhile\n \nTrue\n:\n\n        \npass\n\n\n\nmultiprocessing\n.\nProcess\n(\ntarget\n=\nloop\n)\n.\nstart\n()\n\n\nmultiprocessing\n.\nProcess\n(\ntarget\n=\nloop\n)\n.\nstart\n()\n\n\nloop\n()\n\n\n\n\npython3.6 \u591a\u8fdb\u7a0b\n# -*- coding: utf-8 -*-\n\n\n\nimport\n \nmultiprocessing\n\n\n\ndef\n \nloop\n():\n\n    \nwhile\n \nTrue\n:\n\n        \npass\n\n\n\nmultiprocessing\n.\nProcess\n(\ntarget\n=\nloop\n)\n.\nstart\n()\n\n\nmultiprocessing\n.\nProcess\n(\ntarget\n=\nloop\n)\n.\nstart\n()\n\n\nloop\n()\n\n\n\n\n\n\n\n\n\u591a\u7ebf\u7a0b\n\n\nlinux-GCC 4.8.5 \u591a\u7ebf\u7a0b(pthread)\n#include\n \npthread.h\n\n\n\nloop\n()\n \n{\n\n    \nwhile\n(\n1\n)\n \n{}\n\n\n}\n\n\n\nmain\n()\n \n{\n\n    \npthread_t\n \nid\n;\n\n    \npthread_create\n(\nid\n,\nNULL\n,(\nvoid\n \n*\n)\n \nloop\n,\nNULL\n);\n\n    \npthread_create\n(\nid\n,\nNULL\n,(\nvoid\n \n*\n)\n \nloop\n,\nNULL\n);\n\n    \nloop\n();\n\n\n}\n\n\n\n\n\u7f16\u8bd1: gcc -l pthread -o thread thread.c\npython2.7 \u591a\u7ebf\u7a0b\uff08thread\u6a21\u5757\u548cthreading\u6a21\u5757\u6548\u679c\u76f8\u540c\uff09\n# -*- coding: utf-8 -*-\n\n\n\nimport\n \nthread\n\n\n\ndef\n \nloop\n():\n\n    \nwhile\n \nTrue\n:\n\n        \npass\n\n\n\nthread\n.\nstart_new_thread\n(\nloop\n,\n \n())\n\n\nthread\n.\nstart_new_thread\n(\nloop\n,\n \n())\n\n\nloop\n()\n\n\n\n\npython3.6 \u591a\u7ebf\u7a0b\n# -*- coding: utf-8 -*-\n\n\n\nimport\n \nthreading\n\n\n\ndef\n \nloop\n():\n\n    \nwhile\n \nTrue\n:\n\n        \npass\n\n\n\nthreading\n.\nThread\n(\ntarget\n=\nloop\n)\n.\nstart\n()\n\n\nthreading\n.\nThread\n(\ntarget\n=\nloop\n)\n.\nstart\n()\n\n\nloop\n()\n\n\n\n\njava1.8 \u591a\u7ebf\u7a0b\npublic\n \nclass\n \nthread\n \nimplements\n \nRunnable\n{\n\n    \nprivate\n \nthread\n \ntrt\n;\n\n\n    \npublic\n \nthread\n()\n \n{\n\n        \ntrt\n=\nthis\n;\n\n        \nThread\n \nt1\n=\nnew\n \nThread\n(\ntrt\n);\n\n        \nThread\n \nt2\n=\nnew\n \nThread\n(\ntrt\n);\n\n        \nt1\n.\nstart\n();\n\n        \nt2\n.\nstart\n();\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nrun\n()\n \n{\n\n        \nwhile\n(\ntrue\n)\n \n{}\n\n    \n}\n\n\n    \npublic\n \nstatic\n \nvoid\n \nmain\n(\nString\n[]\n \nargs\n)\n \n{\n\n        \nnew\n \nthread\n();\n\n        \nwhile\n(\ntrue\n)\n \n{}\n\n    \n}\n\n\n}\n\n\n\n\ngo1.8 \u534f\u7a0b\n\u867d\u7136\u4f8b\u5b50\u91cc\u542f\u52a8\u7684\u662fgoroutine\uff08\u534f\u7a0b\uff09\uff0c\u4f46\u5728\u591a\u6838\u60c5\u51b5\u4e0b\u5f88\u53ef\u80fd\u662f\u591a\u7ebf\u7a0b\u65b9\u5f0f\u3002\u56e0\u4e3ago\u4f1a\u5145\u5206\u5229\u7528cpu\u8d44\u6e90\uff0c\u5f53cpu\u903b\u8f91\u6838\u6570 \n \u7a0b\u5e8f\u91cc(\u4f7f\u7528go\u5173\u952e\u5b57)\u7684goroutine\u6570\u91cf\u65f6\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u91cc\u53ea\u8fd0\u884c\u4e00\u4e2agoroutine\uff08\u5373\u4f7f\u7528go\u5173\u952e\u5b57\u5b9e\u9645\u662f\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u4e13\u95e8\u53ea\u8dd1\u4e00\u4e2a\u534f\u7a0b\uff09\u3002\u6240\u4ee5\u8fd9\u91cc\u628ago\u534f\u7a0b\u5f52\u5165\u591a\u7ebf\u7a0b\u8303\u7574\npackage\n \nmain\n\n\n\nfunc\n \nloop\n()\n \n{\n\n    \nfor\n \n{\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ngo\n \nloop\n()\n\n    \ngo\n \nloop\n()\n\n    \nloop\n()\n\n\n}\n\n\n\n\n\n\n\n\n\u5355\u6838\u7ed3\u679c\n\n\n\n\n\n\n\n\n\u591a\u8fdb\u7a0b\n\n\nlinux-GCC 4.8.5 \u591a\u8fdb\u7a0b(fork)\ntop\n%Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot    19026 18816 19026 33    1 23:12 pts/0    00:00:09 ./proc\nroot    19027 19026 19027 33    1 23:12 pts/0    00:00:09 ./proc\nroot    19028 19026 19028 33    1 23:12 pts/0    00:00:09 ./proc\n\n\n\npython2.7 \u591a\u8fdb\u7a0b\ntop\n%Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot    10130  9887 10130 33    1 17:07 pts/1    00:00:09 python pyproc.py\nroot    10131 10130 10131 33    1 17:07 pts/1    00:00:09 python pyproc.py\nroot    10132 10130 10132 33    1 17:07 pts/1    00:00:09 python pyproc.py\n\n\n\npython3.6 \u591a\u8fdb\u7a0b\ntop\n%Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot    29326 28841 29326 33    1 11:56 pts/1    00:00:06 /usr/local/python-3.6.4/bin/python3 pyproc.py\nroot    29327 29326 29327 33    1 11:56 pts/1    00:00:06 /usr/local/python-3.6.4/bin/python3 pyproc.py\nroot    29328 29326 29328 33    1 11:56 pts/1    00:00:06 /usr/local/python-3.6.4/bin/python3 pyproc.py\n\n\n\n\n\n\n\n\u591a\u7ebf\u7a0b\n\n\nlinux-GCC 4.8.5 \u591a\u7ebf\u7a0b(pthread)\ntop\n%Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot    20956 19390 20956 33    3 23:46 pts/0    00:00:06 ./thread\nroot    20956 19390 20957 33    3 23:46 pts/0    00:00:06 ./thread\nroot    20956 19390 20958 33    3 23:46 pts/0    00:00:06 ./thread\n\n\n\npython2.7 \u591a\u7ebf\u7a0b\uff08thread\u6a21\u5757\u548cthreading\u6a21\u5757\u6548\u679c\u76f8\u540c\uff09\ntop\n%Cpu0  : 92.2 us,  7.8 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot      9990  9887  9990 33    3 17:06 pts/1    00:00:08 python pythread.py\nroot      9990  9887  9991 32    3 17:06 pts/1    00:00:08 python pythread.py\nroot      9990  9887  9992 32    3 17:06 pts/1    00:00:08 python pythread.py\n\n\n\npython3.6 \u591a\u7ebf\u7a0b\ntop\n%Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot    29113 28841 29113 33    3 11:55 pts/1    00:00:05 /usr/local/python-3.6.4/bin/python3 pythreading-3.6.py\nroot    29113 28841 29114 33    3 11:55 pts/1    00:00:05 /usr/local/python-3.6.4/bin/python3 pythreading-3.6.py\nroot    29113 28841 29115 33    3 11:55 pts/1    00:00:05 /usr/local/python-3.6.4/bin/python3 pythreading-3.6.py\n\n\n\njava1.8 \u591a\u7ebf\u7a0b\ntop\n%Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot    16211 16066 16211  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16212 33  12 21:39 pts/2    00:00:10 java thread\nroot    16211 16066 16213  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16214  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16215  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16216  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16217  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16218  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16219  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16220  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16221 33  12 21:39 pts/2    00:00:10 java thread\nroot    16211 16066 16222 33  12 21:39 pts/2    00:00:10 java thread\n\n\n\ngo1.8 \u534f\u7a0b\ntop\n%Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot    10247  9887 10247 96    3 17:08 pts/1    00:00:19 ./goroutines\nroot    10247  9887 10248  0    3 17:08 pts/1    00:00:00 ./goroutines\nroot    10247  9887 10249  0    3 17:08 pts/1    00:00:00 ./goroutines\n\n\n\n\n\n\n\n\u591a\u6838\u7ed3\u679c\n\n\n\n\n\n\n\n\n\u591a\u8fdb\u7a0b\n\n\nlinux-GCC 4.8.5 \u591a\u8fdb\u7a0b(fork)\ntop\n%Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot    20627 17419 20627 99    1 23:10 pts/2    00:00:33 ./proc\nroot    20628 20627 20628 99    1 23:10 pts/2    00:00:33 ./proc\nroot    20629 20627 20629 99    1 23:10 pts/2    00:00:33 ./proc\n\n\n\npython2.7 \u591a\u8fdb\u7a0b\ntop\n%Cpu0  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot      4432  2915  4432 99    1 17:31 pts/0    00:00:32 python pyproc.py\nroot      4433  4432  4433 99    1 17:31 pts/0    00:00:32 python pyproc.py\nroot      4434  4432  4434 99    1 17:31 pts/0    00:00:32 python pyproc.py\n\n\n\npython3.6 \u591a\u8fdb\u7a0b\ntop\n%Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot    16412 16148 16412 99    1 11:57 pts/0    00:00:31 /usr/local/python-3.6.4/bin/python3 pyproc.py\nroot    16413 16412 16413 99    1 11:57 pts/0    00:00:31 /usr/local/python-3.6.4/bin/python3 pyproc.py\nroot    16414 16412 16414 99    1 11:57 pts/0    00:00:31 /usr/local/python-3.6.4/bin/python3 pyproc.py\n\n\n\n\n\n\n\n\u591a\u7ebf\u7a0b\n\n\nlinux-GCC 4.8.5 \u591a\u7ebf\u7a0b(pthread)\ntop\n%Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot    22678 22456 22678 99    3 23:47 pts/0    00:00:57 ./thread\nroot    22678 22456 22679 99    3 23:47 pts/0    00:00:57 ./thread\nroot    22678 22456 22680 99    3 23:47 pts/0    00:00:57 ./thread\n\n\n\npython2.7 \u591a\u7ebf\u7a0b\uff08thread\u6a21\u5757\u548cthreading\u6a21\u5757\u6548\u679c\u76f8\u540c\uff09\ntop\n%Cpu0  : 34.3 us, 32.7 sy,  0.0 ni, 31.0 id,  0.0 wa,  0.0 hi,  0.0 si,  2.0 st\n%Cpu1  : 24.6 us, 39.7 sy,  0.0 ni, 34.5 id,  0.0 wa,  0.0 hi,  0.0 si,  1.2 st\n%Cpu2  : 29.2 us, 36.8 sy,  0.0 ni, 33.6 id,  0.0 wa,  0.0 hi,  0.0 si,  0.4 st\n%Cpu3  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot      3994  2915  3994 50    3 17:29 pts/0    00:00:27 python pythread.py\nroot      3994  2915  3995 47    3 17:29 pts/0    00:00:26 python pythread.py\nroot      3994  2915  3996 50    3 17:29 pts/0    00:00:27 python pythread.py\n\n\n\n\u8be5\u7a0b\u5e8f\u5360\u7528\u7684\u603bcpu\u4fdd\u6301\u5728150%\npython3.6 \u591a\u7ebf\u7a0b\ntop\n%Cpu0  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  : 29.7 us,  0.3 sy,  0.0 ni, 70.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  : 32.6 us,  0.3 sy,  0.0 ni, 67.1 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  : 36.7 us,  0.0 sy,  0.0 ni, 63.3 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot    16643 16148 16643 33    3 11:58 pts/0    00:00:13 /usr/local/python-3.6.4/bin/python3 pythreading.py\nroot    16643 16148 16644 32    3 11:58 pts/0    00:00:13 /usr/local/python-3.6.4/bin/python3 pythreading.py\nroot    16643 16148 16645 34    3 11:58 pts/0    00:00:13 /usr/local/python-3.6.4/bin/python3 pythreading.py\n\n\n\njava1.8 \u591a\u7ebf\u7a0b\ntop\n%Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot    14651 14429 14651  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14652 99  17 21:43 pts/0    00:00:59 java thread\nroot    14651 14429 14653  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14654  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14655  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14656  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14657  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14658  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14659  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14660  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14661  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14662  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14663  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14664  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14665  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14666 99  17 21:43 pts/0    00:00:59 java thread\nroot    14651 14429 14667 99  17 21:43 pts/0    00:00:59 java thread\n\n\n\n\u6ce8\u610f\uff1apython2\u548cpython3\u7684\u591a\u7ebf\u7a0b\u5360\u7528cpu\u7684\u6548\u679c\u4e0d\u540c\uff0c\u5e76\u4e14\u548c\u5176\u4ed6\u8bed\u8a00\u4e5f\u90fd\u4e0d\u540c\n\n\ngo1.8 \u534f\u7a0b\ntop\n%Cpu0  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n\n\n\nps -eLf\nroot      5090  2915  5090 99    5 17:33 pts/0    00:00:16 ./goroutines\nroot      5090  2915  5091  0    5 17:33 pts/0    00:00:00 ./goroutines\nroot      5090  2915  5092  0    5 17:33 pts/0    00:00:00 ./goroutines\nroot      5090  2915  5093 99    5 17:33 pts/0    00:00:16 ./goroutines\nroot      5090  2915  5094 99    5 17:33 pts/0    00:00:16 ./goroutines", 
            "title": "14.1. CPU\u5360\u7528\u7387\u6bd4\u8f83"
        }, 
        {
            "location": "/other/ptr_cpu/#_1", 
            "text": "2\u53f0\u6d4b\u8bd5vm\uff0c1\u53f0\u662f\u5355\u6838\uff0c1\u53f0\u662f4\u6838  \u4ee3\u7801\u903b\u8f91\uff1a    \u591a\u8fdb\u7a0b\uff1a\u4e3b\u8fdb\u7a0b\u548c2\u4e2a\u5b50\u8fdb\u7a0b(fork)\u540c\u65f6\u8fd0\u884c\u6b7b\u5faa\u73af    \u591a\u7ebf\u7a0b\uff1a\u4e3b\u7ebf\u7a0b(main)\u548c\u751f\u6210\u76842\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8fd0\u884c\u6b7b\u5faa\u73af    \u534f\u7a0b\uff1a\u4e3b\u534f\u7a0b\u548c\u751f\u6210\u76842\u4e2a\u534f\u7a0b\u540c\u65f6\u8fd0\u884c\u6b7b\u5faa\u73af    \u89c2\u5bdf\u65b9\u6cd5: top(\u5c55\u5f00\u6240\u6709cpu)\u548cps -eLf  \u89c2\u5bdf\u70b9\uff1a    \u5360\u7528\u51e0\u4e2acpu    cpu\u603b\u4f7f\u7528\u7387\u767e\u5206\u6bd4    \u6bcf\u4e2acpu\u7684user\u548csys\u7684\u767e\u5206\u6bd4    \u5f00\u542f\u7684\u7ebf\u7a0b\u6570\u91cf    \u6bcf\u4e2a\u7ebf\u7a0b\u5360\u7528cpu\u7684\u767e\u5206\u6bd4    \u7ed3\u679c\u6bd4\u8f83\uff1a    \u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u4e4b\u95f4\u7684\u533a\u522b    \u4e0d\u540c\u8bed\u8a00\u3001\u540c\u8bed\u8a00\u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u7684\u533a\u522b    \u6d4b\u8bd5\u4ee3\u7801:    \u591a\u8fdb\u7a0b  linux-GCC 4.8.5 \u591a\u8fdb\u7a0b(fork) main ()   { \n     if   ( fork ()   !=   0 )   { \n         fork (); \n     } \n     while ( 1 )   {}  }   python2.7 \u591a\u8fdb\u7a0b # -*- coding: utf-8 -*-  import   multiprocessing  def   loop (): \n     while   True : \n         pass  multiprocessing . Process ( target = loop ) . start ()  multiprocessing . Process ( target = loop ) . start ()  loop ()   python3.6 \u591a\u8fdb\u7a0b # -*- coding: utf-8 -*-  import   multiprocessing  def   loop (): \n     while   True : \n         pass  multiprocessing . Process ( target = loop ) . start ()  multiprocessing . Process ( target = loop ) . start ()  loop ()     \u591a\u7ebf\u7a0b  linux-GCC 4.8.5 \u591a\u7ebf\u7a0b(pthread) #include   pthread.h  loop ()   { \n     while ( 1 )   {}  }  main ()   { \n     pthread_t   id ; \n     pthread_create ( id , NULL ,( void   * )   loop , NULL ); \n     pthread_create ( id , NULL ,( void   * )   loop , NULL ); \n     loop ();  }   \u7f16\u8bd1: gcc -l pthread -o thread thread.c python2.7 \u591a\u7ebf\u7a0b\uff08thread\u6a21\u5757\u548cthreading\u6a21\u5757\u6548\u679c\u76f8\u540c\uff09 # -*- coding: utf-8 -*-  import   thread  def   loop (): \n     while   True : \n         pass  thread . start_new_thread ( loop ,   ())  thread . start_new_thread ( loop ,   ())  loop ()   python3.6 \u591a\u7ebf\u7a0b # -*- coding: utf-8 -*-  import   threading  def   loop (): \n     while   True : \n         pass  threading . Thread ( target = loop ) . start ()  threading . Thread ( target = loop ) . start ()  loop ()   java1.8 \u591a\u7ebf\u7a0b public   class   thread   implements   Runnable { \n     private   thread   trt ; \n\n     public   thread ()   { \n         trt = this ; \n         Thread   t1 = new   Thread ( trt ); \n         Thread   t2 = new   Thread ( trt ); \n         t1 . start (); \n         t2 . start (); \n     } \n\n     @Override \n     public   void   run ()   { \n         while ( true )   {} \n     } \n\n     public   static   void   main ( String []   args )   { \n         new   thread (); \n         while ( true )   {} \n     }  }   go1.8 \u534f\u7a0b \u867d\u7136\u4f8b\u5b50\u91cc\u542f\u52a8\u7684\u662fgoroutine\uff08\u534f\u7a0b\uff09\uff0c\u4f46\u5728\u591a\u6838\u60c5\u51b5\u4e0b\u5f88\u53ef\u80fd\u662f\u591a\u7ebf\u7a0b\u65b9\u5f0f\u3002\u56e0\u4e3ago\u4f1a\u5145\u5206\u5229\u7528cpu\u8d44\u6e90\uff0c\u5f53cpu\u903b\u8f91\u6838\u6570   \u7a0b\u5e8f\u91cc(\u4f7f\u7528go\u5173\u952e\u5b57)\u7684goroutine\u6570\u91cf\u65f6\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u91cc\u53ea\u8fd0\u884c\u4e00\u4e2agoroutine\uff08\u5373\u4f7f\u7528go\u5173\u952e\u5b57\u5b9e\u9645\u662f\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u4e13\u95e8\u53ea\u8dd1\u4e00\u4e2a\u534f\u7a0b\uff09\u3002\u6240\u4ee5\u8fd9\u91cc\u628ago\u534f\u7a0b\u5f52\u5165\u591a\u7ebf\u7a0b\u8303\u7574 package   main  func   loop ()   { \n     for   { \n     }  }  func   main ()   { \n     go   loop () \n     go   loop () \n     loop ()  }", 
            "title": "\u73af\u5883\u8bf4\u660e"
        }, 
        {
            "location": "/other/ptr_cpu/#_2", 
            "text": "\u591a\u8fdb\u7a0b  linux-GCC 4.8.5 \u591a\u8fdb\u7a0b(fork) top %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root    19026 18816 19026 33    1 23:12 pts/0    00:00:09 ./proc\nroot    19027 19026 19027 33    1 23:12 pts/0    00:00:09 ./proc\nroot    19028 19026 19028 33    1 23:12 pts/0    00:00:09 ./proc  python2.7 \u591a\u8fdb\u7a0b top %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root    10130  9887 10130 33    1 17:07 pts/1    00:00:09 python pyproc.py\nroot    10131 10130 10131 33    1 17:07 pts/1    00:00:09 python pyproc.py\nroot    10132 10130 10132 33    1 17:07 pts/1    00:00:09 python pyproc.py  python3.6 \u591a\u8fdb\u7a0b top %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root    29326 28841 29326 33    1 11:56 pts/1    00:00:06 /usr/local/python-3.6.4/bin/python3 pyproc.py\nroot    29327 29326 29327 33    1 11:56 pts/1    00:00:06 /usr/local/python-3.6.4/bin/python3 pyproc.py\nroot    29328 29326 29328 33    1 11:56 pts/1    00:00:06 /usr/local/python-3.6.4/bin/python3 pyproc.py    \u591a\u7ebf\u7a0b  linux-GCC 4.8.5 \u591a\u7ebf\u7a0b(pthread) top %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root    20956 19390 20956 33    3 23:46 pts/0    00:00:06 ./thread\nroot    20956 19390 20957 33    3 23:46 pts/0    00:00:06 ./thread\nroot    20956 19390 20958 33    3 23:46 pts/0    00:00:06 ./thread  python2.7 \u591a\u7ebf\u7a0b\uff08thread\u6a21\u5757\u548cthreading\u6a21\u5757\u6548\u679c\u76f8\u540c\uff09 top %Cpu0  : 92.2 us,  7.8 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root      9990  9887  9990 33    3 17:06 pts/1    00:00:08 python pythread.py\nroot      9990  9887  9991 32    3 17:06 pts/1    00:00:08 python pythread.py\nroot      9990  9887  9992 32    3 17:06 pts/1    00:00:08 python pythread.py  python3.6 \u591a\u7ebf\u7a0b top %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root    29113 28841 29113 33    3 11:55 pts/1    00:00:05 /usr/local/python-3.6.4/bin/python3 pythreading-3.6.py\nroot    29113 28841 29114 33    3 11:55 pts/1    00:00:05 /usr/local/python-3.6.4/bin/python3 pythreading-3.6.py\nroot    29113 28841 29115 33    3 11:55 pts/1    00:00:05 /usr/local/python-3.6.4/bin/python3 pythreading-3.6.py  java1.8 \u591a\u7ebf\u7a0b top %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root    16211 16066 16211  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16212 33  12 21:39 pts/2    00:00:10 java thread\nroot    16211 16066 16213  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16214  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16215  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16216  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16217  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16218  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16219  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16220  0  12 21:39 pts/2    00:00:00 java thread\nroot    16211 16066 16221 33  12 21:39 pts/2    00:00:10 java thread\nroot    16211 16066 16222 33  12 21:39 pts/2    00:00:10 java thread  go1.8 \u534f\u7a0b top %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root    10247  9887 10247 96    3 17:08 pts/1    00:00:19 ./goroutines\nroot    10247  9887 10248  0    3 17:08 pts/1    00:00:00 ./goroutines\nroot    10247  9887 10249  0    3 17:08 pts/1    00:00:00 ./goroutines", 
            "title": "\u5355\u6838\u7ed3\u679c"
        }, 
        {
            "location": "/other/ptr_cpu/#_3", 
            "text": "\u591a\u8fdb\u7a0b  linux-GCC 4.8.5 \u591a\u8fdb\u7a0b(fork) top %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root    20627 17419 20627 99    1 23:10 pts/2    00:00:33 ./proc\nroot    20628 20627 20628 99    1 23:10 pts/2    00:00:33 ./proc\nroot    20629 20627 20629 99    1 23:10 pts/2    00:00:33 ./proc  python2.7 \u591a\u8fdb\u7a0b top %Cpu0  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root      4432  2915  4432 99    1 17:31 pts/0    00:00:32 python pyproc.py\nroot      4433  4432  4433 99    1 17:31 pts/0    00:00:32 python pyproc.py\nroot      4434  4432  4434 99    1 17:31 pts/0    00:00:32 python pyproc.py  python3.6 \u591a\u8fdb\u7a0b top %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root    16412 16148 16412 99    1 11:57 pts/0    00:00:31 /usr/local/python-3.6.4/bin/python3 pyproc.py\nroot    16413 16412 16413 99    1 11:57 pts/0    00:00:31 /usr/local/python-3.6.4/bin/python3 pyproc.py\nroot    16414 16412 16414 99    1 11:57 pts/0    00:00:31 /usr/local/python-3.6.4/bin/python3 pyproc.py    \u591a\u7ebf\u7a0b  linux-GCC 4.8.5 \u591a\u7ebf\u7a0b(pthread) top %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root    22678 22456 22678 99    3 23:47 pts/0    00:00:57 ./thread\nroot    22678 22456 22679 99    3 23:47 pts/0    00:00:57 ./thread\nroot    22678 22456 22680 99    3 23:47 pts/0    00:00:57 ./thread  python2.7 \u591a\u7ebf\u7a0b\uff08thread\u6a21\u5757\u548cthreading\u6a21\u5757\u6548\u679c\u76f8\u540c\uff09 top %Cpu0  : 34.3 us, 32.7 sy,  0.0 ni, 31.0 id,  0.0 wa,  0.0 hi,  0.0 si,  2.0 st\n%Cpu1  : 24.6 us, 39.7 sy,  0.0 ni, 34.5 id,  0.0 wa,  0.0 hi,  0.0 si,  1.2 st\n%Cpu2  : 29.2 us, 36.8 sy,  0.0 ni, 33.6 id,  0.0 wa,  0.0 hi,  0.0 si,  0.4 st\n%Cpu3  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root      3994  2915  3994 50    3 17:29 pts/0    00:00:27 python pythread.py\nroot      3994  2915  3995 47    3 17:29 pts/0    00:00:26 python pythread.py\nroot      3994  2915  3996 50    3 17:29 pts/0    00:00:27 python pythread.py  \u8be5\u7a0b\u5e8f\u5360\u7528\u7684\u603bcpu\u4fdd\u6301\u5728150% python3.6 \u591a\u7ebf\u7a0b top %Cpu0  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  : 29.7 us,  0.3 sy,  0.0 ni, 70.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  : 32.6 us,  0.3 sy,  0.0 ni, 67.1 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  : 36.7 us,  0.0 sy,  0.0 ni, 63.3 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root    16643 16148 16643 33    3 11:58 pts/0    00:00:13 /usr/local/python-3.6.4/bin/python3 pythreading.py\nroot    16643 16148 16644 32    3 11:58 pts/0    00:00:13 /usr/local/python-3.6.4/bin/python3 pythreading.py\nroot    16643 16148 16645 34    3 11:58 pts/0    00:00:13 /usr/local/python-3.6.4/bin/python3 pythreading.py  java1.8 \u591a\u7ebf\u7a0b top %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root    14651 14429 14651  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14652 99  17 21:43 pts/0    00:00:59 java thread\nroot    14651 14429 14653  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14654  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14655  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14656  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14657  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14658  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14659  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14660  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14661  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14662  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14663  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14664  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14665  0  17 21:43 pts/0    00:00:00 java thread\nroot    14651 14429 14666 99  17 21:43 pts/0    00:00:59 java thread\nroot    14651 14429 14667 99  17 21:43 pts/0    00:00:59 java thread  \u6ce8\u610f\uff1apython2\u548cpython3\u7684\u591a\u7ebf\u7a0b\u5360\u7528cpu\u7684\u6548\u679c\u4e0d\u540c\uff0c\u5e76\u4e14\u548c\u5176\u4ed6\u8bed\u8a00\u4e5f\u90fd\u4e0d\u540c  go1.8 \u534f\u7a0b top %Cpu0  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu2  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st  ps -eLf root      5090  2915  5090 99    5 17:33 pts/0    00:00:16 ./goroutines\nroot      5090  2915  5091  0    5 17:33 pts/0    00:00:00 ./goroutines\nroot      5090  2915  5092  0    5 17:33 pts/0    00:00:00 ./goroutines\nroot      5090  2915  5093 99    5 17:33 pts/0    00:00:16 ./goroutines\nroot      5090  2915  5094 99    5 17:33 pts/0    00:00:16 ./goroutines", 
            "title": "\u591a\u6838\u7ed3\u679c"
        }, 
        {
            "location": "/other/ptr_stdout/", 
            "text": "\u73af\u5883\u8bf4\u660e\n\n\n\n\n2\u53f0\u6d4b\u8bd5vm\uff0c1\u53f0\u662f\u5355\u6838\uff0c1\u53f0\u662f4\u6838\n\n\n\u4ee3\u7801\u903b\u8f91:\n\n\n\n\n\n\n\u591a\u8fdb\u7a0b\uff1a\u4e3b\u8fdb\u7a0b\u548c2\u4e2a\u5b50\u8fdb\u7a0b(fork)\u540c\u65f6\u8f93\u51fa\u5b57\u7b26\u4e32\u5230\u5c4f\u5e55\n\n\n\n\n\n\n\u591a\u7ebf\u7a0b\uff1a\u4e3b\u7ebf\u7a0b(main)\u548c\u751f\u6210\u76842\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8f93\u51fa\u5b57\u7b26\u4e32\u5230\u5c4f\u5e55\n\n\n\n\n\n\n\u534f\u7a0b\uff1a\u4e3b\u534f\u7a0b\u548c\u751f\u4ea7\u76842\u4e2a\u534f\u7a0b\u540c\u65f6\u8f93\u51fa\u5b57\u7b26\u4e32\u5230\u5c4f\u5e55\n\n\n\n\n\n\n\u89c2\u5bdf\u70b9:\n\n\n\n\n\u662f\u5426\u6709\u51fa\u73b0\u4e32\u884c\uff08\u6ce8\u610f\u9700\u8981\u5173\u95edstdout\u7684buffer\uff0c\u5426\u5219\u4f1a\u5f71\u54cd\u6d4b\u8bd5\u7ed3\u679c\uff09\uff0c\u5355\u6838\u5e94\u8be5\u4e0d\u4f1a\u4e32\u884c\uff0c\u591a\u6838\u5e94\u8be5\u4f1a\u3002\u5982\u679c\u51fa\u73b0\u4e32\u884c\uff0c\u8bf4\u660e\u4eca\u540e\u4f7f\u7528\u8be5\u8bed\u8a00\u8be5\u7248\u672c\u8be5\u6a21\u5757\u9700\u8981\u6ce8\u610f\u9501\n\n\n\n\n\u7ed3\u679c\u6bd4\u8f83:\n\n\n\n\n\n\n\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u4e4b\u95f4\u7684\u533a\u522b\n\n\n\n\n\n\n\u4e0d\u540c\u8bed\u8a00\u3001\u540c\u8bed\u8a00\u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u7684\u533a\u522b\n\n\n\n\n\n\n\u6d4b\u8bd5\u4ee3\u7801:\n\n\n\n\n\n\n\u591a\u8fdb\u7a0b\n\n\nlinux-GCC 4.8.5 \u591a\u8fdb\u7a0b(fork)\n#include\n \nstdio.h\n\n\n#include\n \nunistd.h\n\n\n\nsay\n(\nchar\n \nstr\n[])\n \n{\n\n    \nint\n \ni\n;\n\n    \nfor\n \n(\ni\n=\n0\n;\n \ni\n20\n;\n \ni\n++\n)\n \n{\n\n        \nsleep\n(\n1\n);\n\n        \nprintf\n(\n%s\n\\n\n,\n \nstr\n);\n\n    \n}\n\n\n}\n\n\n\nmain\n()\n \n{\n\n    \nsetbuf\n(\nstdout\n,\n \nNULL\n);\n\n    \npid_t\n \nchild1_pid\n=-\n1\n;\n\n    \npid_t\n \nchild2_pid\n=-\n1\n;\n\n\n    \nchild1_pid\n \n=\n \nfork\n();\n\n    \nif\n \n(\nchild1_pid\n \n \n0\n)\n \n{\n\n        \nchild2_pid\n \n=\n \nfork\n();\n\n    \n}\n\n\n    \nif\n \n(\nchild1_pid\n \n*\n \nchild2_pid\n \n!=\n \n0\n)\n \n{\n\n        \nsay\n(\nFirst\n);\n\n    \n}\n\n    \nelse\n \nif\n \n(\nchild1_pid\n \n==\n \n0\n)\n \n{\n\n        \nsay\n(\nSecond\n);\n\n    \n}\n\n    \nelse\n \nif\n \n(\nchild2_pid\n \n==\n \n0\n)\n \n{\n\n        \nsay\n(\nThird\n);\n\n    \n}\n\n    \nelse\n \n{\n\n        \nprintf\n(\nERROR\n\\n\n);\n\n    \n}\n\n\n}\n\n\n\n\npython2.7 \u591a\u8fdb\u7a0b\n# -*- coding: utf-8 -*-\n\n\n\nimport\n \nmultiprocessing\n\n\nimport\n \ntime\n\n\n\ndef\n \nsay\n(\ns\n):\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n20\n):\n\n        \ntime\n.\nsleep\n(\n1\n)\n\n        \nprint\n(\ns\n)\n\n\n\nmultiprocessing\n.\nProcess\n(\ntarget\n=\nsay\n,\n \nargs\n=\n(\nSecond\n,))\n.\nstart\n()\n\n\nmultiprocessing\n.\nProcess\n(\ntarget\n=\nsay\n,\n \nargs\n=\n(\nThird\n,))\n.\nstart\n()\n\n\nsay\n(\nFirst\n)\n\n\n\n\npython -u xx.py\uff0c-u\u53c2\u6570\u8868\u793aunbuffered\npython3.6 \u591a\u8fdb\u7a0b\n# -*- coding: utf-8 -*-\n\n\n\nimport\n \nmultiprocessing\n\n\nimport\n \ntime\n\n\n\ndef\n \nsay\n(\ns\n):\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n20\n):\n\n        \ntime\n.\nsleep\n(\n1\n)\n\n        \nprint\n(\ns\n)\n\n\n\nmultiprocessing\n.\nProcess\n(\ntarget\n=\nsay\n,\n \nargs\n=\n(\nSecond\n,))\n.\nstart\n()\n\n\nmultiprocessing\n.\nProcess\n(\ntarget\n=\nsay\n,\n \nargs\n=\n(\nThird\n,))\n.\nstart\n()\n\n\nsay\n(\nFirst\n)\n\n\n\n\npython3 -u xx.py\uff0c-u\u53c2\u6570\u8868\u793aunbuffered\n\n\n\n\n\u591a\u7ebf\u7a0b\n\n\nlinux-GCC 4.8.5 \u591a\u7ebf\u7a0b(pthread)\n#include\n \npthread.h\n\n\n#include\n \nstdio.h\n\n\n\nsay\n(\nchar\n \nstr\n[])\n \n{\n\n    \nint\n \ni\n;\n\n    \nfor\n \n(\ni\n=\n0\n;\n \ni\n20\n;\n \ni\n++\n)\n \n{\n\n        \nsleep\n(\n1\n);\n\n        \nprintf\n(\n%s\n\\n\n,\n \nstr\n);\n\n    \n}\n\n\n}\n\n\n\nmain\n()\n \n{\n\n    \nsetbuf\n(\nstdout\n,\n \nNULL\n);\n\n    \npthread_t\n \nid\n;\n\n    \npthread_create\n(\nid\n,\nNULL\n,(\nvoid\n \n*\n)\n \nsay\n,\nSecond\n);\n\n    \npthread_create\n(\nid\n,\nNULL\n,(\nvoid\n \n*\n)\n \nsay\n,\nThird\n);\n\n    \nsay\n(\nFirst\n);\n\n\n}\n\n\n\n\ngcc -l pthread -o thread thread.c\npython2.7 \u591a\u7ebf\u7a0b\uff08thread\u6a21\u5757\uff09\n# -*- coding: utf-8 -*-\n\n\n\nimport\n \nthread\n\n\nimport\n \ntime\n\n\n\ndef\n \nsay\n(\ns\n):\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n20\n):\n\n        \ntime\n.\nsleep\n(\n1\n)\n\n        \nprint\n(\ns\n)\n\n\n\nthread\n.\nstart_new_thread\n(\nsay\n,\n \n(\nSecond\n,))\n\n\nthread\n.\nstart_new_thread\n(\nsay\n,\n \n(\nThird\n,))\n\n\nsay\n(\nFirst\n)\n\n\n\n\npython -u xx.py\uff0c-u\u53c2\u6570\u8868\u793aunbuffered\npython2.7 \u591a\u7ebf\u7a0b\uff08threading\u6a21\u5757\uff09\n# -*- coding: utf-8 -*-\n\n\n\nimport\n \nthreading\n\n\nimport\n \ntime\n\n\n\ndef\n \nsay\n(\ns\n):\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n20\n):\n\n        \ntime\n.\nsleep\n(\n1\n)\n\n        \nprint\n(\ns\n)\n\n\n\nthreading\n.\nThread\n(\ntarget\n=\nsay\n,\n \nargs\n=\n(\nSecond\n,))\n.\nstart\n()\n\n\nthreading\n.\nThread\n(\ntarget\n=\nsay\n,\n \nargs\n=\n(\nThird\n,))\n.\nstart\n()\n\n\nsay\n(\nFirst\n)\n\n\n\n\npython -u xx.py\uff0c-u\u53c2\u6570\u8868\u793aunbuffered\npython3.6 \u591a\u7ebf\u7a0b\n# -*- coding: utf-8 -*-\n\n\n\nimport\n \nthreading\n\n\nimport\n \ntime\n\n\n\ndef\n \nsay\n(\ns\n):\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n20\n):\n\n        \ntime\n.\nsleep\n(\n1\n)\n\n        \nprint\n(\ns\n)\n\n\n\nthreading\n.\nThread\n(\ntarget\n=\nsay\n,\n \nargs\n=\n(\nSecond\n,))\n.\nstart\n()\n\n\nthreading\n.\nThread\n(\ntarget\n=\nsay\n,\n \nargs\n=\n(\nThird\n,))\n.\nstart\n()\n\n\nsay\n(\nFirst\n)\n\n\n\n\npython3 -u xx.py\uff0c-u\u53c2\u6570\u8868\u793aunbuffered\njava1.8 \u591a\u7ebf\u7a0b\npublic\n \nclass\n \nthread\n \nimplements\n \nRunnable\n{\n\n    \nprivate\n \nthread\n \ntrt\n;\n\n    \nprivate\n \nString\n \ntext\n;\n\n\n    \npublic\n \nthread\n(\nString\n \ns\n)\n \n{\n\n        \ntrt\n=\nthis\n;\n\n        \ntext\n=\ns\n;\n\n        \nThread\n \nt\n=\nnew\n \nThread\n(\ntrt\n);\n\n        \nt\n.\nstart\n();\n\n    \n}\n\n\n    \npublic\n \nstatic\n \nvoid\n \nsay\n(\nString\n \ns\n)\n \n{\n\n        \nfor\n(\nint\n \ni\n=\n0\n;\n \ni\n20\n;\n \ni\n=\ni\n+\n1\n)\n \n{\n\n            \ntry\n \n{\n\n                \nThread\n.\nsleep\n(\n1000\n);\n\n            \n}\n \ncatch\n \n(\nInterruptedException\n \ne\n)\n \n{\n\n                \ne\n.\nprintStackTrace\n();\n\n            \n}\n\n            \nSystem\n.\nerr\n.\nprintln\n(\ns\n);\n\n        \n}\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nrun\n()\n \n{\n\n        \nsay\n(\ntext\n);\n\n    \n}\n\n\n    \npublic\n \nstatic\n \nvoid\n \nmain\n(\nString\n[]\n \nargs\n)\n \n{\n\n        \nnew\n \nthread\n(\nSecond\n);\n\n        \nnew\n \nthread\n(\nThird\n);\n\n        \nsay\n(\nFirst\n);\n\n    \n}\n\n\n}\n\n\n\n\nSystem.out\u662f\u6709buffer\u7684\uff08\u6682\u65f6\u6ca1\u627e\u5230\u5173\u95edbuffer\u65b9\u6cd5\uff09\uff0c\u800cSystem.err\u6ca1\u6709buffer\ngo1.8 \u534f\u7a0b\n\u867d\u7136\u4f8b\u5b50\u91cc\u542f\u52a8\u7684\u662fgoroutine\uff08\u534f\u7a0b\uff09\uff0c\u4f46\u5728\u591a\u6838\u60c5\u51b5\u4e0b\u5f88\u53ef\u80fd\u662f\u591a\u7ebf\u7a0b\u65b9\u5f0f\u3002\u56e0\u4e3ago\u4f1a\u5145\u5206\u5229\u7528cpu\u8d44\u6e90\uff0c\u5f53cpu\u903b\u8f91\u6838\u6570 \n \u7a0b\u5e8f\u91cc(\u4f7f\u7528go\u5173\u952e\u5b57)\u7684goroutine\u6570\u91cf\u65f6\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u91cc\u53ea\u8fd0\u884c\u4e00\u4e2agoroutine\uff08\u5373\u4f7f\u7528go\u5173\u952e\u5b57\u5b9e\u9645\u662f\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u4e13\u95e8\u53ea\u8dd1\u4e00\u4e2a\u534f\u7a0b\uff09\u3002\u6240\u4ee5\u8fd9\u91cc\u628ago\u534f\u7a0b\u5f52\u5165\u591a\u7ebf\u7a0b\u8303\u7574\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nos\n\n    \ntime\n\n\n)\n\n\n\nfunc\n \nsay\n(\nstr\n \nstring\n)\n \n{\n\n    \nfor\n \ni\n:=\n0\n;\n \ni\n20\n;\n \ni\n++\n \n{\n\n        \ntime\n.\nSleep\n(\n1000\n \n*\n \ntime\n.\nMillisecond\n)\n\n        \nos\n.\nStdout\n.\nWrite\n([]\nbyte\n(\nstr\n \n+\n \n\\n\n))\n\n    \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \ngo\n \nsay\n(\nSecond\n)\n\n    \ngo\n \nsay\n(\nThird\n)\n\n    \nsay\n(\nFirst\n)\n\n\n}\n\n\n\n\nIn C stdout is buffered by default, stderr is not.\nIn Go neither os.Stdout nor os.Stderr is buffered.\n\n\n\n\n\u5355\u6838\u7ed3\u679c\n\n\n\n\n\n\n\n\n\u591a\u8fdb\u7a0b\n\n\nlinux-GCC 4.8.5 \u591a\u8fdb\u7a0b(fork)\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\npython2.7 \u591a\u8fdb\u7a0b\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\npython3.6 \u591a\u8fdb\u7a0b\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\n\n\n\n\n\u591a\u7ebf\u7a0b\n\n\nlinux-GCC 4.8.5 \u591a\u7ebf\u7a0b(pthread)\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\npython2.7 \u591a\u7ebf\u7a0b\uff08thread\u6a21\u5757\uff09\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\npython2.7 \u591a\u7ebf\u7a0b\uff08threading\u6a21\u5757\uff09\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\npython3.6 \u591a\u7ebf\u7a0b\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\njava1.8 \u591a\u7ebf\u7a0b\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\ngo1.8 \u534f\u7a0b\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\n\n\n\n\n\u591a\u6838\u7ed3\u679c\n\n\n\n\n\n\n\n\n\u591a\u8fdb\u7a0b\n\n\nlinux-GCC 4.8.5 \u591a\u8fdb\u7a0b(fork)\n\u51fa\u73b0\u4e32\u884c\npython2.7 \u591a\u8fdb\u7a0b\n\u51fa\u73b0\u4e32\u884c\npython3.6 \u591a\u8fdb\u7a0b\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\n\n\n\n\n\u591a\u7ebf\u7a0b\n\n\nlinux-GCC 4.8.5 \u591a\u7ebf\u7a0b(pthread)\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\npython2.7 \u591a\u7ebf\u7a0b\uff08thread\u6a21\u5757\uff09\n\u51fa\u73b0\u4e32\u884c\npython2.7 \u591a\u7ebf\u7a0b\uff08threading\u6a21\u5757\uff09\n\u51fa\u73b0\u4e32\u884c\npython3.6 \u591a\u7ebf\u7a0b\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\njava1.8 \u591a\u7ebf\u7a0b\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\ngo1.8 \u534f\u7a0b\n\u672a\u51fa\u73b0\u4e32\u884c\n3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a", 
            "title": "14.2. \u5c4f\u5e55\u8f93\u51fa\u6bd4\u8f83"
        }, 
        {
            "location": "/other/ptr_stdout/#_1", 
            "text": "2\u53f0\u6d4b\u8bd5vm\uff0c1\u53f0\u662f\u5355\u6838\uff0c1\u53f0\u662f4\u6838  \u4ee3\u7801\u903b\u8f91:    \u591a\u8fdb\u7a0b\uff1a\u4e3b\u8fdb\u7a0b\u548c2\u4e2a\u5b50\u8fdb\u7a0b(fork)\u540c\u65f6\u8f93\u51fa\u5b57\u7b26\u4e32\u5230\u5c4f\u5e55    \u591a\u7ebf\u7a0b\uff1a\u4e3b\u7ebf\u7a0b(main)\u548c\u751f\u6210\u76842\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8f93\u51fa\u5b57\u7b26\u4e32\u5230\u5c4f\u5e55    \u534f\u7a0b\uff1a\u4e3b\u534f\u7a0b\u548c\u751f\u4ea7\u76842\u4e2a\u534f\u7a0b\u540c\u65f6\u8f93\u51fa\u5b57\u7b26\u4e32\u5230\u5c4f\u5e55    \u89c2\u5bdf\u70b9:   \u662f\u5426\u6709\u51fa\u73b0\u4e32\u884c\uff08\u6ce8\u610f\u9700\u8981\u5173\u95edstdout\u7684buffer\uff0c\u5426\u5219\u4f1a\u5f71\u54cd\u6d4b\u8bd5\u7ed3\u679c\uff09\uff0c\u5355\u6838\u5e94\u8be5\u4e0d\u4f1a\u4e32\u884c\uff0c\u591a\u6838\u5e94\u8be5\u4f1a\u3002\u5982\u679c\u51fa\u73b0\u4e32\u884c\uff0c\u8bf4\u660e\u4eca\u540e\u4f7f\u7528\u8be5\u8bed\u8a00\u8be5\u7248\u672c\u8be5\u6a21\u5757\u9700\u8981\u6ce8\u610f\u9501   \u7ed3\u679c\u6bd4\u8f83:    \u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u4e4b\u95f4\u7684\u533a\u522b    \u4e0d\u540c\u8bed\u8a00\u3001\u540c\u8bed\u8a00\u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u7684\u533a\u522b    \u6d4b\u8bd5\u4ee3\u7801:    \u591a\u8fdb\u7a0b  linux-GCC 4.8.5 \u591a\u8fdb\u7a0b(fork) #include   stdio.h  #include   unistd.h  say ( char   str [])   { \n     int   i ; \n     for   ( i = 0 ;   i 20 ;   i ++ )   { \n         sleep ( 1 ); \n         printf ( %s \\n ,   str ); \n     }  }  main ()   { \n     setbuf ( stdout ,   NULL ); \n     pid_t   child1_pid =- 1 ; \n     pid_t   child2_pid =- 1 ; \n\n     child1_pid   =   fork (); \n     if   ( child1_pid     0 )   { \n         child2_pid   =   fork (); \n     } \n\n     if   ( child1_pid   *   child2_pid   !=   0 )   { \n         say ( First ); \n     } \n     else   if   ( child1_pid   ==   0 )   { \n         say ( Second ); \n     } \n     else   if   ( child2_pid   ==   0 )   { \n         say ( Third ); \n     } \n     else   { \n         printf ( ERROR \\n ); \n     }  }   python2.7 \u591a\u8fdb\u7a0b # -*- coding: utf-8 -*-  import   multiprocessing  import   time  def   say ( s ): \n     for   i   in   range ( 20 ): \n         time . sleep ( 1 ) \n         print ( s )  multiprocessing . Process ( target = say ,   args = ( Second ,)) . start ()  multiprocessing . Process ( target = say ,   args = ( Third ,)) . start ()  say ( First )   python -u xx.py\uff0c-u\u53c2\u6570\u8868\u793aunbuffered python3.6 \u591a\u8fdb\u7a0b # -*- coding: utf-8 -*-  import   multiprocessing  import   time  def   say ( s ): \n     for   i   in   range ( 20 ): \n         time . sleep ( 1 ) \n         print ( s )  multiprocessing . Process ( target = say ,   args = ( Second ,)) . start ()  multiprocessing . Process ( target = say ,   args = ( Third ,)) . start ()  say ( First )   python3 -u xx.py\uff0c-u\u53c2\u6570\u8868\u793aunbuffered   \u591a\u7ebf\u7a0b  linux-GCC 4.8.5 \u591a\u7ebf\u7a0b(pthread) #include   pthread.h  #include   stdio.h  say ( char   str [])   { \n     int   i ; \n     for   ( i = 0 ;   i 20 ;   i ++ )   { \n         sleep ( 1 ); \n         printf ( %s \\n ,   str ); \n     }  }  main ()   { \n     setbuf ( stdout ,   NULL ); \n     pthread_t   id ; \n     pthread_create ( id , NULL ,( void   * )   say , Second ); \n     pthread_create ( id , NULL ,( void   * )   say , Third ); \n     say ( First );  }   gcc -l pthread -o thread thread.c python2.7 \u591a\u7ebf\u7a0b\uff08thread\u6a21\u5757\uff09 # -*- coding: utf-8 -*-  import   thread  import   time  def   say ( s ): \n     for   i   in   range ( 20 ): \n         time . sleep ( 1 ) \n         print ( s )  thread . start_new_thread ( say ,   ( Second ,))  thread . start_new_thread ( say ,   ( Third ,))  say ( First )   python -u xx.py\uff0c-u\u53c2\u6570\u8868\u793aunbuffered python2.7 \u591a\u7ebf\u7a0b\uff08threading\u6a21\u5757\uff09 # -*- coding: utf-8 -*-  import   threading  import   time  def   say ( s ): \n     for   i   in   range ( 20 ): \n         time . sleep ( 1 ) \n         print ( s )  threading . Thread ( target = say ,   args = ( Second ,)) . start ()  threading . Thread ( target = say ,   args = ( Third ,)) . start ()  say ( First )   python -u xx.py\uff0c-u\u53c2\u6570\u8868\u793aunbuffered python3.6 \u591a\u7ebf\u7a0b # -*- coding: utf-8 -*-  import   threading  import   time  def   say ( s ): \n     for   i   in   range ( 20 ): \n         time . sleep ( 1 ) \n         print ( s )  threading . Thread ( target = say ,   args = ( Second ,)) . start ()  threading . Thread ( target = say ,   args = ( Third ,)) . start ()  say ( First )   python3 -u xx.py\uff0c-u\u53c2\u6570\u8868\u793aunbuffered java1.8 \u591a\u7ebf\u7a0b public   class   thread   implements   Runnable { \n     private   thread   trt ; \n     private   String   text ; \n\n     public   thread ( String   s )   { \n         trt = this ; \n         text = s ; \n         Thread   t = new   Thread ( trt ); \n         t . start (); \n     } \n\n     public   static   void   say ( String   s )   { \n         for ( int   i = 0 ;   i 20 ;   i = i + 1 )   { \n             try   { \n                 Thread . sleep ( 1000 ); \n             }   catch   ( InterruptedException   e )   { \n                 e . printStackTrace (); \n             } \n             System . err . println ( s ); \n         } \n     } \n\n     @Override \n     public   void   run ()   { \n         say ( text ); \n     } \n\n     public   static   void   main ( String []   args )   { \n         new   thread ( Second ); \n         new   thread ( Third ); \n         say ( First ); \n     }  }   System.out\u662f\u6709buffer\u7684\uff08\u6682\u65f6\u6ca1\u627e\u5230\u5173\u95edbuffer\u65b9\u6cd5\uff09\uff0c\u800cSystem.err\u6ca1\u6709buffer go1.8 \u534f\u7a0b \u867d\u7136\u4f8b\u5b50\u91cc\u542f\u52a8\u7684\u662fgoroutine\uff08\u534f\u7a0b\uff09\uff0c\u4f46\u5728\u591a\u6838\u60c5\u51b5\u4e0b\u5f88\u53ef\u80fd\u662f\u591a\u7ebf\u7a0b\u65b9\u5f0f\u3002\u56e0\u4e3ago\u4f1a\u5145\u5206\u5229\u7528cpu\u8d44\u6e90\uff0c\u5f53cpu\u903b\u8f91\u6838\u6570   \u7a0b\u5e8f\u91cc(\u4f7f\u7528go\u5173\u952e\u5b57)\u7684goroutine\u6570\u91cf\u65f6\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u91cc\u53ea\u8fd0\u884c\u4e00\u4e2agoroutine\uff08\u5373\u4f7f\u7528go\u5173\u952e\u5b57\u5b9e\u9645\u662f\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u4e13\u95e8\u53ea\u8dd1\u4e00\u4e2a\u534f\u7a0b\uff09\u3002\u6240\u4ee5\u8fd9\u91cc\u628ago\u534f\u7a0b\u5f52\u5165\u591a\u7ebf\u7a0b\u8303\u7574 package   main  import   ( \n     os \n     time  )  func   say ( str   string )   { \n     for   i := 0 ;   i 20 ;   i ++   { \n         time . Sleep ( 1000   *   time . Millisecond ) \n         os . Stdout . Write ([] byte ( str   +   \\n )) \n     }  }  func   main ()   { \n     go   say ( Second ) \n     go   say ( Third ) \n     say ( First )  }   In C stdout is buffered by default, stderr is not. In Go neither os.Stdout nor os.Stderr is buffered.", 
            "title": "\u73af\u5883\u8bf4\u660e"
        }, 
        {
            "location": "/other/ptr_stdout/#_2", 
            "text": "\u591a\u8fdb\u7a0b  linux-GCC 4.8.5 \u591a\u8fdb\u7a0b(fork) \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a python2.7 \u591a\u8fdb\u7a0b \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a python3.6 \u591a\u8fdb\u7a0b \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a   \u591a\u7ebf\u7a0b  linux-GCC 4.8.5 \u591a\u7ebf\u7a0b(pthread) \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a python2.7 \u591a\u7ebf\u7a0b\uff08thread\u6a21\u5757\uff09 \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a python2.7 \u591a\u7ebf\u7a0b\uff08threading\u6a21\u5757\uff09 \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a python3.6 \u591a\u7ebf\u7a0b \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a java1.8 \u591a\u7ebf\u7a0b \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a go1.8 \u534f\u7a0b \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a", 
            "title": "\u5355\u6838\u7ed3\u679c"
        }, 
        {
            "location": "/other/ptr_stdout/#_3", 
            "text": "\u591a\u8fdb\u7a0b  linux-GCC 4.8.5 \u591a\u8fdb\u7a0b(fork) \u51fa\u73b0\u4e32\u884c python2.7 \u591a\u8fdb\u7a0b \u51fa\u73b0\u4e32\u884c python3.6 \u591a\u8fdb\u7a0b \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a   \u591a\u7ebf\u7a0b  linux-GCC 4.8.5 \u591a\u7ebf\u7a0b(pthread) \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a python2.7 \u591a\u7ebf\u7a0b\uff08thread\u6a21\u5757\uff09 \u51fa\u73b0\u4e32\u884c python2.7 \u591a\u7ebf\u7a0b\uff08threading\u6a21\u5757\uff09 \u51fa\u73b0\u4e32\u884c python3.6 \u591a\u7ebf\u7a0b \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a java1.8 \u591a\u7ebf\u7a0b \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a go1.8 \u534f\u7a0b \u672a\u51fa\u73b0\u4e32\u884c 3\u4e2a\u8fdb\u7a0b\u6267\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a", 
            "title": "\u591a\u6838\u7ed3\u679c"
        }, 
        {
            "location": "/other/fork/", 
            "text": "\u521b\u5efa\u5b50\u8fdb\u7a0b\uff1a\n\n\nfork\n();\n\n\n\n\n\n\"fork\"\u7ffb\u8bd1\u6210\u4e2d\u6587\u53eb\uff1a\u5206\u53c9\uff0c\u8868\u793a\u5f53\u6267\u884c\u4e86\u4e00\u6b21\nfork()\n\u540e\uff0c\u4f1a\u5c06\u5f53\u524d\u5185\u5b58\u6570\u636e\u62f7\u8d1d\u4e00\u4efd\u51fa\u6765\uff0c\u540e\u7eed\u4ee3\u7801\u6267\u884c\u65f6\u5019\u5206\u53c9\u4e86\uff0c\u5373\u5728\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u91cc\u90fd\u4f1a\u6267\u884c\u3002\n\n\n\u56e0\u6b64\u5728\u540e\u7eed\u4ee3\u7801\u4e2d\u5982\u4f55\u5224\u65ad\u5f53\u524d\u7684\u5206\u652f\u662f\u7236\u8fdb\u7a0b\u8fd8\u662f\u54ea\u4e2a\u5b50\u8fdb\u7a0b\u5c31\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\uff0c\u5c24\u5176\u662f\u5f53\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u9700\u8981\u6267\u884c\u4e0d\u540c\u540e\u7eed\u4ee3\u7801\u7684\u65f6\u5019\u3002\n\n\n\n\n\u5b50\u8fdb\u7a0b\u91cc\u518d\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u672c\u6587\u6682\u4e0d\u505a\u63a2\u8ba8\u3002\n\n\n\n\n\u5982\u4f55\u4f7f\u7528fork()\u521b\u5efa\u591a\u4e2a\u540c\u7ea7\u7684\u5b50\u8fdb\u7a0b\n\n\n\n\n\u521b\u5efa1\u4e2a\u5b50\u8fdb\u7a0b\nfork\n();\n\n\n\n\n\u521b\u5efa2\u4e2a\u5b50\u8fdb\u7a0b\npid_t\n \nchild1_pid\n;\n\n\npid_t\n \nchild2_pid\n;\n\n\n\nchild1_pid\n \n=\n \nfork\n();\n\n\nif\n \n(\nchild1_pid\n \n \n0\n)\n \n{\n\n    \nchild2_pid\n \n=\n \nfork\n();\n\n\n}\n\n\n\n\n\u53ef\u4ee5\u7b80\u5199\u4e3a\nif\n \n(\nfork\n()\n \n \n0\n)\n \n{\n\n    \nfork\n()\n\n\n}\n\n\n\n\n\u521b\u5efa3\u4e2a\u5b50\u8fdb\u7a0b\npid_t\n \nchild1_pid\n;\n\n\npid_t\n \nchild2_pid\n;\n\n\npid_t\n \nchild3_pid\n;\n\n\n\nchild1_pid\n \n=\n \nfork\n();\n\n\nif\n \n(\nchild1_pid\n \n \n0\n)\n \n{\n\n    \nchild2_pid\n \n=\n \nfork\n();\n\n\n}\n\n\nif\n \n(\nchild1_pid\n \n \n0\n \n \nchild2_pid\n \n \n0\n)\n \n{\n\n    \nchild3_pid\n \n=\n \nfork\n();\n\n\n}\n\n\n\n\n\u521b\u5efa4\u4e2a\u5b50\u8fdb\u7a0b\npid_t\n \nchild1_pid\n;\n\n\npid_t\n \nchild2_pid\n;\n\n\npid_t\n \nchild3_pid\n;\n\n\npid_t\n \nchild4_pid\n;\n\n\n\nchild1_pid\n \n=\n \nfork\n();\n\n\nif\n \n(\nchild1_pid\n \n \n0\n)\n \n{\n\n    \nchild2_pid\n \n=\n \nfork\n();\n\n\n}\n\n\nif\n \n(\nchild1_pid\n \n \n0\n \n \nchild2_pid\n \n \n0\n)\n \n{\n\n    \nchild3_pid\n \n=\n \nfork\n();\n\n\n}\n\n\nif\n \n(\nchild1_pid\n \n \n0\n \n \nchild2_pid\n \n \n0\n \n \nchild3_pid\n \n \n0\n)\n  \n{\n\n    \nchild4_pid\n \n=\n \nfork\n();\n\n\n}\n\n\n\n\n\u5982\u4f55\u5b9a\u4f4d\u5230\u6307\u5b9a\u7684\u540c\u7ea7\u5b50\u8fdb\u7a0b\u6216\u8005\u7236\u8fdb\u7a0b\n\n\n\n\n\n\n\n\n\u6267\u884c\nfork();\n\u4f1a\u8fd4\u56de\u8be5\u5b50\u8fdb\u7a0b\u7684pid\uff08pid_t\u7c7b\u578b\u7684\u6570\u5b57\uff09\n\n\n\n\n\n\n\u5f53\"\u6211\u662f\u5b50\u8fdb\u7a0b\"\u7684\u65f6\u5019\uff0c\u6211\u7684pid\u4e3a0\n\n\n\n\n\n\n\u5f53\"\u6211\u662f\u7236\u8fdb\u7a0b\"\u7684\u65f6\u5019\uff0c\u6211\u4e4b\u524d\u4ea7\u751f\u7684\u6240\u6709\u5b50\u8fdb\u7a0bpid\u5747\u5927\u4e8e0\n\n\n\n\n\n\n\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u4e0a\u97623\u4e2a\u7279\u70b9\u6765\u7efc\u5408\u5224\u65ad\"\u6211\u662f\u8c01\"\uff0c\u8be6\u89c1\n\u672c\u7ae0\u8282-\u5b8c\u6574\u4f8b\u5b50\n\n\n\u5355\u6838\u548c\u591a\u6838\u7684\u533a\u522b\n\n\n\n\n\u5206\u522b\u5728\u5355\u6838\u548c\u591a\u6838\u4e0a\u6267\u884c\uff0c\u89c2\u5bdf\u6bcf\u6b21\u6267\u884c\u8f93\u51fa\u7684\u987a\u5e8f\u662f\u5426\u4e00\u81f4\uff0c\u8be6\u89c1\n\u672c\u7ae0\u8282-\u5b8c\u6574\u4f8b\u5b50\n\n\n\u7236\u8fdb\u7a0b\u5148\u9000\u51fa\uff0c\u5b50\u8fdb\u7a0b\u4f1a\u6d88\u5931\u5417\n\n\n\n\n\u5728\u4ee3\u7801\u6700\u540e\u52a0\u4e0a\nsleep(1);\n\u6765\u89c2\u5bdf\uff08\u540c\u65f6\u53ef\u4ee5\u7ed3\u5408\u5355\u6838\u548c\u591a\u6838\u5206\u522b\u6d4b\u8bd5\uff09\uff0c\u8be6\u89c1\n\u672c\u7ae0\u8282-\u5b8c\u6574\u4f8b\u5b50\n\n\n\u5b8c\u6574\u4f8b\u5b50\n\n\n\n\n\u5b9e\u9a8c\u73af\u5883\uff1a\u5206\u522b\u57281\u6838\u548c4\u6838linux\u670d\u52a1\u5668\u4e0a\u6d4b\u8bd5C\u8bed\u8a00\u7684fork\n\n\n\u5b8c\u6574\u4ee3\u7801\n#include\n \nstdio.h\n\n\n#include\n \nunistd.h\n\n\n\nmain\n()\n \n{\n\n    \n// \u4e3b\u8981\u662f\u4e3a\u4e86\n\n    \npid_t\n \nchild1_pid\n;\n\n    \npid_t\n \nchild2_pid\n;\n\n    \npid_t\n \nchild3_pid\n;\n\n    \npid_t\n \nchild4_pid\n;\n\n\n    \n// \u521b\u5efa4\u4e2a\u540c\u7ea7\u7684\u5b50\u8fdb\u7a0b\n\n    \nchild1_pid\n \n=\n \nfork\n();\n\n    \nif\n \n(\nchild1_pid\n \n \n0\n)\n \n{\n\n        \nchild2_pid\n \n=\n \nfork\n();\n\n    \n}\n\n    \nif\n \n(\nchild1_pid\n \n \n0\n \n \nchild2_pid\n \n \n0\n)\n \n{\n\n        \nchild3_pid\n \n=\n \nfork\n();\n\n    \n}\n\n    \nif\n \n(\nchild1_pid\n \n \n0\n \n \nchild2_pid\n \n \n0\n \n \nchild3_pid\n \n \n0\n)\n  \n{\n\n        \nchild4_pid\n \n=\n \nfork\n();\n\n    \n}\n\n\n    \n// \u5b9a\u4f4d\u5230\u6307\u5b9a\u7684\u5b50\u8fdb\u7a0b\u6216\u8005\u7236\u8fdb\u7a0b\n\n    \nif\n \n(\nchild1_pid\n \n*\n \nchild2_pid\n \n*\n \nchild3_pid\n \n*\n \nchild4_pid\n \n!=\n \n0\n)\n \n{\n\n        \nprintf\n(\nI\nm parent: pid=%d ppid=%d child1_pid=%d child2_pid=%d child3_pid=%d child4_pid=%d\n\\n\n,\n \ngetpid\n(),\n \ngetppid\n(),\n \nchild1_pid\n,\n \nchild2_pid\n,\n \nchild3_pid\n,\n \nchild4_pid\n);\n\n    \n}\n\n    \nelse\n \nif\n \n(\nchild1_pid\n \n==\n \n0\n)\n \n{\n\n        \nprintf\n(\nI\nm child1: pid=%d ppid=%d child1_pid=%d child2_pid=%d child3_pid=%d child4_pid=%d\n\\n\n,\n \ngetpid\n(),\n \ngetppid\n(),\n \nchild1_pid\n,\n \nchild2_pid\n,\n \nchild3_pid\n,\n \nchild4_pid\n);\n\n    \n}\n\n    \nelse\n \nif\n \n(\nchild2_pid\n \n==\n \n0\n)\n \n{\n\n        \nprintf\n(\nI\nm child2: pid=%d ppid=%d child1_pid=%d child2_pid=%d child3_pid=%d child4_pid=%d\n\\n\n,\n \ngetpid\n(),\n \ngetppid\n(),\n \nchild1_pid\n,\n \nchild2_pid\n,\n \nchild3_pid\n,\n \nchild4_pid\n);\n\n    \n}\n\n    \nelse\n \nif\n \n(\nchild3_pid\n \n==\n \n0\n)\n \n{\n\n        \nprintf\n(\nI\nm child3: pid=%d ppid=%d child1_pid=%d child2_pid=%d child3_pid=%d child4_pid=%d\n\\n\n,\n \ngetpid\n(),\n \ngetppid\n(),\n \nchild1_pid\n,\n \nchild2_pid\n,\n \nchild3_pid\n,\n \nchild4_pid\n);\n\n    \n}\n\n    \nelse\n \nif\n \n(\nchild4_pid\n \n==\n \n0\n)\n \n{\n\n        \nprintf\n(\nI\nm child4: pid=%d ppid=%d child1_pid=%d child2_pid=%d child3_pid=%d child4_pid=%d\n\\n\n,\n \ngetpid\n(),\n \ngetppid\n(),\n \nchild1_pid\n,\n \nchild2_pid\n,\n \nchild3_pid\n,\n \nchild4_pid\n);\n\n    \n}\n\n    \nelse\n \n{\n\n        \nprintf\n(\nERROR\n\\n\n);\n\n    \n}\n\n\n    \nsleep\n(\n1\n);\n\n\n}\n\n\n\n\n\u5206\u522b\u5728\u5355\u6838\u548c\u591a\u6838\u60c5\u51b5\u4e0b\u6267\u884c\u4e0a\u9762\u4ee3\u7801\uff08\ngcc -o fork fork.c \n ./fork\n\uff09\uff0c\u540c\u65f6\u89c2\u5bdf\u6709\u65e0\nsleep(1)\n\u8fd9\u884c\u7684\u533a\u522b\uff0c\u5bf9\u6bd4\u7ed3\u679c\uff1a\n\n\n\u5355\u6838\u8fd0\u884c\u7ed3\u679c\uff1a\n\n\n\u6709\nsleep(1)\nI\nm parent: pid=4801 ppid=3226 child1_pid=4802 child2_pid=4803 child3_pid=4804 child4_pid=4805\nI\nm child4: pid=4805 ppid=4801 child1_pid=4802 child2_pid=4803 child3_pid=4804 child4_pid=0\nI\nm child3: pid=4804 ppid=4801 child1_pid=4802 child2_pid=4803 child3_pid=0 child4_pid=-1\nI\nm child2: pid=4803 ppid=4801 child1_pid=4802 child2_pid=0 child3_pid=-1 child4_pid=-1\nI\nm child1: pid=4802 ppid=4801 child1_pid=0 child2_pid=-1 child3_pid=-1 child4_pid=-1\n\n\n\n\u591a\u6b21\u6d4b\u8bd5\uff0c\u4f1a\u53d1\u73b0\u8fd95\u884c\u7684\u524d\u540e\u987a\u5e8f\u56fa\u5b9a\n\u65e0\nsleep(1)\nI\nm parent: pid=5095 ppid=3226 child1_pid=5096 child2_pid=5097 child3_pid=5098 child4_pid=5099\nI\nm child4: pid=5099 ppid=1 child1_pid=5096 child2_pid=5097 child3_pid=5098 child4_pid=0\nI\nm child3: pid=5098 ppid=1 child1_pid=5096 child2_pid=5097 child3_pid=0 child4_pid=-1\nI\nm child2: pid=5097 ppid=1 child1_pid=5096 child2_pid=0 child3_pid=-1 child4_pid=-1\nI\nm child1: pid=5096 ppid=1 child1_pid=0 child2_pid=-1 child3_pid=-1 child4_pid=-1\n\n\n\n\u591a\u6b21\u6d4b\u8bd5\uff0c\u4f1a\u53d1\u73b0\u8fd95\u884c\u7684\u524d\u540e\u987a\u5e8f\u56fa\u5b9a\n\u6ce8\u610f\u770b\u4e0a\u9762\u7684ppid\uff0c\u6240\u6709child\u7684ppid\u5747\u4e3a1\uff0c\u662f\u56e0\u4e3a\u7236\u8fdb\u7a0b\u4e00\u6267\u884c\u5b8c\u5c31\u9000\u51fa\u4e86\uff0c\u800c\u6b64\u65f6\u5b50\u8fdb\u7a0b\u8fd8\u672a\u6267\u884c\u5b8c\uff0c\u968f\u5373\u5b50\u8fdb\u7a0b\u88ab\u8fc7\u7ee7\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\uff08init\u8fdb\u7a0b\u6210\u4e3a\u7ee7\u7236\uff0cpid\u4e3a1\uff09\n\u591a\u6838\u8fd0\u884c\u7ed3\u679c\uff1a\n\n\n\u6709\nsleep(1)\nI\nm child1: pid=10586 ppid=10585 child1_pid=0 child2_pid=-1 child3_pid=-1 child4_pid=-1\nI\nm parent: pid=10585 ppid=3316 child1_pid=10586 child2_pid=10587 child3_pid=10588 child4_pid=10589\nI\nm child4: pid=10589 ppid=10585 child1_pid=10586 child2_pid=10587 child3_pid=10588 child4_pid=0\nI\nm child3: pid=10588 ppid=10585 child1_pid=10586 child2_pid=10587 child3_pid=0 child4_pid=-1\nI\nm child2: pid=10587 ppid=10585 child1_pid=10586 child2_pid=0 child3_pid=-1 child4_pid=-1\n\n\n\n\u591a\u6b21\u6d4b\u8bd5\uff0c\u4f1a\u53d1\u73b0\u8fd95\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\n\u65e0\nsleep(1)\nI\nm child1: pid=10787 ppid=10786 child1_pid=0 child2_pid=-1 child3_pid=-1 child4_pid=-1\nI\nm child2: pid=10788 ppid=10786 child1_pid=10787 child2_pid=0 child3_pid=-1 child4_pid=-1\nI\nm parent: pid=10786 ppid=3316 child1_pid=10787 child2_pid=10788 child3_pid=10789 child4_pid=10790\nI\nm child4: pid=10790 ppid=10786 child1_pid=10787 child2_pid=10788 child3_pid=10789 child4_pid=0\nI\nm child3: pid=10789 ppid=10786 child1_pid=10787 child2_pid=10788 child3_pid=0 child4_pid=-1\n\n\n\n\u591a\u6b21\u6d4b\u8bd5\uff0c\u4f1a\u53d1\u73b0\u8fd95\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a\n\u6709\u65f6\u5019\u8fd8\u4f1a\u50cf\u4e0b\u9762\u8fd9\u6837\u7ed3\u679c\uff0c\u5373\u591a\u4e2appid\u4e3a1\nI\nm child1: pid=11443 ppid=11442 child1_pid=0 child2_pid=-1 child3_pid=-1 child4_pid=-1\nI\nm child2: pid=11444 ppid=11442 child1_pid=11443 child2_pid=0 child3_pid=-1 child4_pid=-1\nI\nm parent: pid=11442 ppid=3316 child1_pid=11443 child2_pid=11444 child3_pid=11445 child4_pid=11446\nI\nm child3: pid=11445 ppid=1 child1_pid=11443 child2_pid=11444 child3_pid=0 child4_pid=-1\nI\nm child4: pid=11446 ppid=1 child1_pid=11443 child2_pid=11444 child3_pid=11445 child4_pid=0\n\n\n\n\u5728\u4ee3\u7801\u8fd0\u884c\u4e2d\npstree -p\n\u7684\u8f93\u51fa\u5982\u4e0b\n\n\nfork(16242)\u2500\u252c\u2500fork(16243)\n            \u251c\u2500fork(16244)\n            \u251c\u2500fork(16245)\n            \u2514\u2500fork(16246)\n\n\n\n\n\u6ce8\u610f\u89c2\u5bdf\u8f93\u51fa\u4e2d\u7684child{1-4}.pid\uff0c\u53ef\u4ee5\u770b\u5230\n\n\n\n\n\n\n\u7236\u8fdb\u7a0b\u91cc\uff0c4\u4e2achild\u7684pid\u90fd\u662f\u6709\u503c\u7684\n\n\n\n\n\n\n\u5b50\u8fdb\u7a0bchild1\u91cc\uff0cchild1_pid\u4e3a0\uff0c\u5176\u4ed6child_pid\u90fd\u4e3a\u521d\u59cb\u503c-1\n\n\n\n\n\n\n\u5b50\u8fdb\u7a0bchild2\u91cc\uff0cchild1_pid\u6709\u503c\uff0cchild2_pid\u4e3a0\uff0c\u5176\u4ed6child_pid\u90fd\u4e3a\u521d\u59cb\u503c-1\n\n\n\n\n\n\n\u5b50\u8fdb\u7a0bchild3\u91cc\uff0cchild1_pid\u6709\u503c\uff0cchild2_pid\u6709\u503c\uff0cchild3_pid\u4e3a0\uff0c\u5176\u4ed6child_pid\u90fd\u4e3a\u521d\u59cb\u503c-1\n\n\n\n\n\n\n\u5b50\u8fdb\u7a0bchild4\u91cc\uff0cchild1_pid\u6709\u503c\uff0cchild2_pid\u6709\u503c\uff0cchild3_pid\u6709\u503c\uff0cchild4_pid\u4e3a0\n\n\n\n\n\n\n\u5982\u679c\u521b\u5efa\u540c\u7ea7\u66f4\u591a\u5b50\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u4ee5\u6b64\u7c7b\u63a8\u3002\u901a\u8fc7\u8fd9\u4e2a\u7279\u6027\u6765\u786e\u5b9a\u5f53\u524d\u5904\u4e8e\u7236\u8fdb\u7a0b\u8fd8\u662f\u67d0\u4e2a\u5b50\u8fdb\u7a0b", 
            "title": "15. C\u8bed\u8a00\u7684fork"
        }, 
        {
            "location": "/other/fork/#fork", 
            "text": "\u521b\u5efa1\u4e2a\u5b50\u8fdb\u7a0b fork ();   \u521b\u5efa2\u4e2a\u5b50\u8fdb\u7a0b pid_t   child1_pid ;  pid_t   child2_pid ;  child1_pid   =   fork ();  if   ( child1_pid     0 )   { \n     child2_pid   =   fork ();  }   \u53ef\u4ee5\u7b80\u5199\u4e3a if   ( fork ()     0 )   { \n     fork ()  }   \u521b\u5efa3\u4e2a\u5b50\u8fdb\u7a0b pid_t   child1_pid ;  pid_t   child2_pid ;  pid_t   child3_pid ;  child1_pid   =   fork ();  if   ( child1_pid     0 )   { \n     child2_pid   =   fork ();  }  if   ( child1_pid     0     child2_pid     0 )   { \n     child3_pid   =   fork ();  }   \u521b\u5efa4\u4e2a\u5b50\u8fdb\u7a0b pid_t   child1_pid ;  pid_t   child2_pid ;  pid_t   child3_pid ;  pid_t   child4_pid ;  child1_pid   =   fork ();  if   ( child1_pid     0 )   { \n     child2_pid   =   fork ();  }  if   ( child1_pid     0     child2_pid     0 )   { \n     child3_pid   =   fork ();  }  if   ( child1_pid     0     child2_pid     0     child3_pid     0 )    { \n     child4_pid   =   fork ();  }", 
            "title": "\u5982\u4f55\u4f7f\u7528fork()\u521b\u5efa\u591a\u4e2a\u540c\u7ea7\u7684\u5b50\u8fdb\u7a0b"
        }, 
        {
            "location": "/other/fork/#_1", 
            "text": "\u6267\u884c fork(); \u4f1a\u8fd4\u56de\u8be5\u5b50\u8fdb\u7a0b\u7684pid\uff08pid_t\u7c7b\u578b\u7684\u6570\u5b57\uff09    \u5f53\"\u6211\u662f\u5b50\u8fdb\u7a0b\"\u7684\u65f6\u5019\uff0c\u6211\u7684pid\u4e3a0    \u5f53\"\u6211\u662f\u7236\u8fdb\u7a0b\"\u7684\u65f6\u5019\uff0c\u6211\u4e4b\u524d\u4ea7\u751f\u7684\u6240\u6709\u5b50\u8fdb\u7a0bpid\u5747\u5927\u4e8e0    \u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u4e0a\u97623\u4e2a\u7279\u70b9\u6765\u7efc\u5408\u5224\u65ad\"\u6211\u662f\u8c01\"\uff0c\u8be6\u89c1 \u672c\u7ae0\u8282-\u5b8c\u6574\u4f8b\u5b50", 
            "title": "\u5982\u4f55\u5b9a\u4f4d\u5230\u6307\u5b9a\u7684\u540c\u7ea7\u5b50\u8fdb\u7a0b\u6216\u8005\u7236\u8fdb\u7a0b"
        }, 
        {
            "location": "/other/fork/#_2", 
            "text": "\u5206\u522b\u5728\u5355\u6838\u548c\u591a\u6838\u4e0a\u6267\u884c\uff0c\u89c2\u5bdf\u6bcf\u6b21\u6267\u884c\u8f93\u51fa\u7684\u987a\u5e8f\u662f\u5426\u4e00\u81f4\uff0c\u8be6\u89c1 \u672c\u7ae0\u8282-\u5b8c\u6574\u4f8b\u5b50", 
            "title": "\u5355\u6838\u548c\u591a\u6838\u7684\u533a\u522b"
        }, 
        {
            "location": "/other/fork/#_3", 
            "text": "\u5728\u4ee3\u7801\u6700\u540e\u52a0\u4e0a sleep(1); \u6765\u89c2\u5bdf\uff08\u540c\u65f6\u53ef\u4ee5\u7ed3\u5408\u5355\u6838\u548c\u591a\u6838\u5206\u522b\u6d4b\u8bd5\uff09\uff0c\u8be6\u89c1 \u672c\u7ae0\u8282-\u5b8c\u6574\u4f8b\u5b50", 
            "title": "\u7236\u8fdb\u7a0b\u5148\u9000\u51fa\uff0c\u5b50\u8fdb\u7a0b\u4f1a\u6d88\u5931\u5417"
        }, 
        {
            "location": "/other/fork/#_4", 
            "text": "\u5b9e\u9a8c\u73af\u5883\uff1a\u5206\u522b\u57281\u6838\u548c4\u6838linux\u670d\u52a1\u5668\u4e0a\u6d4b\u8bd5C\u8bed\u8a00\u7684fork  \u5b8c\u6574\u4ee3\u7801 #include   stdio.h  #include   unistd.h  main ()   { \n     // \u4e3b\u8981\u662f\u4e3a\u4e86 \n     pid_t   child1_pid ; \n     pid_t   child2_pid ; \n     pid_t   child3_pid ; \n     pid_t   child4_pid ; \n\n     // \u521b\u5efa4\u4e2a\u540c\u7ea7\u7684\u5b50\u8fdb\u7a0b \n     child1_pid   =   fork (); \n     if   ( child1_pid     0 )   { \n         child2_pid   =   fork (); \n     } \n     if   ( child1_pid     0     child2_pid     0 )   { \n         child3_pid   =   fork (); \n     } \n     if   ( child1_pid     0     child2_pid     0     child3_pid     0 )    { \n         child4_pid   =   fork (); \n     } \n\n     // \u5b9a\u4f4d\u5230\u6307\u5b9a\u7684\u5b50\u8fdb\u7a0b\u6216\u8005\u7236\u8fdb\u7a0b \n     if   ( child1_pid   *   child2_pid   *   child3_pid   *   child4_pid   !=   0 )   { \n         printf ( I m parent: pid=%d ppid=%d child1_pid=%d child2_pid=%d child3_pid=%d child4_pid=%d \\n ,   getpid (),   getppid (),   child1_pid ,   child2_pid ,   child3_pid ,   child4_pid ); \n     } \n     else   if   ( child1_pid   ==   0 )   { \n         printf ( I m child1: pid=%d ppid=%d child1_pid=%d child2_pid=%d child3_pid=%d child4_pid=%d \\n ,   getpid (),   getppid (),   child1_pid ,   child2_pid ,   child3_pid ,   child4_pid ); \n     } \n     else   if   ( child2_pid   ==   0 )   { \n         printf ( I m child2: pid=%d ppid=%d child1_pid=%d child2_pid=%d child3_pid=%d child4_pid=%d \\n ,   getpid (),   getppid (),   child1_pid ,   child2_pid ,   child3_pid ,   child4_pid ); \n     } \n     else   if   ( child3_pid   ==   0 )   { \n         printf ( I m child3: pid=%d ppid=%d child1_pid=%d child2_pid=%d child3_pid=%d child4_pid=%d \\n ,   getpid (),   getppid (),   child1_pid ,   child2_pid ,   child3_pid ,   child4_pid ); \n     } \n     else   if   ( child4_pid   ==   0 )   { \n         printf ( I m child4: pid=%d ppid=%d child1_pid=%d child2_pid=%d child3_pid=%d child4_pid=%d \\n ,   getpid (),   getppid (),   child1_pid ,   child2_pid ,   child3_pid ,   child4_pid ); \n     } \n     else   { \n         printf ( ERROR \\n ); \n     } \n\n     sleep ( 1 );  }   \u5206\u522b\u5728\u5355\u6838\u548c\u591a\u6838\u60c5\u51b5\u4e0b\u6267\u884c\u4e0a\u9762\u4ee3\u7801\uff08 gcc -o fork fork.c   ./fork \uff09\uff0c\u540c\u65f6\u89c2\u5bdf\u6709\u65e0 sleep(1) \u8fd9\u884c\u7684\u533a\u522b\uff0c\u5bf9\u6bd4\u7ed3\u679c\uff1a  \u5355\u6838\u8fd0\u884c\u7ed3\u679c\uff1a  \u6709 sleep(1) I m parent: pid=4801 ppid=3226 child1_pid=4802 child2_pid=4803 child3_pid=4804 child4_pid=4805\nI m child4: pid=4805 ppid=4801 child1_pid=4802 child2_pid=4803 child3_pid=4804 child4_pid=0\nI m child3: pid=4804 ppid=4801 child1_pid=4802 child2_pid=4803 child3_pid=0 child4_pid=-1\nI m child2: pid=4803 ppid=4801 child1_pid=4802 child2_pid=0 child3_pid=-1 child4_pid=-1\nI m child1: pid=4802 ppid=4801 child1_pid=0 child2_pid=-1 child3_pid=-1 child4_pid=-1  \u591a\u6b21\u6d4b\u8bd5\uff0c\u4f1a\u53d1\u73b0\u8fd95\u884c\u7684\u524d\u540e\u987a\u5e8f\u56fa\u5b9a \u65e0 sleep(1) I m parent: pid=5095 ppid=3226 child1_pid=5096 child2_pid=5097 child3_pid=5098 child4_pid=5099\nI m child4: pid=5099 ppid=1 child1_pid=5096 child2_pid=5097 child3_pid=5098 child4_pid=0\nI m child3: pid=5098 ppid=1 child1_pid=5096 child2_pid=5097 child3_pid=0 child4_pid=-1\nI m child2: pid=5097 ppid=1 child1_pid=5096 child2_pid=0 child3_pid=-1 child4_pid=-1\nI m child1: pid=5096 ppid=1 child1_pid=0 child2_pid=-1 child3_pid=-1 child4_pid=-1  \u591a\u6b21\u6d4b\u8bd5\uff0c\u4f1a\u53d1\u73b0\u8fd95\u884c\u7684\u524d\u540e\u987a\u5e8f\u56fa\u5b9a \u6ce8\u610f\u770b\u4e0a\u9762\u7684ppid\uff0c\u6240\u6709child\u7684ppid\u5747\u4e3a1\uff0c\u662f\u56e0\u4e3a\u7236\u8fdb\u7a0b\u4e00\u6267\u884c\u5b8c\u5c31\u9000\u51fa\u4e86\uff0c\u800c\u6b64\u65f6\u5b50\u8fdb\u7a0b\u8fd8\u672a\u6267\u884c\u5b8c\uff0c\u968f\u5373\u5b50\u8fdb\u7a0b\u88ab\u8fc7\u7ee7\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\uff08init\u8fdb\u7a0b\u6210\u4e3a\u7ee7\u7236\uff0cpid\u4e3a1\uff09 \u591a\u6838\u8fd0\u884c\u7ed3\u679c\uff1a  \u6709 sleep(1) I m child1: pid=10586 ppid=10585 child1_pid=0 child2_pid=-1 child3_pid=-1 child4_pid=-1\nI m parent: pid=10585 ppid=3316 child1_pid=10586 child2_pid=10587 child3_pid=10588 child4_pid=10589\nI m child4: pid=10589 ppid=10585 child1_pid=10586 child2_pid=10587 child3_pid=10588 child4_pid=0\nI m child3: pid=10588 ppid=10585 child1_pid=10586 child2_pid=10587 child3_pid=0 child4_pid=-1\nI m child2: pid=10587 ppid=10585 child1_pid=10586 child2_pid=0 child3_pid=-1 child4_pid=-1  \u591a\u6b21\u6d4b\u8bd5\uff0c\u4f1a\u53d1\u73b0\u8fd95\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a \u65e0 sleep(1) I m child1: pid=10787 ppid=10786 child1_pid=0 child2_pid=-1 child3_pid=-1 child4_pid=-1\nI m child2: pid=10788 ppid=10786 child1_pid=10787 child2_pid=0 child3_pid=-1 child4_pid=-1\nI m parent: pid=10786 ppid=3316 child1_pid=10787 child2_pid=10788 child3_pid=10789 child4_pid=10790\nI m child4: pid=10790 ppid=10786 child1_pid=10787 child2_pid=10788 child3_pid=10789 child4_pid=0\nI m child3: pid=10789 ppid=10786 child1_pid=10787 child2_pid=10788 child3_pid=0 child4_pid=-1  \u591a\u6b21\u6d4b\u8bd5\uff0c\u4f1a\u53d1\u73b0\u8fd95\u884c\u7684\u524d\u540e\u987a\u5e8f\u4e0d\u5b9a \u6709\u65f6\u5019\u8fd8\u4f1a\u50cf\u4e0b\u9762\u8fd9\u6837\u7ed3\u679c\uff0c\u5373\u591a\u4e2appid\u4e3a1 I m child1: pid=11443 ppid=11442 child1_pid=0 child2_pid=-1 child3_pid=-1 child4_pid=-1\nI m child2: pid=11444 ppid=11442 child1_pid=11443 child2_pid=0 child3_pid=-1 child4_pid=-1\nI m parent: pid=11442 ppid=3316 child1_pid=11443 child2_pid=11444 child3_pid=11445 child4_pid=11446\nI m child3: pid=11445 ppid=1 child1_pid=11443 child2_pid=11444 child3_pid=0 child4_pid=-1\nI m child4: pid=11446 ppid=1 child1_pid=11443 child2_pid=11444 child3_pid=11445 child4_pid=0  \u5728\u4ee3\u7801\u8fd0\u884c\u4e2d pstree -p \u7684\u8f93\u51fa\u5982\u4e0b  fork(16242)\u2500\u252c\u2500fork(16243)\n            \u251c\u2500fork(16244)\n            \u251c\u2500fork(16245)\n            \u2514\u2500fork(16246)  \u6ce8\u610f\u89c2\u5bdf\u8f93\u51fa\u4e2d\u7684child{1-4}.pid\uff0c\u53ef\u4ee5\u770b\u5230    \u7236\u8fdb\u7a0b\u91cc\uff0c4\u4e2achild\u7684pid\u90fd\u662f\u6709\u503c\u7684    \u5b50\u8fdb\u7a0bchild1\u91cc\uff0cchild1_pid\u4e3a0\uff0c\u5176\u4ed6child_pid\u90fd\u4e3a\u521d\u59cb\u503c-1    \u5b50\u8fdb\u7a0bchild2\u91cc\uff0cchild1_pid\u6709\u503c\uff0cchild2_pid\u4e3a0\uff0c\u5176\u4ed6child_pid\u90fd\u4e3a\u521d\u59cb\u503c-1    \u5b50\u8fdb\u7a0bchild3\u91cc\uff0cchild1_pid\u6709\u503c\uff0cchild2_pid\u6709\u503c\uff0cchild3_pid\u4e3a0\uff0c\u5176\u4ed6child_pid\u90fd\u4e3a\u521d\u59cb\u503c-1    \u5b50\u8fdb\u7a0bchild4\u91cc\uff0cchild1_pid\u6709\u503c\uff0cchild2_pid\u6709\u503c\uff0cchild3_pid\u6709\u503c\uff0cchild4_pid\u4e3a0    \u5982\u679c\u521b\u5efa\u540c\u7ea7\u66f4\u591a\u5b50\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u4ee5\u6b64\u7c7b\u63a8\u3002\u901a\u8fc7\u8fd9\u4e2a\u7279\u6027\u6765\u786e\u5b9a\u5f53\u524d\u5904\u4e8e\u7236\u8fdb\u7a0b\u8fd8\u662f\u67d0\u4e2a\u5b50\u8fdb\u7a0b", 
            "title": "\u5b8c\u6574\u4f8b\u5b50"
        }, 
        {
            "location": "/other/runtime/", 
            "text": "\u67e5\u770bCPU\u6570\u91cf\n\n\n\n\nruntime.NumCPU()\n\n\n\n\n\u67e5\u770bGOROOT\n\n\n\n\nruntime.GOROOT()\n\n\n\n\n\u67e5\u770b\u64cd\u4f5c\u7cfb\u7edf\n\n\n\n\nruntime.GOOS\n\n\n\n\n\u8f93\u51fa\u6709\nlinux\n\u6216\ndarwin\n\u4e4b\u7c7b\n\n\n\u8bbe\u7f6e\u6700\u5927\u8fdb\u7a0b\u6570\n\n\n\n\nruntime.GOMAXPROCS(1) \u8bbe\u7f6e\u4e3a0\u65f6\uff0c\u7b49\u4e8e\u6ca1\u6709\u505a\u4efb\u4f55\u8bbe\u7f6e\uff0c\u5373\u9ed8\u8ba4\u7684\u672c\u673acpu\u6570\u91cf\u3002\u5f53\u8bbe\u7f6e\u6570\u91cf\u8d85\u8fc7\u672c\u673acpu\u65f6\uff0c\u5219\u4e5f\u4e3a\u9ed8\u8ba4\uff08\u5373\u672c\u673acpu\u6570\u91cf\uff09\u3002\u56e0\u6b64\u53ef\u8bbe\u7f6e\u503c\u7684\u8303\u56f4\u662f1\u5230\u672c\u673acpu\u6570\u91cf\u3002\u8fd9\u91cc\u7684cpu\u6570\u91cf\u90fd\u662f\u6307\u903b\u8f91cpu\uff0c\u5373\u6838\u6570\uff0c\u800c\u975e\u7269\u7406cpu\u6570\u91cf\n\n\n\u8bbe\u7f6eruntime.GOMAXPROCS()\u65f6\u5019\uff0cgo\u4f1astopTheWorld(\"GOMAXPROCS\")\uff0c\u7136\u540e\u518dstartTheWorld()\n\n\n\u67e5\u770b\u6709\u591a\u5c11\u4e2a\u534f\u7a0b\n\n\n\n\nruntime.NumGoroutine()\n\n\n\n\n\u4f8b\u5b50\n\n\npackage\n \nmain\n\n\n\nimport\n \n(\n\n    \nfmt\n\n    \nruntime\n\n    \ntime\n\n\n)\n\n\n\nfunc\n \nbar\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nbar:\n,\n \nruntime\n.\nNumGoroutine\n())\n\n\n}\n\n\n\nfunc\n \nfoo\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nfoo:\n,\n \nruntime\n.\nNumGoroutine\n())\n\n    \ngo\n \nbar\n()\n\n    \ntime\n.\nSleep\n(\n100\n \n*\n \ntime\n.\nMillisecond\n)\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n    \nfmt\n.\nPrintln\n(\nmain:\n,\n \nruntime\n.\nNumGoroutine\n())\n\n    \ngo\n \nfoo\n()\n\n    \ntime\n.\nSleep\n(\n100\n \n*\n \ntime\n.\nMillisecond\n)\n\n\n}\n\n\n\n\n\n\u8f93\u51fa\n\n\nmain: 1\nfoo: 2\nbar: 3\n\n\n\n\n\u53ef\u4ee5\u770b\u5230\uff1a\u4e0d\u5f00\u542f\u534f\u7a0b\u65f6\u5019\u9ed8\u8ba4\u5c31\u6709\u4e00\u4e2a\u534f\u7a0b", 
            "title": "16. \u67e5\u770b\u7cfb\u7edf\u73af\u5883runtime"
        }, 
        {
            "location": "/other/runtime/#cpu", 
            "text": "runtime.NumCPU()", 
            "title": "\u67e5\u770bCPU\u6570\u91cf"
        }, 
        {
            "location": "/other/runtime/#goroot", 
            "text": "runtime.GOROOT()", 
            "title": "\u67e5\u770bGOROOT"
        }, 
        {
            "location": "/other/runtime/#_1", 
            "text": "runtime.GOOS  \u8f93\u51fa\u6709 linux \u6216 darwin \u4e4b\u7c7b", 
            "title": "\u67e5\u770b\u64cd\u4f5c\u7cfb\u7edf"
        }, 
        {
            "location": "/other/runtime/#_2", 
            "text": "runtime.GOMAXPROCS(1) \u8bbe\u7f6e\u4e3a0\u65f6\uff0c\u7b49\u4e8e\u6ca1\u6709\u505a\u4efb\u4f55\u8bbe\u7f6e\uff0c\u5373\u9ed8\u8ba4\u7684\u672c\u673acpu\u6570\u91cf\u3002\u5f53\u8bbe\u7f6e\u6570\u91cf\u8d85\u8fc7\u672c\u673acpu\u65f6\uff0c\u5219\u4e5f\u4e3a\u9ed8\u8ba4\uff08\u5373\u672c\u673acpu\u6570\u91cf\uff09\u3002\u56e0\u6b64\u53ef\u8bbe\u7f6e\u503c\u7684\u8303\u56f4\u662f1\u5230\u672c\u673acpu\u6570\u91cf\u3002\u8fd9\u91cc\u7684cpu\u6570\u91cf\u90fd\u662f\u6307\u903b\u8f91cpu\uff0c\u5373\u6838\u6570\uff0c\u800c\u975e\u7269\u7406cpu\u6570\u91cf  \u8bbe\u7f6eruntime.GOMAXPROCS()\u65f6\u5019\uff0cgo\u4f1astopTheWorld(\"GOMAXPROCS\")\uff0c\u7136\u540e\u518dstartTheWorld()", 
            "title": "\u8bbe\u7f6e\u6700\u5927\u8fdb\u7a0b\u6570"
        }, 
        {
            "location": "/other/runtime/#_3", 
            "text": "runtime.NumGoroutine()  \u4f8b\u5b50  package   main  import   ( \n     fmt \n     runtime \n     time  )  func   bar ()   { \n     fmt . Println ( bar: ,   runtime . NumGoroutine ())  }  func   foo ()   { \n     fmt . Println ( foo: ,   runtime . NumGoroutine ()) \n     go   bar () \n     time . Sleep ( 100   *   time . Millisecond )  }  func   main ()   { \n     fmt . Println ( main: ,   runtime . NumGoroutine ()) \n     go   foo () \n     time . Sleep ( 100   *   time . Millisecond )  }   \u8f93\u51fa  main: 1\nfoo: 2\nbar: 3  \u53ef\u4ee5\u770b\u5230\uff1a\u4e0d\u5f00\u542f\u534f\u7a0b\u65f6\u5019\u9ed8\u8ba4\u5c31\u6709\u4e00\u4e2a\u534f\u7a0b", 
            "title": "\u67e5\u770b\u6709\u591a\u5c11\u4e2a\u534f\u7a0b"
        }, 
        {
            "location": "/other/constructor/", 
            "text": "\u6784\u9020\u65b9\u6cd5\uff08\u4e5f\u53eb\u6784\u9020\u51fd\u6570\uff09\u7684\u6982\u5ff5\uff1a\n\n\n\u6784\u9020\u65b9\u6cd5\u662fjava\u91cc\u7684\u79f0\u547c\uff0c\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u65b9\u6cd5\uff0c\u5176\u65b9\u6cd5\u540d\u548c\u6240\u5c5e\u7c7b\u7684\u7c7b\u540d\u76f8\u540c\uff0c\u7528\u4e8e\u7c7b\u7684\u521d\u59cb\u5316\uff0c\u5373\u5f53\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7c7b\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002\u5728python\u91cc\u5c31\u662f\ndef __init__()\n\n\n\u6784\u9020\u65b9\u6cd5\u82f1\u6587\u53eb\u505aconstructor\u3002\u6211\u5bf9\u6784\u9020\u65b9\u6cd5\u7684\u7406\u89e3\u662f\u987e\u540d\u601d\u4e49\uff0c\u901a\u8fc7\u8fd9\u4e2a\u65b9\u6cd5\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5373\u521d\u59cb\u5316\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u7b49\n\n\n\u5728\u7ed3\u6784\u5316\u8bed\u8a00\u4e2d\u6ca1\u6709\u6784\u9020\u65b9\u6cd5\uff0c\u4f46\u4e5f\u6709\u7c7b\u4f3c\u6548\u679c\uff0c\u6bd4\u5982\u5728golang\u91cc\u7ecf\u5e38\u4f1a\u4e3a\u4e00\u4e2a\u81ea\u5b9a\u4e49struct\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u6bd4\u5982\nfunc NewXxx()\n\uff0c\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4f1a\u8fd4\u56de\u8fd9\u4e2astruct\u7684\u6307\u9488", 
            "title": "17. \u6784\u9020\u65b9\u6cd5"
        }, 
        {
            "location": "/other/generator/", 
            "text": "\u6709\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u6709\u4e00\u4e2a\u51fd\u6570\u80fd\u4e0d\u65ad\u751f\u6210\u6570\u636e\u3002\u6bd4\u65b9\u8bf4\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u8bfb\u6587\u4ef6\uff0c\u8bfb\u7f51\u7edc\uff0c\u751f\u6210\u81ea\u589e\u957f\u5e8f\u5217\uff0c\u751f\u6210\u968f\u673a\u6570\u3002\u8fd9\u4e9b\u884c\u4e3a\u7684\u7279\u70b9\u5c31\u662f\uff0c\u51fd\u6570\u7684\u5df2\u77e5\u4e00\u4e9b\u53d8\u91cf\uff0c\u5982\u6587\u4ef6\u8def\u5f84\u3002\u7136\u540e\u4e0d\u65ad\u8c03\u7528\uff0c\u8fd4\u56de\u65b0\u7684\u6570\u636e\u3002\n\n\n\u8c03\u7528\u751f\u6210\u5668\uff0c\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u201c\u670d\u52a1\u201d\u3002\u53ef\u4ee5\u7528\u5728\u6301\u7eed\u83b7\u53d6\u6570\u636e\u7684\u573a\u5408\u3002\u7528\u9014\u5f88\u5e7f\u6cdb\uff0c\u8bfb\u53d6\u6570\u636e\uff0c\u751f\u6210ID\uff0c\u751a\u81f3\u5b9a\u65f6\u5668\u3002\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u7b80\u6d01\u7684\u601d\u8def\uff0c\u5c06\u7a0b\u5e8f\u5e76\u53d1\u5316\u3002", 
            "title": "18. \u751f\u6210\u5668"
        }, 
        {
            "location": "/appendix/doc/", 
            "text": "\u5b98\u65b9\u6587\u6863\n\n\n\n\n\u82f1\u6587(\u5b98\u65b9\u7f51\u7ad9): \nhttps://golang.org/\n\n\n\u4e2d\u6587(\u5b98\u65b9\u8ba4\u53ef\u7684\u7ffb\u8bd1\u7f51\u7ad9): \nhttps://go-zh.org/\n\n\n\n\n\u6ce8\u610f: \u4e2d\u6587\u7f51\u7ad9\u66f4\u65b0\u5f88\u6162\uff0c\u5b98\u7f51\u4e0a\u6709\u7684\u5185\u5bb9\u5728\u4e2d\u6587\u7f51\u7ad9\u627e\u4e0d\u5230\uff0c\u56e0\u6b64\u5efa\u8bae\u5148\u4e0a\u82f1\u6587\uff0c\u6709\u770b\u4e0d\u61c2\u7684\u65f6\u5019\u518d\u53c2\u8003\u4e2d\u6587\u7f51\u7ad9\n\n\n\n\ngolang\u5b98\u65b9FAQ \nhttps://golang.org/doc/faq\n\uff08\u5f53\u5bf9\u67d0\u4e2a\u6982\u5ff5\u6709\u7591\u95ee\u6216\u8005\u5b66\u4e60\u5230\u67d0\u4e2a\u7ae0\u8282\u65f6\u5019\u53ef\u4ee5\u67e5\u8be2\u5361\u4e00\u4e0b\uff09\n\n\ngo\u4f8b\u5b50\uff08\u975e\u5b98\u65b9\uff09\nhttps://gobyexample.com\n\uff08\u4e0a\u9762\u6709\u5f88\u591a\u4f8b\u5b50\uff0c\u6bd4\u5982\u5b66\u4e60json\u65f6\u5019\u53ef\u4ee5\u5728\u4e0a\u9762\u770b\u4e0b\u662f\u5426\u6709\u76f8\u5173\u4f8b\u5b50\uff09", 
            "title": "1. \u6587\u6863"
        }, 
        {
            "location": "/appendix/doc/#_1", 
            "text": "\u82f1\u6587(\u5b98\u65b9\u7f51\u7ad9):  https://golang.org/  \u4e2d\u6587(\u5b98\u65b9\u8ba4\u53ef\u7684\u7ffb\u8bd1\u7f51\u7ad9):  https://go-zh.org/   \u6ce8\u610f: \u4e2d\u6587\u7f51\u7ad9\u66f4\u65b0\u5f88\u6162\uff0c\u5b98\u7f51\u4e0a\u6709\u7684\u5185\u5bb9\u5728\u4e2d\u6587\u7f51\u7ad9\u627e\u4e0d\u5230\uff0c\u56e0\u6b64\u5efa\u8bae\u5148\u4e0a\u82f1\u6587\uff0c\u6709\u770b\u4e0d\u61c2\u7684\u65f6\u5019\u518d\u53c2\u8003\u4e2d\u6587\u7f51\u7ad9   golang\u5b98\u65b9FAQ  https://golang.org/doc/faq \uff08\u5f53\u5bf9\u67d0\u4e2a\u6982\u5ff5\u6709\u7591\u95ee\u6216\u8005\u5b66\u4e60\u5230\u67d0\u4e2a\u7ae0\u8282\u65f6\u5019\u53ef\u4ee5\u67e5\u8be2\u5361\u4e00\u4e0b\uff09  go\u4f8b\u5b50\uff08\u975e\u5b98\u65b9\uff09 https://gobyexample.com \uff08\u4e0a\u9762\u6709\u5f88\u591a\u4f8b\u5b50\uff0c\u6bd4\u5982\u5b66\u4e60json\u65f6\u5019\u53ef\u4ee5\u5728\u4e0a\u9762\u770b\u4e0b\u662f\u5426\u6709\u76f8\u5173\u4f8b\u5b50\uff09", 
            "title": "\u5b98\u65b9\u6587\u6863"
        }, 
        {
            "location": "/appendix/code/", 
            "text": "\u5173\u4e8e\u7f16\u7801\u89c4\u8303\u53cago\u7684\u4e00\u4e9b\u5b97\u65e8\u7406\u5ff5\u7b49\n\n\n\u82f1\u6587\uff1a\nhttps://golang.org/doc/effective_go.html#names\n\n\n\u4e2d\u6587\uff1a\nhttps://go-zh.org/doc/effective_go.html#\u540d\u79f0\n\n\n\u5206\u884c\u5fc5\u987b\u6709\u9017\u53f7\n\n\n\n\ngolang\u6709\u4e00\u4e2a\u7279\u70b9\u5c31\u662f\u5982\u679c\u5199\u4e00\u884c\uff0c\u5728\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u540e\u9762\u53ef\u4ee5\u9017\u53f7\u4e5f\u53ef\u4ee5\u4e0d\u9017\u53f7\uff0c\u4f46\u5982\u679c\u662f\u5206\u884c\u5199\uff0c\u5c31\u5fc5\u987b\u6709\u9017\u53f7\uff0c\u6bd4\u5982\n\n\nm[Key{\nA\n,\nB\n}] = Value{1,2}\nm[Key{\nA\n,\nB\n}] = Value{\n    1, 2,\n}\n\n\n\n\n\u6ce8\uff1a\u53ea\u6709\u4ee5\u4e0b\u8fd9\u79cd\u60c5\u51b5\u624d\u4e0d\u9700\u8981\u9017\u53f7\uff0c\u5982\n\n\nimport (\n    \nfmt\n\n    \nmath\n\n)\n\ntype (\n    MyInt int\n    AAInt int\n)", 
            "title": "2. \u7f16\u7801\u89c4\u8303"
        }, 
        {
            "location": "/appendix/code/#_1", 
            "text": "golang\u6709\u4e00\u4e2a\u7279\u70b9\u5c31\u662f\u5982\u679c\u5199\u4e00\u884c\uff0c\u5728\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u540e\u9762\u53ef\u4ee5\u9017\u53f7\u4e5f\u53ef\u4ee5\u4e0d\u9017\u53f7\uff0c\u4f46\u5982\u679c\u662f\u5206\u884c\u5199\uff0c\u5c31\u5fc5\u987b\u6709\u9017\u53f7\uff0c\u6bd4\u5982  m[Key{ A , B }] = Value{1,2}\nm[Key{ A , B }] = Value{\n    1, 2,\n}  \u6ce8\uff1a\u53ea\u6709\u4ee5\u4e0b\u8fd9\u79cd\u60c5\u51b5\u624d\u4e0d\u9700\u8981\u9017\u53f7\uff0c\u5982  import (\n     fmt \n     math \n)\n\ntype (\n    MyInt int\n    AAInt int\n)", 
            "title": "\u5206\u884c\u5fc5\u987b\u6709\u9017\u53f7"
        }, 
        {
            "location": "/appendix/cli_go_get/", 
            "text": "\u4f5c\u7528\n\n\n\n\n\u4e0b\u8f7d\u4f9d\u8d56\u5305\n\n\n\u4e3a\u4e86\u63cf\u8ff0\u6e05\u695a\uff0c\u6b64\u5904\u505a\u51e0\u4e2a\u540d\u8bcd\u5b9a\u4e49\uff08\u6211\u81ea\u5df1\u5b9a\u4e49\u7684\uff09\uff1a\n\n\n\u5f53\u524d\u76ee\u5f55\uff1a\u51c6\u5907\ngo install\n\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684package\u76ee\u5f55\uff0c\u6b64\u5904\u4e3a\n$GOPATH/src/github.com/cyent/repo2/myhello\n\uff08\u91cc\u9762\u6709\u4e2a\nmyhello.go\n\u6587\u4ef6\nimport \ngithub.com/cyent/repo1/stringutil\n\uff09\n\n\n\u4f9d\u8d56\u5305\uff1a\u9700\u8981\u7528\u5230\u7684\u5305\uff0c\u5982\ngithub.com/cyent/repo1/stringutil\n\n\n\u5b9e\u9a8c\n\n\n\n\n\n\n\n\n\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u6267\u884c\ngo get\n\uff1a\n\n\n\u4e0b\u8f7d\ngithub.com/cyent/repo1\n\u5230\n$GOPATH/src/github.com/cyent/\n\n\n\n\n\u6ce8\u610f\u8fd9\u91cc\u662f\u4e0b\u8f7d\u5b8c\u6574\u7684git\u4ed3\u5e93\uff0c\u5373\ngithub.com/cyent/repo1\n\u4ed3\u5e93\uff0c\u5982\u679c\nmyhello.go\n\u91cc\u662fimport\u4e0b\u9762\u8def\u5f84\uff0c\u6bd4\u5982\ngithub.com/cyent/repo1/stringutil/aaa/aaa.go\n\uff0c\u4e5f\u662f\u4e0b\u8f7d\u5b8c\u6574\u7684git\u4ed3\u5e93\u3002\u56e0\u4e3agit\u4ed3\u5e93\u6ca1\u6709\u529e\u6cd5\u83b7\u5f97\u5176\u4e2d\u67d0\u4e2a\u6587\u4ef6\uff0c\u53ea\u80fd\u4e00\u6574\u4e2a\u4ed3\u5e93\u8f7d\u4e0b\u6765\u3002\u6682\u65f6\u4e0d\u77e5\u9053\u80fd\u5426\u652f\u6301svn\u3001http\u76ee\u5f55\u3001ftp\u7b49\n\n\n\n\ngo install github.com/cyent/repo1/stringutil\n\n\ngo install github.com/cyent/repo2/myhello\n\n\n\n\n\n\n\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u6267\u884c\ngo get github.com/cyent/repo1/stringutil\n\uff1a\n\n\n\u4e0b\u8f7d\ngithub.com/cyent/repo1\n\u5230\n$GOPATH/src/github.com/cyent/\n\n\ngo install github.com/cyent/repo1/stringutil\n\n\n\n\n\n\n\u5728\u4efb\u610f\u8def\u5f84\u4e0b\u6267\u884c\ngo get github.com/cyent/repo1/stringutil\n\uff1a\n\n\n\u4e0b\u8f7d\ngithub.com/cyent/repo1\n\u5230\n$GOPATH/src/github.com/cyent/\n\n\ngo install github.com/cyent/repo1/stringutil\n\n\n\n\n\n\n\u5728\u4efb\u610f\u8def\u5f84\u4e0b\u6267\u884c\ngo get github.com/cyent/repo2/myhello\n\uff08\u5047\u8bbe\ngithub.com/cyent/repo2\n\u672c\u5730\u76ee\u5f55\u5df2\u7ecf\u5b58\u5728\uff09\uff1a\n\n\n\u4e0b\u8f7d\ngithub.com/cyent/repo1\n\u5230\n$GOPATH/src/github.com/cyent/\n\n\ngo install github.com/cyent/repo1/stringutil\n\n\ngo install github.com/cyent/repo2/myhello\n\n\n\n\n\n\n\u5728\u4efb\u610f\u8def\u5f84\u4e0b\u6267\u884c\ngo get github.com/cyent/repo2/myhello\n\uff08\u5047\u8bbe\ngithub.com/cyent/repo2\n\u672c\u5730\u76ee\u5f55\u4e0d\u5b58\u5728\uff09\uff1a\n\n\n\u4e0b\u8f7d\ngithub.com/cyent/repo2\n\u5230\n$GOPATH/src/github.com/cyent\n\n\n\u4e0b\u8f7d\ngithub.com/cyent/repo1\n\u5230\n$GOPATH/src/github.com/cyent\n\n\ngo install github.com/cyent/repo1/stringutil\n\n\ngo install github.com/cyent/repo2/myhello\n\n\n\n\n\n\n\u5b9e\u9a8c\u7ed3\u8bba\n\n\n\n\ngo get\uff1a\n\n\n\n\n\n\n\u5224\u65ad\u6307\u5b9a\u8def\u5f84\uff08\u8fd9\u91cc\u7684\u8def\u5f84\u6307go get /path/to\uff09\u5728\u672c\u5730\u662f\u5426\u5b58\u5728\uff1a\n\u5982\u679c\u5b58\u5728\uff0c\u5c31\u8bfb\u53d6import\uff0c\u7136\u540e\u4e0b\u8f7d\u4f9d\u8d56\u5305\n\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5c31\u4ece\u8fdc\u7a0b\u4e0b\u8f7d\u5305\uff0c\u7136\u540e\u518d\u8bfb\u53d6\u4e0b\u8f7d\u7684\u5305\u91cc\u7684import\u6765\u5224\u65ad\u662f\u5426\u8fed\u4ee3\u4e0b\u8f7d\u4f9d\u8d56\u5305\u3002\n\n\n\n\n\n\n\u4f9d\u8d56\u5305\u90fd\u4e0b\u8f7d\u5b8c\u6bd5\u540e\u5224\u65adgo get\u662f\u5426\u6709\u5e26-d\u53c2\u6570\uff0c\u5982\u679c\u6ca1\u6709-d\uff0c\u5219\u4ece\u8fed\u4ee3\u7684\u6700\u540e\u4e00\u4e2a\u4f9d\u8d56\u5305\u5f00\u59cb\u5f80\u524d\u4e00\u4e2a\u4e2ainstall\uff0c\u76f4\u5230\u6307\u5b9a\u8def\u5f84\uff08\u8fd9\u91cc\u7684\u8def\u5f84\u6307go get /path/to\uff09install\u5b8c\u6bd5\n\n\n\n\n\n\ngo get\u53c2\u6570\uff1a\n\n\n\n\n\n\n\n\n\u53c2\u6570\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\n-d\n\n\n\u53ea\u4e0b\u8f7d\u4f9d\u8d56\u5305\uff0c\u4e0d\u5b89\u88c5\u3002\u6ce8\u610f\uff0c\u867d\u7136\u4e0d\u5b89\u88c5\uff0c\u4f46\u662f\u4f9d\u7136\u4f1a\u68c0\u6d4b\u76ee\u5f55\u4e0b\u662f\u5426\u6709\u53ef\u7f16\u8bd1\u6587\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u4f1a\u62a5\u9519no buildable Go source files in ...\uff08\u5e76\u4e0d\u5f71\u54cd\u4e0b\u8f7d\uff0c\u4e5f\u4e0d\u4f1a\u5b89\u88c5\uff09\n\n\n\n\n\n\n-f\n\n\n\u5f3a\u5236\u4e0d\u68c0\u67e5\u6bcf\u4e2a\u5305\uff0c\u9002\u7528\u4e8elocal fork of the original\uff0c\u5177\u4f53\u4f7f\u7528\u4e0d\u4e86\u89e3\n\n\n\n\n\n\n-fix\n\n\n\u5c1a\u672a\u7814\u7a76\n\n\n\n\n\n\n-insecure\n\n\n\u7528\u4e8ehttp\u7b49\u4e0d\u5b89\u5168\u7684\u8fdc\u7a0b\u5730\u5740\n\n\n\n\n\n\n-t\n\n\n\u4e0b\u8f7d\u548c\u6d4b\u8bd5\n\n\n\n\n\n\n-u\n\n\n\u91cd\u65b0\u4e0b\u8f7d\u4f9d\u8d56\u5305\uff0c\u5373\u4f7f\u672c\u5730workspace\u5df2\u7ecf\u5b58\u5728\u3002\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5982\u679c\u672c\u5730\u5df2\u7ecf\u5b58\u5728\u4e86\u5c31\u4e0d\u4f1a\u518d\u4e0b\u8f7d\u4e86\n\n\n\n\n\n\n-v\n\n\nverbose\n\n\n\n\n\n\n\n\n\u6700\u4f73\u5b9e\u8df5\n\n\n\n\n\u5982\u679c\u53ea\u60f3\u4e0b\u8f7d\u4f9d\u8d56\u5305\uff0c\u4e0d\u60f3\u505ainstall\uff0c\u5219\uff1ago get -d -v /path/to\n\u4e0b\u8f7d\u4f9d\u8d56\u5305\uff0c\u5e76\u5bf9\u4f9d\u8d56\u5305\u505ainstall\uff1ago get -v /path/to\n\uff08\u5982\u679c\u4e0d\u52a0/path/to\uff0c\u5219\u9700\u8981\u5148cd\u8fdb\u5165\u5f53\u524d\u76ee\u5f55\uff0c\u5f53\u7136\u5982\u679c\u5f53\u524d\u76ee\u5f55\u5728\u672c\u5730\u4e0a\u5c31\u6ca1\u6709\u5b58\u5728\u5c31\u8fd8\u662f\u8981\u52a0/path/to\uff09\n\n\n\u4e0b\u8f7d\u6210\u529f\u540e\u518d\u624b\u52a8install\u5f53\u524d\u5305\uff1ago install -v\uff08\u5982\u679c\u539f\u6765\u5df2\u7ecf\u5b58\u5728bin/\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f1a\u81ea\u52a8\u5224\u65ad\u548c\u539f\u6765\u7684\u662f\u5426\u4e00\u81f4\uff0c\u5982\u679c\u4e00\u81f4\u4e0d\u4f1a\u81ea\u52a8\u7f16\u8bd1\uff0c\u5982\u679c\u6709\u66f4\u6539\uff0c\u4f1a\u91cd\u65b0\u7f16\u8bd1\u3002\u5373\u5bf9\u8fd9\u4e2a\u547d\u4ee4\u4e0d\u7528\u64cd\u5fc3\uff09\n\n\n\u5982\u679c\u7f51\u7edc\u4e0d\u597d\uff0c\u6bd4\u5982\u9700\u8981\u7ffb\u5899\u624d\u80fd\u4e0b\u8f7d\uff0c\u5219\u53ea\u80fd\u4eba\u5de5\u53bb\u4e0b\u8f7d\uff0c\u7136\u540e\u653e\u5230\u6307\u5b9a\u8def\u5f84\u4e0b\u4e86", 
            "title": "3.1. go get"
        }, 
        {
            "location": "/appendix/cli_go_get/#_1", 
            "text": "\u4e0b\u8f7d\u4f9d\u8d56\u5305  \u4e3a\u4e86\u63cf\u8ff0\u6e05\u695a\uff0c\u6b64\u5904\u505a\u51e0\u4e2a\u540d\u8bcd\u5b9a\u4e49\uff08\u6211\u81ea\u5df1\u5b9a\u4e49\u7684\uff09\uff1a  \u5f53\u524d\u76ee\u5f55\uff1a\u51c6\u5907 go install \u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684package\u76ee\u5f55\uff0c\u6b64\u5904\u4e3a $GOPATH/src/github.com/cyent/repo2/myhello \uff08\u91cc\u9762\u6709\u4e2a myhello.go \u6587\u4ef6 import  github.com/cyent/repo1/stringutil \uff09  \u4f9d\u8d56\u5305\uff1a\u9700\u8981\u7528\u5230\u7684\u5305\uff0c\u5982 github.com/cyent/repo1/stringutil", 
            "title": "\u4f5c\u7528"
        }, 
        {
            "location": "/appendix/cli_go_get/#_2", 
            "text": "\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u6267\u884c go get \uff1a  \u4e0b\u8f7d github.com/cyent/repo1 \u5230 $GOPATH/src/github.com/cyent/   \u6ce8\u610f\u8fd9\u91cc\u662f\u4e0b\u8f7d\u5b8c\u6574\u7684git\u4ed3\u5e93\uff0c\u5373 github.com/cyent/repo1 \u4ed3\u5e93\uff0c\u5982\u679c myhello.go \u91cc\u662fimport\u4e0b\u9762\u8def\u5f84\uff0c\u6bd4\u5982 github.com/cyent/repo1/stringutil/aaa/aaa.go \uff0c\u4e5f\u662f\u4e0b\u8f7d\u5b8c\u6574\u7684git\u4ed3\u5e93\u3002\u56e0\u4e3agit\u4ed3\u5e93\u6ca1\u6709\u529e\u6cd5\u83b7\u5f97\u5176\u4e2d\u67d0\u4e2a\u6587\u4ef6\uff0c\u53ea\u80fd\u4e00\u6574\u4e2a\u4ed3\u5e93\u8f7d\u4e0b\u6765\u3002\u6682\u65f6\u4e0d\u77e5\u9053\u80fd\u5426\u652f\u6301svn\u3001http\u76ee\u5f55\u3001ftp\u7b49   go install github.com/cyent/repo1/stringutil  go install github.com/cyent/repo2/myhello    \u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u6267\u884c go get github.com/cyent/repo1/stringutil \uff1a  \u4e0b\u8f7d github.com/cyent/repo1 \u5230 $GOPATH/src/github.com/cyent/  go install github.com/cyent/repo1/stringutil    \u5728\u4efb\u610f\u8def\u5f84\u4e0b\u6267\u884c go get github.com/cyent/repo1/stringutil \uff1a  \u4e0b\u8f7d github.com/cyent/repo1 \u5230 $GOPATH/src/github.com/cyent/  go install github.com/cyent/repo1/stringutil    \u5728\u4efb\u610f\u8def\u5f84\u4e0b\u6267\u884c go get github.com/cyent/repo2/myhello \uff08\u5047\u8bbe github.com/cyent/repo2 \u672c\u5730\u76ee\u5f55\u5df2\u7ecf\u5b58\u5728\uff09\uff1a  \u4e0b\u8f7d github.com/cyent/repo1 \u5230 $GOPATH/src/github.com/cyent/  go install github.com/cyent/repo1/stringutil  go install github.com/cyent/repo2/myhello    \u5728\u4efb\u610f\u8def\u5f84\u4e0b\u6267\u884c go get github.com/cyent/repo2/myhello \uff08\u5047\u8bbe github.com/cyent/repo2 \u672c\u5730\u76ee\u5f55\u4e0d\u5b58\u5728\uff09\uff1a  \u4e0b\u8f7d github.com/cyent/repo2 \u5230 $GOPATH/src/github.com/cyent  \u4e0b\u8f7d github.com/cyent/repo1 \u5230 $GOPATH/src/github.com/cyent  go install github.com/cyent/repo1/stringutil  go install github.com/cyent/repo2/myhello", 
            "title": "\u5b9e\u9a8c"
        }, 
        {
            "location": "/appendix/cli_go_get/#_3", 
            "text": "go get\uff1a    \u5224\u65ad\u6307\u5b9a\u8def\u5f84\uff08\u8fd9\u91cc\u7684\u8def\u5f84\u6307go get /path/to\uff09\u5728\u672c\u5730\u662f\u5426\u5b58\u5728\uff1a\n\u5982\u679c\u5b58\u5728\uff0c\u5c31\u8bfb\u53d6import\uff0c\u7136\u540e\u4e0b\u8f7d\u4f9d\u8d56\u5305\n\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5c31\u4ece\u8fdc\u7a0b\u4e0b\u8f7d\u5305\uff0c\u7136\u540e\u518d\u8bfb\u53d6\u4e0b\u8f7d\u7684\u5305\u91cc\u7684import\u6765\u5224\u65ad\u662f\u5426\u8fed\u4ee3\u4e0b\u8f7d\u4f9d\u8d56\u5305\u3002    \u4f9d\u8d56\u5305\u90fd\u4e0b\u8f7d\u5b8c\u6bd5\u540e\u5224\u65adgo get\u662f\u5426\u6709\u5e26-d\u53c2\u6570\uff0c\u5982\u679c\u6ca1\u6709-d\uff0c\u5219\u4ece\u8fed\u4ee3\u7684\u6700\u540e\u4e00\u4e2a\u4f9d\u8d56\u5305\u5f00\u59cb\u5f80\u524d\u4e00\u4e2a\u4e2ainstall\uff0c\u76f4\u5230\u6307\u5b9a\u8def\u5f84\uff08\u8fd9\u91cc\u7684\u8def\u5f84\u6307go get /path/to\uff09install\u5b8c\u6bd5    go get\u53c2\u6570\uff1a     \u53c2\u6570  \u8bf4\u660e      -d  \u53ea\u4e0b\u8f7d\u4f9d\u8d56\u5305\uff0c\u4e0d\u5b89\u88c5\u3002\u6ce8\u610f\uff0c\u867d\u7136\u4e0d\u5b89\u88c5\uff0c\u4f46\u662f\u4f9d\u7136\u4f1a\u68c0\u6d4b\u76ee\u5f55\u4e0b\u662f\u5426\u6709\u53ef\u7f16\u8bd1\u6587\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u4f1a\u62a5\u9519no buildable Go source files in ...\uff08\u5e76\u4e0d\u5f71\u54cd\u4e0b\u8f7d\uff0c\u4e5f\u4e0d\u4f1a\u5b89\u88c5\uff09    -f  \u5f3a\u5236\u4e0d\u68c0\u67e5\u6bcf\u4e2a\u5305\uff0c\u9002\u7528\u4e8elocal fork of the original\uff0c\u5177\u4f53\u4f7f\u7528\u4e0d\u4e86\u89e3    -fix  \u5c1a\u672a\u7814\u7a76    -insecure  \u7528\u4e8ehttp\u7b49\u4e0d\u5b89\u5168\u7684\u8fdc\u7a0b\u5730\u5740    -t  \u4e0b\u8f7d\u548c\u6d4b\u8bd5    -u  \u91cd\u65b0\u4e0b\u8f7d\u4f9d\u8d56\u5305\uff0c\u5373\u4f7f\u672c\u5730workspace\u5df2\u7ecf\u5b58\u5728\u3002\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5982\u679c\u672c\u5730\u5df2\u7ecf\u5b58\u5728\u4e86\u5c31\u4e0d\u4f1a\u518d\u4e0b\u8f7d\u4e86    -v  verbose", 
            "title": "\u5b9e\u9a8c\u7ed3\u8bba"
        }, 
        {
            "location": "/appendix/cli_go_get/#_4", 
            "text": "\u5982\u679c\u53ea\u60f3\u4e0b\u8f7d\u4f9d\u8d56\u5305\uff0c\u4e0d\u60f3\u505ainstall\uff0c\u5219\uff1ago get -d -v /path/to\n\u4e0b\u8f7d\u4f9d\u8d56\u5305\uff0c\u5e76\u5bf9\u4f9d\u8d56\u5305\u505ainstall\uff1ago get -v /path/to\n\uff08\u5982\u679c\u4e0d\u52a0/path/to\uff0c\u5219\u9700\u8981\u5148cd\u8fdb\u5165\u5f53\u524d\u76ee\u5f55\uff0c\u5f53\u7136\u5982\u679c\u5f53\u524d\u76ee\u5f55\u5728\u672c\u5730\u4e0a\u5c31\u6ca1\u6709\u5b58\u5728\u5c31\u8fd8\u662f\u8981\u52a0/path/to\uff09  \u4e0b\u8f7d\u6210\u529f\u540e\u518d\u624b\u52a8install\u5f53\u524d\u5305\uff1ago install -v\uff08\u5982\u679c\u539f\u6765\u5df2\u7ecf\u5b58\u5728bin/\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f1a\u81ea\u52a8\u5224\u65ad\u548c\u539f\u6765\u7684\u662f\u5426\u4e00\u81f4\uff0c\u5982\u679c\u4e00\u81f4\u4e0d\u4f1a\u81ea\u52a8\u7f16\u8bd1\uff0c\u5982\u679c\u6709\u66f4\u6539\uff0c\u4f1a\u91cd\u65b0\u7f16\u8bd1\u3002\u5373\u5bf9\u8fd9\u4e2a\u547d\u4ee4\u4e0d\u7528\u64cd\u5fc3\uff09  \u5982\u679c\u7f51\u7edc\u4e0d\u597d\uff0c\u6bd4\u5982\u9700\u8981\u7ffb\u5899\u624d\u80fd\u4e0b\u8f7d\uff0c\u5219\u53ea\u80fd\u4eba\u5de5\u53bb\u4e0b\u8f7d\uff0c\u7136\u540e\u653e\u5230\u6307\u5b9a\u8def\u5f84\u4e0b\u4e86", 
            "title": "\u6700\u4f73\u5b9e\u8df5"
        }, 
        {
            "location": "/contact/", 
            "text": "E-mail\u5730\u5740:", 
            "title": "\u5341\u4e00. \u8054\u7cfb\u65b9\u5f0f"
        }
    ]
}